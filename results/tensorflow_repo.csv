Commit SHA,Commit message
5c080afd1eda3d631f24b96750d3ec9c794144ee,"'K-FAC: Fixes problem where initial eigendecomposition used by RNN classes would be computed during the call to instantiate_factors (via the ""registration""  functions) instead of the call to make_inverse_update_ops.  This messed up the device placement of these ops and interacted badly with other parts of the code.\n\nAlso changed how covariance op creation is done in ConvDiagonalFactor in anticipation of similar problems in the future.\n\nAs of this CL, none of the op creation methods will modify the state of the class, and no ops will be created outside of the op creation methods.  We should try to follow this convention going forward.\n\nPiperOrigin-RevId: 182265266'"
aabe9698daf5004ec90f04e2da5b71b51b010b6d,"'[XLA:GPU] Fix a problem in calculating the address of the memory used to\nimplement small data type atomic operations.\n\nTo calculate the address of the enclosing 4 byte memory,\noutput_address&(-2) was used while it should be output_address&(-4).\n\nAdd a test case.\n\nPiperOrigin-RevId: 182251760'"
fbddebee0bf07dadfb2b15ec678291dd5730ca99,'Fixing deprecated URL link (#16195)\n\n* Fixing deprecated URL link'
103edb8cc4f3b6e40949ffba5d0c95426ba0509c,'Merge pull request #16191 from qmick/qmick-patch-1\n\nFix docstring typo of losses_impl.py'
1d396f0fa7f59a5facb5fe05156cd9efea50e1a0,'Fix docstring typo of losses_impl.py'
1f86611d8d700e439c3b5b6c05779cf724912ec4,'fix concat issue related to negative input concat_dim (#16081)'
c496f53af0cf4bba27b30ae7bc8886171fed867a,'MKL-DNN:  fix batchnorm unit test failures (#16090)\n\n* fix batchnorm unit test failures\r\n\r\n* code refactoring per PR review suggestions; unit test passed; style check done'
ae700bb7462ee1bd4fed3c89441e962f64c89afd,"'Fixes for various MKLDNN unit test failures (#16059)\n\n1. MklLayout pass changes\r\n\r\n   Making workspace type uint8 for MaxPool; Handling duplicate control edge insertion\r\n\r\n   1) Handles case of inserting duplicate control edge (fixing Mkl layout graph\r\n   pass unit test)\r\n   2) Enables uint8 as workspace tensor type (makes consistent with LRN workspace\r\n   handling)\r\n\r\n   Workspace tensor type change is also performed in MaxPool and MaxPoolGrad\r\n   operators.\r\n\r\n2. Handling MklReshape failing case\r\n\r\n   MklReshape was failing on a unit test when Mkl layout and Tensorflow layout for\r\n   input tensors were same, but shape of input tensor and output tensor was\r\n   different. No reorder is required in such case, but reshape is needed. Before\r\n   this fix, we were asserting that reorder is performed.\r\n\r\n3. Adding support for empty input/filter tensors in Convolution backprop operators'"
fa0dd4436f88425639fcd589ce3261249c6499be,'Fixes tensor shape when Eigen path is taken. (#16020)'
551e2fd3c57b17af32078e61fdd13c15b9d70f97,'Fix for compilation error (#15975)'
3f57956725b553d196974c9ad31badeb3eabf8bb,'Update rules_closure to fix bazel version check (#16157)'
44d667dba7e2f2d111d7a0355fb4b58702162991,"'[TF:XLA] Remove workaround for b/37575001.\n\nThe lowering bug has been long fixed, so the workaround of constructing R3s is no longer required.\n\nPiperOrigin-RevId: 182150664'"
786dcb0b3ee719ae44ac23ea6ee878bbb04792cd,"""Disable exceptions in TensorFlow jsoncpp build\n\nThis is necessary to compile with Clang. Since the TF GCP code doesn't have any\ntry/catch statements, this could be a bug fix.\n\nPiperOrigin-RevId: 182143536"""
a830a01d4e688c43433bad20cf5bf682ff125464,'FIX Typo (#16141)\n\n* fix typo'
d875e082819d0f97b01a3efa44328f73c8fd0700,'Fix flakiness of dataset_constructor_op_test and flat_map_dataset_op_test due to\ntimeouts.\n\nPiperOrigin-RevId: 182131168'
c9096fd166a9d7fdb62c6cb747a74edb73630b0c,"""[TF] Fix XLA Control Flow gradient stacks max_size creation.\n\nStack creation uses tf.while_loop's maximum_iterations iff the while_loop\nwas created inside an XLA/TPU context.  Added several error checks to ensure\nthis provides useful error messages if the limited use case is not supported.\n\nPiperOrigin-RevId: 182128135"""
82aa53ec3664f5bbd48fa498901d16ef151164ff,'Adjust setup to fix Tensorboard entrypoint (run_main -> main).\n\nPiperOrigin-RevId: 182119760'
affd9c345affef2c349516d3bf4b20448cb36f8d,'Check for existence of attrs when making a `TFDecorator`.\n\nFixes a bug that arose when the supplied target to `make_decorator` was\na callable that did not have a `__name__` member.\n\nPiperOrigin-RevId: 182119694'
0830ceefcdbd2e5f57e676f72a4abaf8d351bc28,'Improves the eager compatibility with tf.contrib.lookup.\n\nFixes #16160\n\nPiperOrigin-RevId: 182098964'
6e259f0a716c124b16c9a2aaddd3ee6c9edc5db9,'Fixes nccl_ops_test error introduced in CL 181736230.\n\nPiperOrigin-RevId: 182039394'
6cbf156e72ae73415603b06d11ed981295835f65,"""Avoid unloading kernels that haven't been loaded and fix replay_computation to\ndestroy the local client instance.\n\nAdd a user defined move constructor for KernelBase to nullify the parent stream\npointer. This is needed to avoid unloading kernels that haven't been loaded\nwhen the moved-from KernelBase objects are destructed.\n\nAdd a call to ClientLibrary::DestroyLocalInstances to destroy the local client\ninstance used by replay_computation.\n\nPiperOrigin-RevId: 181995818"""
bdb1a5ee6ca8d343a7a03614fb8fbfb653e848cc,'FIxes non-gpu build of gpu target.\n\nPiperOrigin-RevId: 181976155'
619792fae2fbbf4ea01a0956b255a1e9caca05ca,"'Fix potential use-after-free bugs in the worker with DeleteWorkerSession.\n\nPreviously, DeleteWorkerSession was responsible for freeing the\nWorkerSession owned by the SessionMgr. However, it is possible for\nother requests to be in-flight on the same session, and requests from\nthe master to be delivered out of order, which leads to the potential\nfor a request to use a WorkerSession after it has been freed. Revise\nthe SessionMgr interface to handle std::shared_ptr<WorkerSession>\ninstead of raw pointers to avoid this risk.\n\nPiperOrigin-RevId: 181975078'"
07e497b0ad3f0e102e167a50de2b543a4a238fde,'Merge pull request #16130 from ejjeong/master\n\nFix broken python3 build'
5a810ea2b3ff056a8d7dc5eef19c8193ffc0f8f6,'fix comments and code matches (#16071)\n\n* there are two commas lost in the construction of SparseTensor'
85434931af1c14c966022aa90587524ed3d8bd6a,'Fix broken python3 build'
84a70f5906c9537a2df1ad948dbae4e9f55c51b3,'fix typo (#16122)'
5c080afd1eda3d631f24b96750d3ec9c794144ee,"'K-FAC: Fixes problem where initial eigendecomposition used by RNN classes would be computed during the call to instantiate_factors (via the ""registration""  functions) instead of the call to make_inverse_update_ops.  This messed up the device placement of these ops and interacted badly with other parts of the code.\n\nAlso changed how covariance op creation is done in ConvDiagonalFactor in anticipation of similar problems in the future.\n\nAs of this CL, none of the op creation methods will modify the state of the class, and no ops will be created outside of the op creation methods.  We should try to follow this convention going forward.\n\nPiperOrigin-RevId: 182265266'"
aabe9698daf5004ec90f04e2da5b71b51b010b6d,"'[XLA:GPU] Fix a problem in calculating the address of the memory used to\nimplement small data type atomic operations.\n\nTo calculate the address of the enclosing 4 byte memory,\noutput_address&(-2) was used while it should be output_address&(-4).\n\nAdd a test case.\n\nPiperOrigin-RevId: 182251760'"
fbddebee0bf07dadfb2b15ec678291dd5730ca99,'Fixing deprecated URL link (#16195)\n\n* Fixing deprecated URL link'
103edb8cc4f3b6e40949ffba5d0c95426ba0509c,'Merge pull request #16191 from qmick/qmick-patch-1\n\nFix docstring typo of losses_impl.py'
1d396f0fa7f59a5facb5fe05156cd9efea50e1a0,'Fix docstring typo of losses_impl.py'
1f86611d8d700e439c3b5b6c05779cf724912ec4,'fix concat issue related to negative input concat_dim (#16081)'
c496f53af0cf4bba27b30ae7bc8886171fed867a,'MKL-DNN:  fix batchnorm unit test failures (#16090)\n\n* fix batchnorm unit test failures\r\n\r\n* code refactoring per PR review suggestions; unit test passed; style check done'
ae700bb7462ee1bd4fed3c89441e962f64c89afd,"'Fixes for various MKLDNN unit test failures (#16059)\n\n1. MklLayout pass changes\r\n\r\n   Making workspace type uint8 for MaxPool; Handling duplicate control edge insertion\r\n\r\n   1) Handles case of inserting duplicate control edge (fixing Mkl layout graph\r\n   pass unit test)\r\n   2) Enables uint8 as workspace tensor type (makes consistent with LRN workspace\r\n   handling)\r\n\r\n   Workspace tensor type change is also performed in MaxPool and MaxPoolGrad\r\n   operators.\r\n\r\n2. Handling MklReshape failing case\r\n\r\n   MklReshape was failing on a unit test when Mkl layout and Tensorflow layout for\r\n   input tensors were same, but shape of input tensor and output tensor was\r\n   different. No reorder is required in such case, but reshape is needed. Before\r\n   this fix, we were asserting that reorder is performed.\r\n\r\n3. Adding support for empty input/filter tensors in Convolution backprop operators'"
fa0dd4436f88425639fcd589ce3261249c6499be,'Fixes tensor shape when Eigen path is taken. (#16020)'
551e2fd3c57b17af32078e61fdd13c15b9d70f97,'Fix for compilation error (#15975)'
3f57956725b553d196974c9ad31badeb3eabf8bb,'Update rules_closure to fix bazel version check (#16157)'
44d667dba7e2f2d111d7a0355fb4b58702162991,"'[TF:XLA] Remove workaround for b/37575001.\n\nThe lowering bug has been long fixed, so the workaround of constructing R3s is no longer required.\n\nPiperOrigin-RevId: 182150664'"
786dcb0b3ee719ae44ac23ea6ee878bbb04792cd,"""Disable exceptions in TensorFlow jsoncpp build\n\nThis is necessary to compile with Clang. Since the TF GCP code doesn't have any\ntry/catch statements, this could be a bug fix.\n\nPiperOrigin-RevId: 182143536"""
a830a01d4e688c43433bad20cf5bf682ff125464,'FIX Typo (#16141)\n\n* fix typo'
d875e082819d0f97b01a3efa44328f73c8fd0700,'Fix flakiness of dataset_constructor_op_test and flat_map_dataset_op_test due to\ntimeouts.\n\nPiperOrigin-RevId: 182131168'
c9096fd166a9d7fdb62c6cb747a74edb73630b0c,"""[TF] Fix XLA Control Flow gradient stacks max_size creation.\n\nStack creation uses tf.while_loop's maximum_iterations iff the while_loop\nwas created inside an XLA/TPU context.  Added several error checks to ensure\nthis provides useful error messages if the limited use case is not supported.\n\nPiperOrigin-RevId: 182128135"""
82aa53ec3664f5bbd48fa498901d16ef151164ff,'Adjust setup to fix Tensorboard entrypoint (run_main -> main).\n\nPiperOrigin-RevId: 182119760'
affd9c345affef2c349516d3bf4b20448cb36f8d,'Check for existence of attrs when making a `TFDecorator`.\n\nFixes a bug that arose when the supplied target to `make_decorator` was\na callable that did not have a `__name__` member.\n\nPiperOrigin-RevId: 182119694'
0830ceefcdbd2e5f57e676f72a4abaf8d351bc28,'Improves the eager compatibility with tf.contrib.lookup.\n\nFixes #16160\n\nPiperOrigin-RevId: 182098964'
6e259f0a716c124b16c9a2aaddd3ee6c9edc5db9,'Fixes nccl_ops_test error introduced in CL 181736230.\n\nPiperOrigin-RevId: 182039394'
6cbf156e72ae73415603b06d11ed981295835f65,"""Avoid unloading kernels that haven't been loaded and fix replay_computation to\ndestroy the local client instance.\n\nAdd a user defined move constructor for KernelBase to nullify the parent stream\npointer. This is needed to avoid unloading kernels that haven't been loaded\nwhen the moved-from KernelBase objects are destructed.\n\nAdd a call to ClientLibrary::DestroyLocalInstances to destroy the local client\ninstance used by replay_computation.\n\nPiperOrigin-RevId: 181995818"""
bdb1a5ee6ca8d343a7a03614fb8fbfb653e848cc,'FIxes non-gpu build of gpu target.\n\nPiperOrigin-RevId: 181976155'
619792fae2fbbf4ea01a0956b255a1e9caca05ca,"'Fix potential use-after-free bugs in the worker with DeleteWorkerSession.\n\nPreviously, DeleteWorkerSession was responsible for freeing the\nWorkerSession owned by the SessionMgr. However, it is possible for\nother requests to be in-flight on the same session, and requests from\nthe master to be delivered out of order, which leads to the potential\nfor a request to use a WorkerSession after it has been freed. Revise\nthe SessionMgr interface to handle std::shared_ptr<WorkerSession>\ninstead of raw pointers to avoid this risk.\n\nPiperOrigin-RevId: 181975078'"
07e497b0ad3f0e102e167a50de2b543a4a238fde,'Merge pull request #16130 from ejjeong/master\n\nFix broken python3 build'
5a810ea2b3ff056a8d7dc5eef19c8193ffc0f8f6,'fix comments and code matches (#16071)\n\n* there are two commas lost in the construction of SparseTensor'
85434931af1c14c966022aa90587524ed3d8bd6a,'Fix broken python3 build'
84a70f5906c9537a2df1ad948dbae4e9f55c51b3,'fix typo (#16122)'
2c5667cad1eccf599b8834557a89453222f29e0b,'Merge pull request #15947 from meteorcloudy/fix_conv_ops\n\nWindows: Override /DEIGEN_STRONG_INLINE=inline for //tensorflow/core/kernels:conv_ops'
36b83257287148ddb4aab02c641d1ac9e192a136,'Fix dropout description of CudnnLSTM.\n\nPiperOrigin-RevId: 181814918'
81b91ab1906d166387eaa0ca75223f23194f3825,"""* Fix bug introduced in cl/181043095: We need to update the nodemap when adding control dependencies.\n* Fix a bug in ConstantFolding::AddControlDependency: Don't create the same Identity node after Switch multiple times. Just re-use if it already exists.\n* Make sure that nodes added in rewrites have unique names.\n* A few minor cleanups.\n\nPiperOrigin-RevId: 181798973"""
1fec9d57805b912be3520ecbb41b2e32b0558e19,""" * Enable bfloat16 testing for DynamiscSlice and DynamicUpdateSlice.\n * Make bfloat16's conversion constructors non-explicit, so that bfloat16 is consistent\n     with a built-in type. This was useful in some of the templated tests.\n * Give bfloat16 prefix and suffix operator++ and operator--, making it more like float,\n     which has these. This also came up in a templated test.\n\nPiperOrigin-RevId: 181784644"""
b7fb848b84e927f16efbef427bcd7e9ce1fd2de8,'Fix integer learning phase setting in Keras.\n\nPiperOrigin-RevId: 181777677'
ffa9a32736ad80c9136d10badaddb83a05bd655b,"""fixes _softmax function so that nn.softmax(...) and nn.log_softmax(...) can accept negative axes that aren't -1 as the documentation claims. _swap() was accepting negative indices when math_ops.range() does not accept negative indices\n\nPiperOrigin-RevId: 181771157"""
0b6f2189cf879c89f6d72a27de7800ccea095605,'Fix typo (#16074)\n\n* fix typo'
4476407836c5f0de0b746269af1714a469a09c32,'Fix dropout description of CudnnLSTM.\n\nPiperOrigin-RevId: 181814918'
c7a4059849bf2cc89a457b11d7bf0145b301e123,"""* Fix bug introduced in cl/181043095: We need to update the nodemap when adding control dependencies.\n* Fix a bug in ConstantFolding::AddControlDependency: Don't create the same Identity node after Switch multiple times. Just re-use if it already exists.\n* Make sure that nodes added in rewrites have unique names.\n* A few minor cleanups.\n\nPiperOrigin-RevId: 181798973"""
294d1d5c1915106f3a82a5ac1c723eb0eea90e6c,""" * Enable bfloat16 testing for DynamiscSlice and DynamicUpdateSlice.\n * Make bfloat16's conversion constructors non-explicit, so that bfloat16 is consistent\n     with a built-in type. This was useful in some of the templated tests.\n * Give bfloat16 prefix and suffix operator++ and operator--, making it more like float,\n     which has these. This also came up in a templated test.\n\nPiperOrigin-RevId: 181784644"""
d34b523f8f6af1b44626879729c7c33bfde4170e,'Fixed 3 bugs picked up by the unit tests (#16055)'
e578ee02a871ec897cb92b94434f0c556f05057c,'Fix integer learning phase setting in Keras.\n\nPiperOrigin-RevId: 181777677'
ec804af7d84034868701b428a9f28bf6dd98deb1,"""fixes _softmax function so that nn.softmax(...) and nn.log_softmax(...) can accept negative axes that aren't -1 as the documentation claims. _swap() was accepting negative indices when math_ops.range() does not accept negative indices\n\nPiperOrigin-RevId: 181771157"""
6b325070b28739e9ced68e01a41ecc68cd115e7d,'Small bug fix visualize.\n\nPiperOrigin-RevId: 181765083'
7a69ac427311ed5ca492cae597a629a01ccd6e20,'Formatting fixes\n\nPiperOrigin-RevId: 181748699'
67ff23036e093343a7ea02e17f36f2b02eaae740,'Update Eigen to 14e1418fcf12985861f17131e6de94adb4c7b630.\n\nFixes Eigen TensorFFT precision issues due to twiddle factor calculation via recurrence:\nhttps://bitbucket.org/eigen/eigen/commits/6c74460b39d4c3e2e570dbe9e82497cac3800e57\n\nPiperOrigin-RevId: 181748118'
1cc4ec4c5a08cadae87fa02222c5b5c3e81dedbb,'Merge pull request #16043 from fo40225/fix_C2678\n\nfix C2678 error on VS2017 15.5'
6ee404d17929c613b217400406e7e665010ebf18,'Add support for if conditionals. Fix a bug in the activity analysis.\n\nPiperOrigin-RevId: 181686453'
a5a95752e4bf697e0c3c73d26b3f3fad94e88f32,'Add missing AndroidManifest to TensorFlow Lite Java android library target.\n\nThis is a fix to the below issue:\n#15956\n\nPiperOrigin-RevId: 181679121'
0003892b62cadfa207316ac49ac40ff14d74412e,'Fixes flaky step counting test in dnn_linear_combined_test\n\nPiperOrigin-RevId: 181666917'
1fdf7150e559c04abf61350193ebf4c9dacb017a,'Fixes a tiny typo in the usage message.\n\nPiperOrigin-RevId: 181650869'
f0a3d41b4f07bd62d03e5d7704d90ef3575a0f92,'Fix typo'
4a7bbb54f2841b9c871ac0dc0099ca690d9e1af2,"'Add axis support for `tf.nn.crelu` (#15836)\n\n* Add axis support for tf.nn.crelu\r\n\r\nThis fix tries to address the issue raised in 15619\r\nwhere it was not possible to specify an `axis` for\r\n`tf.nn.crelu`. By default, `axis=-1` was used for concatenation\r\nimplicitly.\r\n\r\nThis fix adds the support of `axis` for tf.nn.crelu,\r\nand adds test cases for it.\r\n\r\nThis fix fixes 15619.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
6f16fd2f2d44f7ae6aeb5d41e000f57b32a1a336,'fix C2678 error on VS2017 15.5'
049d8df140035da864194333f444f97f24c6ffb3,"'Use https for `https://github.com/tensorflow/serving` (#16030)\n\n* Use https for `https://github.com/tensorflow/serving`\r\n\r\nIt looks like there are a couple of links in saved_model.md\r\nusing http to point to serving, and the rest are using https\r\nto point to serving, This fix updates to `https` for consistency\r\nand security.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
278f579e945853b26e9474f3631fcad544b63b6d,'Merge pull request #16007 from kaspermarstal/master\n\nFix inline if/else statement in CMAKE_CACHE_ARGS'
de4b6bb08033a3f60d855972d02a5a6aba4e76d8,'Adding cuda_config.h to the pip package. (#15961)\n\n* Adding cuda_config headers to our GPU build.\r\n\r\n* Updating the local cuda path for cuda_headers.\r\n\r\n* Removing the cuda_config blacklist.\r\n\r\n* Buildifier fix.\r\n\r\n* Ignoring .so files and manually adding the cuda_config.h file.\r\n\r\n* Fixing the path for the src_dir.\r\n\r\n* One last minor fix for path.\r\n\r\n* Adding brackets.'
993dc86e6355c29dd01d5caae5dccb097eb9784b,'Fix a deadlock condition when session are run in multiple thread and depend on\neach other.\n\nPiperOrigin-RevId: 181563474'
4863b11dde6f44d83d390c0bfdb75f74dac72b2a,'Merge pull request #15993 from taehoonlee/fix_typos\n\nFix typos'
964330c41e0435ea9a1122a64305ca91c82d1367,'Fix for graph execution of gradients_function\n\nShapes were not correctly converted to C types.\n\nPiperOrigin-RevId: 181546120'
4b277703f7ce0f8f0e63bbadd1cb9dd0a8cb1181,"'Fix a bug in updating NodeMap, where the node name without port number should\nhave been used.\n\nPiperOrigin-RevId: 181532901'"
0f68a22758b4333ace28e857ef927354e6aeac09,"'Add --fat_apk_cpu=arm64-v8a for arm64 Android builds\n\nBazel silently uses the wrong build settings for --config=android_arm64 (--cpu=arm64-v8a is not enough), and actually still uses armeabi-v7a in at least some cases. --fat_apk_cpu fixes this.\n\nSee #15581 for more.\n\nPiperOrigin-RevId: 181525260'"
b152f0517f318db6dcd7cfba57d860d2e5eed433,"'Reverted Raspberry Pi Docker files back to Ubuntu 14.04, instead of 16.04, to fix toolchain installation error\n\nPiperOrigin-RevId: 181524891'"
35dface2e1aadbd4bd3b83e00618fda24c89f7d4,'Propagate static shape info in AttentionWrapperState.clone() if possible.\n\nFixes #15737\n\nPiperOrigin-RevId: 181523430'
4c24ab2d0651b048d81c4743b73ac92b5c39d8cc,"'[TF:XLA] Fix infinite loop in HLO data flow analysis.\n\nMerge input values at phi nodes correctly: If a phi operand is the phi itself,\nand the other operands are all the same, then the phi node is redundant.\n\nPiperOrigin-RevId: 181521522'"
39fc480ba07bb3f10126587fff54508bd0974f29,"""Fix bug in the conversion of while loops. The while_loop's initial value needs to use the scope symbols, not their last assigned value.\n\nPiperOrigin-RevId: 181511978"""
d426feef7f92acc70a7e8cd61a17d9eeeae2efc9,'Fix python/framework/subscribe.py and test to work with C API enabled.\n\nPiperOrigin-RevId: 181511142'
3dc58f798660b98a0198b33edefb6f9f2aa7d827,'Attempt to fix #15951\n\nMacOS build fails for missing include of <array>\n\nPiperOrigin-RevId: 181506335'
d2082810c4e6fdcd501fce7abc86e9be4c36cb3a,'Fix flaky training tests. Reenable the tests.\n\nPiperOrigin-RevId: 181505090'
82b1e8eee8847730026379e3a5762c0e09d6fd36,"'Modify `_parse_bazel_version` to return a tuple of ints rather than a tuple of strings. (#16015)\n\nBazel is updating its version to 0.10.0, and this will break the version check. Applying suggested fix in https://github.com/bazelbuild/bazel/issues/4425.'"
83fd1cbd35f7d07e9a3df1995936cd2056c518cb,"'Relax text comparison for numpy formatting of arrays\n\n* Previously, strong assumptions were made about how numpy.ndarrays\n  are formatted as strings. This led to breakages due to certain\n  unclear changes in numpy or its dependencies. This CL relaxes the\n  assumption and fix the affected tests for tfdbg and eager.\n* The tests in tensor_format_test.py are simplified through helper\n  methods.\n\nPiperOrigin-RevId: 181494182'"
fc66e35539fa4de98baf065b71328b185fb1a2bb,'1) Bug fix: reuse discriminator_scope when re-applying discriminator_fn.\n2) Bug fix: explicitly set tensor pool output_values shape.\n\nPiperOrigin-RevId: 181467812'
2676a89302382682328daf4467e38d3f47d03245,"'Fix inline if/else statement in CMAKE_CACHE_ARGS\n\nAn if/else statement was given inline as an argument to\nCMAKE_CACHE_ARGS for some CMake external projects. This\nresulted in the following init cache entries on some systems:\n\n  set(CMAKE_POSITION_INDEPENDENT_CODE ""ON;if;(;tensorflow_\n  \tENABLE_POSITION_INDEPENDENT_CODE;);else;(;)""\n  \tCACHE BOOL ""Initial cache"" FORCE)\n  set(CMAKE_POSITION_INDEPENDENT_CODE ""OFF;endif;(;)"" CACHE\n  \tBOOL ""Initial cache"" FORCE)\n\nThis commit changes the inline if/else argument to\n-DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=\n${tensorflow_ENABLE_POSITION_INDEPENDENT_CODE} which\nis functionality equivalent.'"
ab242bf6eee6fa5fd4af01d40c884f228076dbef,'Fix typos'
68cb86ed592d714beabf71402322c9de0e611a69,"'Implement `tf.data.Iterator` methods and properties in  `tf.contrib.eager.Iterator`.\n\nAlso fixes `tf.contrib.eager.Iterator` so that it can work with\ndatasets containing `tf.SparseTensor` components.\n\nThis change allows you to use the `get_next()` method, `output_types`\nproperty, `output_shapes` property, and `output_classes` property from\n`tf.data.Iterator` when constructing a `tf.contrib.eager.Iterator`;\nand therefore makes it easier to write code that operates on an\n`Iterator` in both eager and graph mode.\n\nPiperOrigin-RevId: 181350797'"
fe613b051b5732f06af586f7b4f0ca28121f1ecc,'Fix type attribute name for Cast.\n\nPiperOrigin-RevId: 181348431'
611f18f179e8f0a3b5df59477b4bc1d92fd3a7a4,'Fix _warmstart_var_with_vocab to truly accept either a checkpoint dir or a direct path to checkpoint files.\n\nPiperOrigin-RevId: 181341437'
9fcaafd4a9fe6f5868c875749b85c4641c217350,'Fix typo in ValueError string.\n\nPiperOrigin-RevId: 181340112'
14fa431da0b7fd69ccf7bf4a60172a5745c1773c,"""Don't pass '-no-canonical-prefixes' when collecting builtin includes.\n\nIt matches the way bazel's autoconf works and seems to be the right thing to\ndo.\nThis change should fix #14380.\n\nPiperOrigin-RevId: 181305871"""
db47fa9c92f5e8242038021fff0545d0f705802a,'Override /DEIGEN_STRONG_INLINE=inline for //tensorflow/core/kernels:conv_ops\n\nThis change reduces the Windows building time by more than 15 minutes\n\nFix https://github.com/tensorflow/tensorflow/issues/10521'
e6e31d0c2a118348c76306bcaba50b943f239c9a,"""[XLA:Tool] Fix an error message in the Hlo parser: should report unexpected subattribute's location correctly.\n\nPiperOrigin-RevId: 181265992"""
ac3560e16e58c8f5ea94f736b99bb60ed46fa885,'Fix typo in comment TFE_Execute\n\nPiperOrigin-RevId: 181260751'
bd72021bd1223ac42b1010e6599b2528a18dc33c,'[XLA] Fix spelling in error message; NFC\n\nPiperOrigin-RevId: 181256065'
caa2a1b856d1080cfec26b6ab5756aa49114597e,"""Fix the threading model of gradient tapes.\n\nThe set of tapes needs to be global to enable multithreaded programming\n(when it's natural for tensors to cross threads during reduction operations)\nbut each thread still needs to be able to locally pause recording while\nit does gradient-related bookkeeping (like custom gradients or initialization).\n\nAlso removes a mutex from the thread-local structure since it's unnecessary\nas we're always holding the GIL while calling across the python-c boundary\nunless we explicitly release it.\n\nPiperOrigin-RevId: 181246570"""
e523d9370ce36e50ba64f9dd1260eaddbbb8244e,'Fixes the TF Lite Makefile so that it correctly adds flags to link with the dl\nlib on Linux.  This matches the configuration in the contrib/makefile/Makefile.\n\nPiperOrigin-RevId: 181239691'
ee6ba1e05d55077b4f2d304650d8219459343c76,'Fix sample_benchmark target path in documentation.\n\nPiperOrigin-RevId: 181232554'
b14b3c4f76340192af3870b42014b31eec41c5f2,"""Fix bug in template_test's test_nested_templates method.\n\nPiperOrigin-RevId: 181230269"""
f935004b0e0a86a3e36ee9b15530e788de8a1e74,'Remove third_party/ prefixes.\nCloses #15674.\n\nPiperOrigin-RevId: 181225180'
7007b43d5764fbd182afb4ea6c7aa278e5aacd09,'Disable all failing tests to fix TF opensource tests.\n\nPiperOrigin-RevId: 181212111'
201982013046116767545cda18137b38abb39468,'toco: Fix missing check for buffer in ResizeBilinear.\n\nPiperOrigin-RevId: 181209975'
c7231c2f10a96b43bdb1e605dd7b1a5a0d8c1f0e,'Use suffix instead of prefix for nodes added by layout optimizer so that\ntensorboard graph organization is preserved.\n\nPiperOrigin-RevId: 181192261'
c1ca5e758d52c6688139a537379841e624a6e495,"""Fix tensorflow::CurrentStackTrace when TF_GENERATE_BACKTRACE isn't defined (#15944)"""
4b3fec75d44c1aad2bcf02f6155b8e141a42fdcf,"'minor fixes to new ""low_level_intro""\n\nPiperOrigin-RevId: 181172455'"
a77096897f1a8068ca8f57ffb6e3d9e28508cc27,'Update docs for `concat` in case `axis < 0` (#15917)\n\n* Update docs for `concat` in case `axis < 0`\r\n\r\nThis fix tries to address the issue raised in 15905\r\nwhere the documentation does not cover the case of `axis < 0`\r\nfor `tf.concat`.\r\n\r\nThis fix fixes 15905.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update docs for tf.concat\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
32d138db751c541e951d1958cac4918214e9644e,"'Add `FunctionLibraryRuntime::InstantiateOptions` struct (take 2).\n\nThis new struct allows optional arguments to be passed to the\n`FunctionLibraryRuntime::Instantiate()` API. The new struct is now\nused to configure the target device for a function instantiation\n(instead of an attr).\n\nThis version fixes an issue in the previous attempt whereby identical\nfunctions instantiated on different devices in the same task would be\ncanonicalized to the same key and hence receive the same handle in the\nProcFLR, but they would only be instantiated locally in one per-device\nFLR. The fix ensures that the device name is part of the canonicalized\nform. A test is added to function_test.py that failed with the old\nversion and passed in the new version.\nEND_PUBLIC\n\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 180979141\n\nPiperOrigin-RevId: 181003413'"
93f2998add91f9c7a53b1fcd13ab6d43e4397297,"""Make CUDNN RNN compatible with eager execution's kernel caching.\n\nAllows multiple CUDNN RNN calls with different shapes to share the same kernel.\n\nAdds an input_shape-keyed scratch space cache to the kernel. This also fixes shape errors when a CUDNN RNN kernel was presented with multiple shapes during graph execution (e.g. from a while_loop).\n\nFixes #15752.\n\nPiperOrigin-RevId: 180998667"""
26d47657064105b1a05a3f3e8c803819efcd159d,"'Use https for `www.tensorflow.org` (#15895)\n\n* Use https for `www.tensorflow.org`\r\n\r\nThis fix uses `https://www.tensorflow.org` for `www.tensorflow.org`,\r\nfor the purpose of increased security and consistency with\r\nthe rest of the documentations.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
3021eb0bf4d76a26d03c53c2aca7192dbf154a86,"'Fixed fused batch norm performance regression.\n\nThe regression was caused by 12a4c9b8628b23cc2bf4c89c83c32760aded6124. I suspect the regression was caused by calling cudaMemset without setting the CUDA stream. Using the SetZeroFunctor (or using Eigen) handles this type of initialization for us.\n\nBenchmarks on tf_cnn_benchmarks, on a Volta DGX1, average of 3 iterations taken, with arguments: --optimizer=sgd --staged_vars=False --num_gpus=$GPU --variable_update=$VAR_UPDATE --use_fp16=True --batch_size=128 --model=$MODEL\n\nmodel       gpu  var_update        im/sec after  im/sec before  percent diff\nresnet50    1    replicated        680.37333     640.10333      6.29117%\nresnet50    8    parameter_server  4046.04000    1282.28667     215.53319%\nresnet50    8    replicated        4157.30667    1634.22667     154.38984%\ninception3  1    replicated        463.88667     440.94333      5.20324%\ninception3  8    parameter_server  2655.55000    902.22333      194.33400%\ninception3  8    replicated        3034.81000    1033.43667     193.66192%\n\nPiperOrigin-RevId: 180980799'"
63a4f8de9ef2a3dc18f434bf6d599434680587b7,'Minor bug fix in PrefetchDataset state saving/restoring.\n\nPiperOrigin-RevId: 180980476'
c152d4bbac33d9dc10f7278226aaeb42fce799b5,'Fix typo in the docstring of `make_template`.\n\nPiperOrigin-RevId: 180978665'
bdc950284b0f69b9776aa05bc39b047aa56b7a9e,'Fixed bad logging in iOS app tflite_simple_example.\n\nPiperOrigin-RevId: 180978115'
5386775e64aac0bb5020974122645da900bc312a,"'Update documentation for gather_nd/gather to specify behaviors for out-of-bound indices (#15857)\n\n* Update documentation for gather_nd/gather to specify behaviors for out-of-bound indices\r\n\r\nThis fix updates documentation for gather_nd/gather\r\nto specify behaviors for out-of-bound indices. Basically,\r\non CPU an error will be returned and on GPU 0 value will be filled\r\nto the expected positions of the output.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
32a6ef529aa1b0cd8f9eec2ee288cef7705fc213,'Windows: Disable bfloat16_test and framework_dtypes_test (#15842)\n\nReenable after fixing\r\nhttps://github.com/tensorflow/tensorflow/issues/15297'
5bf2511c5cf2f167baf460167a7cb0d9ff8eec9c,'Merge pull request #15875 from ruimashita/fix_comment_in_gradient_checker\n\nfix the comments which mistake x for y in gradient_checker'
ce5c1226bbe1f9770fc7ff89b446d0db48b5e2d3,'Merge pull request #15881 from caisq/pull-fixes\n\nFix a few pip tests'
6d2a09c544a88e2729fc05fc7a02112b01d2d6fa,'Fix typo in dataset performance guide\n\nPiperOrigin-RevId: 180937467'
f3590474b88eb624884912df0c4639f0aae30d5d,"'Fix a few pip tests\n\n* In training_test.py, avoid calling the assert_called() method, which\n  is not universally available.\n* Add tensorflow/contrib/data/python/kernel_tests:dataset_serialization_test\n  as a pip package dependency to fix four failing contrib/data pip\n  tests. Also remove ""testonly = 1"" from the py_library BUILD rule.'"
ed589590f8cfd4df3e189fcd7ca01c92d79bdae0,'Windows: Release script for C library GPU builds on Windows\n\nFixed https://github.com/tensorflow/tensorflow/issues/11062'
05e38c31deb273fbdf70b8dbb186815e6db5e3f0,'fix the comments which mistake x for y'
969f5a06271f506ce53c0078d2cf706393a7ee56,"""Refactoring and bug-fixes for _build_initializer_expr.\n\n- Rename _build_initializer_expr to _try_guard_against_uninitialized_dependencies so as to clarify what it does.\n\n- Avoid invoking the logic in _try_guard_against_uninitialized_dependencies for cyclic graphs. This currently results in infinite recursion which blows the stack.\n\n- Use memoization to reduce the number of redundant operations created by _try_guard_against_uninitialized_dependencies when it encounters initial values with diamond-shaped dependencies.\n\n- Refactoring: Remove unnecessary logic in _try_guard_against_uninitialized_dependencies for dealing with types other than Tensor or Operation. The dependency graph of a Variable's _initial_value should only ever comprise these two types.\n\n- Refactoring: Added some filtering logic to _try_guard_against_uninitialized_dependencies to avoid initial_values with cyclic dependencies\n\n- Refactoring: Moved the recursive traversal of initial_value`s dependencies into _safe_initial_value_from_tensor and _safe_initial_value_from_op.\n\n- Refactoring: Made it so _find_initialized_value_for_variable will return None when it can't find the initialized_value. Currently it returns a Tensor when it finds the initialized_value and an Operation when it can't. This makes the logic in the caller a bit more consistent and explicit.\n\nFuture changes will address more of the shortcomings of _build_initializer_expr.\n\nPiperOrigin-RevId: 180876754"""
0a96d596685a9c142a9aafbb942c3f18c559ab74,'attempt again to fix java_op_gen_tool'
0ff01f7873cfde968eb29ca961bd1359f0363c14,'attempt to fix java_op_gen_tool'
ddc2c1a0199e0c0be56c0229adf22f8e10ba1678,'Attemp to fix java_op_gen_tool error'
407bfe6a685b5d6a446039b532321d1dd044e04c,'Attempt to fix error in java_op_gen_tool'
f99275a6a309699c73e1bbebd89ba9aa32e79aa3,'Fix docs (#15864)\n\n* Updating the supported ubuntu version as well as adding a note regarding AVX instructions.\r\n\r\n* Lowercase Note.\r\n\r\n* Couple more instances of 14.04.\r\n\r\n* Removing the TF reference.\r\n\r\n* Updating 0.12 reference to master.'
f473c4065206e47fa8ac1f3b84013500f3e1af34,'Merge pull request #15863 from uber/typo-eager-value-gradients\n\nFix typo in eager value_and_gradients docstring'
d46eea5ae64e7a68bc2451681f6f4539e7a4c68d,'Java: Instructions for using GPUs via Maven.\n\nGPU support in Maven is being packaged with 1.5.0-rc0 onwards\n(for Linux)\n\nFixes #12909\n\nPiperOrigin-RevId: 180859336'
b639608a6da140f720636582022a575d7c8a7650,"'Fix bug causing OOM failure. An output parameter was not assigned in the failure path of GcsFileSystem::LoadBufferFromGCS(). The fix always zeroes the output parameter, and it also changes the consumer of this API so that the output value is only used when the return Status == OK.\n\nPiperOrigin-RevId: 180847708'"
4133786616f62ce29765c6cf50e363be201eef0f,'Fix typo in eager value_and_gradients docstring'
2ebfeda9bad9d1f867205fa8de3db564953ebc23,"'Remove python boolean check from adjust_gamma (#14555)\n\n* Update image_ops_impl.py\r\n\r\n* Update image_ops_impl.py\r\n\r\n* Update image_ops_impl.py\r\n\r\nAdded tensor not tensor based switch, to determine whether or not to use the tensor based assert or python boolean assert.\r\n\r\n* Minor fixes\r\n\r\nCheck that gamma is a tensor, not image.\r\nUpdate comment per style and correctness.\r\nPrint out gamma value in static error check.\r\n\r\n* Fixed bugs in gamma implementation, switch to using _assert for tensor and python float assertion. Added unit tests.\r\n\r\n* Use TF dtype for TF constant\r\n\r\n* Fix style\r\n\r\n* Fix typo in previous commit\r\n\r\n* Update image_ops_test.py'"
698bc996f7190f5cd836d48d29b8c1b3ddcd37c2,'Fixed the implementation of DataTypeString to avoid a stack overflow when\nprocessing invalid types\n\nPiperOrigin-RevId: 180839917'
e1a4cef6b8cda019401397ec4b4390a942927962,'Merge pull request #15853 from caisq/fix-configure\n\nFixes and formatting to configure.py'
805c17c451a536786460c553cef64be9819991de,'Fixes and formatting to configure.py\n\n* Fix a bug in error generation regarding true/false string parsing\n* Some minor style fixes'
1eedfb620521f0b4837a8ca7387a941fec4fa219,"'Fix build issues with cuda 9.1 through updating eigen. (#15796)\n\n* Revert ""Fix the headers error due to recent CUDA9.1 change (#15739)""\r\n\r\nThis reverts commit 3bc4900e7e60f43dc901523f1574f52440e7e701.\r\n\r\n* Bump eigen dependency.'"
11d93d93fc194638a739a70c1609d65833d2a0c9,"'[XLA] Fix xla_data.proto for protoc\n\nThe ""reserved"" keyword doesn\'t work in enumerations, replace it with a comment.\n\nPiperOrigin-RevId: 180747499'"
6db014b44863bab616f026beab461fd646fcb505,"'Fix unstable test case for Select op (#15807)\n\n* Revert ""Revert ""C++ gradient for Select (#14862)"" (#15764)""\r\n\r\nThis reverts commit 4c19f77d2acccc6bbf9ef493525ea553b109b571.'"
9ad5d74b3bc869260b6c65e6152b266a4e392123,"""Fix bug with imported while loops with C API enabled.\n\nSpecifically, make control_flow_util.GetOutputContext robust to\nimported exit nodes (which don't have control flow contexts). This was\na bug prior to the C API being enabled in that imported exit nodes\nwould not have contexts, but it happened to not be exposed. Note that\nimporting a metagraph will add the contexts back after doing the\ninitial import, but there's still a window where no contexts are\nassigned.\n\nPiperOrigin-RevId: 180730785"""
5f0d3395d4c61000cf0cfb3dc681177147be938d,'Fix tf.nn.fractional_max_pool output have same batch size when feed with different input batch size. Fixes #14985.\n\nPiperOrigin-RevId: 180724096'
c0bda7fe2817107440e6c2736818c84f5529d882,"'[iOS] Add optional Selective Registration of Ops (#14421)\n\nThe current iOS library is huge. Add the ability to selectively\r\nregister for the ops the tensorflow library will support. This\r\ngreatly reduces resultant binary based on the network.\r\n\r\nA ""full"" arm64 build was 122MB on my machine vs one selectively\r\nregistered for SSD Mobilenet was only 93MB.\r\n\r\nAlso fixes a minor bug where the selected arch wasn\'t being passed\r\nto the compile_ios_protobuf.sh script.\r\n\r\nTEST:build_all_ios.sh -a arm64 # generates a fat binary for arm64\r\n     build_all_ios_sh -a arm64 -g ~/Downloads/op_inference_graph.pb\r\n        #generates a binary that is much smaller'"
5249342883bf9e76d67fd29d5d29033055dc88b9,"'Memory allocation improvement for `decode_libsvm` (#15803)\n\n* Memory allocation improvement for `decode_libsvm`\r\n\r\nThis fix is an improvement to 14330. Previously string split\r\nwas handled through `str_util::Split`, which may incur unnecessary\r\nmemory allocations. This fix uses StringPiece instead.\r\n\r\nSee comment 14330 for reference.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
dbc3ea9aa74a129819cb117c7e8188bb2eed980e,"'Merge pull request #15819 from meteorcloudy/revert-1\n\nRevert ""Fix a bug: bfloat16 is unsigned on Windows (#15302)""'"
6968c0816e8c803a99bdc1ea66257c29e1e4f92f,"""MKL: Fixes for concat and elementwise ops (#15409)\n\n* fix CPU -> cpu issue for ssd-vgg16\r\n\r\n* fix unit test issues with concat op and minor enhancement in relu\r\n\r\n* Change 'cpu' back to 'CPU', disable tanh/sub/mult eltwise op which cause unit test and ssd-vgg16 failure\r\n\r\n* enable back the MKL_ML implementation of LRN\r\n\r\n* enable back the MKL_ML implementation of LRN\r\n\r\n* undo minor enhancement in relu - to avoid conflict with Niranjan's PR\r\n\r\n* Removed work around for LRN"""
8c2d6fc2b0202304885d5d6c3cba57eb2a1b3262,'Fix git configuration on Windows (#15814)'
510e521edea2b3ad7a65542336930710d3dddf09,'Merge pull request #15811 from Naman-Bhalla/patch-1\n\nFix typo in LinearModel() docstring'
47ad8b509e63559653eab46e5b43f10ae16614f0,'Merge pull request #15813 from elilienstein/typo_patch\n\nFix typo in UserInputError()'
961be409bbb0d3febf8a1005e67cb6750b75806d,"'Fix ""the the"" typo\n\nPiperOrigin-RevId: 180669193'"
443c3d907a2c8f00f4b029bf386fc6d95471daa4,"'Revert ""Fix a bug: bfloat16 is unsigned on Windows (#15302)""\n\nThis reverts commit fdf34a88bec9645473f10ba2d52df4cfcb80d582.'"
0f531b614f57283bb81901a87f4f6e6946d392bc,'Fix typo in UserInputError()'
86fc4698af19b6bd40acb068390262f2cd88edb3,'Fix typo in LinearModel() docstring\n\nadn -> and'
c8afd2bf8816e03505214e3a562dfd941abe6112,'Fix the scope to prepend to names when importing metagraphs.\n\nSee #15326\n\nPiperOrigin-RevId: 180645977'
0cce4840f561bd7f8b06603e0dc1dcbf05c46a03,'Fixed a typo that resulted in the graph being processed in reverse topological\norder. This made shape inference far less efficient than it should be in some cases.\n\nPiperOrigin-RevId: 180629882'
a8041609f182db130953e123d7be4823ea13d05e,'Use SetIsStateful in op registrations for GetSessionHandle GetSessionHandleV2 GetSessionTensor DeleteSessionTensor\n\nThese operations are stateful.   Fixes #15589.\n\nPiperOrigin-RevId: 180618992'
a4301f0baa173a347caa34c606c19fd139b055e0,'[tf.data] Improve error message in `tf.data.FixedLengthRecordDataset`.\n\nThe iterator now eagerly returns an error message when the size of an input file\n(minus header and footer) is not a multiple of the fixed-length record.\n\nPiperOrigin-RevId: 180612356'
b6b4ceb1cbc4ed9e18af783be97564d857e11ef4,'re-enabling a test after the llvm bug was fixed\n\nPiperOrigin-RevId: 180565013'
127c98b9e3ed3b79284c5f16046071aa4ac2e7cb,"""[XLA] Fix a bug in --xla_hlo_profile and add a test that would have caught it\n\nI'm pretty sure I introduced the bug when refactoring HloExecutionProfile some\ntime back.\n\nAlso change the bytes-per-cycle field to use a floating point format when its\nvalue is less than 1, to avoid rounding down to 0 (common on CPU).\n\nPiperOrigin-RevId: 180563380"""
dfac1ba6e6a70e5fdee91ed1b20f577e9075cab3,"'Grappler item_test: fix item order dependency\n\nby replacing assertEqual() with assertItemsEqual()\n\nFixes test failures such as:\nhttp://ci.tensorflow.org/view/Tensorflow%20Jenkins%20Monitored%20builds/job/nightly-matrix-cpu/TF_BUILD_IS_PIP=NO_PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=cpu-slave/763/consoleFull\n\nPiperOrigin-RevId: 180550331'"
d87a9fbbc5f49ec5ae8eb52c62628f0b1a0bf67f,'Fix invalid Markdown in docstring (#15774)'
403642268695246aec08cf0577cd978b5f77ccb6,'Upgrade all TF base images to ubuntu 16. (#15458)\n\n* Upgrade all TF base images to ubuntu 16.\r\n\r\n* Update bazel version for CI docker image.\r\n\r\n* Fix links to pylint in sanity build script.\r\n\r\n* Upgrade bazel version to 0.8 on devel docker images.'
9c776255b971bcae5228d883e3737f4ad9317de1,"""Add S3 logging to TensorFlow's logging system (#15493)\n\n* Add S3 logging to TensorFlow's logging system\r\n\r\nThis fix is an attempt to help the issue raised in 15159\r\nwhere there is no logging in S3 file system and it is not easy\r\nto debug to diagnose.\r\n\r\nThis fix adds S3 logging to TensFlow's logging with\r\n```\r\nLogLevel::Info -> INFO\r\nLogLevel::Warn -> WARNING\r\nLogLevel::Error -> ERROR\r\nLogLevel::Fatal -> FATAL\r\n```\r\n\r\nThis fix is related to 15159 (not a complete fix).\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Sanitize with clang-format\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Enable S3 logging to TensorFlow logging\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Sanitize with clang-format\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update Bazel BUILD file\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address review feedbacks.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* const local variable\r\n\r\n* Make local variable const and avoid std::string\r\n\r\n* Add punctuation & remove redundant comment\r\n\r\n* Expose  InitializeAWSLogging and ShutdownAWSLogging in S3Logging\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix style.\r\n\r\n* move static functions first\r\n* move member functions before members fields\r\n* see if DISALLOW_COPY_AND_ASSIGN will work.\r\n\r\n* Update `S3Log` => `AWSLog` for review feedback\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Set TF_CPP_MIN_LOG_LEVEL=1 to filter out LOG(INFO)\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
b5b57d3f0b55927d487a2d146e3ff9cdb14afe60,'[XLA] Fix std::array initialization take 2 (#15750)'
ce89a99bfc26089b79bcd591c6f02e83b7aee60a,'fix doc `tf.data.contrib.map_and_batch` to `tf.contrib.data.map_and_batch` (#15710)'
5aaab8570cba65bacd69e1b4407f2736d01b623a,"'Used template version of SafeStringToNumeric to reduce code duplication (#15704)\n\nThis fix uses template version of SafeStringToNumeric to avoid\r\ncustomerized ConvertHelper, for the purpose of reduce code duplication.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
4182ece77aae763f2acc07255c40279cbe3c587a,'improve compute high rank hessians (#15308)\n\n* fix possible compute high rank hessian\r\n\r\nfix possible compute high rank hessian\r\n\r\n* add high rank hessians unittest\r\n\r\n* fix retuning a shape of hessian \\w test\r\n\r\n* fix use implicitly tensor shape\r\n\r\n* Space nearby operators.\r\n\r\n* fix to tensorflow style guide\r\n\r\n* fix to tensorflow style guide (Space nearby operators)'
1adee6281635b34e1a6f97bda73e6e2da50eebc8,'Sgdr fix (#14500)\n\n* Fix SGDR implementation.\r\n\r\nAdd cosine_decay_restarts to the API.\r\n\r\nRemove sgdr decay from contrib.\r\n\r\n* Remove old sgdr file from the BUILD file\r\n\r\n* Golden file update'
3bc4900e7e60f43dc901523f1574f52440e7e701,'Fix the headers error due to recent CUDA9.1 change (#15739)'
4fe79e971d64ff70caa300bdbf71b18d286959df,"'Fix out of memory issue on Tegra devices (#15702)\n\nTF used to allocate (available memory - 300MB) or (available memory - 225MB)\r\nfor TF to use. This is fine for graphic cards, but will cause out of memory\r\nissue on Tegra.\r\nModify to allocate (available memory - 1GB) for Tegra'"
84b6ef0f3002a18c48dd73d6f404c4f42d9e40d8,'fix description of HASHTABLE_LOOKUP (#15686)\n\nHASHTABLE_LOOKUP is a builtin op rather than a custom one.'
61bdf78ea39343d4fd2c8dc7a5c04a4a8b3a0a8e,'Fix error message of WhereOpCPU (#15031)'
13fc601fa38c05d9384dbf657d0ec0555c03e140,"""Design tweaks of Fisher Factor classes.  Now they don't declare ops in their constructors, except possibly for making the cov variables (is this considered an op?).  This should allow for easier control over device placement of various ops in the future.\n\nFixed some problems with how colocations were done for ops computed in the base class and in the RNN class.\n\nColocations now controlled with global configuration variable (similar to the rest of the configuration of the FisherFactor classes).\n\nPiperOrigin-RevId: 180441903"""
a4bbf33e76e3de721a74230f7ea1f83e75f7c6ad,"'Optimize batch matrix transposition for narrow matrices. (#13049)\n\n* Specialize implementations of batch matrix transposition when the matrix is narrow.\r\n\r\n* Reduce compilation time by removing uncessary type specializations.\r\n\r\n* 1. Remove macros.\r\n2. Use single definition of frontier.\r\n3. Fix various issues.\r\n4. Use clang-format 5.0\r\n\r\n* Improve algorithm dispatcher and provide performance note.\r\n\r\n1. Ensure static errors when requesting tile size combinations outside performant subspace.\r\n\r\nPerformance Note:\r\n\r\nWe define the _large problem size_ exploration precisely as:\r\n\r\nbatch_num = [2**i for i in range(5, 13)]\r\nmatrix_height = range(96, 2048, 16)\r\nmatrix_width  = range(2, 16)\r\n\r\nwhich consists of 13664 data points.\r\n\r\nWe deffine _small problem size_ exploration precisely as:\r\n\r\nbatch_num = [2**i for i in range(5, 13, 2)]\r\nmatrix_height = range(96, 2048, 128)\r\nmatrix_width  = range(2, 16, 2)\r\n\r\nwhich consists of 3472 data points.\r\n\r\nWe define on par or better percentage (OPB%) as the percentage of execution times collected that are within 10% difference or better than the baseline implementation. Average speedup is measured across all execution times collected. We present our findings as follow:\r\n\r\nArch    Dtype   PS      AvgSpeedup  OPB%\r\nK40     float4  small   1.15        99.3\r\nK40     uint64  small   1.05        92.8\r\nK40     float   large   1.15        87.1\r\nK40     uint16  small   1.25        86.8\r\nK40     uint8   small   1.28        89.3\r\nP100    float   large   1.81        99.5\r\n\r\n* 1. Improve description.\r\n2. Add more tests.\r\n\r\n* 1. Fixing comments here and there.\r\n\r\n* 1. Fix a sentence.\r\n\r\n* 1. Fix a bug that causes redundant kernel executions.\r\n\r\n* Optimize cuda kernels.\r\n1. Loop unrolling.\r\n2. Special-case full tile execution.\r\n3. Reduce integer calculation instructions.'"
38bb27d02d019f9f91ec0d3537b0986b65d5b422,"'Utility classes for writing Java source code from a C++ process (#14094)\n\n* Utility classes for writing Java source code from a C++ process.\r\n\r\n* Spliting pull request, retaining only Java definitions into this one.\r\n\r\n* Introduce comments from second round of code review\r\n\r\n* Fix .cc/.h order in BUILD file'"
f8d12a4a3641adef9b5720120fec07d99a17c335,'Merge pull request #15719 from BDHU/patch-1\n\nFixed a typo for CreateBody()'
4c7dfcf0f1d0720378c75ac70f73065c86a13e9f,'Merge pull request #15734 from ManHyuk/fix_typo\n\nfix typo'
ae61e811ae895d29a41cfbafed203b6e8b4cff53,'fix typo'
bbd9e21afe7fd96d2d70cc76e5b14efcefba61b2,'Fixed a typo for CreateBody()'
2e0f2c4d2d843ba4dd6f90eedd2098117a937e98,"'Fix tf.train.piecewise_constant docstring example.\n\nThe example currently implies that if the global_step is on the first boundary, it takes the second value, not the first. In reality, it takes the first value.\n\nPiperOrigin-RevId: 180304929'"
3a3b7530ebc9a6bfbfff8ed50bc7622a78b5b36b,"'Support empty input tensor for some ops (fix #14657) (#15264)\n\n* Support empty input tensor for FusedBatchNorm,FusedBatchNormGrad,Conv2DBackpropFilter (fix #14657)\r\n\r\n* Also fix pooling ops\r\n\r\n* Add some comments in ops\r\n\r\n* Add tests for conv/pooling/bn.\r\n\r\n* Return NaN mean/variance when input is empty\r\n\r\n* update comments\r\n\r\n* fix typo\r\n\r\n* Move fill_functor implementations to :fill_functor'"
6e2c2570889601d99f4a13920e26a1fb11b02d2a,"""Make tf_upgrade.py dependency free (#14958)\n\nNothing else references the ast_edits, so it will make tf_upgrade.py much\r\neasier to use if it's just absorbed. This change fixes #11217 where a whole\r\nbunch of folks encountered difficulties for this very reason."""
2e2715baa84720f786b38d1f9cb6887399020d6f,'Fix saved_model_cli _print_tensor_info for REF types.\nFix #15611.\n\nPiperOrigin-RevId: 180292752'
711b10c280534c0ab73351bb4fd3e7ec32585236,"""[XLA] Fix hlo_graph_dumper: don't crash if the computation has a constant root instruction.\n\nPiperOrigin-RevId: 180285687"""
271917a124a5b86c9ff6444415d20402a5db4ac0,'fix variable name (#15652)'
673f6cb46d2d03a44147c441a8c4a978105c659a,'Exclude tf_stream_executor.cmake for CPU only (#15600)\n\nBug introduced in #15099\r\nFixes #3996'
39aea06464b3f178fdc2fc9541b20cf55171b985,'minor wording fix in readme (#15667)'
c191e11d28272f03a2ae069266666134f91bca1a,'Predictor fixes for core estimators (#15648)\n\n* fix predictor estimator factory\r\n\r\n* fix checkpoint for chiefsessioncreator'
e0d53752e36e7609e3029a1bc7bb87de7374e24c,'Fix small type in docstring which causes the API doc to render incorrectly (#15664)'
d9b5fbb48da8c754c49590b33ebc7c2550ec0c89,"""Fix typo 'updaye' in audio_recognition.md (#15661)"""
40d1b257636a0b510dba59aff0af54e42d602313,"""Fix shape inference for bitwise ops with broadcasting (#14678)\n\n* Fix shape inference for bitwise ops with broadcasting\r\n\r\nThis fix tries to address the issue raised in 14646 where\r\nshape inference for bitwise ops is incorrect with broadcasting.\r\nAs was specified in 14646, in the following\r\n```\r\n>>> import tensorflow as tf\r\n>>> tf.bitwise.bitwise_and(tf.zeros([3,1], dtype=tf.int32), tf.zeros([1,3], dtype=tf.int32))\r\n<tf.Tensor 'BitwiseAnd:0' shape=(3, 1) dtype=int32>\r\n```\r\nthe result shape should be (3, 3), not (3, 1).\r\n\r\nThis fix fixes the issue by changing\r\n`.SetShapeFn(shape_inference::UnchangedShape)`\r\nto\r\n`.SetShapeFn(shape_inference::BroadcastBinaryOpShapeFn)`\r\n\r\nThis fix fixes 14646.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for shape inference for bitwise ops with broadcasting\r\n\r\nThis commit adds test cases for shape inference of bitwise ops with broadcasting\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update to add addtional assert for shape function\r\n\r\nfor comment feedback.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
bb4099f816e91cd1a3885aebac7239031a499962,'Fix typo in export_savedmodel api doc.\n\nPiperOrigin-RevId: 180203426'
2bf95689e547690321c0c5ef237f7df391190b5c,"'tfdbg: Fix a bug in source file content reading\n\nPreviously, calling strip() removed not only the trailing newline character, but also any leading spaces and tabs, which actually should be preserved. This CL fixes it.\n\nPiperOrigin-RevId: 180198179'"
ac7387b48674fdeb11e7a4fa595c88b5e2afe16e,'session_clusterspec_prop_test and common_runtime_direct_session_with_tracking_alloc_test fixed for GPU (#14530)\n\n* session_clusterspec_prop_test fix for GPU\r\n\r\n* common_runtime_direct_session_with_tracking_alloc_test fix for GPU'
0147732480d94e3c8f686cecf009bf85b49ddf90,' Recover the lost output channel number of atrous convolution for NC format (#14120)\n\n* TST: add test case\r\n\r\n* BUG: fix unknown spatial dim for NC format\r\n\r\n* Make comment more informative'
f5a27328adafacb8d88bb62df835fc34cd7ed46c,"'mpi_collectives: Refactor to fix build issues (#15534)\n\n* mpi_collectives: Refactor to fix build issues\r\n\r\nAfter TF commit 5c7f9e3, the mpi_collectives package would no longer build\r\nops and kernels. This build issue caused mpi_collectives import to fail in\r\nPython with the following error: ""NameError: Could not find operator MPISize\r\nin dynamic library mpi_collectives.so"".\r\n\r\nTo fix this issue, add build targets to ensure both ops and kernels are built\r\nNote, also refactored the build targets and directory structure to more\r\nclosely match other contrib packages.\r\n\r\n* mpi_collectives: Minor BUILD fix\r\n\r\n* Minor: Buildifier fix\r\n\r\n* mpi_collectives: Correct preprocessor defines\r\n\r\n* mpi_collectives: Clearer defines inclusion'"
1f94604944ce48036d8a5fd6f8b1b24ca36be953,"""New metric: Cohen's kappa (#15443)\n\n* ENH: implement cohen_kappa\r\n\r\n* TST: add test cases\r\n\r\n* DOC: add document\r\n\r\n* DOC: revise document as suggested\r\n\r\n* CLN: drop total prefix\r\n\r\n* CLN: wrap lines to 80 chars in metric_ops.py\r\n\r\n* CLN: remove unneeded dependency\r\n\r\n* DOC: support labels datatype\r\n\r\n* TST: add explanation for testBasic\r\n\r\n* TST: remove testBasic2\r\n\r\n* TST: replace all random data\r\n\r\n* CLN: remove sklearn dependency\r\n\r\n* TST: wrap the lines in this test to 80 chars\r\n\r\n* DOC: clean format\r\n\r\n* CLN: typo\r\n\r\n* CLN: lables specifiy -1 axis\r\n\r\n* CLN: remove float lables support\r\n\r\n* DOC: modify document of _safe_div\r\n\r\n* CLN: rename predictions -> predictions_idx\r\n\r\n* TST: invalid dim case\r\n\r\n* CLN: clean codes\r\n\r\n* DOC: remove total_ in update_op"""
489710701b1cded21ed4bf67e556aceea3bce340,"'Fix discrepancy between doc and impl for `tf.reverse` (#13672)\n\n* Fix discrepancy between doc and impl for `tf.reverse`\r\n\r\nThis fix tries to address the discrepancy between doc and\r\nimplementations for `tf.reverse`. In the documentation,\r\nboth int32 and int64 could be used for axis.\r\n\r\nHowever, the actual implementation of the `tf.reverse` does\r\nnot support int64 and caused missing kernel error:\r\n```python\r\nubuntu@ubuntu:~$ python\r\nPython 2.7.12 (default, Nov 19 2016, 06:48:10)\r\n[GCC 5.4.0 20160609] on linux2\r\nType ""help"", ""copyright"", ""credits"" or ""license"" for more information.\r\n>>> import tensorflow as tf\r\n>>> v = tf.reverse_v2([1, 2, 3], tf.constant([0], tf.int64))\r\n>>> sess = tf.Session()\r\n>>> sess.run(v)\r\nTraceback (most recent call last):\r\n  File ""<stdin>"", line 1, in <module>\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py"", line 889, in run\r\n    run_metadata_ptr)\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py"", line 1120, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py"", line 1317, in _do_run\r\n    options, run_metadata)\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py"", line 1336, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: No OpKernel was registered to support Op \'ReverseV2\' with these attrs.  Registered devices: [CPU], Registered kernels:\r\n  device=\'CPU\'; T in [DT_STRING]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_BOOL]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_COMPLEX128]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_COMPLEX64]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_DOUBLE]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_FLOAT]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_HALF]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_INT8]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_UINT8]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_INT16]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_UINT16]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_INT32]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_INT64]; Tidx in [DT_INT32]\r\n\r\n         [[Node: ReverseV2 = ReverseV2[T=DT_INT32, Tidx=DT_INT64](ReverseV2/tensor, Const)]]\r\n\r\n```\r\nThis fix addresses this issue and added the int64 support\r\nfor axis in `tf.reverse`.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add GPU support of int64 axis in `tf.reverse`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for int64 support of axis in `tf.reverse`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add OpenCL int64 support of axis in `tf.reverse`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
f190c2305b25a33456ebfed8ac5a768e3ea9d053,"'Add int64 support for BroadcastArgs and BroadcastGradientArgs (#15255)\n\n* Add int64 support for BroadcastArgs and BroadcastGradientArgs\r\n\r\nIn `array_ops.cc`, both int32 and int64 are expected to be supported\r\nfor `BroadcastArgs` and `BroadcastGradientArgs`. However, this was\r\nnot the case as only int32 kernel are registered even though `T`\r\nis part of the `TypeConstraint`.\r\n\r\nThis fix adds the int64 kernel support for `BroadcastArgs` and\r\n`BroadcastGradientArgs`, and adds related test cases.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for int64 support of BroadcastArgs and BroadcastGradientArgs\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Sanitize python and clang-format.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
87de301db14745ab920d7e32b53d926236a4f2af,"'Add templated functions for `safe_strto[f|d|i32|i64|u32|u64]` (#14789)\n\n* Add templated functions for `safe_strto[f|d|i32|i64|u32|u64]`\r\n\r\nWhile working on 14330 I noticed that there is no templated functions for\r\n`safe_strto[f|d|i32|i64|u32|u64]`. As a result, an additional wrapper\r\nhas to be created in different places to apply the typename in a\r\ntemplated class or function. Examples include the existing implementations\r\nin `tensorflow/core/kernels/string_to_number_op.cc` (`Convert`),\r\n`tensorflow/core/lib/strings/proto_text_util.h` (`ProtoParseNumeric`),\r\nand in 14330.\r\nIt might make sense to add a templated function for `safe_strto[f|d|i32|i64|u32|u64]`\r\nto avoid existing and future code duplications.\r\nThis fix adds\r\n```\r\ntemplate<typename T>\r\nbool SafeStringToNumeric(StringPiece s, T* value);\r\n```\r\nto address the above mentioned issue.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Move ProtoParseNumeric to numbers.h, and use overloading in template\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
bbc5ea48a72c296c2defe41fd241d362f6d963ef,'Merge pull request #14999 from n3011/patch-1\n\nfix clip weights tests'
5bc7f85506d63a5f145acac12c66798478700b91,'fix InvalidArgumentError when using cv2 with tf.py_func() (#14286)'
09f2aba3bdda18956237661655fc45ae36854c52,"'[Bazel/MSVC] Fix build error since aae439c (#15579)\n\n* [Bazel/MSVC] Fix build error since aae439c\r\n\r\n* Revert ""[Bazel/MSVC] Fix build error since aae439c""\r\n\r\nThis reverts commit 635f6202f312165b5e29c2ef9cf70f1614b4043e.\r\n\r\n* [Bazel/MSVC] Fix build error since aae439c'"
6a46bdca93f9ae5f3e2419e1c7c856f04622daa9,'Fix adding elements to collections.deque. (#15574)'
957a7adcd854341c5f43da7be6733cbf1759a33f,"""Bug fix for example_parsing_ops_test (#15548)\n\nStatic variables' initialization order is not determined in C++.\r\nIn a static variable's constructor, you can't access other static\r\nvariables unless its constructor is a constexpr, which is not true\r\nfor tensor's allocators.\r\n\r\nReplacing it with std::call_once."""
fe2b9a2bc69b3599415c7fb258d4b5b9c33e8965,"'Add shape function SingleImageRandomDotStereograms (#15431)\n\n* Add shape function SingleImageRandomDotStereograms\r\n\r\nThis fix tries to address the issue raised in 15429 where\r\nthere is no shape function for SingleImageRandomDotStereograms.\r\n\r\nThis fix adds the shape function for `SingleImageRandomDotStereograms`.\r\n\r\nNOTE: `SingleImageRandomDotStereograms` takes an attribute\r\nof `output_image_shape` which is in the format of\r\n`[X, Y, C]` (`[ImageX, ImageY, Channel]`. However, the actual\r\ndata output is in the format of\r\n`[ImageY, ImageX, Channel]` (`[h, w, c]`)\r\nso by default the output_image_shape has the value\r\nof [1024, 768, 1] but the output data will be [768, 1024, 1].\r\nAnd if `[1200, 800, 1]` is used explicitly then the output\r\ndata shape will be `[800, 1200, 1]`.\r\n\r\nThis fix does not change the behavior for now.\r\n\r\nThis fix fixes 15429.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for shape function for SingleImageRandomDotStereograms\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update Bazel BUILD file\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address review feedback.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
6b6674a512e144dd791f2bdbed930be6cdc67788,'Fixing MKL-DNN convolution filter propagation to backprop (#15227)'
2f165f383045e6efbd472b52c33f6622cf164ec4,'Merge pull request #15629 from him2him2/fix/HTTPS\n\nUpdate: HTTP -> HTTPS'
c4508a86da25cd1c8e7819d6ac1eacf2b96fef1f,'Clean bazel `all_files` targets (#15368)\n\n* Clean bazel `all_files` targets\r\n\r\n* Fix sanity tests'
650ba401a9f10b89e056129dedb558561e28a57a,'Fix documentation error in tensorflow feature_utils.h\n\nNeed to take address of the example for modifying its feature\n\nPiperOrigin-RevId: 179963317'
3e27b27cf4d96bb52b39bcc17304cea8785d010a,'Fix typo in direct_session_test.cc.\n\nPiperOrigin-RevId: 179960797'
c0626e23280a0c33053433a0cc696f6966176b6c,'Fixing tf.contrib.data API declarations.\n\nPiperOrigin-RevId: 179943582'
2a6fb70e334a590f363cf86cf435dc40dadac40e,"'[XLA] Remove Power architecture support from CPU backend.\n\nThe Power support is unused, untested, and buggy. Remove it until it is fixed.\n\nPiperOrigin-RevId: 179942340'"
2f484f175a9229d598e81a1803f5db0bbb10e7a3,'Fix allow_smaller_final_batches for bucket_by_sequence_length.\nCloses #14420.\n\nPiperOrigin-RevId: 179940036'
079a9b1eed460ef4c4d0f08250081b9e765e422a,"'[XLA:GPU] Fix implementation of Thunk::ShouldBlockFutureThunks.\n\nThe old implementation did not do what it was intended to do.  Instead\nof making the next thunk on each other stream wait for this thunk to\ncomplete, it made all following thunks on this stream wait for this\nthunk to complete.  (Which is redundant, since streams are serialized\nanyway.)\n\nPiperOrigin-RevId: 179938424'"
1654f7a5032776ad34aeed2c94c2bd77a72d8caf,'[XLA] Add zero-sized batchnorm test.\n\nAlso fix out-of-bounds read in ReferenceUtil::Reduce4DTo1D.\n\nPiperOrigin-RevId: 179888724'
7989a3aa026f93c1f45e1baf4ac37ad2a79156f9,"'Merged commit includes the following changes:\n179858783  by gunan:\n\n    [XLA] Add a pass to replace all non-side-effecting and removable zero sized\n    HLOs.\n\n--\n179853916  by A. Unique TensorFlower:\n\n    Fix missing backtick in parse_example docstring, causing wrong markdown formatting.\n\n--\n179852823  by apassos:\n\n    Another attempt at adding int64 indices to Fill.\n\n--\n179852553  by A. Unique TensorFlower:\n\n    Stop grappler optimization to reorder BiasAdd ops.\n\n--\n179850703  by yaozhang:\n\n    Support reverse op.\n\n--\n179850204  by blakehechtman:\n\n    [XLA] Add a pass to replace all non-side-effecting and removable zero sized\n    HLOs.\n\n--\n\nPiperOrigin-RevId: 179858783'"
62d15f485b32e1d271bd72297e0c8d5327705f5f,'Merge pull request #15562 from ManHyuk/fix_typo\n\nFix typos'
944ffd41de5bc5c57671ce3a3046a85e9f682cca,'fix typo'
2381e2b36239292008c44c5e0a017b1e87768c54,'fix typo'
c7a05f4b18df0a9bd6b594d6f3d67b7489fcb54e,"""Fix padding for int8 fused convolution.\n\ncudnnConvolutionBiasActivationForward doesn't work when filter size >= 6 and\nthere is padding. This CL works around this cudnn bug.\n\nPiperOrigin-RevId: 179836819"""
36dca87aa0c3fd2fa98acd55e25e0d31fec94730,'Merge pull request #15550 from snnn/random_distributions_test\n\nfix random_distributions_test'
e4035bcf3e5269a53474d32e428b3908a148e54b,'Merge pull request #15506 from snnn/fix10\n\nbugfix: long is 32 bits on Windows'
6f0184e044850f33073ab4ef25c93d89b56eca1b,'Merge pull request #15539 from snnn/fix1\n\nRemove quantized_matmul_op_for_hexagon_test in Windows build scripts'
1ad680d3a36e9742229748d5c5d3bddb1d0a2578,'Roll CL 177989542 forward with fix: Wrappers for CUDA 9 warp-synchronous intrinsics.\n\nPiperOrigin-RevId: 179782067'
53c6c90c248bf695a94dcffb392a8b0f6cd7a7f3,'fix random_distributions_test'
2dce1ee2e37e314772467bfa150b57b8d4311598,'BUG: fix for unknown shape'
376e2cfdab31f4da251ea2e50992a9bf97fd171b,'Merge pull request #15536 from LucasSloan/fix-get-started-docs\n\nUse a trailing period to define floating point constant.'
ff44881e5605fe5a9a46341dbc96614356fcf7cf,"'[XLA] Fix HLO graph dumper not to assume that instruction names start with ""%"".\n\nHLO graph dumper needs to be aware that we\'ve gotten rid of the ""%""\nprefix in HLO names so it doesn\'t print e.g.\n\n  reduce\n  reduce.42\n  Subcomputation: add\n  ...\n\nbut instead simply prints\n\n  reduce.42\n  Subcomputation: add\n  ...\n\nPiperOrigin-RevId: 179756922'"
6649e3c97265edb7121fbded938fe62c6a35083c,'Fix typo in struct name: RecvNodeDescritorHash -> RecvNodeDescriptorHash.\n\nPiperOrigin-RevId: 179756840'
443b4a3b115f63523617871f55460791de202e30,'Fix the condition check for int8 fused_conv so that it works on Volta.\n\nPiperOrigin-RevId: 179756490'
bcf5467df0a110d15ac60e90355f1ef20e46431b,'Merge pull request #15511 from rongjiecomputer/array\n\n[XLA] Fix std::array initialization'
d34c1d2978ec43f6600fc2f59d24055a972e09c6,'Merge pull request #14377 from footh/layer-base-indent-fix\n\nFix indenting on cache check in Network layer class'
8f9b6faff132632375ea4c97533aff1b96ded423,'Merge pull request #14527 from wodesuck/patch-1\n\nFix control input name for quantize node'
055342dbe21e21f5fb9be5f2c825498d328332fd,'Merge pull request #15260 from ManHyuk/typo\n\nFix typo'
2cf6e7d0dfd641de5b9501ed640bd601ca0b7915,"""Merge pull request #14673 from GreggHelt2/master\n\nFixed bug in code within programmer's guide markdown docs for Variabl\xe2\x80\xa6"""
3d01a46171b5d256617627537187ab819c196aa4,"'Destroy batch_thread_pool_ first. For the new in flight batches implementation, the callbacks scheduled on this thread pool refer to other class members which must remain alive until the thread pool is empty.\n\nAlso fix a similar lifetime issue in the unit tests.\n\nPiperOrigin-RevId: 179726389'"
23fb183bad80b6e37b22c3f7980630edc0d0d2b9,'Merge pull request #15229 from powderluv/fix_osx_tfcompile\n\n[XLA] Fix another XLA/tfcompile compile error on OSX'
e40338d332541e0433bfdbce3f072a27d3912f51,'Fix logging of excessive unsupported operations.\n\nAn operator precedence issue with the previous version triggered errors when models had a large number of summaries.\n\nPiperOrigin-RevId: 179722697'
dbedc1312061ce1437a6c71d279675e4e2a79595,'Adding missing comma in __init__.py and fixing links in NOS optimizers docs.\n\nPiperOrigin-RevId: 179701465'
0543cf17187f6d3b178717bd528af28c754aaf94,"'Fix a flaky test.\n\nIn the old code, `a` can be freed before bytes_in_use, making the result of\n`bytes_in_use` unstable. In the new code, `b` uses `a` and control-depends on\n`bytes_in_use`, so `a` cannot be freed before `bytes_in_use`.\n\nPiperOrigin-RevId: 179690026'"
d4c33cfc944cbcac7a31811ba8f86448d8cc2e23,"""[XLA] Fix XLA/tfcompile compile error on OSX\n\nThis fixes issue #15196\n\nkernel_support_library.cc:99:5: error: no matching function\nfor call to 'transform' std::transform(function->arg_begin(),..\n\nTEST=build tfcompile on OSX (also requires PR#14893)"""
71848a91b303550986b25216a2e64321ef90ed56,'Merge pull request #15504 from snnn/f901\n\nFix typos'
633c3d6db513573242bd2ad86b7234c66cc5b692,'Merge pull request #15519 from ManHyuk/fix_typo\n\nfix typos'
5ff98ec26252d9f5509a4bcd6320423eb215fea0,'Merge pull request #15524 from uber/fix-golang-readme-formatting\n\nFix Golang readme installation instruction formatting'
54712744d4b8add6c6e910e3acb2d2fff94922bb,'Fix Golang readme installation instruction formatting\n\nThis looks like it got pasted in incorrectly'
b5ee8eb4d8d6f2baa7e602809c6057cda27d77ea,'fix typos'
f86a96ade62345e8d9a10e5d27e2ecf300293616,'bugfix: long is 32 bits on Windows'
0a3486d8d68d898cc2d5e4f4032373813aae9074,'[XLA] Fix std::array initialization'
dac28e61affcaf7dbeadc3ed3d21257261ad19ee,'fix typos'
810394550571c5feb333cb6da66afb4b20c3bd85,"'Merge pull request #14893 from powderluv/fix_xla_osx\n\n[XLA] FIX XLA/tfcompile on OSX. #if Guard AVX, SSE and NEON instructions'"
86686b9f8e25fe7955d408fb7432fe133c4a3f48,'Add comparison ufuncs for numpy bfloat16 type.\nFix 2 bfloat16 tests.\n\nPiperOrigin-RevId: 179614898'
899955ac0aa0cd5ddd6536700e8386d8616ac1a9,'[XLA] Fix return type of LayoutUtil::PaddedDimensions\n\nWe should not use const here.\n\nPiperOrigin-RevId: 179614367'
388833cb496f5ec26707ab365fadbe168512ebc3,"'Merge pull request #15474 from sleighsoft/TrainingHelperFix\n\nRevert changes in TrainingHelper that cause ""no gradient"" error'"
bbe4ddfa6cfe5f5434130b8e0fc76d12b6e14ec3,'Merge pull request #15479 from qmick/15477_fix_memory_stats_with_opencl\n\nFix issue building memory_stats with opencl'
16308e6182f6d84377a3434186b321085118e044,'Merge pull request #15471 from facaiy/BUG/name_scope_collision_in_layer\n\nBUG: fix name scope collision in `tf.layers`'
c5b34985851111bea06655da3a4e57d1ac1485de,'Merge pull request #15482 from snnn/fix6\n\nFix a compile error in file_block_cache_test.cc'
f10cd8ba49ec2a53c4f181bc7d2e45d2eead3575,'Merge pull request #15282 from nluehr/memory-stats-test-fix\n\nFixed memory_stats_ops_test'
9940d9e5cdb827e485c883151f344ef9f8f28372,"""Merge pull request #15362 from akimach/patch-1\n\nFix broken image link in TensorFlow Lite's docs"""
7f50c8ca03bc087dc99ffc8fbed93d1663985982,'Merge pull request #15283 from nluehr/cudnn51-fix\n\nFix minor typo in CUDNN_VERSION check'
fcf61d57079c8874cd479d4b0dfdb48033e742d8,"""Fixed a couple of bugs in transitive reduction:\n   1. Only consider paths through nodes reachable from the source in the inner loop.\n   2. Ignore paths through Merge nodes, since we cannot know which branch executed.\n   3. Ignore function nodes, since we are potentially mixing paths from multiple instantiations.\n   4. Process control inputs to be removed in reverse order of input slot, so we don't clobber the repeated field.\n\nPiperOrigin-RevId: 179596846"""
b4e4677a62e1ce4f47dc7c80fedb59527cfc800b,"'Specifically add TMP directory for Android\n\nThere is an oversight in the adb tool that causes `adb shell` ->\n$<command> to set the TMPDIR env param, but `adb shell <command>` does\nnot. Binaries that use env.cc on Android will have inconsistent behavior\nbetween interactive and non-interactive versions of `adb shell` until\nthat bug (which has been fixed internally) arrives on released versions\nof adb.\n\nThis change adds the /data/local/tmp directory as a final fallback for\nAndroid devices that support it (/data/local/tmp seems to be the de\nfacto ""anyone can use this"" Android tmp directory based on Mobile\nHarness\'s use of it, my own discovery that it works better than other\ndirectories, and that searching for it seems to back up the idea, but I\ncan\'t find official documentation supporting this). Devices that don\'t\nsupport that directory will continue to fail, as they did before.\n\nPiperOrigin-RevId: 179587386'"
37b5747cc7db07d59a4cac61a4c93ac17bf1579b,'Fix comment.\n\nPiperOrigin-RevId: 179578952'
7316cf1bb842212480afac6a3b4ee5c4d8736bfb,'Reverting changes in 69c324591ba4dfeafb403ee59de56ffe063c1e94 to fix no gradient for argmax bug'
3a3671af98e32e0fe2eabb346288e62b9b7ffe12,'Merge pull request #15476 from ManHyuk/fix_typo\n\nfix typos'
59f2530bf3889fd84b18e9ea6f0a03bf916637cd,'Use Eigen version of the `scalar_fmod_op` for `fmod` ops (#15456)\n\n* Use Eigen version of the `scalar_fmod_op` for `fmod` ops\r\n\r\nIt seems that scalar_fmod_op is supported in Eigen so\r\nthis fix changes `scalar_fmod2_op` to use Eigen version\r\nof the `scalar_fmod_op`.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Remove `scalar_fmod2_op` as ` scalar_fmod_op` is in Eigen\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
39e0696ae0797f966b6c5221c072619ff2b9b097,'Fix a compile error in file_block_cache_test.cc'
db76da170ad12e9f197b267282291d18dbf02263,'fix issue building memory_stats with opencl'
1d7d8667d19e61bc65f35a6dae33563b2acadaac,'fix typos'
a5aa4191f375beb7f21d69c565d2ec13e9adbc0c,'BUG: fix name scope collision in layer'
c26daab335366e87bd495be5e61630716f92163b,"""Fix python 3 error `a bytes-like object is required, not 'str'`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
395907baba0494d2a59d7fede5b14da1c177802b,'Add decode_compressed support\n\nThis fix tries to address the issue raised in 14887 to add\ndecode_compressed support.\n\nThe API will take a string Tensor (compressed with either ZLIB\nor GZIP) and output a string Tensor of the same shape uncompressed.\n\nThis fix fixes 14887.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
e289dfd636bfab31232a511b0e96a785571ada92,'Fix typo in comment for GetRoot().\n\nPiperOrigin-RevId: 179486882'
662ac41e2513756ee63467c313eaad8e53e05dcd,'Merge pull request #15344 from javierluraschi/lite-readme-toco-link\n\nFix broken link in tensorflow lite readme'
82bf45c534fcc84a38d3402b1f3e1aec7cd64444,"'disable failing test, fix formatting'"
acaabdfe587de35ee66a612b3bbcbafef2dcca89,'Merge pull request #15444 from snnn/fix1\n\nFix lib_strings_str_util_test on Windows'
4cdc52964ae24f2c2b863939b4dc9cbe9cd9d104,'Merge pull request #15394 from qmick/patch-2\n\nFix typo of tf.abs docstring'
4d75d36f9d17072500c3e8db259617c0e75a18c4,'Merge pull request #15386 from betterenvi/fix-gan-api-example\n\nFix api usage in examples of GAN'
3338e27c3b31160f5a14a7822e1d116c76091543,'Small doc fix in kfac loss_functions: `evaluate()` returns *negative* log probabilities.\n\nPiperOrigin-RevId: 179456448'
d9d50b1346827e2ace6686989f6c50f78609285b,'Re-enable adaptive_shared_batch_scheduler_test after potential bugfix.\n\nPiperOrigin-RevId: 179429524'
03fd17915630933211a7784466dbcdfaa3ec7c83,'Fix support for functions to grappler items.\n\nPiperOrigin-RevId: 179429486'
4b056849f8f142ceb9e0472634bea41ac35850b2,'Re-enable adaptive_shared_batch_scheduler_test after potential bugfix.\n\nPiperOrigin-RevId: 179429524'
566df46de272827a20915f0dd470d062a458e78f,'Fix support for functions to grappler items.\n\nPiperOrigin-RevId: 179429486'
13a8558846a1f0a821f3ee1f147fae833b00f088,"""This is a bug fix for multi-replica training. When there is any parameter servers and more than one replica, replicas except the chief replica would complain un-initialized stale_counter variable since it doesn't live in parameter server.\n\nPiperOrigin-RevId: 179421368"""
d2355fcee9f47cc2e8225f8ff54f7c12fa8045f0,"'[XLA] Fix comments on HloInstruction::epsilon() and HloInstruction::feature_index().\n\nThese functions can be called for kBatchNorm{Training,Inference,Grad},\nnot just kBatchNormTraining.\n\nNo functional change.\n\nPiperOrigin-RevId: 179363059'"
6c55eb1c61d645b214cb9deb97d1659001dadf34,"""[XLA] Fix bugs and improve error messages in tuple comparisons in literal_test_util.\n\n * Fix bug where EqualsTuple() only compared the first tuple element (!).\n * Compare all tuple elements, even when the first one fails.\n * Print out which tuple element we're looking at when we get a\n   mismatch.\n\nPiperOrigin-RevId: 179348614"""
fc2526a8c1cf0bc2a93c8cc819ff7209eb4628c9,"'Merged commit includes the following changes:\n179277894  by gunan:\n\n    Run buildifier on build file.\n\n--\n179275101  by meheff:\n\n    Replace DeviceMemoryBase with ShapedBuffer in XLA interfaces.\n    Executable, TransferManager, and AllocationTracker now use ShapedBuffer to hold device memory addresses holding XLA data. Most of the change is straight-forward with the exception of AllocationTracker which was mostly rewritten (and simplified) and some refactoring in the CPU executable.\n\n    Also, have ShapedBuffer hold on-host and on-device Shapes which are the shapes of the representation of the data on the host and device, respectively. This is necessary because with cl/178624364 the on-host and on-device shape may no longer be equal.\n\n--\n179265385  by A. Unique TensorFlower:\n\n    Return error rather than CHECK fail in Executable::ExecuteOnStreamWrapper\n\n--\n179264551  by dandelion:\n\n    Internal fixes.\n\n--\n\nPiperOrigin-RevId: 179277894'"
aed215d72110269fa4ba513092717a62bbbb0af5,'Fix the CODEOWNERS file syntax (#15411)'
b9e021d07eb92c3f9fa6302224da7ecca66d7545,'Fix lib_strings_str_util_test on Windows'
fdf34a88bec9645473f10ba2d52df4cfcb80d582,'Fix a bug: bfloat16 is unsigned on Windows (#15302)'
0f2f5b978524f3306e415d18701ea64bd2c688b3,'Fix PEP8 (#15378)'
17e725c0558581cba19bd6c409698b2c3f88efe5,'Merge pull request #15313 from rajendraarora16/patch-5\n\nFixing typo'
3a7c03afdfd8d2c51bb3997a4daec01874862e71,'Merge pull request #15333 from taehoonlee/fix_typos\n\nFix typos'
92233820e6256ffb428650e67dc8c6dc4bbc7074,'Fix issues in doc `tf.Placeholder` should be `tf.placeholder` (#15330)\n\nThis fix fixes issues in the doc (data_feeder.py) where\r\n`tf.Placeholder` should be `tf.placeholder`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
e3e2ac9181c42eb82548726d8a250944b56180fd,'Initial SRU Implementation (#13978)\n\n* initial tf sru implementation\r\n\r\n* fix equation\r\n\r\n* Refactor to BasicLSTM like\r\n\r\n* Refactor to BasicLSTM like\r\n\r\n* address comments and explain constraint\r\n\r\n* address pylint concern\r\n\r\n* fix wrong merge'
71d3c8e636efcf0bc3f87ed9888cca71fde8cc8e,"'Add customized kernel implementation for clip_by_value (#13998)\n\nThis fix tries to address the issue raised in 7225 where\r\n`tf.clip_by_value` does not have a custom kernel and reused\r\n`tf.maximum` and `tf.mimimum`. In case scalar values are passed\r\nto `tf.clip_by_value`, unnecessary memory might incur.'"
f2996ec7a1e0e9f4d07637889475681a7432375c,'[tf.contrib.rnn] Fix regression in variable creation in fused LSTM/GRU cells.\n\nPiperOrigin-RevId: 179264398'
32d5048ae96116202f2aa0fa739ef37514ee8a54,"""Average the loss across `replicate_model_fn`'s towers.\n\nThis avoids the need for users to add `loss = loss / num_of_towers` code and is in more in line with the current best practices.\n\nI verified this by running cnn_mnist.\n\nThis has been rolled-back earlier but fixed (Python bug!) now.\n\nPiperOrigin-RevId: 179257316"""
0b80606c4d635250810d5b2c950986f91fe1cfae,"'Load boundaries array into shared memory before hand for `bucketize` (#14774)\n\nThis fix is a follow up to 13922. This fix loads boundaries\r\narray into shared memory before each thread, in order to improve\r\nperformance for `bucketize` op.\r\n\r\nThe fix is based on feedback 13922.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
b87336318894f3dee1f83f17dcbcc33ed56e1d81,'Fix duplicated trisycl_include_dir\n\nA recent botched three-way-merge sync seems to have duplicated (more than once on Github) the set_trisycl_include_dir function. This change removes the duplicates in favor of a cleaned-up variant that I added in another recent change.\n\nPiperOrigin-RevId: 179249451'
b831830334bc7a57cd3052f5e1ce39cb9e16f363,'Add compression support to RecordInput\n\nThis fix tries to fix the request raised in 12344 so that\nit is possible to process RecordInput with compressions.\n\nAn attr of `compression_type` has been added.\n\nAdditional tests have been created to cover the changes.\n\nThis fix fixes 12344.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
908343b5c0f957224ee44512d7ccfc81a8349e2f,'Bump the eigen dependency version. (#15405)\n\nFixes #12052'
6373db931a8444083d12e7ac08d4d62c859a6c64,'Fix reference counts when watching variables (eager tape)\n\nAdds unit test assertions that variables are properly dealloacted once the tape is deleted and there are no remaining Python references.\n\nPiperOrigin-RevId: 179231752'
8d3690c5649fb6dac481e15eda365e73aeaab84a,"'Plug an eager memory leak, add tests for reference counts.\n\nThere are still some slightly less serious leaks. Will follow up with a fix once I track those down.\n\nPiperOrigin-RevId: 179220052'"
4952f981be07b8bf508f8226f83c10cdafa3f0c4,"""Replace loop iteration with `chip` (#15289)\n\nIn unique_op.cc, the ouput tensor was generated\r\nthrough loop iteration. It seems that this could be\r\nimproved through Eigen's `chip`.\r\n\r\nThe fix addresses this improvement.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
c18bb75059a25c4feeed2e075a6772b7813d77a4,"'Add `decode_libsvm` for libsvm format support\n\nThis fix is an effort to add libsvm format support with\nthe implementation of `decode_libsvm`, as was proposed in 14313.\n\nThe implementation is done in contrib with:\n\nThis fix fixes 14313.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
65c108990382ecfdb9a4a8a58f2303096300e5e0,'Fix bfloat16 numerics issues in the tests.\n\nPiperOrigin-RevId: 179207115'
88bec2d66a5a2a9ebca8db9cfa4c7e95e48d2d4f,"'Fix typo of tf.abs docstring\n\nChange ""\'"", which causes incorrect highlight, to ""`""'"
7d2a601fb5c5cb06173ec4fa3737a363fce58f5b,'Fix api usage in examples of gan'
634ed487f078f6d62da9f47a6d7854d6d81b132e,'fix wrong merge'
00f8b97fc601381546aea89315dee549bdbbbdfc,"'Merge pull request #14389 from cthom055/master\n\nForward declare condition_variable, fix for #14388'"
97131568180379d416e3405e55d2e288d0f17d80,'Merge pull request #14399 from PW486/fixed-typos\n\nFixed typos in comments'
c534baccd744740147ace5ec765d02cb8a6c8366,"""Merge branch 'master' into fixed-typos"""
0237257f6ac8021c7e4062f8f0694804a1dcbbef,'Merge pull request #14401 from myungjoo/fix/options\n\nCMake: configure default string values of options properly'
5eccb29930deeccd7199a79539f3c60e3769db30,"""[XLA] Change some dot test cases to be parametric\n\n - Use a generator instead of manually writing out all the test configurations\n\n - Call the tests MatrixDotF32_12_117_7_MajorToMinorFF etc. instead of\n   MatrixDotF32_12_117_7_MinorToMajorFF.  I think this is the correct naming\n   scheme since the T/F denotes whether an operand's dimensions are laid out as\n   major to minor or not.  If this is correct, names like\n   SquareMatrixDotF32MinorToMajorTF are also incorrect and I'll fix those in a\n   separate CL.\n\n - Remove a couple of unnecessary vector-matrix product tests -- we don't need\n   to test with different layouts since the layouts are only used for the\n   GlobalData literals that are passed in as arguments to the computation, and\n   not for the operations in the computation itself.  I suspect this is\n   accidental though -- we probably should be changing the layouts of the\n   computations as well?\n\nPiperOrigin-RevId: 179122732"""
9a6cd47ced30c4c45085131e1369832fdbf2369c,'Fix missing port number in a few places for shape checking.\n\nPiperOrigin-RevId: 179116834'
60bb8e301e175f79c2d6541c5733af40321bc27a,'Fix typo in boston housing dataset loader.\n\nPiperOrigin-RevId: 179086824'
c41b43b920fd9ee188f862e1e35d5ac5852f1747,'Merge pull request #14321 from yongtang/11052017-tf.Constant\n\nFix issue in the `Defun` docs'
b6ece81d39ac852e8e310d9b738d560ca7d21b2b,'Splits _SharedEmbeddingColumn into a separate class and some bug fixes.\n\nPiperOrigin-RevId: 179070001'
f9a173a9fa9a96eb65781b25ce29785c5f46788a,'Merge pull request #15173 from JohanJu/master\n\nFix for #12537'
3d854a744d1236944eb0ecdc172b1825ace565e1,"'[tf.data] Reimplement `tf.contrib.data.get_single_element()` as an async op.\n\nThe current `ToSingleElementOp` kernel has a synchronous\nimplementation, and yet it can block an inter-op threadpool thread (in\n`iterator->GetNext()`) while depending on another (e.g. if the\niterator calls a TensorFlow function to produce an element). This can\nlead to deadlock if the number of inter-op threadpool threads is less\nthan or equal to the number of concurrent activations of that\nkernel. This change fixes that deadlock by moving the blocking\ncomputation onto a background thread.\n\nPiperOrigin-RevId: 179067816'"
ebca7dc035a2ba2a78914851d381d065b8b8f449,"'Minor fixes for ""Linear"" tutorial\n\nPiperOrigin-RevId: 179061248'"
ae0b6e6ed7179412434c4f484a13b1ecb42af610,'.base_dtype when inferring dtypes of layers\n\nFixes #15262\n\nPiperOrigin-RevId: 179059001'
bfaa55b4bf8a1734d76b85243211f32302ca9957,"""Fix broken image link in TensorFlow Lite's Docs\n\nI fixed the link of image in the same way as other documents in [tensorflow/tensorflow/docs_src/](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/docs_src)."""
d9769ce6410c2d95f371941855c46a0b2c461c0e,'Fix syntax error I introduced when re-applying my merge fix.'
ed0e2508183ce1bdc1b06cbb752f6a8ed9af99e4,'Bugfix in variable naming of GRUBlockCell.\n\nPiperOrigin-RevId: 178995589'
b8831d34a24b10a84c711362ae810e5faf3f27ae,'Minor fix on degenerative case.\n\nPiperOrigin-RevId: 178989673'
e2e15df4175a3c13aa550b17bad4bb5d92185e7e,'[XLA] Update parser to handle conditional. Also fix the stringification of\nconditional HloInstruction.\n\nPiperOrigin-RevId: 178966782'
d80d6de2890112f0013ffede31767907ec3291ca,"'Fix bfloat16 serialization of Tensors.\n\nPreviously, Python serialization and deserialization used the half_val field of TensorProto, whereas C++ serialization used the int_val field. However, C++ bfloat16 deserialization was always broken, so it was never possible to correctly deserialize a bfloat16 Tensor.\n\nThe only reason serialization worked at all was because of the generic tensor_contents bytes serialization.\n\nPiperOrigin-RevId: 178966536'"
9da6e87662c54d03310fc72fe7efdd2f22b87f85,'Call convert_to_tensor on all inputs to the op for _backprop_call in graph mode\n\nFixes a bug in which EagerTensors were provided as input to an op.\n\nPiperOrigin-RevId: 178957283'
18c864cdae3e5a2d444deac2a2b23e08096ee4e2,'Merge pull request #15163 from lihanchen/AndroidTVUSBCamera\n\nFix problem with camera on Android TV'
dcbf6c972d7b4203735bca04f4d33d575ef7b22b,"'Run HardcodeMinMax graph transformation again after applying\n--default_ranges_{min,max}. The specific issue that this fixes was\nthat with a Concatenation op involving one constant and one\nnon-constant input, the non-constant input got its minmax from\n--default_ranges_{min,max}, but then it was too late for HardcodeMinMax\nto propagate that to the other constant input of this Concatenation.\n\nPiperOrigin-RevId: 178928533'"
c25bf74a3ebb13e4fd8a46022bc4e231edd43869,'Fix link in tensorflow lite readme'
84f01b93f9e55b22c0edaebd4acb9c7be79f4a9c,'Change `NHWC`/`NCHW` to `NWC`/`NCW` for conv1d\n\nWhile working on 13105 I noticed that in the current code\nbase `conv1d` uses `NHWC`/`NCHW` which should really\nbe `NWC`/`NCW`.\n\nThis fix addresses this issue and keep `NHWC`/`NCHW`\ncompatible internally so that users will not be impacted.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
e31f38913d4018c2cee094e05a04833ac96f8b68,"""Fix 'tags' parameter in predictor_factories.load_from_model.\n\ntags was incorrectly being mapped to inputs.\nAdded basic unit tests.\n\nPiperOrigin-RevId: 178916192"""
246d5b95723a275b80f4b803024182b4221b4e43,"""Stream::BlockHostUntilDone now returns Status rather than bool.\n\nThe now-deprecated Stream::BlockHostUntilDoneWithStatus remains, to facilitate a\nmulti-CL renaming transition.  Once all callers have been renamed to\nBlockHostUntilDone, *WithStatus will be removed.\n\nThe StreamExecutor (private) method has also been renamed to BlockHostUntilDone.\nIt's only used by Stream.\n\nThe StreamExecutorInterface method will be renamed in a separate atomic CL.\nIt's harder to perform that transition gradually, and we've already performed an\natomic change previously, so we might as well fix it up in one shot.\n\nPiperOrigin-RevId: 178907807"""
d2185de9703d9a1b98f0e41bcc78ee493639bdaa,'Fix typos'
b7308e3bd69349e9023497948a6bf55d3b0895d9,"'Correctly pass name in layers.util.smart_cond\n\nBefore this change arguments were passed positionally and ""name""\nargument was wrongly mapped to ""strict"" argument of tf.cond instead\nof the itended ""name"". Such a fix could potentially change operation\nnames and cause an error when restoring a graph, but it seems like\nthis particular change is safe for the following reasons.\n\n - smart_cond is not a public API. So users should not be calling it\n directly.\n\n - smart_cond is used in 38 places internally. All of them, except for\n in tf.contrib.summary don\'t use the ""name"" parameter. Such usage leads\n to the same names before and after this change. The names will change\n for users of tf.contrib.summary. Luckily, this is a very recent\n addition and has utility only in context of eager execution, which is\n in pre-alpha stage yet.\n\nBecause this change reroutes the wrong ""name"" -> ""strict"" mapping to\n""name"" -> ""name"", the value of ""strict"" is changing from ""None"" to\n""False"". Luckily, this has no effect on the function\'s behavior.\n\nPiperOrigin-RevId: 178850766'"
618d5c5fad4f70456856625322db104b851a399d,'BUGFIX: MVN Full Covariance:  Use dtype dependent tolerance to verify symmetric.\n\nPiperOrigin-RevId: 178833453'
1c2bcf947f2e192512857887fb1301d13fe332ec,"'Fix bug in kernel creation with functions marked ""stateful"".\n\nThe CallOp kernel caches a handle for invoking the function. This\nhandle is only valid in a single subgraph (it is scoped to the\nFunctionLibraryRuntime). Marking a function as stateful causes its\nCallOp kernel to be shared between multiple subgraphs. Therefore, this\nchange overrides the kernel creation logic to ensure that each\nsubgraph gets its own CallOp.\n\nPiperOrigin-RevId: 178820064'"
9810da1b87aae689cac42bae754e7e4cb5a99d57,"'Adds XLA support for tf.nn.dynamic_rnn\n\nChanges tf.nn.dynamic_rnn to specify `maximum_iterations` argument for the while_loop.\n\nWhen `maximum_iterations` argument is supplied to tf.while_loop, use this to provide an upper bound on the size of Stacks used for gradient computation.\nBy specifying the stack limit we can generate gradient code for while loops that uses fixed shape TensorArrays and hence can be compiled with XLA.\n\nPiperOrigin-RevId: 178802710'"
8693bf519399495cedd91293ec82b492ea401f6f,"'This CL makes two improvements to the `map_and_batch` transformation:\n\n1) It fixes a bug that manifested as `OutOfRange` being returned prematurely.\n\n2) It changes the behavior on sequences of elements whose size is not a multiple of `batch_size`. Previously, the implementation would drop the last small batch (similar to `batch_and_drop_remainder). Newly, the implementation returns the last small batch (similar to `batch`).\n\nPiperOrigin-RevId: 178764508'"
444e319256de3229aef688c39b85689d3e2eab4f,'Fixing typo'
65d23686c6404025d0554960d4cc4eda1bbd3c9d,'Remove real-data shape check in GANEstimator. Fixes github issue #14257.\n\nPiperOrigin-RevId: 178737278'
2a48746874d2043cddb632fe825d88f3da0c185d,'Fix the handling of unknown rank. Previous code would wrongly treat a tensor of unknown\nrank as a scalar.\n\nPiperOrigin-RevId: 178710185'
c210009d0a8d40d458c21b1faf7b1adf8e4deaee,'Includes <cstdio> in the TF Lite kernels/op_macros.h to fix a compile errors\nwhen building externally using either the Makefile or Bazel.  The macros use\nstderr and fprintf which may not be defined depending on the order of\nheaders included by the .cc files.\n\nPiperOrigin-RevId: 178708839'
da9ef31bfe82fad71721b3213891a491628736a0,'Fix the remote call graph construction so that the created _Send ops for returning the results point to the correct return value.\n\nList available workers when the remote call target is not available.\n\nPiperOrigin-RevId: 178687525'
5c0a9452fdbfa621f23af28ccc365de58e40f845,'Fix minor typo in CUDNN_VERSION check\n\nEffectively enables CUDNN_CONVOLUTION_BWD_FILTER_ALGO_WINOGRAD_NONFUSED in\nCudnnSupport::GetConvolveBackwardFilterAlgorithms() for cuDNN v5.1.'
4d1d1a1f2fc76f72903363f59853e346a7aa52aa,"'Fix for variable naming when executing eagerly\n\nname_scope bypassed the Graph.name_scope slash-stripping logic (strip a trailing\nslash if it exists, then add one back unconditionally) when executing eagerly,\nleading to extra slashes at the end of some variable names and a failure to break\nout of nested name scopes.\n\nPiperOrigin-RevId: 178676873'"
f86016ea29911d60643b0b606330ecbc792498d9,'Fix definition of tflite_smartreply\n\nPiperOrigin-RevId: 178675580'
037f036b2c76ef363148276dce83b7dd1d79e878,"""Mark a FunctionDef's signature as stateful when it contains a stateful node.\n\nThis fixes a bug where two calls to the same stateful function will erroneously be eliminated as common subexpressions. It is also a step towards pruning nodes from function bodies, which is necessary for a variety of `Dataset` optimizations.\n\nPiperOrigin-RevId: 178675527"""
a4b68b60985dfb518e748868dd2a316c53e8c413,"'Enable optimizations of operations with neutral/absorbing elements by default. We leave removal of addition and subtraction with zero out for now, since it is used as a ""hack"" to force a copy of a tensor in a few places. Once we have fixed this code, we can enable it.\n\nPiperOrigin-RevId: 178665567'"
b2d9b8f6d10466789f2828933d01101b17576b3e,'Fixed memory_stats_ops_test\n\nAdded explicit dependency to avoid matrix free prior to stats op execution.'
916b0d5cbea02e85e42a7ca677b594351db36547,"'Rename ABSL Macros\n\nThis LSC will rename ABSL macros. Most macro will be renamed with ABSL_ prefix.\nSome might have completely new names. Please see the list of the macros\naffected. For example, MUST_USE_RESULT will be renamed ABSL_MUST_USE_RESULT\n\nThe purpose of this LSC is to avoid name conflicts for the ABSL release. To see\nthe details go/absl-macros.\n\nPiperOrigin-RevId: 178655181'"
1c46590d8b1431805e15e35beb98f24fe0a9dae5,'Fix incorrect parameter order in recall_at_precision.\n\nPiperOrigin-RevId: 178642393'
bcdefca3364577ca9707ba118bddd2eec794558f,"'Fix-ups for XLA docs.\n\n- Fix wording/grammar\n- Remove obsolete ""not implemented"" notes on some ops\n\nPiperOrigin-RevId: 178638405'"
93a652ef5b635ffbd678d3992767c4862bffeb15,"'Add annotations support for tf.estimator.Estimator (#12276)\n\n* Add annotations support for tf.estimator.Estimator\r\nThis fix adds annotations support for tf.estimator.Estimator\r\nso that the following works in python 3:\r\n```\r\nimport tensorflow as tf\r\n\r\ndef model_fn(features: dict, labels: tf.Tensor, mode: str):\r\n    pass\r\n\r\nestimator = tf.estimator.Estimator(model_fn)\r\n```\r\n\r\nThis fix fixes 12249.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update tf_inspect with getfullargspec\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
309f7e29a6f19ac060e9cf5f02e7de0eeac522de,'Fix mismatched argument comments to match parameter names\n\nPiperOrigin-RevId: 178617543'
441571a6e95efa45d473916fe9f78d7dc87169ae,"'Instead of python, use PYTHON_BIN_PATH in pip.sh. (#15248)\n\n* Instead of python, use PYTHON_BIN_PATH in pip.sh.\r\n\r\n* Install virtualenv in py3.6 install script\r\n\r\n* Install virtualenv in all python pip package install scripts.\r\n\r\n* Bash style fix.'"
fd1263fb9b9a81b4c8d7e7922308146b4f57428d,'fixed bug that Dropout support_masking gets reset to False (#14831)\n\n* fixed initial function of dropout'
e17ae378063b46c894a8c193823f029d7d87de81,"'Fix several potential memory leaks (#14816)\n\n* Fix several potential memory leaks\r\n\r\nThis fix fixes several potential memory leaks, mostly\r\ncaused by error return without proper deleting.\r\n\r\nNote: The original issue was raised by @orpillar, thanks!\r\n\r\nThis fix fixes 14800.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
ec57ca65c46a45a24454c6a2d33bcce379d56627,"'Remove `non-fused` version of `adjust_saturation` as GPU kernel already exists (#14794)\n\n* Remove `non-fused` version of `adjust_saturation` as GPU kernel already exists\r\n\r\nIn the existing implementation for `adjust_saturation` the non-fused version\r\nwas still in place. As the non-fused is for non-GPU support of `adjust_saturation`\r\nand GPU kernel already exists now (See commit https://github.com/tensorflow/tensorflow/commit/25c4f279402c3f9516314ee40ee398fc57ffb78e#diff-b53c223158b7c4fd248ef581da6566c2), it makes sense to remove the non-fused version.\r\n\r\nIn addition, with the removal of non-fused implementation of `adjust_saturation`,\r\nnow it is possible to provide batch support (in 4-D instead of previous 3-D).\r\nThis resolves issue raised in 8926.\r\n\r\nThis fix removed non-fused version of `adjust_saturation` and added additional\r\ntest cases for batch support.\r\n\r\nNote: In PR 14187, non-fused version of `adjust_hue` has been removed so\r\nbatch support for `adjust_hue` has been enabled as well. This PR also\r\nadds additional test cases for batch support of `adjust_hue`.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add batch support for `adjust_saturation` and ``adjust_hue``\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update docstring for `random_hue`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
907f135c4b2675d986899230380ad93fcce9c879,'Merge pull request #14927 from lanhin/master\n\nFix a typo in comment'
f0beb65189379b62d12bd751a5cdd0686279f3c4,'Fix typos (#14904)\n\n* fix typos'
e2307e22987b23699bccb708cb0c79480cb9f7f5,'Merge pull request #15249 from ManHyuk/typo\n\nfix typo'
b8e153647e8885e558b47106d7db5fd9d9f988a3,'Fix typo'
0d6e03137d7d0e2ba5f79bdf8ff0b0bebd5029cd,'Merge pull request #15217 from caisq/fix-gpu-virtualenv\n\n[DO NOT MERGE; WIP]: pip.sh: unify the way virtualenv is invoked'
cec0c2ef82630ce92fc3c8cef015083ef4358739,'Merge pull request #15233 from ManHyuk/typo\n\nfix typo'
5a69dcc7c76d06cba323e993ddbaf55b6a3aa9cf,'fix typo'
70644fc0427e77f9a34f538cce5badea2f34b4ae,'fix typo'
dda6d1b9d0621dc76ec779604f566bedfc59b3d2,'[XLA] Hlo parser: support reporting error messages with locations pointed out. And fix the bug that some errors were reported at the token after the actual errors.\n\nPiperOrigin-RevId: 178455738'
74780531e95b0e868403e5806e58a968e4563b13,"'In MovingAverageOptimizer, delegate compute_gradients() to the wrapped optimizer,\nwhich is a bug fix in case the wrapper optimizer (or any other optimizer in the stack)\ndoes something non-standard in its compute_gradients() method.\n\nPiperOrigin-RevId: 178447959'"
1afc6149ed0649971d83fe8e9748056285dcf332,'BUGFIX:  Call convert_to_tensor on input in fill_triangular.  Also change use\nplaceholder_with_default in unit test.\n\nPiperOrigin-RevId: 178417998'
bb4ada759d9731a6591d6e2a10f72d0229c1549e,'[XLA:GPU] Remove the comment that says b/34969189 blocking TruncateNormal.\n\nThe issue has been fixed and the GPU backend now supports atomic operations on\nsmall data types.\n\nPiperOrigin-RevId: 178401552'
ec0f20465e4cac9b45e6bf840c29487911c76d3f,'Fix tf.while_loop with maximum_iterations != None and single loop_var.\n\nPiperOrigin-RevId: 178396322'
29e72226e76b8221800e6bc7154007181d3edef7,"'Misc improvements required for some internal model:\n - handle StopGradient as an Identity node. So far we had refrained from supporting it as a smoking gun for a graph being a training not inference graph, but the resulting friction is proving not worth it at the moment.\n - Relax a couple of conditions that we were fatal-erroring on early (during graph transformations) even as they only were necessary preconditions for much later code (some internal export formats). Erroring early is nice, but the existence of multiple output formats with very diverse requirements makies it unnecessary friction to error early. Here, when the output format is GRAPHVIZ_DOT, we do want to continue in these cases.\n - add some verbose logging in propagate_fixed_sizes.\n\nPiperOrigin-RevId: 178395479'"
3a05c119d8499c3b1e0a3ef6520af3e62738a80c,"'Merge pull request #15195 from rongjiecomputer/wav\n\n[MSVC] Add tensorflow::ops prefix for {Read,Write}File'"
2139d204f038ed944cecf05873a565f7f7d424b2,"""Finishing the migration of the RNN / shared fully-connected layer blocks, and associated changes to LayerCollection.\n\nMoved check_registration function to LayerCollection which is a more natural home for it.\n\nFixed major bug: make_inverse_update_ops was misspelled in FullyConnectedMultiKF meaning that inverses weren't being computed for these factors.\n\nMany other minor tweaks and fixes to code and documentation.\n\nPiperOrigin-RevId: 178372885"""
b43d0f3c98140edfebb8295ea4a4b661e2fc2a85,'Upgrade cuda to 9 and cudnn version to 7. (#14773)\n\n* Upgrade cuda to 9 and cudnn version to 7.\r\n\r\n* Also update XLA build script.\r\n\r\n* Fix typos.\r\n\r\n* Fix botched conflict resolution.\r\n\r\n* Disable transpose_op_test in opensource until the timeouts are fixed.'
43d241193570c28f46a42b8f04a3814162662280,"'[XLA] Fix a issue in ParseShapeString which made the hlo parser fail in parsing bf16 shapes. It used to ignore everything after TUPLE, so the newly added primitive types were not recognized.\n\nAlso support parsing bfloat16 literals.\n\nPiperOrigin-RevId: 178340689'"
1c4f65b335b29a20511733612be6aed30e79b1a5,'Fix a bug in string to number conversion code.\n\nPiperOrigin-RevId: 178337974'
f7d392da2a455ffcc5e410e9c7c0514a5062c218,'Merge pull request #15197 from caisq/nomac-tag\n\nFix tag in source_remote_test: no_mac --> nomac'
28b92cd5a9ed677b5a2148e24d72f49de3768b23,'Fix tag in source_remote_test: no_mac --> nomac'
3edb473d29fb01ef9697cfbc4da73cbe88e90322,'Merge pull request #15191 from miaout17/fix-ios\n\nFix ios_makefile.inc for TFLite iOS demo app'
ea647f76b672781c381a97237a7df473762999d7,'Merge pull request #15194 from yongtang/12072017-doc-typo\n\nFix a typo in estimators.md'
bcae10f5f4f60c48f793b3a928eb9d3c7aa3eb2f,"' fix #15188 replaced isnan with std::isnan to avoid build error  (#15189)\n\n* fix  #15188 replaced isnan with std::isnan to avoid build error\r\n\r\n* Instead of std::isnan, use Eigen::numext::isnan\r\n\r\n* Fix typo'"
7ebe79f21d5f64f0b25c0b75d607f3cb00bb2c45,"""Fix nullptr dereferencing bug in dependency optimizer in VLOG statement.\nDon't run topological sort if it is not needed.\n\nPiperOrigin-RevId: 178315738"""
b463cbaa874c390296fd23e9dac31cadc58211a3,"""Add tensorflow::ops prefix for {Read,Write}File\n\nReadFile and WriteFile collide with the functions in windows.h. Tell MSVC we want Tensorflow's ones."""
6e04085f90c5c0c2a49723cc682b16327c994957,"""Change TraceListener::BlockHostUntilDoneComplete to pass Status* rather than bool.\n\nAlso fix the trace for StreamExecutor::SynchronousMemcpyD2H, which wasn't\nupdating the result correctly.\n\nPiperOrigin-RevId: 178311956"""
7b0458a78922e7694987db2f49d7a74fea8ce2ca,"""BUGFIX:  Ensure that rejected states don't propagate NaN.  Make float64 work.\n\nPiperOrigin-RevId: 178307112"""
364b4c83729480596447088d2ee81353bbc83f08,'Fix a typo in estimators.md\n\nA small typo `similarily` -> `similarly`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
2ea11416c908041958f29a8fa513cf8f107fbe78,'Simplify and fix some bugs in constant folding of neutral/absorbing element optimizations.\n\nPiperOrigin-RevId: 178293088'
9620b2df63854538357bf41f4d9761499e8e573d,'Fix the issue with shared saver on GPU.\n\n`ShardedFilename` and ``MergeV2Checkpoints/checkpoint_prefixes` operations were placed on GPU even though there are no GPU kernels for them.\n\nPiperOrigin-RevId: 178276605'
cdc36a3b1f7d227984bb5e415b555ed334737f82,"'tfdbg: cosmetic fix to MonitoredSession.__del__ AttributeError\n\nPrevoiusly, calling ""del"" on a tf_debug-wrapped MonitoredSession causes a warning message like the following:\nException AttributeError: ""\'MonitoredSession\' object has no attribute \'__del__\'"" in <bound method LocalCLIDebuggerWrapperSessionForTest.__del__ of <__main__.LocalCLIDebuggerWrapperSessionForTest object at 0x558c74f642d0>> ignored\n\nAs the message states, the AttributeError is ignored and doesn\'t cause failures.\n\nThis CL prevents this message by checking that the underlying _sess object has the __del__ method defined before calling it.\n\nFixes: #15105\nPiperOrigin-RevId: 178272619'"
b5c8cd65feb2614e739a83136e3d333b51a6c2f8,"""Fix control flow test to not use session after it's gone out of scope.\n\nThis somehow works currently, but breaks with the C API enabled.\n\nPiperOrigin-RevId: 178268847"""
2cfb088cf72b52c74a742d780cc5c4f93a74640e,'Fix ios_makefile.inc.\n\nIt seems broken when merging change in\nb2db981a6731e978453862a73dab892bc674db68.'
e9020250b50922d0449da44ae5ea7d62ad899b0e,'Merge pull request #15186 from caisq/assert-once-fix\n\nFix assert_called error on Python3'
7acfbc029fe19ecdae73dfe5c4018c4e97ac63dd,'Merge pull request #15078 from musically-ut/fix-inverse-time-decay-docs\n\nDOC: Fix documentation for inverse_time_decay.'
1be692cf1161539fdfa77257cd969a549da8cc97,'Fix assert_called error on Python3\n\nby replacing it with assertTrue(....called)'
5723904ef8402093001a6b90fcf6675258be096b,"""Change path (#14840)\n\n* did't -> didn't\r\n\r\n* typo fixed : thats -> that's\r\n\r\n* typo fixed\r\n\r\n* typo fixed\r\n\r\n* typo fixed\r\n\r\n* typo fixed\r\n\r\n* change path\r\n\r\n* Address comment"""
418079c7fea20bfb8403a34f6742231fddd3dfde,"""typo fixed (#14431)\n\n* did't -> didn't\r\n\r\n* typo fixed : thats -> that's\r\n\r\n* typo fixed\r\n\r\n* typo fixed"""
6c7c8f17405e58d0da97e806db41958e4f65fabc,'Merge pull request #15167 from Androbin/shell\n\nFix some Bash issues'
fbcbabfdfd852ce6ff296cd18d1be89cfd153823,"""Fixes a bug where states with NaN log-densities would always be accepted.\nNow they're always rejected, which should almost always be the desired\nbehavior.\n\nPiperOrigin-RevId: 178192214"""
64c4e8f6c1f2676fbd79b9a88a634424176d7101,"'Add BlockHostUntilDoneWithStatus, which returns Status rather than bool.\n\nAlso fixed a deadlock in Stream::BlockHostUntilDone.  The problem with the\noriginal code was that it grabbed mu_ before looping over substreams, and would\ncall CheckError with mu_ still held.  But CheckError will attempt to lock mu_ in\nthe failure case, which would deadlock.\n\nPiperOrigin-RevId: 178191634'"
85c208df1d63bb5b27eb1faa268a76da05a7e878,"""Merge pull request #15170 from asimshankar/go-test-fix\n\nGo: Don't require -std=c99 for the cgo code."""
20aa9e0a9f129ed929cea1fb45ec12b7be3ac68e,'Add batch support for various image_ops (#14854)\n\n* Change fix_image_flip_shape to create shape based on rank\r\n\r\n* Refactor duplicate code to _EnsureTensorIs4D\r\n\r\n* Convert flip_up_down\r\n\r\n* Temporarily comment out ValueError Check\r\n\r\n* Add batch support for flip_left_right\r\n\r\n* Add batch support for random_flip_left_right\r\n\r\n* Add batch support for random_flip_up_down\r\n\r\n* Add batch support for transpose_image\r\n\r\n* Add batch support for rot90\r\n\r\n* Correct comments\r\n\r\n* Refactor so as not to introduce new method\r\n\r\n* Add tests for batch inputs\r\n\r\n* Fix test to expect 3 or 4 dims\r\n\r\n* Fix misc Pylint issues in image_ops_impl.py\r\n\r\n* Fix misc Pyline issues in image_ops_test.py\r\n\r\n* Refactor into _flip_image\r\n\r\n* Correct Idempotent to Involution\r\n\r\n* Check if >20 images were flipped\r\n\r\n* Reverse condition in rot90\r\n\r\n* Remove duplicate comment\r\n\r\n* Address feedback\r\n\r\n* Punctuation'
bcdcb78854e8dfa1b2eda813b9e2910df522abb4,"""Fix tests in control_flow_ops_test.py to not access Tensor._shape\n\nAccessing _shape directly doesn't work with the C API enabled. Rewrite\nthese tests to use public APIs instead.\n\nPiperOrigin-RevId: 178162875"""
e70d5621fa3d75868a328440d37db2af47a19cd8,"""graphviz improvements:\n - strip 'TensorFlow' prefixes to operator names\n - don't generate workspace allocations in --output_format=GRAPHVIZ_DOT case\n   (can still see them with --dump_graphviz).\n\nPiperOrigin-RevId: 178156346"""
aacf735be6c16bc8831868bd30506baf1668bac9,"""Go: Don't require -std=c99 for the cgo code.\n\nThis should fix the error:\ngithub.com/tensorflow/tensorflow/tensorflow/go/graph.go:31:3: error:\n'for' loop initial declarations are only allowed in C99 mode\n //  for (int i = 0; i < num_shapes; i++) {\n    ^\n\nin some continuous builds like:\nhttps://ci.tensorflow.org/job/tensorflow-master-cpu/3297/consoleFull"""
8d3a25abe96849ca78d40510cd107f8f3bbbc371,"""Update Eigen hash for fix of predux bug (#14770)\n\nFor Maxwell and earlier GPUs, Eigen was incorectly casting fp16 values to\r\nunsigned int during some reductions. This results in incorrect results in\r\nTensorflow's xent and sparse_xent ops when applied to fp16 data."""
278d35832d2175d51b49d83bb40b105acaa930ac,'Bugfix: Cast dtype of log_det_jacobian to match log_prob in TransformedDistribution.\n\nPiperOrigin-RevId: 178151318'
4567c7736cb0d0557ab6ce172dc7c4c140a0614c,'Fixed a few bugs in the dependency optimizer.\n\nPiperOrigin-RevId: 178151202'
932cb708272957b88b8bd61a54647581394724ff,'MKL: Adding Concat op implementation using the open source MKL_DNN (#14458)\n\n* Adding mkl-dnn concat\r\n\r\n* Fixes per PR review'
16fe0561d95043c92669a30a62285f2d122db455,'MKL: Adding Convolution implementation using the open source MKL-DNN Lib (#14470)\n\n* Adding mkl-dnn convolution\r\n\r\n* Fixed style issue\r\n\r\n* removing file\r\n\r\n* Addressing review comments in Convolution code'
88a32faf72b648f3f6f84a649882cc1336567782,'MKL: Adding Batch Normalization implementation using the open source MKL-DNN Lib (#14459)\n\n* adding mkl-dnn batchnorm\r\n\r\n* Fixes per PR review\r\n\r\n* fix per code review suggestions'
db87cffc17d8abb323729b80e94c93f667777b21,'Fix some Bash issues'
c7778898eaf001c82744a8f4c71eb9a880a158f0,'Uniquify names and prefixes in import_graph_def with C API enabled.\n\nThis makes the C API-enabled behavior the same as the current behavior.\n\nPiperOrigin-RevId: 178133381'
a5ac67990437168ce034bdd177b854269803844f,'MKL: Adding Relu implementation using the open source MKL-DNN (#14457)\n\n* Adding mkl-dnn relu code\r\n\r\n* Fixes per PR review'
60af864e46c207d136dd241c0705210ca5a4dbc7,"'[tf.data] Validate that all elements of a batch have the same shape.\n\nFixes #15152. Previously, it would be possible for elements with\ndifferent shapes but the same overall number of elements to be batched\ntogether, which would give unexpected behavior.\n\nPiperOrigin-RevId: 178127613'"
78f199db1c6670b0de8b0a70a42e08ee57eff6d3,'fix link to quickdraw data\n\nPiperOrigin-RevId: 178125503'
3571514ec20d3da04b82abd239a4e5817dbfd5d8,'Improve the Windows Bazel build (#15125)\n\n* Windows build refactor\r\n\r\n* Some fixes\r\n\r\n* Improve py_test macro\r\n\r\n* Remove comments\r\n\r\n* Fix marker file genrule\r\n\r\n* Add md5 check\r\n\r\n* Pass santiy check\r\n\r\n* Still need BAZEL_SH\r\n\r\n* fix pip_smoke_test.py\r\n\r\n* Add comments about pip marker file\r\n\r\n* Fix pip_smoke_test.py again'
ce1eacfc117e9868620f466919996ec755321daa,'summary_image_op_test fixed on ppc64le (#15147)'
d69b292a753de409fb46916e80f87bd999144456,'Fix problem with camera on Android TV'
7ac7aa868406a5d9b03e4101509ac80e011b91c7,'Add version to image retraining setup instructions.\n\nfixes: #12736\nPiperOrigin-RevId: 178105093'
e2a2747dc85154516b08ee49885cfaf00ad2c3c5,'Fix session_list_devices_test\n\nFixes #14711\n\nPiperOrigin-RevId: 178061423'
45fef9265f737521ad2c08bfec0e97cf9fa28783,'Fix typo: SyncReplicaOptimizer -> SyncReplicasOptimizer\n\nPiperOrigin-RevId: 178056514'
fca13de37711720fa7e5fe181f23b1625e0c9d60,'[XLA] Change default argument to explicit 0 for default address space. NFC\n\nThere is a FIXME in llvm::DataLayout::getPointerSize .\n\nPiperOrigin-RevId: 178046949'
c231d2115d5536873fa1f3d93ecaf3b1701c158f,"""Fix broken usage of mutexes in training ops like AdaDelta.\n\nCurrently, if the op is run and returns an error, it doesn't clean up a mutex\nlock at exit; any future access to the underlying parameters will cause\na deadlock.\n\nPiperOrigin-RevId: 178045860"""
d9a71ad0e5723e6e97741d60be106a6658cde4e4,'Fix some build incompatibilities with new versions of Bazel\n\nSee #15137.\n\nPiperOrigin-RevId: 178037461'
af8a5507937108a41781ba117fa16edd3b1091b5,"'Always include the function library when exporting a MetaGraphDef.\n\nPreviously, some code paths through `tf.train.export_meta_graph()` did\nnot ensure that the function library was persisted in the resulting\n`MetaGraphDef`. This would break serialization for meta-graphs that\nincluded `tf.data` pipelines that used functions. This fix ensures\nthat the library is copied to all such meta-graphs.\n\nFixes #15019. Fixes #14143.\n\nPiperOrigin-RevId: 178033103'"
cc7482fd0a0f3a370880a0108f2c980bb808b277,"""Change InputArray.shape from being a repeated int field to being\nan optional embedded message itself containing a repeated int field\n(now called 'dims'). This matches existing shape structurs (both in\nToco internally, and in TensorFlow) and is necessary in order to\ndisambiguate between a 0-dimensional shape and an undefined/unknown\nshape. This is a necessary prerequisite, in particular, for allowing\ntoco to operate without given fixed input shapes, as so far these\nwere impossible to disambiguate from fixed 0-dimensional shapes.\n\nPiperOrigin-RevId: 178027064"""
4b0a23684852fe68ac2248fe2e04e118a6173848,"'Add the tf2xla_supported_ops tool, which dumps ops supported by tf2xla.\n\nAlso fix a TODO in XlaOpRegistry to filter by the types allowed by the OpDef.\n\nAlso see #14798\n\nPiperOrigin-RevId: 177986664'"
e72ecbdb7a84c5cc0801e85a9c38f6fd181ceef6,"""Add ImportGraphDefOptions::uniquify_prefix.\n\nThis option is necessary to mimic the Python import_graph_def method's\nbehavior.\n\nPiperOrigin-RevId: 177986165"""
de06aca02aff5e88d725904fd0738dc8d2b3d462,'Merge pull request #15107 from tkunic/patch-1\n\nFix link to BUILD file in android readme.'
77b60c1ac63d0f188c4108ecb64bbe40004b2b8f,'Simplify code in dependency optimizer.\nChange dependency optimizer to remove isolated NoOps when it is safe.\nFix bug in arithmetic optimizer: Only remove deduped nodes if we know the fetches.\n\nPiperOrigin-RevId: 177970063'
a54bbe6b694c851601a36f179d995c530e798356,'Merge pull request #15123 from bringtree/master\n\nFix typo'
4a408e88ed93df9cbea18f16ab3b6c7dd427ac7c,'fix typo'
c486a9177192f652320d37a5fdf33ab9a3a789f2,'Fix bugs in neutral element code and add more unit tests to cover matmul with input shape != output shape.\n\nPiperOrigin-RevId: 177920882'
2091f50c4a6549256233157f47bfb54023476938,'Treat integer default initializers like floating point ones.\n\nThis fixes subtle problems with partitioned variables.\n\nPiperOrigin-RevId: 177892499'
cfc1de550abdfbc35083d0bd5f7fe84f8897282d,'Fix tf.identity(resource variable) with eager execution and a device\ncopy.\n\nPiperOrigin-RevId: 177891209'
129892420278367aa774400455396e4e4d0734ba,"""Fix bug with uniquified colocation attrs in ImportGraphDef.\n\nThe colocation attrs must be updated after all NodeDefs have been\nprocessed. The nodes are processed and uniquified in topological\norder, which allows us to update the inputs simultaneously due to the\ntopological ordering, but this doesn't work for the colocation groups.\n\nI also considered updating all the NodeDefs with prefixes or unique\nnames at the very beginning, before starting conversion. This would\nmake the logic simpler, but require us to potentially keep a full copy\nof all the NodeDefs in memory (so we could edit them), so I decided to\nedit in-place after construction. We might want to consider this\nalternate in future though.\n\nPiperOrigin-RevId: 177890362"""
aa8b75a1b06b612a3abeaa2f164bc3d5a9eaf5ec,'Fix minor typos in the doc of SpaceToDepth and DepthToSpace.\n\nPiperOrigin-RevId: 177884096'
f5f7b85b3c10da291f23263f0b4f0ac7cffa9059,"""Fix ResourceVariable's docstring example.\n\nPiperOrigin-RevId: 177875589"""
46af7946ea2ca3ff9e8792d344d0eb7a6a90f985,"""Fix edge case with ImportGraphDefOption.uniquify_names = true.\n\nThis change fixes the case where a newly-generated uniquified name\nconflicts with another NodeDef being imported (the original NodeDef\nnames are required to be unique among each other, so this is only an\nissue when we create new names).\n\nNote that this behavior is not well defined in the Python\nimport_graph_def method. It will always generate unique names, but the\nexact naming scheme may depend on the order the NodeDefs are\nimported. I didn't write a corresponding Python unit test or try to\nmake this change produce the same names for this reason.\n\nPiperOrigin-RevId: 177872720"""
6f09a74e31e8953e8ebf870e53e1fdb8ce073fff,"""Fix TFGAN's `clip_weights_test.py` bugs.\n\nPiperOrigin-RevId: 177870577"""
f410adcacc0fe0021abe2fd3958ca0c8597c606e,'Fix link to BUILD file in android readme.'
e96c3643adfc823cff1b59f2164d43ccbbec5edb,"""Sanitize formatting in IdTableWithHashBuckets doc comment.\nFixes list formatting and sanitizes words in angle brackets, which aren't rendered in the web doc:\n\nhttps://www.tensorflow.org/versions/master/api_docs/python/tf/contrib/lookup/IdTableWithHashBuckets\n\nFollows the working formatting example of TextFileInitializer.\n\nPiperOrigin-RevId: 177856349"""
71cd06c608d1cb6fb23f63cf20403b1958965c43,'[TF:XLA] Fix wrong output of FloorDiv op for DT_HALF values.\n\nPiperOrigin-RevId: 177851804'
2d3d5c23a99b92968e9265cb7d872fe4dbf0e7ca,'Fixing wording in truncated_normal as per Github bug request #13686.\n\nPiperOrigin-RevId: 177848994'
a4b8615aef61cfdf1309561d92af4486340a26ef,'fix overpadding in MixtureSameFamily (#14870)'
6e7be32a555a32adaec7093be23606815156f334,'Fix typo (#15094)\n\n* fix typo\r\n\r\n* fix typo\r\n\r\n* fix typo\r\n\r\n* fix typo\r\n\r\n* fix typo'
f1582cf82f06810900ee99870f5d5d3a7478d044,'[CMake] Re-Enable include\n\nIssue #3996 (and referenced tickets) are already fixed.'
4b136d9fc4de0a53c17e336965f8884fd36168a8,'Merge pull request #15097 from JanX2/install-macOS-1\n\nFixing \xe2\x80\x9cactivate the Virtualenv\xe2\x80\x9d'
ba00dc59eb03360d644d7ee9f6d20ba7d7499c0c,'Merge pull request #15083 from secsilm/master\n\nDOC: Fix documentation for dataset.md'
5ad554ac06743410aa66f9e94183922ef63e3d29,'Fixing \xe2\x80\x9cactivate the Virtualenv\xe2\x80\x9d.'
dd788dbbfa544c1ea4768940ac4300c22bb7e88e,"'Fix a BUILD file bug in `tensorflow/contrib/cloud/BUILD` (#15023)\n\nIn `tensorflow/contrib/cloud`, invoking `bigquery_reader_ops_test` will fail.\r\nThe error is caused by the the fact that `bigquery_reader_ops_test`\r\ndepends on "":bigquery_reader_ops_op_lib"" and "":bigquery_reader_ops"".\r\n\r\nHowever, bigquery_reader_ops_test is in python, "":bigquery_reader_ops_op_lib"" and "":bigquery_reader_ops""\r\nare cc libraries. So they shouldn\'t be the dependencies of bigquery_reader_ops_test.\r\n\r\nThis fix removes the above two dependencies so that `bigquery_reader_ops_test` could\r\nrun successfully.\r\n\r\nBelow is the full error message before this PR.\r\n\r\n```\r\nubuntu@ubuntu:~/tensorflow$ bazel test -s --config=opt //tensorflow/contrib/cloud:bigquery_reader_ops_test\r\n..........\r\nWARNING: /home/ubuntu/tensorflow/tensorflow/core/BUILD:1815:1: in includes attribute of cc_library rule //tensorflow/core:framework_headers_lib: \'../../external/nsync/public\' resolves to \'external/nsync/public\' not below the relative path of its package \'tensorflow/core\'. This will be an error in the future. Since this rule was created by the macro \'cc_header_only_library\', the error might have been caused by the macro implementation in /home/ubuntu/tensorflow/tensorflow/tensorflow.bzl:1127:30\r\nERROR: /home/ubuntu/tensorflow/tensorflow/contrib/cloud/BUILD:58:1: in deps attribute of py_test rule //tensorflow/contrib/cloud:bigquery_reader_ops_test: \'//tensorflow/contrib/cloud:bigquery_reader_ops_op_lib\' does not have mandatory providers: \'py\'. Since this rule was created by the macro \'tf_py_test\', the error might have been caused by the macro implementation in /home/ubuntu/tensorflow/tensorflow/tensorflow.bzl:1368:12\r\nERROR: /home/ubuntu/tensorflow/tensorflow/contrib/cloud/BUILD:58:1: in deps attribute of py_test rule //tensorflow/contrib/cloud:bigquery_reader_ops_test: \'//tensorflow/contrib/cloud/kernels:bigquery_reader_ops\' does not have mandatory providers: \'py\'. Since this rule was created by the macro \'tf_py_test\', the error might have been caused by the macro implementation in /home/ubuntu/tensorflow/tensorflow/tensorflow.bzl:1368:12\r\nERROR: Analysis of target \'//tensorflow/contrib/cloud:bigquery_reader_ops_test\' failed; build aborted: Analysis of target \'//tensorflow/contrib/cloud:bigquery_reader_ops_test\' failed; build aborted\r\nINFO: Elapsed time: 10.083s\r\nFAILED: Build did NOT complete successfully (105 packages loaded)\r\nERROR: Couldn\'t start the build. Unable to run tests\r\nubuntu@ubuntu:~/tensorflow$\r\n```\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
22daa9bb307988920c27c4f8232ce9d0144eca84,"'Update docs for `tf.contrib.losses` -> `tf.losses`\n\nThis fix updates the docs in `extend/estimators.md`\nand changes the reference from `tf.contrib.losses`\nto `tf.losses`, as the former has been deprecated.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
cadac9f573a575fd98f43e2172104d64494587f4,'whitespace fix'
581a6a0b1fa4bbbce66cea8ba6f402d97b3ca047,"'Fix whitespace, revert batchnorm test change\n\nbatchnorm test change seems unrelated to this PR, so reverted.'"
440d84579a86964fca80af5c0d8715824a8e660d,'Update AWS C++ SDK to 1.3.15 (#15067)\n\nThis fix tries to address the issue raised in 15066\r\nwhere AWS C++ SDK version was not high enough to support\r\nECS.\r\n\r\nThis fix updates AWS C++ SDK to 1.3.15.\r\n\r\nThis fix fixes 15066.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
73dca81809561d10bc3acf7e90f5a9dc08ad05d1,'Add S3 to the list of implemented file systems in doc (#15080)\n\nThis fix adds S3 to the list of implemented file systems\r\nin doc.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
2013b330b3c8bf79a4fbab7c49b8fef30411b6d0,"'DOC: Fix documentation for dataset.md\n\nThe code `image = tf.decode_jpeg(parsed[""image_data""])` in 738 lines is incorrect. It should be `tf.image.decode_jpeg` instead of `tf.decode_jpeg`.'"
48892001b48d628a00a535d4cc19d9d7b5fcac11,"'Add uint32 and uint64 support for `bitwise_and/or/xor` (#14883)\n\n* Add uint32 and uint64 support for `bitwise_and/or/xor`\r\n\r\nIn `tensorflow/core/ops/bitwise_ops.cc`, uint32 and uint64\r\nhave been enabled for bitwise operations `and/or/xor/left_shift/right_shift`.\r\nHowever, the kernels of `and/or/xor` have no support of uint32\r\nand uint64. This is in comparision to `left_shift/right_shift` which\r\nhave the uint32/uint64 support, and, is tested in `bitwise_ops_test.py`.\r\n\r\nThis fix adds uint32 and uint64 to bitwise `and/or/xor` kernels and\r\nadds relevant test cases in `bitwise_ops_test.py`, to bring `and/or/xor`\r\nas `left_shift/right_shift`.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add uint32 and uint64 support for bitwise_and\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add uint32 and uint64 support for bitwise_or\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add uint32 and uint64 support for bitwise_xor\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Register GPU functor for bitwise_and, bitwise_or, bitwise_xor\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Sanitize with clang-format -i --style=Google\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
7bb11f6a66e50f542d1e29d0dd54eda102972b87,'Fix documentation for inverse_time_decay.'
04e93d09455b1fd849ca0706d7b6825a11a45c5c,'Fix a bug in CreateItem of FunctionLibraryRuntimeImpl.\n\nPiperOrigin-RevId: 177710771'
c9db2486ead95f000395af14919f0ae8f508e429,'Fix typo (#14269)\n\n* Fix typo : specified\r\n\r\n* Fix typo\r\n\r\n* Fix typo\r\n\r\n* Fix typo'
48b31e31cd3c3f5b2d30ea9c30c178d3b017454d,'Document iOS demo app in TF Lite Readme (#15008)\n\n* Add a seciton for iOS camera demo app.\r\n\r\n* Minor format fix.\r\n\r\n* Correction: Project file -> workspace file.\r\n\r\n* Improve the error message when camera fails.\r\n\r\n* Update README.md'
7d82dbb42744a21ff05924e973e57a68465f3347,'Fix a replicate_model_fn_test that is dependent on the number of hardware GPUs.\n\nIt has been causing failures when run on a machine with 4 GPUs.\n\nPiperOrigin-RevId: 177670759'
728896dc77cfe37057400bc5e48795bcd9811e1d,'Fix broken test'
72b4acc3ba121af7680a49b9519d4d4470c6a1f2,"'tfdbg: Add TensorBoardDebugWrapperSession and TensorBoardDebugHook\n\nAlso, relax the requirment on the grpc debug server address argument\nin GprcDebugWrapperSession and GrpcDebugHook. They now accept addresses\nwith or without the ""grpc://"" prefix. As a result,\nTensorBoardDebugWrapperSession and TensorBoardDebugHook accept both\nformats, too.\n\nPiperOrigin-RevId: 177663167'"
4173ac695eb7b41fc1885b08ed52904dbf2278c3,'Bugfix: Initialize template call in `tf.contrib.distributions.bijectors.masked_autoregressive` by first feeding zeros.\n\nPiperOrigin-RevId: 177657607'
1ee6d7ccbcc20ac3051fd69d7377306e49f5b6dd,'Fixing the python 3.6 build error.\n\nPiperOrigin-RevId: 177655994'
232db28aad1d9377965cdd38a9e3d886c8eddc9a,'Fix long stride op issue'
d0ae1064ed0bb4bd1aed00afd4235f4dd5c853f0,"'Prefix inaccurate costs with ""~"" in VirtualScheduler verbose log.\n\nFix some inaccurate estimates exposed by this approach:\n- propagate the inaccuracy flag when merging device stats;\n- estimate Const as no-op;\n- estimate RandomUniform, Relu and Softmax as element-wise;\n- consider estimates accurate for known element-wise ops in op_level_cost_estimator.\n\nPiperOrigin-RevId: 177643976'"
76b3531362775f1f8e0ca18581a1fb6c089831c5,'PeriodicResample Op: Fixes #9369 (clean history) (#14339)\n\n* redoing PR\r\n\r\n* removed periodic_resample from core_kernel\r\n\r\n* added back the missing keras line in CMake build'
1a4d634a04915518788e14a6c96bcff4803e0882,'Fix deprecated function (#15020)'
2c4e8fcf05d3e22b0758a6f63a423b9319f9c19d,'Fix merge conflicts'
0472116d163eeb77d51cabdc5fc67be917048870,"'[TF:XLA] Make tf_cnn_benchmarks run on CPU with XLA.\n\nAdds _cpu_jit to tf_cnn_benchmarks_xla BUILD rule and fixes an issue in XLA bridge triggered by XLA CPU compilation of whole graphs. In particular, modifies mark_for_compilation_pass.cc to skip _Retval nodes when looking for compilation candidates in the top level function. _Retval nodes are introduced in the input subgraph as a replacement for fetches. Including _Retval nodes into XLA clusters confuses encapsulate subgraph pass that expects a graph with no pre-existing _Retval nodes.\n\nPiperOrigin-RevId: 177518178'"
ce4200eae990d7f5efdfb727939d38bf48001ba2,'Fix profiler to track some missed persistent bytes.\n\nPiperOrigin-RevId: 177516249'
6bfc73a0b3c6810725a5eb0020470457cc5cc23e,'Extract out a MathUtil::GCD helper\n\nThis fixes a TODO.\n\nPiperOrigin-RevId: 177508258'
06a5cc4acd377815a0a6bbaac6ea0ab972f1c8fb,'Fix dataset tests broken on HEAD (#15012)'
ceeb930773d2af5c5b594c515988399e0d5bdc9a,'Fix export_test failure (#15011)'
eafa8efc55fb9989a679e36b030742c6d87b0310,"'[XLA:CPU] Add Hlo profiling support to XlaJitCompiledCpuFunction\n\nSome of the functionality has bled into the generic XlaCompiledCpuFunction, but\nthere still remains a fair amount of work to do before the AOT side of things\nstart working.\n\nThis CL also fixes a bug I introduced in a previous CL -- when I changed\nIrEmitter::hlo_to_profile_idx_ to a value, I changed the signature of the\ngenerated function to always have the ""profile_counters"" argument when the AOT\nclient code expects the signature to not have that argument.  In practice this\nwasn\'t an issue for the standard x86 calling convention, but it could easily\nhave been problematic on other architectures and calling conventions.  After this\nchange the mismatch is no longer present.\nPiperOrigin-RevId: 177481998'"
4cc4d5329122f0f97c3804e6f8d27ed4b5874028,"'Fix decode_bmp crash by adding length check before reading the data in buffer (#14967)\n\n* Fix decode_bmp crash by adding length check before reading the data in buffer\r\n\r\nThis fix tries to address the issue raised in 14959 where\r\nthe bmp content length was not checked before reading the buffer.\r\nAs a result, decode_bmp might trigger a crash if the content of bmp\r\nis incomplete.\r\n\r\nThis fix fixes the issue by adding the needed check before\r\nreading the data.\r\n\r\nThis fix fixes 14959.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Sanitize decode_bmp_op.cc with clang-format -i --style=Google\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add additional check to make sure header is safe to access in bmp\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Not require padding (as paddings are not accessed)\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Remove duplicated row_size calculation.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for decoding incomplete bmp\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
b76fad1860740a3f5f9a4dc842197cb7d0446d58,'Merge pull request #14354 from yjmade/master\n\nFix estimator convert from Keras to export_savedmodel() #14284'
1c4810141e71289d71bfd94a74434bd09ee6b20f,"""Hoist function input placeholders out of any control flow context.\n\nPrior to this change, functions that closed over external tensors in a\nwhile loop would cause a segfault at runtime. This is because the\nexternal tensors are temporarily represented as placeholders in the\nfunction body before being replaced by input parameters, and the\nplaceholders would be created directly in the while loop body. This\nwould eventually lead to using the input tensor in the while loop body\nwithout an enter node. This wasn't caught by the runtime check because\nit isn't applied to function bodies.\n\nThis change adds tests for capturing tensors in a while loop body and\nin a cond context. Note that the cond test passed without this fix.\n\nPiperOrigin-RevId: 177464541"""
f5491b8305d056083f090ce90968cc7e7f19d3e1,'fix clip weights tests'
65778d86a898d2aa73038837ab6c589b0a345d76,'Add `AWS_REGION` env for S3 in TensorFlow\n\nThis fix tries to address the issue raised in 14951 where\nthe region can only be specified with non-common `S3_REGION`\nenvironment variables.\n\nThis fix adds the support of `AWS_REGION` which takes precedence\nover `S3_REGION`.\n\nThis fix fixes 14951.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
bc7180f02002788a7b57b36b14ceb7a47d6c76f4,'Fix more clang-tidy warnings:\n\n- Parameter names consistent in function declarations and definitions\n- Class members naming\n\nPiperOrigin-RevId: 177379085'
8a4d84969130162ee001fa52bac51e730129399b,"'Feature Request: C++ gradient for LRN (#13987)\n\n* WIP: added stub method and failing test\r\n\r\n* test with default bias,alpha,beta,depth_radius passes\r\n\r\n* Made changes based on code review\r\n\r\nSwapped out LRN for LRNGrad\r\nrenamed to LRNGradHelper\r\n\r\n* Fixed call to LRNGrad with proper namespace\r\n\r\n* fixed function call to LRNGrad, all tests pass somehow\r\n\r\n* fixed function call to LRNGrad, tests pass\r\n\r\n* minor formatting changes based on clang-format suggestions\r\n\r\n* formatting changes and updated test based on code review\r\n\r\n* trimmed the tensor shape to prevent test timeout'"
495bb7b9f6b55b0e431fc604ad9dbf5415016d90,"""Speed up safe_strtod and safe_strtof functions by using double-conversion library (#12102)\n\n* Add double-conversion library to third_party\r\n\r\nLink: https://github.com/google/double-conversion\r\nVersion: v3.0.0\r\nWith patch (add case insensivity for special values): https://github.com/google/double-conversion/pull/47\r\n\r\n* Strnlen function to str_util.h\r\nReturns the length of the given null-terminated byte string 'str'.\r\nReturns strsz if the null character was not found in the first\r\n'strsz' bytes of 'str'.\r\n\r\n* Use double-conversion lib for safe_strto{d,f} implementation\r\n\r\n* Path for double-conversion library is no longer needed, just use new version of this lib\r\n\r\n* Use more obvious arguments names for Strnlen function\r\n\r\n* Fixed DoubleToBuffer function in case of [full_precision_needed]\r\nuse safe_strtod insetead of raw inplementation\r\n\r\n* add double-conversion compilation in makefile builds\r\n- created compilation script: compile_double_conversion.sh\r\n- added running compile_double_conversion.sh in {build_all_android.sh, build_all_ios.sh, build_all_linux.sh}\r\n- added linking libdouble-conversion.a to build in tensorflow/contrib/makefile/Makefile\r\n\r\n* Build double-conversion directly inside tensorflow/contrib/makefile/Makefile\r\n\r\n* Put double_conversion to the rest of targets including number.* as src\r\n\r\n* Sort external dependencies and make Sanity Checks happy\r\n\r\n* Add test cases with trailing and leading whitespace characters to //tensorflow/core:lib_strings_numbers_test\r\n\r\n* Remove octal numbers support from safe_strtod and safe_strtof\r\n\r\n* Add double-conversion library to the cmake build\r\n\r\n* Prepend lib/ to cmake lib path as per mrry instructions\r\n\r\nSee https://www.github.com/tensorflow/tensorflow/blob/master/tensorflow/contrib/cmake/external/zlib.cmake#L24\r\n\r\n* Add  to double-conversion win32 build output path: fix up windows CMake build"""
ec4d31e82c2237824276eef302d9edc38c28c3a2,"'Half Normal Distribution (and inverse error function) (#14056)\n\n* foldednormal docstring\r\n\r\n* folded __init__ method\r\n\r\n* prob, log_prob methods\r\n\r\n* rewrote halfnormal docstring\r\n\r\n* initial implementation of dist methods\r\n\r\n* halfnormal unit tests\r\n\r\n* registered HalfNormal to contrib.distributions\r\n\r\n* added erfinv function\r\n\r\n* unit tests for erfinv\r\n\r\n* registered erfinv symbol\r\n\r\n* cdf, pdf now deal with x < 0 correctly\r\n\r\n* pylint fixes\r\n\r\n* cuda_py test reference in BUILD\r\n\r\n* erfinv fixes\r\n\r\n* corrections to scipy reference tests\r\n\r\n* Added reference to entropy test case.'"
3bf2f35c7131a0cbea3b05e7aababc23a1cf2d8f,'Update datasets.md (#14941)\n\n* Update datasets.md\r\n\r\nspecifically I change Iterator into tf.data.Iterator\r\n\r\n* Update datasets.md\r\n\r\nI fixed the indentation according to your requesting.'
c0bd9dffccb29d4c01a2a18fc23b0ecad41aa4c6,'[tf.data] Fix compiler warnings about unused captures in lambda expressions.\n\nPiperOrigin-RevId: 177343020'
49059695babc08df22f31124480142e7f6aec5eb,"'Merge pull request #14290 from Mellanox/master\n\nAdding connectivity check, compilation fix and some code refactoring to verbs'"
78a4873cfa4562cf071492636f03e13fcb188bd8,"'Go: Bugfix: Make list-of-shape attributes in an operation work.\n\nBy respecting cgo rules on pointers.\nWithout the change to graph.go, the newly added test would fail with:\n\npanic: runtime error: cgo argument has Go pointer to Go pointer\n\nin the call to the C function TF_SetAttrShapeList.\n\nFixes #14891\n\nPiperOrigin-RevId: 177336663'"
4b7d79b6eaae375559ac32f0c8a8b46cd8825774,'Fix absl flag initialization in cloud_tpu_profiler (#14426)\n\nThis fixes a regression caused by 2652704b576adc16b4d735f651cea1024e88b72e\r\nwhere the command would not run.\r\n\r\nSee also: tensorflow/tensorboard#716'
4c2ca8b0cbfdbdc9f7525b1d9ad0c057cb513749,'Fix typo in GradientTape.persistent_ comment.\n\nPiperOrigin-RevId: 177268420'
05f57851d4657ec6c09a454b157cf17d89d0cfe2,"""Bugfixes: Gather's gradient for 2+ dimensional indices with eager execution.\n\nAnd shape inference function for the VariableShape operation.\n\nPiperOrigin-RevId: 177262783"""
73a803fb854fc842700a865d4742ae893ed236d3,'Fix flakiness in map_dataset_op_test.\n\nPiperOrigin-RevId: 177241314'
a80fd2acf08ceba0c8fc7684c3013e8e7d6bd8d3,'C API: fix bug in ValidateNoCycles().\n\nThis change makes ValidateNoCycles() work when the graph has unused\nnode ids (i.e. when Graph::num_nodes() < Graph::num_node_ids()).\n\nPiperOrigin-RevId: 177234002'
9049b440df17de47baf16d9e24590c3d0761e2c9,'Fix tensorflow-android jcenter link\n\nPiperOrigin-RevId: 177233056'
b8969d12f9260a7b1981b8d22788aa1f8c8cbbb6,'Mark Supervisor deprecated. Please use MonitoredTrainingSession instead.\n\nFixes #6263.\n\nPiperOrigin-RevId: 177230053'
d8de0d979e9b9dacb20ebf425d54bbc98ed65fad,'Fixing the windows nightly build.\n\nPiperOrigin-RevId: 177228112'
9c7fd28542b37e7980f2b0a155996cc1703bd0d7,"'Allow unsorted_segment_sum and unsorted_segment_max to take int64 num_segments\n\nPreviously this argument could only be an int32. It can now be int32 or int64, defaulting to int32.\n\nThis fixes bugs that can occur when calling _IndexedSlicesToTensor with int64 arguments.\n\nPiperOrigin-RevId: 177204464'"
ba87a8030aa30f24c354cf705e79734658bb0a8b,'Eager: Better errors for invalid options to enable_eager_execution.\n\nFixes #14739\n\nPiperOrigin-RevId: 177198861'
83d53f79c396e85e3875af7cd7ea66c691444d1c,'Fix merge conflicts'
b262375fa67d82d84e8cf9304c4c4d63411a0bc3,"'Fixed two bugs when importing MetaGraphDefs that contain ResourceVariables.\n\n1) In the ResourceVariable implementation, pass import_scope when creating the SaveSliceInfo. This is present in the implementation of plain variables, and was likely a copy-and-paste omission.\n2) When importing a MetaGraphDef, restoring the GLOBAL_VARIABLES and TRAINABLE_VARIABLES collections will add ops to the graph for ResourceVariables. Made graph construction deterministic by fixing the order in which collections are restored.\n\nPiperOrigin-RevId: 177144138'"
e02be0161393d255d8e1ade54c2a885b9695beab,'Fix the flaky file_block_cache_test.\n\nPiperOrigin-RevId: 177106823'
446f8fd6e93199838c087b6320cbb9aa7834fd53,"'Fixed code for Adadelta to match correct algorithm and tightened tolerances in\ntest to catch this problem in the future.  The previous code was incorrect\nbecause it did not account for the lazy evaluation caused by ""update"" being\ndeclared as ""const auto"" (and thus using the current value of ""accum_update_""\nat each point where it was used in the code).\n\nPiperOrigin-RevId: 177101858'"
148f157bb89d33db123c9519e94c2781ca3488c9,"'Fix docs to recommend cuDNN 6.0, rather than the old 5.1 or non-existent 6.1.\n\nAlso see #14805\n\nPiperOrigin-RevId: 177097162'"
98ac3f5b7b3942eb0ede7cae1b1afab717b3090a,"'Refactor code in arithmetic and dependency optimizers\n  - get rid of duplicated code for node creation,\n  - make the optimized graph, the NodeMap and FrameMap data members\n  - misc. minor simplifications.\nFix a few bugs in NodeMap: Make sure we strip port numbers off inputs before using them as keys to outputs_ or nodes_.\n\nPiperOrigin-RevId: 177093144'"
2be93d0d543591ebee31bcddfa4b9c6c53e5c793,'Fixes punctuation in tf.nn.moments comment\n\nPiperOrigin-RevId: 177085447'
c159fbe82abb7817b9e556c3607af2efe30206da,"""TFLite: get closer to build with Bazel on Windows (#14791)\n\nBazel cannot yet build TensorFlow Lite on Windows,\r\nbut this commit gets us closer.\r\n\r\nIn this commit:\r\n- make the -Wno-implicit-fallthrough compiler flag\r\n  in flatbuffers' BUILD file be conditional to\r\n  non-Windows builds, because MSVC doesn't know\r\n  this flag\r\n- fix the Bazel build command in README.md by\r\n  removing single quotes around --cxxflags,\r\n  because it's not needed on Bash and is harmful\r\n  on Windows (because cmd.exe doesn't remove the\r\n  single quotes)\r\n- fix non-ASCII quotes and apostrophes, as well as\r\n  some formatting issues in README.md\r\n\r\nSee https://github.com/bazelbuild/bazel/issues/4148"""
2110de0059a139ed5f4dd15c3e79102cceecad74,'Fix ASAN failure in tests\n\nRELNOTES: None\nPiperOrigin-RevId: 177064374'
58970731ba6d899c827ab1ce5c853d9ac8ae1414,'Comment typo fix.'
a264269f523467ac018708a647eab02c1f1010fe,'Fixed a minor typo in FisherEstimator docstring.\n\nPiperOrigin-RevId: 176999852'
22b011885def468471d5f9e1d544a187e672a76b,'Correctly use IsDiscardableArray in RemoveUnusedOp\n(fixes edge cases where an op is only affecting e.g. a RNN state\nand should not be treated as unused)\n\nPiperOrigin-RevId: 176784216'
fc0b63edc0116f2df9847e3083247a4613bc0f26,'Clean up RemoveTrivialPassthroughOp and fix an issue in an edge case\nwhere we were not erasing the correct arrays.\n\nPiperOrigin-RevId: 176784020'
34a69568752ef8badbe6aab5d1f568821c19e19c,'Fix flaky test.\n\nPiperOrigin-RevId: 176725659'
07c81f4f3699d255faa88ddbe50b731223090ba1,'Fix core:api test'
1913d96f20e6d9650f4841a3a17daf83fa3a45bb,'Fix math_ops.py'
21040b72a38f9a7ff0c3fd6cafebbacc5286b596,"""Update Custom Op instructions to use tf.sysconfg flags (#14307)\n\n* Update test_user_ops.sh to use new tf.sysconfig APIs\r\n\r\n* Fix the test\r\n\r\n* Modify the test to not use 'eval'\r\n\r\n* Update docs on the website\r\n\r\n* Update log message"""
8752c973150df64374f96d516aafa664de410dce,"'Fix functionality in crf_sequence_score(), crf_log_norm(), and crf_decode() for when input has max_seq_len = 1.  This can happen in single-example inference.\n\nPiperOrigin-RevId: 176688502'"
b0dbca111c80bdd8f1a2c28afc24d597cb1eac89,"'Fixes to windows builds. (#14803)\n\n* Fixes to windows builds.\r\n\r\n-Disable failing data_utils_test in cmake and bazel builds.\r\n-Disable session_partial_run_test in bazel build. It is already not\r\nrunning under cmake build.\r\n-Increase cmake build log verbosity, as we still canot see the root\r\ncause of failures.\r\n\r\n* Use unix style path dividers in cmake files.'"
93023ee2f88cfdc019b76f6d06c679354820d150,"""Fix nccl.BUILD on Windows (#14790)\n\nBazel doesn't allow a random file name in `linkopts` attribute, so use `-DEFAULTLIB:` option to specify `ws2_32.lib`"""
1a376869bdb5b18fcfb50ee2c392380d60f1896e,'dynamic_rnn now supports TensorArray in the cell state.\n\nThis enables using seq2seq.AttentionWrapper with alignment_history=True in dynamic_rnn.\n\nAlso fixed some minor documentation issues.\n\nPiperOrigin-RevId: 176664362'
a235f23d5babcffa05b6d190c3e1a8909afb5273,"""Roll forward new copy insertion pass.\n\nOriginal cl: cl/174423881, rollback cl: cl/174505237.\n\nThis roll forward includes the following changes from the original to address various issues uncovered with the rollback:\n\n(1) A fix for a problem with fusion instruction serialization was broken out and submitted separately (cl/176035108).\n\n(2) A dataflow analysis fix was broken out and submitted separately (cl/176035108)\n\n(3) Adding RunBenchmarks to our unit test main was broken out. Fix for uncovered segv in while_test_cpu benchmark in pending cl/176068232.\n\n(4) Moved a cpu-specific copy-insertion pass into it's own file, and added tests.\n\n(5) Renamed gpu/copy_insertion.* to gpu/gpu_copy_insertion.* to match cpu side.\n\nPiperOrigin-RevId: 176658339"""
9f05fc47fc13c4f0b8dfb227e9687eb647dc740f,'Fix object_detection and skip_thoughts links\n\nPiperOrigin-RevId: 176650384'
d0a3b2d3983b970b750329088013dc5cb67d96f9,'Merged commit includes the following changes:\n176617057  by yifeif:\n\n    Internal change.\n\n--\n176615737  by yifeif:\n\n    Fix internal tests.\n\n--\n\nPiperOrigin-RevId: 176617057'
fc34cf3a4a7fb946ea0e15d33dfe05f042db7f9f,'Fix docstring of variable_scope() (#14707)'
6e3e1d317a5d157da7773d35cb18c23892d931e4,'fix misspellings (#14702)'
4816a8c641e55253ec95767e08440dffe0c65bb9,"'Fixing download_dependencies.sh bugs for generating TFLite iOS exmaples (#14734)\n\n* Fix: Can\'t build TFLite after running download_dependencies.sh.\r\n\r\nRoot cause: The script downloads files for building TFLite for iOS\r\nexample. It writes to `downloads/` directory and conflicts with the\r\nvisibility rule ""**/*"" in BUILD\r\n\r\n* Retain lite/examples/ios/camera/data directory in git.\r\n\r\n* Fix some bugs in download_dependencies.sh\r\n\r\n* Handle both the cases that the zip file has nested directories\r\n  or not.\r\n* Always use `curl` since `wget` sometimes has certificate problem\r\n  in some Mac machines.'"
7f88363810e77a39db919fb4000583ad0138e53c,'Fix an integer overflow problem in PropagateShapes.\n\nPiperOrigin-RevId: 176601510'
88fe67d1432124cb74df8318603e4a82e3763fb3,'Make FlapMapDataset saveable.\nAdd test to verify restoring iterator in an empty graph works to the testing base class.\nFix a bug in GraphDefBuilderWrapper::AddFunction where we were not adding functions referenced by the attrs of the NodeDefs in the FunctionDef. FlatMapDatasetSerializationTest.testMapThenFlatMap makes sure this works now.\n\nPiperOrigin-RevId: 176582131'
6c0dd242e76f494dbab42b5b7621d2513168c5bb,"'Fix a non-critical problem in TFLite README\n\nCurrently it uses `bazel build` to build non-optimized binary,\nthen `bazel run` to build and run optimized binary. It doubles\nthe required build time to try Toco converter.\n\nPiperOrigin-RevId: 176581770'"
c655e8a7d0fc9414d44b6d1f755985e01110884d,'Merge pull request #14767 from millskyle/patch-2\n\nFixed typo in usage docstring'
89449ee332974650f39b5cee468ee20a53f8ef33,'Fix error messages in ops.register_dense_tensor_like_type().\n\nPiperOrigin-RevId: 176543190'
0d4b94b7eddfff07f3a722ec2747568894256428,'Fix bug in WhileLoopContext.\n\nPiperOrigin-RevId: 176540820'
0b437ada0654820e21f81bd415f691251408346a,'Merge pull request #14760 from scotthuang1989/fix_slim_doc_error\n\nfix: tf.contrib.slim.nets.vgg will not work'
f282ad32cf4bd2cba873ab2ebbc98cc1a7329a7f,'Fixed typo in usage docstring\n\nChanged tf.SyncReplicasOptimizer to tf.train.SyncReplicasOptimizer.'
893fb86ab81503f2b608e700874c76f83a4b07a7,'Fix flatbuffers workspace.bzl definition to work when TF is imported as a submodule.\n\nPiperOrigin-RevId: 176527761'
745eb9242d3b3b8e860abce018c74444a02e0926,"""Fix tests that prevent enabling the dependency optimizer in grappler.\n  - Most of these use constant inputs that cause the new optimizer to turn various backprop nodes into NoOps because their outputs are not consumed.\n\nImprove or fix a few issues in the dependency optimizer:\n  - Prune duplicate control inputs. Don't add new control inputs if the target already has the source as a regular input.\n  - Don't turn Merge, Switch, Enter, Exit, NextIteration, _TPUExecute or _TPUCompile nodes into NoOps.\n  - Don't call ConstantFolding::AddControlDependency() when re-routing, since the nodes\n    in questions already have control inputs, so cannot be Switch nodes.\n  - Don't clear inputs from NoOps unless we know the fetch nodes.\n\nPiperOrigin-RevId: 176523299"""
044cb401046401b7956234b31ecdafe4d86cc6d9,'fix: import error'
8fc41bbabcc041460cf3a123f0595ea0df6bc30f,'Fix potential use-after-move in `RecvOp`.\n\nNote that has not been a problem in practice because the callback\nwould only be used-after-move in an error condition\n(`Rendezvous::ParseKey()` failing) that would only occur if a\nmalformed graph was fed to a TensorFlow server.\n\nPiperOrigin-RevId: 176434460'
ab00df9b0b74910ca738e6ee850982f62ad42e55,"""Fix all tests under python/keras on windows (#14439)\n\n* Add keras tests to cmake build.\r\n\r\n* Make sure to close all file handles before cleanup in models_test.\r\n\r\n* Try to fix callbacks_test failures on windows.\r\n\r\n* Add a destructor for io_utils.HDF5Matrix class.\r\n\r\n* Clear the FileWriterCache before deleting test folders in estiamator_test.\r\n\r\n* Actually enable keras tests this time.\r\n\r\n* Fix typo in models_test\r\n\r\n* Make sure writer cache is clear before trying to delete files.\r\n\r\n* Disable failing test cases on windows in data_utils_test.\r\n\r\n* Disable failing test case on windows in training_test.\r\n\r\n* Make sure the file writer is closed in callbacks_test.\r\n\r\n* Remove the unused positional arg for on_train_end for Tensorboard callback.\r\n\r\n* Skip empty rows in test_stop_training_csv.\r\n\r\n* Skip tests that use use_multiprocessing=True on windows.\r\n\r\n* Address review comments.\r\n\r\n* Fix typo in callbacks_test.py.\r\n\r\n* Update TensorBoard callback API to be consistent with the other callbacks.\r\n\r\n* Revert callbacks_test to skip empty lines.\r\n\r\nOpening with 'rU' does not seem to work.\r\n\r\n* Add keras tests to cmake build.\r\n\r\n* Make sure to close all file handles before cleanup in models_test.\r\n\r\n* Try to fix callbacks_test failures on windows.\r\n\r\n* Add a destructor for io_utils.HDF5Matrix class.\r\n\r\n* Clear the FileWriterCache before deleting test folders in estiamator_test.\r\n\r\n* Actually enable keras tests this time.\r\n\r\n* Fix typo in models_test\r\n\r\n* Make sure writer cache is clear before trying to delete files.\r\n\r\n* Disable failing test cases on windows in data_utils_test.\r\n\r\n* Disable failing test case on windows in training_test.\r\n\r\n* Make sure the file writer is closed in callbacks_test.\r\n\r\n* Remove the unused positional arg for on_train_end for Tensorboard callback.\r\n\r\n* Skip empty rows in test_stop_training_csv.\r\n\r\n* Skip tests that use use_multiprocessing=True on windows.\r\n\r\n* Address review comments.\r\n\r\n* Fix typo in callbacks_test.py.\r\n\r\n* Update TensorBoard callback API to be consistent with the other callbacks.\r\n\r\n* Revert callbacks_test to skip empty lines.\r\n\r\nOpening with 'rU' does not seem to work."""
5439c1e2de01a8684b62aba224d44c392176ac32,"'Remove nonfunctional and accidentally pessimizing value category casts.\n\nThe conditional expression only has ONE fixed value category. Because in the code as written the two operands are of different value categories, the result is in fact a prvalue, i.e. a copy. This seems unintended, and we should simply preserve the existing lvalue.\n\nIf we do want to allow moving, we need multiple statements:\n\n    if (num == 1) {\n      f(std::move(copier));\n    } else {\n      f(copier);\n    }\n\nPiperOrigin-RevId: 176414503'"
4a423d13c6814ede1941e35c7cdcdc21ca13e8ef,"""[XLA:CPU] Handle convolutions with no spatial dims.\n\nFixes two bugs:\n\n a) In ir_emitter, we'd dereference a null pointer if we had a conv with\n    no spacial dims.\n b) In conv-canonicalization, we incorrectly assumed that the input\n    permutation was equal to the output permutation.  This isn't true if\n    the output batch/feature dims don't match the input batch/feature\n    dims.\n\nThe testcase for (a) has to run with conv-canonicalization disabled,\nbecause otherwise we canonicalize the conv to an eigen conv, which\ndoesn't hit the bug in the ir_emitter.\n\nWhile we're here, we also add additional logging to a relevant CHECK in\nHloInstruction.\n\nPiperOrigin-RevId: 176404070"""
0931164a60c5c9b0c0054c6051ed9387e28f8404,'Fix typo (#14435)\n\n* FIx typo\r\n\r\n* Fix typo'
09e0e117ef04d3ad3d654dc242b8e2817b6a79c9,'Fix build issue with TensorShape constructor (#14649)'
1d97fe0abdf2279f3f9187e279646732f2264940,'fix bug in c_api TF_GraphSetTensorShape to be able to handle unknown shapes as per the documentation.\n\nPiperOrigin-RevId: 176399293'
b3b95253f6c4dcdff24cf32dd7c9910401498b89,'Fix issues in replicate_model_fn_test.\n\nPiperOrigin-RevId: 176280861'
80e7c9f45c7911b97c1da92d0a40063f9d2ae50c,"'Fix pip package tests. (#14685)\n\n* Disable contrib/summary tests from pip runs.\r\n\r\nThey depend on a testonly package, so they break pip test runs for\r\nnightly and releases.\r\n\r\n* Disable reader_ops_test from pip tests.\r\n\r\nIt depends on a testonly module, which breaks nightly and release tests.\r\n\r\n* Instead of disabling tests, merge test_internal package into test_util.\r\n\r\n* Add import for sqlite3 to summary_test_util.\r\n\r\n* Add functools import to summary_test_util.'"
ee26ea9ffde6773863badc00001342a368fae39a,"""Fix use-after-free error in summary_db_writer.cc\n\nBindBlobUnsafe() requires that its second argument's lifetime\nlast at least until the next call to Reset() or Close().\nSo that can't be used with a local variable in BindProto().\nThis CL fixes this by using BindBlob() rather than BindBlobUnsafe().\n\nPiperOrigin-RevId: 176180007"""
69620e12bf3403a11a47b26006ebb22656a9f036,'Fix up link to ios.md in docs. (#14640)'
c59b194370d626d41263dc616ccf5e453078e195,'typo fixed (#14660)'
9f1772a2fd989bf511743ad652e8eac395054079,"'[XLA] Change array_elementwise_ops_test to test against the HLO\nevaluator instead of hand computed values.\n\nHLO Evaluator Fixes:\n1. Use Bitwise Not instead of Logical Not for integral types.\n2. Use Bitwise And instead of Logical And for integral types.\n3. Use Bitwise Or  instead of Logical Or  for integral types.\n4. Implement Cos.\n5. Implement Sin.\n6. Add disabled test for special broadcast rules for Clamp.\n7. Negate signed values by casting to unsigned, because there are platforms where negating MIN_INT is a runtime error and adding one to MAX_UINT is undefined.\n8. Multiply signed values by casting to unsigned, because there are platforms where signed overflow is undefined.\n\nPiperOrigin-RevId: 176168969'"
d9a1d5d17029c84c99af5383d9b2a0a02985fd20,'Fix parameter pack expansion in ptr_util. (#14674)\n\n* Fix parameter pack expansion in ptr_util.\r\n\r\n* Explicitly pick xla::MakeUnique to call in XLA code.'
6610eb74981ffcbaaba6befc241ad6d34aded81e,'tfdbg: fix missing space in grpc error message\n\nPiperOrigin-RevId: 176159019'
204e88b8387b9bc95a72981548bd4b14c1bb17d7,"""Fixed bug in code within programmer's guide markdown docs for Variables. Had a call to {var}.run() method, but Variable instances have no run() method, switched to eval() instead."""
d79dd4993061670c1ec5ea01db3022f28d72d0a3,"'Fix shutdown race in ClusterSpec propagation.\n\nPreviously, the DeregisterGraph and DeleteWorkerSession RPCs could\nrace against each other, leading to undefined behavior. This change\ninhibits the unnecessary DeregisterGraph RPCs when DeleteWorkerSession\nis being used, which both fixes the race and cuts down on unnecessary\nnetwork traffic on the Session::Close path.\n\nPiperOrigin-RevId: 176155626'"
e4f2018c54f77f10005e664d87d8152bbde35c74,'Fixed incorrect documentation in tf.contrib.nn.deprecated_flipped_sparse_softmax_cross_entropy_with_logits where it referenced labels rather than logits. (#14485)'
bf1683fda6541d20349befbce62af3c0a55d1d9c,'fix assert_shallow_structure for dicts (#14499)\n\n* fix assert_shallow_structure for dicts\r\n\r\n* fix assert_shallow_structure for dict in util.nest\r\n\r\n* fix wrong NestTest (wrong key)'
62a890504620a10abac12d893c6878213469a648,'Fix typos (#14516)'
11eefcd21f9f3d92740cb85d9576198507eeb118,'fix broken section links in the document (#14524)'
8020abcc5ef691e2a19a0249981210d433047c19,'Fix the wrong ValurError formatting in convolutional.py (#14551)'
3e53570d3bf518ec2b6cfeed4b5fd57d11370289,'fix #14542 a bug of model_to_dot() (#14553)'
e37904e4545d2c14b8d03698e486c9e170c1211a,'Move ptr_util to core/util. (#14647)\n\n* Move ptr_util to core/util.\r\n\r\nBreak the dependency of core onto XLA.\r\n\r\n* Reformat build file.\r\n\r\n* Fix the include directive.'
34d4986e661b8d45f7cec2a717c401c65f0a242f,'Fix the numbering of the LSTM layers in the figure.\n\nPiperOrigin-RevId: 176126886'
30a7d27b1f5427eeb74915255b63d408d60b94a1,'Fix nopip build tag typo in contrib/predictor:test_export_dir.\n\nPiperOrigin-RevId: 176011110'
9700f7f716be8c4650a5dbdb48d510327fb2336e,'Fixed typo in comment.\n\nPiperOrigin-RevId: 175988884'
7e2bac6b8d75b810493415f0b06c8d9408f7858c,'Fix ci_parameterized_build.sh'
42cf0e045ced26734aa20c4de8d6a0b9e73f15c5,"""[Speech commands] Add `num_classes=label_count` when constructing the confusion matrix (#14600)\n\nThis seems like it should fix an issue where you get unlucky, the batch doesn't contain the largest label, and the returned matrix is smaller than other runs."""
d43d00be13ff271eb8a2e6a14eb7ac01a51934ff,'Renaming and comment fix\n\nSigned-off-by: dariavel <daria@mellanox.com>'
fa15669fefdbe7e9a26ac2dd00bc7ce469ca60e1,'Rename HloToProfileIndex to HloProfileIndexMap\n\nAlso fix a typo in a nearby comment.\n\nPiperOrigin-RevId: 175915436'
2efb07ffe5d1f12a4eaef3d673f11615a8ddd6e5,'Fix a bug when printing fusion_kind in hlo_graph_dumper.\n\nPiperOrigin-RevId: 175915347'
d8af56e3b4cd0ac5096e32c3eee2d2cfb4d4137d,"'Fix data race in tensorflow/core/kernels/map_stage_op.cc, and use tf locking/formatting  conventions.\n\n- Fix data race in which a routine mysteriously releases a lock which was held when\n  it was called, and which the caller expects will still be held afterwards.(!)\n  See the changes to the routines notify_inserters_if_bounded() and notify_removers().\n\n  The data race was in put() on current_bytes_ near the end, after the call to\n  put_complete().  put_complete() calls notify_removers(), which released the\n  lock, thus causing the race.  Any reader of the code would have expected that\n  the lock would have been held at that point, but it wasn\'t.\n\n  The same pattern in notify_inserters_if_bounded() didn\'t cause a race in the\n  current code, but is a pitfall for future maintainers, who would not mornally\n  expect something called notify_inserters_if_bounded() to mean ""and in some\n  circumstances, unlock"".\n\n  Even in the absense of this bug, and the weird, uncommented spec for those\n  routines, it is almost always a bad idea to release the lock before calling a\n  condition-variable wakeup.  First, it complicates the code, and makes\n  it hard to reason about object deletion if the deletion is predicated by one\n  of the signalled conditions.  Second, it\'s an _unnecessary_ complication:  a\n  well-written condition variable implementation will requeue the woken\n  thread(s) on the mutex queue, so the expensive part of the wakeup will be\n  deferred until the waking thread unlocks anyway.\n\n- Avoid the C++11 unique_lock mechanism that allowed the bug to happen,\n  and instead use tensorflow::mutex, tensorflow::mutex_lock, and\n  tensorflow::condition_variable.\n\n- Use while-loops instead of lambdas for condition-variable waits, because\n  while-loops are much easier to read.\n\n- Fix the routines would_exceed_memory_limit() and is_capacity_full() to\n  include their own validity check, so it\'s not needed at each of their call\n  sites.  This improves the readability at the call sites.\n\n- Use annotalysis locking annotations so that other violations can be found\n  statically by the compiler.\n\n- Reformat with clang-format.\n\nPiperOrigin-RevId: 175913085'"
c0662f1620c2b97abb79b8ae6a8a30f7c7719475,'Fix the mac build (#14602)'
7d126c49aea63a283386cd73d04ab1bed5eae2f0,"""Refactor Operation.__init__ to create some state after creating _c_op\n\nThis change moves around the Operation.__init__ logic to create the\nTF_Operation before initializing _outputs and before adding the op to\nthe control flow context (if any). This is in preparation for creating\nOperation objects around TF_Operations indirectly created by the C API\n(e.g. ops created by TF_ImportGraphDef).\n\nThis also disables running HessianTest with the C API enabled, since\nit's broken for now (but will be fixed soon).\n\nPiperOrigin-RevId: 175910443"""
05fe77d24a22f7f43362f94ebe1949e58f014e00,'Fix MarkDown formatting of code block.\n\nPiperOrigin-RevId: 175908614'
c91d870d44a1766f60444addfe1f1c7bfb5ae5d3,'Fix strides format for data format in contrib.layers.separable convolution2d (#12273)\n\n* Strides must change form if data format is switched\r\n\r\n* Fixed stride mismatch on channels first data format for separable conv\r\n\r\n* Fixed sepconv2d test and added stride testing'
77652ffc8a8433e79a3d675a0f13f574f62328c6,'Fix a build error in windows debug build (#14404)\n\nRequired by std::_Debug_range<_FwdIt> in std::lower_bound function.'
4634ee62ed5628ac8a1962f9172907f4b7289710,"""Merged commit includes the following changes:\n175895735  by gunan:\n\n    Move IODataType to a new types.proto in preparation for using it\n    in ModelFlags\n\n--\n175893178  by fchollet:\n\n    Fix multiprocessing issue in keras.utils.data_utils.\n\n--\n175891377  by jart:\n\n    Use redundant download URLs and fix protobuf def\n\n    I uncommented all the GitHub URLs that turned out to have consistent\n    SHAs. The ones that didn't, I left them commented. We can't re-mirror\n    those URLs because doing so would cause past revisions of the\n    repository to become broken. So workspace.bzl is going to have to\n    evolve back to not having these comments, over time, as we continue to\n    upgrade stuff.\n\n--\n175889431  by apassos:\n\n    Fixed order for EagerVariableStore.\n\n--\n175882680  by A. Unique TensorFlower:\n\n    Move IODataType to a new types.proto in preparation for using it\n    in ModelFlags\n\n--\n\nPiperOrigin-RevId: 175895735"""
fdff4048d4d0fdf7c12f927b92bb5e2fb812df12,"'Add `WorkerService.DeleteWorkerSession` method to fix a memory leak.\n\nThe new method is the counterpart to `WorkerService.CreateWorkerSession`, and\nis called in all cases where worker sessions have been explicitly created (i.e.\nwhen using ClusterSpec propagation).\n\nPiperOrigin-RevId: 175877407'"
31b79e42b9e1643b3bcdc9df992eb3ce216804c5,'Merge pull request #14563 from aselle/docsfix\n\nFix speech hotword model links.'
4c9b4ebfcb40b8a7b3fe11411f6b91c9de326c56,"'Fix a few issues with HloValue and dataflow analysis identified when debugging the causes for the rollback of the new copy insertion (cl/174423881):\n\n(1) Mark values for deletion during dataflow propagation and delete later, rather than delete immediately. It was possible for a value to be deleted (a phi is optimized away), and still have references to it in the value sets.\n\n(2) Make call/while and root instructions explicit uses of the values which reach them. This subsumes the need for the HloValue::live_out_of_computation_ property which was buggy (which computation is it live-out of?).\n\n(3) Delete unused methods HloValue::RecomputeUses and HloValue::RemovePosition.\n\nPiperOrigin-RevId: 175765613'"
d16d8495d024e531b34d88745f99679414992fc2,'python3 fixes\n\nPiperOrigin-RevId: 175758757'
94b275420b2c5310f37d0bda3d329d7e0d0b5e99,'Replace uses of @%ws% with @org_tensorflow in LLVM BUILD file. @%ws% existed to work around a bug in older Bazel versions. The minimum Bazel version no longer has this issue so we can just write @org_tensorflow.\n\nFixes #14445.\n\nPiperOrigin-RevId: 175756784'
a5a192865e4c1732b414d6a503d07775f7163a5c,'Refactors the WALS estimator so that part of the control flow logic happens in the SweepHook. This fixes a bug that causes both input batches (rows and columns) to be fetched during any given sweep.\n\nPiperOrigin-RevId: 175738242'
e8b2049f5be7accae9f272972acfc5afb36c5ef2,"'Fix docstring typo: ""GraphKey"" -> ""GraphKeys"".\n\nPiperOrigin-RevId: 175736748'"
d3d907e0e9658469799aa24694240c5f99ddf5d2,'Fix speech hotword model links.'
6d5793853cfdd27fe806bca4fad0f4e3c3a32b73,'The link fixer needs these to be all on one line.\n\nPiperOrigin-RevId: 175721637'
5844c589143cb59e55e24776f8eb9b757f75d226,'fix a typo in the comment.\n\nPiperOrigin-RevId: 175716586'
301a6c41cbb111fae89657a49775920aa70525fd,"'Do not log a warning when `Rendezvous::Send()` fails in the Send op kernel.\n\nA failing call to `Send()` indicates that the step has been aborted by\na corresponding call to `Rendezvous::StartAbort()`. As a result, the\nerror logged by `Send()` is not particularly informative, and creates\na non-deterministic amount of extra log spam for each step that fails\nas `Send()` calls are being issued. The failure that causes the step to be\naborted is logged separately by the kernel that failed, unless that kernel\ndeliberately does not log on failure.\n\nIn particular, this change reduces log spam when using `Iterator.get_next()`\nin a multi-device setting. The `Iterator.get_next()` op deliberately does not\nlog when an `OutOfRange` error (indicated the end of the dataset) is raised,\nbecause this is common and expected behavior, especially when using an\ninitializable iterator that is reinitialized at the end of an epoch. Previously,\nwhen running in distributed mode or using a GPU, pending `Send()` calls may\ncause unwanted log messages to be printed.\n\nFixes #12414.\n\nPiperOrigin-RevId: 175716290'"
52467b8e68122560439534e3bc9ea266408fbfa7,'Docs fixes (#14561)'
317c011b19c90c8aeed4ce200d33f68b56311150,"""Fixed a bug in tensorflow::str_util::CUnescape. Added a str util test that\nfailed without this change.\n\nThe CUnescape did a const_cast to the result string's buffer, which made it write\nthe same buffer without copying.\n\nPiperOrigin-RevId: 175714391"""
cfa5c082dc2d7f71e26b75eb1829a490c378aeef,'Fix schema compatibility in oss\n\n    175360918  by aselle:\n\n        Fix schema compatibility test and upgrade test.\n\n        - Handle python3 unicode idioms\n        - Handle path differences'
f5669d905a28893c71ff44245da6ed5e13d55d1c,"'In the Grappler arithmetic optimizer, make sure the two new nodes have unique names when hoisting common factors out of aggregates.\n\nFix a few missed optimization opportunities due to control dependencies.\n\nFix a bug in counting the number of inputs for trivial aggregate rewriting.\n\nPiperOrigin-RevId: 175639520'"
7497fca0ab2e87b0a9194f99d421c2e78b30cb17,"'Implement shape constraints for `Cross` (#14156)\n\n* Implement shape constraints for `Cross`\r\n\r\nThis fix implements shape constrainsts for `Cross`, as\r\nwas specified in the TODO:\r\n```\r\n    // * Both inputs have the same shape.\r\n    // * Input rank >= 1.\r\n    // * input_shape[-1] == 3.\r\n```\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add unit test for shape constraint and inference for `Cross`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
315cc11c4c7da7d6f0849ed628863ccc4a01a2b5,'Fix //tensorflow/contrib/lite/tools:gen_op_registration bazel build.\n\nPiperOrigin-RevId: 175376892'
a9bd6d67022664db5ccd8128df46651d1d14ee8d,'Fix Python auto configure build support (#14467)\n\n7ccfbdf caused our Python autoconf to no longer be auto. This was likely due to\r\nthe evil helper _get_env_var() which has now been removed.\r\n\r\nThis change blocks tensorflow/tensorboard#719'
577a55777251dfd85bb285fd246a45e913ead6ca,"'Add op `tf.contrib.ffmpeg.decode_video` (#13242)\n\n* Add `tf.contrib.ffmpeg.decode_video`\r\n\r\nThis fix tries to address the request raised in 6265 where\r\nit was not possible to decode video like the existing op of\r\n`decode_audio`.\r\n\r\nThis fix adds the support of `tf.contrib.ffmpeg.decode_video`\r\nby invoking ffmpeg the same fashion as `tf.contrib.ffmpeg.decode_audo`\r\nso that video could be stored in the tensor `[frames, height, width, channel]`.\r\nAt the moment, the output format is `RGB24`.\r\n\r\nThis fix fixes 6265.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add python wrapper for `tf.contrib.ffmpeg.decode_video`\r\n\r\nThis fix adds python wrapper for `tf.contrib.ffmpeg.decode_video`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for `tf.contrib.ffmpeg.decode_video`\r\n\r\nThis fix adds test cases for `tf.contrib.ffmpeg.decode_video`.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address review feedback.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Move GetTempFilename to tensorflow/core/lib/io/path.h\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Disable GetTempFilename on Windows and Android for now.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Remove `.` from tmp file template if no extension\r\n\r\nAnd sanitize with clang-format\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add missing header files.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
fab6adb40b7279271c4015dbbd4626c62d8732a7,'Fix formatting in readme. (#14200)\n\n@flx42 thanks for letting me know!'
c303f4e7411a9537b42237630710f9b7e27ac6fa,'Fix XLA compilation on OSX (#14288)\n\nThe double versions of these functions are overloaded on OSX which means we need an explicit cast to disambiguate them. Fixes #14127.'
553727cf58f47b42718424f3a8492c6b723400e2,"'Fix a bug in ParallelInterleaveDataset, which expands dictionary output to dictionary keys.\n\nPiperOrigin-RevId: 175632077'"
b066496f625930bc00397ad9d000741d724598eb,'Add support for grayscale bmp image (#14296)\n\n* Add support for grayscale bmp image\r\n\r\nThis fix tries to address the issue raised in 13942 to support grayscale\r\nbmp image. Previously only channels of 3 or 4 are supported in bmp decoding.\r\nThis fix adds the support to have 1 channel grayscale image.\r\n\r\nThis fix fixes 13942.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test case for grayscale bmp image decoding\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
061c3597b84d45a9878b8adf831e39a5573859ec,'Upgrade gRPC version used in OSS. Fix-forward of #14262. Remove namespace-compatibility hack.\n\nPiperOrigin-RevId: 175586521'
90222dd7b29ff2597bc7f8d0f92db17324f591b0,'Fix CuDNNCompatibleGRU after GRUCell refactorization\n\nPiperOrigin-RevId: 175574730'
6470669cc4cef9c8f23527121cf0e20b72d2bfa0,'Fix use-after-free bug.\n\nPiperOrigin-RevId: 175564747'
3db96abfc5432c190d3afa62ebfad3c1d82cd818,"'Allow assigning colors based on HLO sharding information, when generating Graphviz HLO graphs via a new --xla_hlo_graph_sharding_color option.\nWhen generating TF graphs, a new --xla_hlo_tfgraph_device_scopes option allows to prefix the instructions names with a device scope. This help the TF graph viewer to better isolate the parts of the graph which are targeted to different devices, and allow rendering of graphs which would not be able to due to size.\nChanged TF/XLA broadcast lowering to propagate the request metadata into the HLO broadcast instructions.\n\nPiperOrigin-RevId: 175563052'"
2ae9c6c7a20dbd8f05e4b60e921e60986e2968bf,'Fix a stray hyphen and add an SO link (#14465)\n\n* Fix a stray hyphen and add an SO link\r\n* Remove empty lines from table code'
6c1ab6d34213057f5d70d194094ff48137815ae3,'Fix control input name for quantize node'
4d5e8057ec787e25530cba7011b72fb0093f4b11,'Fix build breakage\n\nNow the layout of tensorflow/contrib/cudnn_rnn is similar to\ntensorflow/contrib/layers\n\nDelete repeated tests in cudnn_rnn_ops_test (new tests in cudnn_rnn_test).\n\nPiperOrigin-RevId: 175487631'
24e368f1a1f1edd4c1f6c13b165c8aa5057c7f11,"""Use latest version of nsync in cmake builds; bring TensorFlow's CMakeLists.txt for nsync up to date for Mac.\n\nUpdate the git hash for nsync for use by cmake when fetching nsync.\nUpdate TensorFlow's copy of nsync's CMakeLists.txt file, which has fixed for the Mac.\n\nPiperOrigin-RevId: 175463772"""
4ded6f56f38f8ad5973bd58421e3a5f139f3c5de,"'Map graph building for toco testing on cpu, fix visibility.'"
677b9fcdcbae8d7fa1f9731327ff9b7982e463ca,'Fix XLA parsing failure.'
07ac134a4b2fa6f40f7fa8f7266b854a529ddcab,'Fix //tensorflow/contrib/lite/tools:gen_op_registration bazel build.\n\nPiperOrigin-RevId: 175376892'
d84e8eefc597b1f3391081d69ca7afe3728df65a,'Fix a bug where op name (instead of node name) should be used.\n\nPiperOrigin-RevId: 175371296'
2627e3fcd363187a790dc736a38cc3d61ee429dc,"'Merged commit includes the following changes:\n175361576  by wun:\n\n    Convert the performance guide links to the models repo to direct GitHub links\n\n--\n175360999  by mrry:\n\n    [tf.data] Eagerly construct the string handle for an Iterator.\n\n    This enables users to call `Iterator.string_handle()` after the graph has\n    been finalized, which makes it easier to use in distributed training among\n    other settings.\n\n--\n175360918  by aselle:\n\n    Fix schema compatibility test and upgrade test.\n\n    - Handle python3 unicode idioms\n    - Handle path differences\n\n--\n175357826  by wun:\n\n    Convert the performance guide links to the models repo to direct GitHub links\n\n--\n\nPiperOrigin-RevId: 175361576'"
08114b6093f7c461483e2f466af49ed55689708c,'Fix TensorFlowLiteTest in Bazel\n\nPiperOrigin-RevId: 175356139'
cb720816116c7769ff6bf781a687af3155f29c8b,'Inherit container prefix in defun.\n\nAllows defun-wrapped functions to read/mutate variables captured in them.\n\nPiperOrigin-RevId: 175346915'
cf0f384382d0c3645eb53cd27d38d15a9c3b28b5,'Create documentation for retrain.py to describe addition of fixed point layer.\nAdd Readme file to tf.contrib.quantize to provide an overview of fake quantization\n\nPiperOrigin-RevId: 175345154'
80078ae4a940f829eb81f03d80ec4d816a638df4,'Make Operation.node_def fetch from C API when enabled\n\nAlso fixes previously-introduced memory management bugs in graph_def_versions and op_def.\n\nPiperOrigin-RevId: 175314829'
005f1183c7a1c0f71f5ec614a3c3139972b1bec3,'Fixes API difference between eager and graph cond.\n\nPiperOrigin-RevId: 175307853'
51889acee1a266478b578afad3fbe7b3a90fc17a,'Add suffix to newly created Mul op in the optimizer to avoid the name collision\n  when two Conv2D objects depend on the same Const.\n\nPiperOrigin-RevId: 175305425'
6634bc414ee9a4bd69d9e870dcdd7e90a83b8e7d,"""[XLA:CPU] Make one of the tile dimensions in the LLVM IR GEMV tunable.\n\nThe tiling dimension corresponding to the number of vector registers in the tile\ncan be changed easily.  Expose this value as a backend specific flag so that we\ncan experiment with it to find a good default value.\n\nThis CL also fixes a bug exposed by a variable tiling factor in the row major\nGEMV implementation.  This wasn't caught before because having tile_rows ==\ntile_cols hides the bug.\n\nPiperOrigin-RevId: 175258553"""
e32165b849df8c31d77e09011c648b23f24def99,"'Get rid of IteratorBase::is_exhausted flag since it is not possible to rely on it unless we lock each call to GetNext which is not preferable.\nEach iterator now handles saving/restoring exhausted state.\nAs a guideline, we always reset the input_impl(s) when they get exhausted. This can be used as an indicator of exhausted-ness for non-terminal iterators. Also reduces memory overhead.\nEach iterator should also handle calls to GetNextInternal when it is exhausted. Fixed this for some datasets.\nAlso fix a bug in dataset_serialization_test_base. We were not saving\na checkpoint after exhausting the iterator so verify_exhausted_iterator\nwas not really testing restoring an exhausted iterator.\n\nPiperOrigin-RevId: 175253023'"
be4b984747402c224d9aa3687e94db3da972ecf4,"'De-flakify and re-enable tests in replicate_model_fn_test.py.\n\n""Reduce metric variables"" operation is a single operation across all metric variables, which means it is across all eval metrics.  Previously, an update op for every eval metric was conditioned on a copy of overall ""reduce metric variables"" op.  The latter was meant to be idempotent and thus the end result was supposed to be correct.\n\nHowever, ""reduce metric variables"" op consists of a number of variable assignments and thus is not atomic.  If execution of two ""reduce metric variables"" ops interleaves, then the end result might come out to be incorrect.  This caused flakiness in replicate_model_fn_test.py.  To fix the problem, there is now a single copy of the ""reduce metric variables"" and every eval metric is associated with that single instance.\n\nPiperOrigin-RevId: 175232016'"
4640cc88ffcdaeb8724ffc129bc4d900277a5403,'Fix typo in tensorflow/python/framework/function.py\n\nPiperOrigin-RevId: 175219920'
b9951e775e7a80b96520a1e8e0b5c4a485196796,'Adds streaming_dynamic_auc to Tensorflow contrib metrics. This metric differs from streaming_auc because it uses every prediction as a threshold rather than linearly spaced fixed thresholds.\n\nPiperOrigin-RevId: 175217002'
d60f6513232bd49b658c188c0597dd119e9a52d8,'Add tf.nn.softmax_cross_entropy_with_logits_v2 which enables backprop wrt the labels.\n\nClarify current backprop behavior.\n\nOriginal bugfix by Alexandre Passos.\n\nPiperOrigin-RevId: 175211803'
de5d8eb503234a2bcce5141b564337feb26928ef,"'Fix bug reported in b/69059093, by skipping rewrites that we can determine have already been applied.\nMake sure rewrites are idempotent by running the optimizer twice in unit tests.\n\nPiperOrigin-RevId: 175206742'"
2414d38956bb33ba3b70a4258522976d0abe20c0,'Fix GANEstimator docstring.\n\nPiperOrigin-RevId: 175204075'
fefb78752cceb499b1c65a80a26a132ae5538695,'Fix cmake build.\n\nPiperOrigin-RevId: 175195239'
500aa9a3daa5a594fabf1776f97f0fe529aaa689,'Fix typo in tensorflow/python/layers/base_test.py\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/14412 from yifeif:yifeif-patch-3 4b91380c6fc1f995d48a5f184e7307f776541bd0\nPiperOrigin-RevId: 175192097'
67289c65bd8ba779d37e92a9aefac80c6cd8c27b,'Fix typo in tensorflow/python/client/timeline.py\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/14386 from yifeif:yifeif-patch-2 8391d3b0369f823fc94ea75aef2df04c611a1671\nPiperOrigin-RevId: 175161296'
17411ee8e7569085c475e8f0bd3f6677a9d44f77,'Add hooks keyword argument to slim evaluate_once\n\nto enable TFDBG debugging of slim.evaluation.evaluate_once()\n\nFixes: #13444\nPiperOrigin-RevId: 175101022'
361c55899cb524ca078c65eabdd3d79bfc10c8f9,"'Make assert_equal/_none_equal/_less ops work in eager mode\n\nAlso, fix documentation of eager mode execute() method and\nmake tf_should_use work with empty list returned by execute()\n\nRELNOTES: tf.assert_equal no longer raises ValueError. It now raises InvalidArgumentError, as documented.\nPiperOrigin-RevId: 175086223'"
3aaa1d3a0dcc52dd83aa9f1ad308e9da47556583,"'Update tf.keras RNNs to the Keras 2.0.9 API. Does not include cuDNN layers.\nAdditionally, fix a bug with handling of activity_regularizer in tf.layers base Layer (and add test).\n\nPiperOrigin-RevId: 175070161'"
9e0e6ff16b0cb5764416297cf3797ff7521fd73a,"""Fix tensorflow.org rendering of the example code for run_step_fn.\n\nPython code isn't indented correctly.\n\nPiperOrigin-RevId: 175067065"""
bf05a2eef97863fc78778bcde5987f93af8a7598,"'Run Estimator.export_savedmodel with the user\'s TFSession config.\n\nEstimator assumes a particular config_pb2.ConfigProto that configures the underlying session.  The config is either the default one or a user-supplied one.  The default config has allow_soft_placement=True, the option that allows silent placement of operations on devices with kernels when the requested device doesn\'t have a kernel for that operation.\n\nEstimator\'s train(), eval() and predict() calls run with the underlying session configured in accordance to the ConfigProto.  However, export_savedmodel runs without such a configuration.  This appears to be a problem when the ModeKeys.PREDICT graph has an op that was placed on GPU but doesn\'t have a GPU kernel.  The graph works for predict(), but when export_savedmodel() is trying to restore the corresponding variable, the code fails with ""no kernel for the op"" error.  I attempted to show that in a test.\n\nTo fix this issue, I am passing the ConfigProto to the session inside export_savedmodel.  An alternative conservative and ugly fix is to pass a new instance ConfigProto with only allow_soft_placement=Estimator._session_config.allow_soft_placement.  Passing the whole ConfigProto feels like the right thing to do.  Here\'s what else is in ConfigProto: https://github.com/tensorflow/tensorflow/blob/r1.4/tensorflow/core/protobuf/config.proto#L280.\n\nI verified by running an internal pipeline.  Here\'s allow_soft_placement logic: https://github.com/tensorflow/tensorflow/blob/r1.4/tensorflow/core/common_runtime/placer.cc#L322.\n\nPiperOrigin-RevId: 175063803'"
15aba57ec216da005411feacf53c08dff7c2652b,'Fix typo in tensorflow/python/client/session_clusterspec_prop_test.py\n\nPiperOrigin-RevId: 175061854'
fda773aab208535612bfc5ecefb5096525669cbb,'Minor docstring fixes\n\nPiperOrigin-RevId: 175036743'
d7fe124174adacb8c1a7479eaab5b5b628855277,'Fix incomplete spec of EagerTensor.numpy()\n\nPiperOrigin-RevId: 175023039'
15605b68f368753ae65476fbb172d293d997ec7d,'tfdbg: Fix a test bug hidden in a child thread\n\nPiperOrigin-RevId: 175004323'
8e729b337fc062369643b592a96cfbacd6e43712,"""Fix tf.contrib.seq2seq._monotonic_probability_fn to use a hard sigmoid when mode='hard'.\n\nAlso adds tests to make sure the attention probabilities are 0 or 1 when mode='hard'.\n\nPiperOrigin-RevId: 174956465"""
9a6c0eb137d87f0578821793af64232fc54c53b6,'Fix link (the link tool expects these to be on one line)\n\nPiperOrigin-RevId: 174948909'
942545c98db7f29dbbd7b9ed765e1289656f93d5,'Fix Bazel builds for the TF Lite demo app\n\nAdds a new remote repository for the mobilenet tflite models necessary\nfor running the TF Lite demo app.\n\nPiperOrigin-RevId: 174946867'
54837e40096c35322e75d43a13bbf44c933f59db,'Add functionality to perform training of additional fixed point layer on top of quantized base model.\nAlso modify retrain_test to test creation of model info for fixed point mobilenet.\n\nPiperOrigin-RevId: 174946745'
02b2bd9e22e2a88629ebd778e51bcfa39dd63438,'[XLA] Fix comments for arg_literals parameter in HloEvaluator::Evaluate.\n\nPiperOrigin-RevId: 174939009'
969eae0da7aed343b382d12d6e65dcf1d3bbcfad,'Fix FakeQuant to correctly set zero on CPU.\n\nPiperOrigin-RevId: 174935134'
7fdcbc508c6d94a785111bc9468b221335345ce7,'tfe.Network naming under variable scopes. Networks take on the full prefix of their parent variable scopes.\n\nFixes #14164.\n\nPiperOrigin-RevId: 174934769'
054b515feec0a3fca4cfb1f29adbf423c9027c3a,'Fix license declaration for Python headers (#14469)\n\nThis appears to be a legacy package so we might want to consider deleting it at\r\nsome point too.'
23dc70389b3bf51886156de88fae6b922619a6ff,"""[XLA:CPU] Make one of the tile dimensions in the LLVM IR GEMV tunable.\n\nThe tiling dimension corresponding to the number of vector registers in the tile\ncan be changed easily.  Expose this value as a backend specific flag so that we\ncan experiment with it to find a good default value.\n\nThis CL also fixes a bug exposed by a variable tiling factor in the row major\nGEMV implementation.  This wasn't caught before because having tile_rows ==\ntile_cols hides the bug.\n\nPiperOrigin-RevId: 175258553"""
e058a030f88f19a60e3a4d5ed6b5cbcf85b1a5d6,'Fixed typos'
3c41cb6bff409f37e35d2e1b2619d5dc6742dbe5,"'Get rid of IteratorBase::is_exhausted flag since it is not possible to rely on it unless we lock each call to GetNext which is not preferable.\nEach iterator now handles saving/restoring exhausted state.\nAs a guideline, we always reset the input_impl(s) when they get exhausted. This can be used as an indicator of exhausted-ness for non-terminal iterators. Also reduces memory overhead.\nEach iterator should also handle calls to GetNextInternal when it is exhausted. Fixed this for some datasets.\nAlso fix a bug in dataset_serialization_test_base. We were not saving\na checkpoint after exhausting the iterator so verify_exhausted_iterator\nwas not really testing restoring an exhausted iterator.\n\nPiperOrigin-RevId: 175253023'"
e7466f40e22f88fe194b3f80113141a97454e1d9,"""Merge branch 'master' of https://github.com/tensorflow/tensorflow into fixed-typos"""
17626168cb05e9edc6cbbd57d04c1da8a43ecfb2,"'Fixed typos, comments'"
2397537748552d8a7850b89d1f39dc1fc0b2a9f8,"'De-flakify and re-enable tests in replicate_model_fn_test.py.\n\n""Reduce metric variables"" operation is a single operation across all metric variables, which means it is across all eval metrics.  Previously, an update op for every eval metric was conditioned on a copy of overall ""reduce metric variables"" op.  The latter was meant to be idempotent and thus the end result was supposed to be correct.\n\nHowever, ""reduce metric variables"" op consists of a number of variable assignments and thus is not atomic.  If execution of two ""reduce metric variables"" ops interleaves, then the end result might come out to be incorrect.  This caused flakiness in replicate_model_fn_test.py.  To fix the problem, there is now a single copy of the ""reduce metric variables"" and every eval metric is associated with that single instance.\n\nPiperOrigin-RevId: 175232016'"
b11a79032856722d0e51ce421455af8a8610d965,'Adds streaming_dynamic_auc to Tensorflow contrib metrics. This metric differs from streaming_auc because it uses every prediction as a threshold rather than linearly spaced fixed thresholds.\n\nPiperOrigin-RevId: 175217002'
3de7349955b839edbd61fef7bac3db9e140ffd3d,'Add tf.nn.softmax_cross_entropy_with_logits_v2 which enables backprop wrt the labels.\n\nClarify current backprop behavior.\n\nOriginal bugfix by Alexandre Passos.\n\nPiperOrigin-RevId: 175211803'
e930f0e072b8d67d9bf29d77babf071a3569615c,"'Fix bug reported in b/69059093, by skipping rewrites that we can determine have already been applied.\nMake sure rewrites are idempotent by running the optimizer twice in unit tests.\n\nPiperOrigin-RevId: 175206742'"
02dbaaa3a7063ea5ede4ddf47a6ef5df5a64518e,'Fix typo <Copybara Experiment DO NOT MERGE>\n\nFix typo in tensorflow/python/framework/function.py'
96575f01df25005107fd1ce822b20bc6906baa3b,'Fixing master regression in slice op (#14329)'
ea33185cc154bb80741bf4a8a7321aae4b5396cd,'Fix GANEstimator docstring.\n\nPiperOrigin-RevId: 175204075'
1dab8efeaf5e6e1a768e3eaea7a771e3e1d737b1,' Fixes for Python3 Raspberry Pi CI Build (#14340)\n\n* Fixes for Raspberry Pi cross-compilation problems\r\n\r\n* Fixes for Raspberry Pi cross-compilation problems\r\n\r\n* Fixes for Python3 Raspberry Pi CI Build'
c51b3c301d60697bb498d19ea5068ddfb2525f95,'Fix cmake build.\n\nPiperOrigin-RevId: 175195239'
9d3d6da2165ab35f5caa98be7122efe3bf9ae964,'Add GPU support for Bucketize op (#13922)\n\n* Add GPU support for Bucketize op\r\n\r\nThis fix tries to add GPU support for `Bucketize` op. Before\r\nthis PR only CPU implementation is available. This PR add GPU\r\nimplementation with a CUDA kernel.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add GPU kernel for Bucketize op.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update test cases to invoke GPU implementation of Bucketize\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Move Eigen header to the top\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address review feedback\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Use binary search for finding the upper bound with GPU\r\n\r\nsimiliar to std::upper_bound\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Use CudaDeviceArrayOnHost instead of pinned memory\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
2bc1f2339ef7a82f868b1bbcbc80f5632800ef1c,'Fix typo in tensorflow/python/layers/base_test.py\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/14412 from yifeif:yifeif-patch-3 4b91380c6fc1f995d48a5f184e7307f776541bd0\nPiperOrigin-RevId: 175192097'
11dbede7e098045845d02fa1068c5153b4e60f41,"'Allow tfcompile_flags to be a list (#14337)\n\nThis PR is a follow up to 12769 and 14333 to address the issue\r\nraised in 12767 so that it is possible to specify the flag with\r\n```\r\ntfcompile_flags = [""--target_cpu=\'core-avx2\'"", ""--xla_enable_fast_math=false""]`\r\n```\r\nPreviously it was only possible to specify the flag with:\r\n```\r\ntfcompile_flags = ""--target_cpu=\'core-avx2\' --xla_enable_fast_math=false""\r\n```\r\n\r\nThis PR will fix 12767.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
d8f5ef41755297bda69e5f3145db98bb903f2fc9,"""typo fixed : did't -> didn't (#14272)\n\n* did't -> didn't\r\n\r\n* typo fixed : thats -> that's"""
fb1790808c81df94711254602c18ad0b581787d9,"'Add int64 `Tdim` support for `ExpandDims` (#14222)\n\n* Add int64 `Tdim` support for `ExpandDims`\r\n\r\nThis fix tries to add int64 `Tdim` support for `ExpandDims`.\r\nIn `array_ops.cc`, `ExpandDims` registers both int32\r\nand int64 support for `Tdim`. However, only int32 kernel\r\nfor `ExpandDims` has been supported.\r\n\r\nThis fix addresses the discrepancy by adding the support\r\nof int64 `Tdim` for `ExpandDims`.\r\n\r\nAdditional tests has also been added to cover the changes.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for int64 Tdim support for `ExpandDims`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Sanitize .cc and .h file with clang-format -i --style=Google\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
2d0a506db7cd089fd9b7c59a6ed0b05ab65149f0,'Change `dim` to `axis` for tf.nn.softmax and tf.nn.log_softmax (#12716)\n\n* Change `dim` to `axis` for tf.nn.softmax and tf.nn.log_softmax\r\n\r\nThis fix tries to address the issue raised in 7391 where\r\n`dim` was not changed to `axis` for tf.nn.softmax and tf.nn.log_softmax.\r\nThis is inconsistent with other ops in tensorflow.\r\n\r\nThis fix adds axis while at the same time keeps dim so that\r\nbackward compatibility is maintained.\r\n\r\nThis fix fixes 7391.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Use `@deprecated_args`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update goldens for API compatibility changes\r\n\r\nThis commit updates goldens:\r\n```\r\nbazel-bin/tensorflow/tools/api/tests/api_compatibility_test \\\r\n          --update_goldens True\r\n```\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Change `dim` to `axis` for `tf.nn.l2_normalize`\r\n\r\nto address #14191.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update goldens for API compatibility changes\r\n\r\nThis commit updates goldens:\r\n```\r\nbazel-bin/tensorflow/tools/api/tests/api_compatibility_test \\\r\n          --update_goldens True\r\n```\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Use deprecated_argument_lookup to simplify logic\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
87eee70a5381a2dbde54772f03220a29bab0734e,'Add implementation of `conv1d_transpose` (#13105)\n\n* Add implementation of `conv1d_transpose`\r\n\r\nThis fix tries to address the issue raised in 8729 by\r\nproviding the implementation of `conv1d_transpose`.\r\n\r\nThis fix fixes 8729.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test case for `conv1d_transpose`\r\n\r\nThis fix adds test case for `conv1d_transpose`.\r\n\r\nThis fix is related to 8729.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix xrange issue in Python 3\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Change allowed data format from `NHWC`/`NCHW` -> `NWC`/`NCW`\r\n\r\nas 1d does not have height.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Expose conv1d_transpose from tf.contrib.nn\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
bcf2ce97591e0cf6b76148e64cf073dd122f41f6,'Fix typo in tensorflow/python/client/timeline.py\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/tensorflow/tensorflow/pull/14386 from yifeif:yifeif-patch-2 8391d3b0369f823fc94ea75aef2df04c611a1671\nPiperOrigin-RevId: 175161296'
6f6eb52a89ec6e360d8604fa68516cf2d819207f,"'Fixed typos, comments'"
d45f27d4586ef2d2dcc405eaac97b1515dad9671,"'Fixed typos, comments'"
c25cd200ddb2728aec1302f655ff220b08d60007,"'CMake: configure default string values of options properly\n\nBecause cmake configures defaults values as ON or OFF only,\nstring values as default doesn\'t work.\n\nThus, when it is set ""OFF"", we need to re-set the values.\n\nFixes #14400\n\nSigned-off-by: MyungJoo Ham <myungjoo.ham@samsung.com>'"
b58ee215e631b9c2a0400cbd5b52ea7a3a8bfca0,"'Fixed typos, comments'"
d5f0634312e9426414687c0b718c931a256a082f,"'Remove `non-fused` version of `adjust_hue` as GPU kernel is already in place (#14187)\n\nWas looking into adding batch support for `tf.image.random_hue` (8926)\r\nand noticed that the `non-fused` version of `adjust_hue` was still\r\nin place. The `non-fused` is for non-GPU support of `adjust_hue`.\r\n\r\nAs GPU kernel for `AdjustHue` has already been added in PR 6818,\r\nI think it makes sense to remove the non-fused version. Besides,\r\nthe env `TF_ADJUST_HUE_FUSED` seems no in use anyway.\r\n\r\nThis fix removed `non-fused` version of `adjust_hue` as GPU kernel\r\nis already in place.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
5fb5d8207b576e57acd2fac00da429284eb26647,'golang: ~2x speedup for encodeTensor() (#14368)\n\n* golang: ~2x speedup for encodeTensor()\r\n\r\n* Fix spelling in comment'
f219812afd5df857cb83d7a5865d74a5ba282c86,"'Update golang to 1.9.2 in `install_golang.sh` (#14124)\n\nThis fix updates install_golang.sh to `1.9.2`, see release:\r\nhttps://golang.org/doc/devel/release.html#go1.9.minor\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
9e2dd0ab4a8aff542ef5fadab6496f817c777c61,"'Add fp16 support to fused batchnorm op (#13388)\n\n* Add fp16 support to fused batchnorm op\r\n\r\n- This commit adds a mixed-precision fused_batch_norm_v2 op.\r\n  The inputs and outputs are fp16, while the scale, offset, mean\r\n  and variance are kept in fp32.\r\n- The tf.nn.fused_batch_norm op has been modified to use the v2\r\n  fused batchnorm whenever inputs are fp16 (this does not affect\r\n  compatibility because fp16 was not previously supported).\r\n- The high-level layers APIs have also been updated to store the\r\n  scale, offset, mean, and variance variables as fp32.\r\n\r\n* Added fp16 batchnorm tests\r\n\r\n* Fixed whitespace issue\r\n\r\n* Fix unnecessary BatchNormalization API change'"
b5294161f150aa5061dd0483593e5103181cf2a2,"'CMake-Linux support for GPU-build (#14016)\n\nThere had been some fixes for Linux\r\n- Enable to specify or find related libraries (cuda/cudnn)\r\n- Enable ""find_package(CUDA)""\r\n- Address the Linux Cmake-parser issue with TF_EXTRA_CUDA_CAPABILITIES=3.0,3.5,5.2\r\n- Improve the method to find static libraries\r\n- Enable tf_stream_executor for Linux-CMake build by linking to ""libgomp""\r\n- Adjust pywarp_tensorflow_lib configuration\r\n- Hide build option not recognized at Linux toolchains\r\n- Add resampler cu.cc files\r\n- Don\'t use tf_core_kernels_cpu_only for Linux (it\'s for Windows only)\r\n\r\nTested with OBS (open build service) + rpmbuild for bare-metal (minimal packages are installed) x64 Linux.\r\n\r\nSigned-off-by: MyungJoo Ham <myungjoo.ham@samsung.com>'"
c43d777b56a17832f7de288d0fe966bf537ffeb7,"'Allow _FilterFloat to pass None values. (#13834)\n\n* Allow _FilterFloat to pass None values.\r\n\r\n[Tensorflow 1.3: tf.constant with dtype=[float32, float64, float16] may have inconsistent behavior. #13827](https://github.com/tensorflow/tensorflow/issues/13827)\r\n\r\n - This fix allows _FilterFloat to allow None values to pass.\r\n - We add `tf.float16` into the `_TF_TO_IS_OK` dictionary.\r\n - We add tests for `convert_to_tensor` and `tensor_util`.\r\n\r\n* Added `tf.float16` into the _TF_TO_IS_OK dictionary\r\n\r\n[Tensorflow 1.3: tf.constant with dtype=[float32, float64, float16] may have inconsistent behavior. #13827](https://github.com/tensorflow/tensorflow/issues/13827)\r\n\r\nThis fix adds `tf.float16` into the `_TF_TO_IS_OK` dictionary for consistent error checking.\r\nA note is added to `convert_to_tensor` on how `None` values are handled.'"
4274acbdfafac9d857e9a3f95133896ba698f6da,'Fix a broken link in `Threading and Queues` docs (#14160)\n\nThe link to Datasets in `Threading and Queues` seems\r\nto be broken. This fix attempts to fix the broken link.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
a57a18dcb2f0ab61dac445db52929abd13c62601,"'Add int64 input tensor support for `tf.invert_permutation` (#14061)\n\n* Add int64 input tensor support for `tf.invert_permutation`\r\n\r\nThis fix tries to add int64 input tensor support for `tf.invert_permutation`.\r\nIn the docs of the TensorFlow (https://www.tensorflow.org/api_docs/python/tf/invert_permutation),\r\nit was specified that the input tensor `x` could be either int32 or int64:\r\n```\r\nx: A Tensor. Must be one of the following types: int32, int64. 1-D.\r\n```\r\n\r\nHowever, int64 was actually not supported.\r\n\r\nThis fix adds the int64 support by adding template to the class `InvertPermutationOp`\r\nso that both int64 and int32 could be processed.\r\n\r\nThis fix also adds additional test cases so that changes could be covered.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for int64 input tensor support of `tf.invert_permutation`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update test cases so that GPU test could be invoked.\r\n\r\nNote: as CI/CI will invoke CPU and GPT tests individually,\r\nno need to iterate through\r\n```\r\nfor use_gpu in [True, False]:\r\n```\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add int64 input tensor support for `TENSORFLOW_USE_SYCL` of `invert_permutation` as well.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Sanitize transpose_op.cc with `clang-format -i`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
1c79da73c193944878025a6f49565c54f63da4f2,'Add hooks keyword argument to slim evaluate_once\n\nto enable TFDBG debugging of slim.evaluation.evaluate_once()\n\nFixes: #13444\nPiperOrigin-RevId: 175101022'
ecb3557621229deaebec209629d154c37da7f9d3,"'Make assert_equal/_none_equal/_less ops work in eager mode\n\nAlso, fix documentation of eager mode execute() method and\nmake tf_should_use work with empty list returned by execute()\n\nRELNOTES: tf.assert_equal no longer raises ValueError. It now raises InvalidArgumentError, as documented.\nPiperOrigin-RevId: 175086223'"
6488286b2678dddd7c8ed534d92f228bd4c532c9,"'Update tf.keras RNNs to the Keras 2.0.9 API. Does not include cuDNN layers.\nAdditionally, fix a bug with handling of activity_regularizer in tf.layers base Layer (and add test).\n\nPiperOrigin-RevId: 175070161'"
544b47d5702787083445d64af4d4683141c0ffc9,"""Fix tensorflow.org rendering of the example code for run_step_fn.\n\nPython code isn't indented correctly.\n\nPiperOrigin-RevId: 175067065"""
ffe3636221ff8ecf93f9f78e19edf1419e20c67d,"'Run Estimator.export_savedmodel with the user\'s TFSession config.\n\nEstimator assumes a particular config_pb2.ConfigProto that configures the underlying session.  The config is either the default one or a user-supplied one.  The default config has allow_soft_placement=True, the option that allows silent placement of operations on devices with kernels when the requested device doesn\'t have a kernel for that operation.\n\nEstimator\'s train(), eval() and predict() calls run with the underlying session configured in accordance to the ConfigProto.  However, export_savedmodel runs without such a configuration.  This appears to be a problem when the ModeKeys.PREDICT graph has an op that was placed on GPU but doesn\'t have a GPU kernel.  The graph works for predict(), but when export_savedmodel() is trying to restore the corresponding variable, the code fails with ""no kernel for the op"" error.  I attempted to show that in a test.\n\nTo fix this issue, I am passing the ConfigProto to the session inside export_savedmodel.  An alternative conservative and ugly fix is to pass a new instance ConfigProto with only allow_soft_placement=Estimator._session_config.allow_soft_placement.  Passing the whole ConfigProto feels like the right thing to do.  Here\'s what else is in ConfigProto: https://github.com/tensorflow/tensorflow/blob/r1.4/tensorflow/core/protobuf/config.proto#L280.\n\nI verified by running an internal pipeline.  Here\'s allow_soft_placement logic: https://github.com/tensorflow/tensorflow/blob/r1.4/tensorflow/core/common_runtime/placer.cc#L322.\n\nPiperOrigin-RevId: 175063803'"
daf17e8c041ad9441da57e15e791bfac7553d727,'Fix sycl BUILD bazel syntax error (#14379)'
e0046de7afa46199e11bb3aef823a55dfa6a0355,'Fix typo in tensorflow/python/client/session_clusterspec_prop_test.py\n\nPiperOrigin-RevId: 175061854'
8d47a5bb271fb2e0cda11beabb5ea5d25a5d8a3f,'Looks like an rc1 string got into master. Here is the fix. (#14382)'
5d36e0d638c41e4d4c3d1c29d508d3a6439c8010,'Add half-precision support for `DepthwiseConv2dNative` (#12976)\n\n* Add float16 support for `DepthwiseConv2dNative`\r\nThis fix tries to address the request raised in 12327\r\nso that float16 is supported for `DepthwiseConv2dNative`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for float16 support of `DepthwiseConv2dNative`\r\n\r\nA couple of tests for float16 have been disabled as error is\r\nlarge.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add float16 support for `DepthwiseConv2dNative` on GPU\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\nAdd Eigen::half support for DepthwiseConv2dNative on GPU\r\n\r\nThis commit add Eigen::half support for DepthwiseConv2dNative on GPU\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Disable float16 support for the gradient of DepthwiseConv2dNative\r\n\r\nThe accuracy is not high enough for float16 of gradient.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
f95d6a01d341231d18bb969b12e615a9cb066e00,'Minor docstring fixes\n\nPiperOrigin-RevId: 175036743'
d97dcf04a889e5f75c5651ca994f499655564416,'fix indenting on cache check'
500e0aa5eb3fb0ed08b717fc34b8a8f2a2bd0907,'Fix incomplete spec of EagerTensor.numpy()\n\nPiperOrigin-RevId: 175023039'
2463116ed6e2036177cf8dc2e5b28090a4faf450,'Fix inconsistent tensor ranks in _linear_predictions (#13279)\n\n* Fix inconsistent tensor ranks in _linear_predictions\r\n\r\nWhen mixing sparse feature columns and dense tensors of features _linear_predictions behave anormaly without this fix (and is unusable).\r\n\r\n* Fix formatting'
ac0ba5bd041f3287bb2a4f12c2ef43a3264f6073,'tfdbg: Fix a test bug hidden in a child thread\n\nPiperOrigin-RevId: 175004323'
56e0d5e0d8dab578f1c9ef723772ac79e9fc9583,"'[FIX]the estimator generate by tf.keras.model_to_estimator() cannot export saved_model because the model_fn provided by _create_keras_model_fn wasn\'t set export_outputs in the returned EstimatorSpec. Here I provide a default export_outputs with serve_default key and Predict API, and the result inside is same as predictions\n[FIX]_save_first_checkpoint call saver.save with only a path and without filename, that make the ckpt saved with name like `{model_dir}/.meta` and `{model_dir}/.index`, which can not be found by latest_checkpoint(""{model_dir}""). As state by save method of Saver, save_path should be a path to the checkpoint name. So to fix this, I change the name to `{model_dir}/keras_model.ckpt`'"
fa5672bddf3f78283d7d1552a42ffc8708f863bb,"""Fix tf.contrib.seq2seq._monotonic_probability_fn to use a hard sigmoid when mode='hard'.\n\nAlso adds tests to make sure the attention probabilities are 0 or 1 when mode='hard'.\n\nPiperOrigin-RevId: 174956465"""
d484522eb3d58aac70130f5c02a732c7442046bc,'Fix link (the link tool expects these to be on one line)\n\nPiperOrigin-RevId: 174948909'
5d35b03064268e05626d9a65348c1359e83ddcc2,'Fix Bazel builds for the TF Lite demo app\n\nAdds a new remote repository for the mobilenet tflite models necessary\nfor running the TF Lite demo app.\n\nPiperOrigin-RevId: 174946867'
db85753667aa6eb52c2eefc0b9c5446c6b1a6cd7,'Add functionality to perform training of additional fixed point layer on top of quantized base model.\nAlso modify retrain_test to test creation of model info for fixed point mobilenet.\n\nPiperOrigin-RevId: 174946745'
e32e74d0c350be042647b0cbef9e7a619832e7d5,'[XLA] Fix comments for arg_literals parameter in HloEvaluator::Evaluate.\n\nPiperOrigin-RevId: 174939009'
788344009ed1a9e550e980415be1d271bccb8bef,'Fix FakeQuant to correctly set zero on CPU.\n\nPiperOrigin-RevId: 174935134'
c8530b907a686b92c94d13f854dc504fa10901db,'tfe.Network naming under variable scopes. Networks take on the full prefix of their parent variable scopes.\n\nFixes #14164.\n\nPiperOrigin-RevId: 174934769'
390b093bcaf02601b6c20c42d3a6a5772a084ee1,'Fix bad merge'
0b44f04ccfc2cdde66191cdd0de00966979ddec1,"'Merge 1.4 branch back into master (#14305)\n\n* Update RELEASE NOTES for TensorFlow 1.4\r\n\r\n* Update the version strings for TF 1.4-rc0.\r\n\r\n* Update version strings in POM files missed by update script.\r\n\r\n* Pin TensorBoard 0.4 to TensorFlow 1.4\r\n\r\n* Fixing the name of the disabled test. (#13592)\r\n\r\n* Revert ""Implementing ghost batch norm as defined in https://arxiv.org/pdf/1705.08741.""\r\n\r\nThis reverts commit 125f7afa4a483855dc75791445d2dea64587876a.\r\n\r\n* Disable iterator_ops_test on Windows for 1.4 release (#13609)\r\n\r\n* Disable failing Windows tests for r1.4 release.\r\n\r\ntestRemoteIteratorUsingRemoteCallOpDirectSessionGPUCPU test is failing\r\nwith ""TypeError: only integer scalar arrays can be converted to a scalar\r\nindex"" on the Windows GPU Release bot. Disabling test.\r\n\r\n* Fix typo.\r\n\r\n* Also disalbe iterator_ops_test from contrib/.\r\n\r\n* Add contributing authors to 1.4 Release notes.\r\n\r\nThanks!\r\n\r\n* Fixes to authors.\r\n\r\nRemoved duplicate and removed googler from contributing author list.\r\n\r\n* Fixes and additions to release notes.\r\n\r\nAdded line about Keras moving into core.\r\nAdded line about CUDA/cuDNN versions.\r\nAdded line about custom ops.\r\n\r\n* Fixing a master regression (#13562)\r\n\r\n* Update version strings for 1.4.0rc1\r\n\r\n* Remaining cherry-picks for 1.4.0rc1 (#13700)\r\n\r\n* Java: Tweak to address some Javadoc errors.\r\n\r\nPiperOrigin-RevId: 171987329\r\n\r\n* Fix S3 BUILD not including files explicitly.\r\n\r\nThis causes remote builds to fail since they AWS headers were missing.\r\n\r\nPiperOrigin-RevId: 171718021\r\n\r\n* Add missing default config setting in aws.BUILD (#13662)\r\n\r\n* Remove setting AWS logging for S3 file system.\r\n\r\nWas causing issues with tests. Can repro test failures on Macs by running...\r\n\r\nbazel test --config=s3  --cache_test_results=no --test_output=streamed\r\n//tensorflow/core/kernels:control_flow_ops_test\r\n\r\nPossible reason for error is symbol collision with AWS logging code.\r\nOne possible solution would be to split out another shared object for\r\nthe S3 filesystem op which does not link in libtensorflow_framework.so.\r\nThis is done, for example, by libforestprotos.so in\r\ntensorflow/contrib/tensor_forest/BUILD\r\n\r\nPiperOrigin-RevId: 171246381\r\n\r\n* Relanding change to add config to enable S3 file system support.\r\n\r\nPass --config=s3 argument to Bazel to build with S3 file system support.\r\nChange was originally rolled back due to a failure it caused in\r\n//tensorflow/core/kernels:control_flow_ops_test on Macs which is now fixed.\r\n\r\nPiperOrigin-RevId: 171579378\r\n\r\n* Update release notes about Amazon S3 file system support being default.\r\n\r\n* Add documentation to sloppy_interleave function\r\n\r\nPiperOrigin-RevId: 171303413\r\n\r\n* Add `cudnn_rnn_ops` to the Windows build\r\n\r\nFixes #13696.\r\n\r\n* Creating a patch for the wrong links that still point to dev. (#13753)\r\n\r\n* tfdbg release notes in r1.4\r\n\r\n* Fix ambiguous type comparison in s3_crypto.cc (#13758)\r\n\r\ntensorflow/contrib/s3/s3_crypto.cc(74): error C2666:\r\n\'std::fpos<_Mbstatet>::operator ==\': 3 overloads have similar conversions\r\ncould be \'bool std::fpos<_Mbstatet>::operator ==(std::streamoff) const\'\r\nor \'bool std::fpos<_Mbstatet>::operator ==(const std::fpos<_Mbstatet> &)\r\nWe were seeing this compilation error on Windows builds.\r\n\r\n* Set estimator run_config default random seed to None. This will make it aligned with other parts of the TF. Many users are not aware of impact of non-random seed. For example it may lead to train only on a small fraction of training data due to preemptions.\r\nWe\'re changing default behavior since we consider it as a bug fix.\r\n\r\nPiperOrigin-RevId: 172519268\r\n\r\n* Move global_step_read dependency to model_fn instead of input_fn.\r\n\r\nPiperOrigin-RevId: 172366972\r\n\r\n* [tf.data] Fix broken implementation of `Dataset.from_generator()` on Windows.\r\n\r\nDue to a mix-up between NumPy\'s default array element type for a Python `int` on Windows and Linux, a tf.py_func() in `Dataset.from_generator()` would appear to return the wrong type on Windows (np.int32 instead of np.int64).\r\n\r\nAll code using `Dataset.from_generator()` on Windows was previously broken. This change fixes both `tf.data.Dataset.from_generator()` and `tf.contrib.data.Dataset.from_generator()`. It also enables test coverage for this method on Windows, which should prevent future breakage.\r\n\r\nPiperOrigin-RevId: 172346533\r\n\r\n* Update RELEASE notes for change to run_config random seed.\r\n\r\n* Disable probable timeout flake on Ubuntu machines.\r\n\r\nPiperOrigin-RevId: 172408922\r\n\r\n* Disabling failing contrib tests.\r\n\r\n* Disable S3 on Windows due to build issues.\r\n\r\n* Update serving_input_fn argument name to serving_input_receiver_fn\r\n\r\nPiperOrigin-RevId: 172787460\r\n\r\n* Update the C++ API guide (#13858)\r\n\r\n- Adds the standard warning at the top that people may want the master branch\r\n- Includes a documentation fix for 1.4 (cc_binary -> tf_cc_binary to avoid\r\n  undefined symbols).\r\n\r\n* Add known Dataset issue to RELEASE.md. (#13870)\r\n\r\nAdding info about issue using Unicode strings with Datasets.\r\n\r\n* Add link to datasets doc (#14009)\r\n\r\n* Fix typos in Linear Model Tutorial samples\r\n\r\n1. test_file_name is undefined (should be test_file.name)\r\n2. train_file_name is undefined (should be train_file.name)\r\n\r\nPiperOrigin-RevId: 173733442\r\n\r\n* Fixing the sources docs in r1.4.\r\n\r\n* Remove name_scope from convolutional calls. (#14044)\r\n\r\n* Remove name_scope from convolutional calls.\r\n\r\nPiperOrigin-RevId: 173171871\r\n\r\n* Fix error with cherry-pick.\r\n\r\nSomehow missed one of the layer renamings on the quantize_parameterized_test.\r\n\r\n* Update version strings to 1.4.\r\n\r\n* Resolve //tensorflow relative to tensorflow repo so that tfcompile.bzl can be correctly loaded from another Bazel project (#14103)\r\n\r\n* Update install_sources.md\r\n\r\n* Update Bazel required version for r1.4.'"
64db53f977103b03f37a222853d62f190ddd3485,'Add support of `drop_negatives` for `tf.unsorted_segment_sum` (#13055)\n\n* Add support of `drop_negatives` for `tf.unsorted_segment_sum`\r\n\r\nThis fix tries to address the issue raised in 478 by adding the\r\nsupport of `drop_negatives` for `tf.unsorted_segment_sum`\r\nso that it is possible to skip entries (when index = -1)\r\n\r\nThis fix fixes 478.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\nAdd test case for `drop_negatives` of `tf.unsorted_segment_sum`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\nRemove quote from comments.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Ignore negative indices silently so that the behavior of GPU and CPU matches.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add documentation for the explanation of the negative dropping behavior.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
09964d1e55eb8ff699db4cf1aa38808cf825c2df,"'Fix a tfe.Network reference cycle, make it easier to check for reference cycles\nin unit tests.\n\nPiperOrigin-RevId: 174917072'"
d0de8738e3401bbc5fd142846b4fc124951e5e07,"""Fix ParallelTaskAssigner's use of the HloPassPipeline interface\n\nWe were creating the ParallelTaskAssignment contained in ParallelTaskAssigner\nwith an unoptimized module and then trying to ParallelTaskAssigning::Run on an\noptimized module.  This meant that the flop counts in HloCostAnalysis were\ncached using bogus HloInstruction* pointers, which meant our parallel task\nassignment was not effective.\n\nPiperOrigin-RevId: 174909618"""
7183348f3270b7f9c1b333970e4f9abf6b3c4d8a,'Fix documentation for contrib/model_pruning\n\nPiperOrigin-RevId: 174907982'
25bd6f7a6717f5253b6f015bfab93c7e12426397,"'Allow tfcompile_flags to be a list (#12769)\n\n* Allow tfcompile_flags to be a list\r\n\r\nThis fix tries to fix the issue raised in 12767 where\r\nit was not possible to specify tfcompile_flags as a list:\r\n```\r\ntf_library(\r\n  ...\r\n  tfcompile_flags = [""--target_cpu=\'core-avx2\'"", ""--xla_enable_fast_math=false""]\r\n)\r\n```\r\nwill crash upon build with \'+\' operator applied to incompatible types (select of string, list)\r\n\r\nThis is inconsistent with other rules like \'copts\' in cc_binary.\r\n\r\nThe issue is from tfcompile.bzl:\r\n```\r\n"" "" + (tfcompile_flags or """")),\r\n```\r\n\r\nThis fix uses `"" "".join(tfcompile_flags or [])` instead so that it\r\nis possible to specify the list.\r\n\r\nThis fix fixes 12767.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add support of string for tfcompile_flags\r\n\r\nso that backward compatibility could be maintained.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
98dfabf42ff39af3e958b0ac8d9b86a3699b6d08,'Use `keepdims` and maintain backward compatible for `keep_dims` (#12756)\n\n* Use `keepdims` and maintain backward compatible for `keep_dims`\r\n\r\nThis fix tries to address the issue raised in 6815 where\r\nboth `keepdims` and `keep_dims` were used with inconsistency.\r\n\r\nThis fix changes related api to `keepdims` while at the same\r\ntime maintain backward compatible for `keep_dims` so that\r\nuse will not be impacted.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Use `@deprecated_args`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update goldens API for compatibility changes\r\n\r\nThis commit updates goldens API:\r\n```\r\nbazel-bin/tensorflow/tools/api/tests/api_compatibility_test \\\r\n          --update_goldens True\r\n```\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
5262fd72aee3021391aa5d69e6e8dcc334b0654a,'enable use of transform_graph tool with contrib/rnn (#12566)\n\n* enable use of transform_graph tool with contrib/rnn\r\n\r\n* proper fix for using graphs with RNNs with transform_graph tool'
21869a70423454b0ac66fab34a8a31dc176bc846,'Fixes indendation bug in make_vjp\n\nPiperOrigin-RevId: 174892504'
4e69e02241067129379f73dd4fefe57f0a12bdc9,"'Branch 174861804 (#14326)\n\n* Add ImportGraphDefTest.testMultipleImport to importer_test.py\r\n\r\nThis tests the name deduping behavior of import_graph_def. This\r\nbehavior is actually defined by the op creation logic, not\r\nimport_graph_def, but I added a test here since the C++ ImportGraphDef\r\nfunction must emulate it (and presumably we\'d like to maintain the\r\nimport_graph_def behavior moving forward).\r\n\r\nPiperOrigin-RevId: 174536014\r\n\r\n* Apply lib_internal defines to both lib_internal and lib_internal_impl\r\n\r\nShould fix checkpoint reading with snappy compression.\r\n\r\nWill follow up with testing for this sort of checkpoint issue.\r\n\r\nPiperOrigin-RevId: 174538693\r\n\r\n* n/a (internal change only)\r\n\r\nPiperOrigin-RevId: 174539513\r\n\r\n* A few changes to ApiDef generation:\r\n- Create a separate api_def_*.pbtxt file for each op.\r\n- Add attribute and argument descriptions to ApiDef.\r\n- Apply overrides based on op_gen_overrides.pbtxt file.\r\n\r\nPiperOrigin-RevId: 174540421\r\n\r\n* Add uniquify_names option to ImportGraphDef.\r\n\r\nThis option allows ImportGraphDef to mimic the behavior of the Python\r\nimport_graph_def function, which automatically creates unique node\r\nnames instead of raising an exception (this is due to the Python op\r\nconstruction logic, not import_graph_def directly). This change is\r\na steps towards switching import_graph_def to use the C API version.\r\n\r\nPiperOrigin-RevId: 174541334\r\n\r\n* Fix bad_color param on tf.contrib.summary.image\r\n\r\nPiperOrigin-RevId: 174549117\r\n\r\n* Hlo parser: support control-predecessors.\r\n\r\nAlso,\r\n- Changed from printing control-sucessors to printing control-predecessors\r\nbecause predecessors are defined before use.\r\n- Surround the predecessors with {}.\r\n\r\nPiperOrigin-RevId: 174552224\r\n\r\n* Support pad node.\r\n\r\nPiperOrigin-RevId: 174581035\r\n\r\n* Add tf.contrib.framework.sort, wrapping tf.nn.top_k (#288).\r\n\r\nComparable to np.sort, but their ""kind"" parameter is not implemented (only one sort algorithm) and ""order"" is not applicable (tensors do not have fields).\r\n\r\nPiperOrigin-RevId: 174588000\r\n\r\n* [TF2XLA] Don\'t change output port for control dependency in CopySubgraph.\r\n\r\nIf the output is being squashed then we want control output 0, except where the\r\ninput is a control dependency.\r\n\r\nPiperOrigin-RevId: 174633829\r\n\r\n* Use latest nsync: allows running bazel after having downloaded for ""make"" build\r\n\r\nThe downloads directory for the make build is within the source tree seen by bazel,\r\nwhich means that BUILD files (by whatever name) without those downloaded trees\r\nmust all be valid in their new location, or not recognized by bazel as being BUILD files.\r\nThe new version of nsync handles that, and this change pulls in that new version.\r\n\r\nPiperOrigin-RevId: 174652898\r\n\r\n* Add profiling support to Service::ExecuteParallel.\r\n\r\nPiperOrigin-RevId: 174682772\r\n\r\n* Replicate `Estimator.model_fn` across available GPUs.\r\n\r\ndef replicate_model_fn(model_fn, optimizer_fn, devices=None):\r\n  """"""Replicate `Estimator.model_fn` over GPUs.\r\n     ...\r\n\r\nI tested that it seems to give the right result on cnn_mnist.py on 1 CPU, 1 real GPU, 4 allow_soft_placement=True GPUs.\r\n\r\nSome measurements on CNN MNIST across steps 19300-20000:\r\n\r\n1) no replicate_model_fn call:\r\nglobal_step/sec: 156.254\r\nglobal_step/sec: 155.074\r\nglobal_step/sec: 155.74\r\nglobal_step/sec: 153.636\r\nglobal_step/sec: 157.218\r\nglobal_step/sec: 159.644\r\n\r\n2) replicate across one hardware GPU:\r\nglobal_step/sec: 158.171\r\nglobal_step/sec: 165.618\r\nglobal_step/sec: 162.773\r\nglobal_step/sec: 159.204\r\nglobal_step/sec: 162.289\r\nglobal_step/sec: 167.173\r\n\r\n3) replicate across 4 software GPUs on one hardware GPU (soft placement):\r\nglobal_step/sec: 75.47\r\nglobal_step/sec: 76.16\r\nglobal_step/sec: 75.18\r\n\r\nLoss numbers didn\'t change across the three configurations.\r\n\r\nPiperOrigin-RevId: 174704385\r\n\r\n* Enables wrapping input pipeline into tf.while_loop for all users.\r\n\r\nPiperOrigin-RevId: 174708213\r\n\r\n* SerializeIterator: do not unref the resource until we\'re finished using it.\r\n\r\nThis change avoids a potential use-after-free error if the resource is concurrently serialized and destroyed (e.g. by a DestroyResourceOp or Session::Reset()).\r\n\r\nPiperOrigin-RevId: 174713115\r\n\r\n* Improve error message when a function is already defined with the same name and different hash string.\r\n\r\nPiperOrigin-RevId: 174715563\r\n\r\n* Fix generate_examples build\r\n\r\n- Add -march=native to host_copts and host_cxxopts in configure.py\r\n- Make string.h for abstracting string differences at core interpreter level\r\n- Use tensorflow special arg parse instead of flags\r\n- Switch to using tool instead of data for dependency\r\n- Fix python3  compatibility\r\n  + Use six.StringIO instead of StringIO.StringIO\r\n  + Use print_function\r\n  + Properly set binary flags on TempFile\'s used in toco_convert\r\n- Misc other path fixes\r\n\r\nPiperOrigin-RevId: 174717673\r\n\r\n* Add input format agnostic way to parse HLOs.\r\n\r\nPiperOrigin-RevId: 174719153\r\n\r\n* Remove misleading comment from Eigen build file.\r\n\r\nPiperOrigin-RevId: 174719222\r\n\r\n* Basic plumbing for calling C API from import_graph_def()\r\n\r\nPiperOrigin-RevId: 174724070\r\n\r\n* Memory leak detected when running a heap checker in our tests.\r\n\r\nPiperOrigin-RevId: 174726228\r\n\r\n*    [tpu:profiler] Support the Input Pipeline Analyzer tool in TPU profiler (WIP)\r\n      o.  move input pipeline analyzer related proto for grpc between red and green VMs\r\n      o.  rename perftools.gputools.profiler.collector::TfStatsHelperResult to tensorflow::tpu::TfOpStats.\r\n\r\nPiperOrigin-RevId: 174730411\r\n\r\n* Clean up some reference cycles in eager mode.\r\n\r\nResourceVariables enter graph mode to get a handle. We should probably revisit\r\nthat, but in the meantime we can break the resulting reference cycles.\r\n\r\nPiperOrigin-RevId: 174732964\r\n\r\n* Improved encoding on shapes in grappler.\r\n\r\nPiperOrigin-RevId: 174733491\r\n\r\n* [tf.data] Remove unused members from IteratorContext.\r\n\r\nPiperOrigin-RevId: 174734277\r\n\r\n* Refactor helper functions a bit for virtual gpu changes later.\r\n\r\nPiperOrigin-RevId: 174735029\r\n\r\n* Fix invalid flush_secs argument.\r\n\r\nPiperOrigin-RevId: 174745329\r\n\r\n* Replace the implementation of tf.flags with absl.flags.\r\n\r\nPrevious tf.flags implementation is based on argparse. It contains -h/--help flags, which displays all flags.\r\nabsl.app\'s --help flag only displays flags defined in the main module. There is a --helpfull flag that displays all flags.\r\nSo added --helpshort --helpfull flags.\r\n\r\napp.run now raises SystemError on unknown flags (fixes #11195).\r\n\r\nAccessing flags before flags are parsed will now raise an UnparsedFlagAccessError, instead of causing implicit flag parsing previously.\r\n\r\nPiperOrigin-RevId: 174747028\r\n\r\n* Fold Transpose into Matmul and SparseMatmul.\r\nFold ConjugateTranspose in BatchMatmul.\r\n\r\nPiperOrigin-RevId: 174750173\r\n\r\n* BUGFIX:  special_math.ndtri didn\'t work with dynamic shapes.  This was due to use of constant_op.constant(..., shape=p.shape), where sometimes p was a Tensor of unknown shape.\r\n\r\nPiperOrigin-RevId: 174764744\r\n\r\n* Create a routine that can collapse a subgraph into a fused op\r\n\r\nPiperOrigin-RevId: 174765540\r\n\r\n* Force CUDA runtime initialization only when device count is larger than 0.\r\n\r\nPiperOrigin-RevId: 174767565\r\n\r\n* Remove use of xrange which is not python3 compatible.\r\n\r\nPiperOrigin-RevId: 174768741\r\n\r\n* More thoroughly disable the should_use_result decorator when executing eagerly.\r\n\r\nIt was creating reference cycles.\r\n\r\nAdds a test that TensorArrays create no reference cycles in eager mode.\r\n\r\nPiperOrigin-RevId: 174768765\r\n\r\n* Fix device querying in Keras backend.\r\n\r\nPiperOrigin-RevId: 174769308\r\n\r\n* Fix race bug in AdaptiveSharedBatchScheduler.\r\n\r\nIn ASBSQueue::Schedule, when a new batch is created, it was added to the scheduler outside of the queue\'s lock.  This was done to prevent any unforeseen interactions between the queue lock and scheduler lock.  However, this wasn\'t being done in a thread safe way.\r\n\r\nPiperOrigin-RevId: 174769383\r\n\r\n* Supports multi-dimensional logits and labels in multi class head.\r\n\r\nPiperOrigin-RevId: 174770444\r\n\r\n* Refactor eager benchmarks to subclass Benchmark.\r\n\r\nPiperOrigin-RevId: 174770787\r\n\r\n* Add `parallel_interleave` to tf/contrib/data/__init__.py so that it is directly addressable from tf.contrib.data.\r\n\r\nPiperOrigin-RevId: 174771870\r\n\r\n* Fix DepthToSpaceGrad and SpaceToDepthGrad on data_format NCHW.\r\n\r\nThis fixes #14243.\r\n\r\nPiperOrigin-RevId: 174772870\r\n\r\n* Allow for an old_row_vocab_size, in case a subset of the old_row_vocab_file was used during the checkpoint creation (as is allowed in FeatureColumn._VocabularyListCategoricalColumn).\r\n\r\nPiperOrigin-RevId: 174781749\r\n\r\n* Go: Update generated wrapper functions for TensorFlow ops.\r\n\r\nPiperOrigin-RevId: 174781987\r\n\r\n* [BufferAssignment] Sort allocation\'s ""Assigned"" objects before converting to a proto.\r\n\r\nThis makes the buffer assignment\'s proto dump deterministic.\r\n\r\nRELNOTES: BufferAssignment\'s protocol buffer dump is now deterministic.\r\nPiperOrigin-RevId: 174783549\r\n\r\n* [TF TensorArray] allow reading from an unwritten index if fully defined element_shape is given.\r\n\r\nThis allows one to write to only some indices of a TensorArray before calling stack.\r\nElements that were not written to are treated as all zero tensors.\r\n\r\nPiperOrigin-RevId: 174783569\r\n\r\n* Remove binary dependency from optimize_for_inference_lib\r\n\r\nPiperOrigin-RevId: 174787363\r\n\r\n* Update ops-related pbtxt files.\r\n\r\nPiperOrigin-RevId: 174787397\r\n\r\n* Automated g4 rollback of changelist 174523638\r\n\r\nPiperOrigin-RevId: 174788331\r\n\r\n* Skip non-existent fetch nodes\r\n\r\nPiperOrigin-RevId: 174795864\r\n\r\n* Automated g4 rollback of changelist 174735029\r\n\r\nPiperOrigin-RevId: 174796480\r\n\r\n* Add InceptionResNetV2 to tf.keras and update applications module to match Keras 2.0.9.\r\n\r\nPiperOrigin-RevId: 174796893\r\n\r\n* Fix for LLVM API changes for fast math (https://reviews.llvm.org/rL317488).\r\n\r\nPiperOrigin-RevId: 174799735\r\n\r\n* [TF:XLA] Add two disabled tests with while ops that permute tuple elements.\r\n\r\nThese tests permute the tuple elements of a 3-tuple in each iteration in the following cyclic manner (132), i.e. a shift to the left.\r\n\r\nThe first test just return the result tuple, the second returns the sum of all tuple elements (which is expected to be constant 6, no matter which permutation)\r\n\r\nBoth tests are disabled for now because they fail on all back-ends.\r\n\r\nPiperOrigin-RevId: 174806092\r\n\r\n* Refactor function Optimize.\r\n\r\nPiperOrigin-RevId: 174813300\r\n\r\n* Add a unit test for gradient computation with layout optimizer.\r\n\r\nPiperOrigin-RevId: 174814136\r\n\r\n* Previously if ComputeConstant seen a parameter it failed to proceed.\r\nAfter this change we can specify a list of parameters to it and if we\r\nspecify enough then it will do the computation.\r\n\r\nThe primary goal of this change is to make the HloEvaluator usable\r\nwith ComputationBuilder from tests through ComputeConstant in cases\r\nwhere the input is a parameter (fed by a literal).\r\n\r\nPiperOrigin-RevId: 174845108\r\n\r\n* Use nesting to reduce the number of modules listed in the API TOC.\r\n\r\nPiperOrigin-RevId: 174846842\r\n\r\n* Added CPU matrix exponential op to TensorFlow.\r\nUses Eigen\'s unsupported implementation.\r\n\r\nPiperOrigin-RevId: 174858966\r\n\r\n* variables_to_restore: Differentiate python variables by string name rather than object.\r\n\r\nvariables_to_restore ensured that duplicate variables weren\'t added to the return map by comparing python variable object. Normally there is only one Variable object for each underlying variable, so this wasn\'t a problem. But when one initializes a graph by importing a GraphDef, duplicate python Variable objects are created for each occurrence of a variable in a collection (say, global variables and moving average variables).\r\n\r\nThis change fixes variables_to_restore to work with an imported graph def by not comparing Variable objects.\r\n\r\nPiperOrigin-RevId: 174861804'"
7fb09b93cfb058094ae9cb7edec99e9c3d7f73bd,'Fixed bug in offline debugger which prevented viewing events.\n\nPiperOrigin-RevId: 174876223'
e4cb8d93775bb9f47e1a632d984495debbbe1b37,'Renames sparse_precision_at_k to precision_at_k and sparse_average_precision_at_k to average_precision_at_k.\nAlso fixes some line wrapping.\n\nPiperOrigin-RevId: 174865470'
955b506d24a63e77772ecda28af9cab1ceffb9e7,"""variables_to_restore: Differentiate python variables by string name rather than object.\n\nvariables_to_restore ensured that duplicate variables weren't added to the return map by comparing python variable object. Normally there is only one Variable object for each underlying variable, so this wasn't a problem. But when one initializes a graph by importing a GraphDef, duplicate python Variable objects are created for each occurrence of a variable in a collection (say, global variables and moving average variables).\n\nThis change fixes variables_to_restore to work with an imported graph def by not comparing Variable objects.\n\nPiperOrigin-RevId: 174861804"""
db430c4bb275e05ee65dc27c7f771f778bfcbcf2,"'[OpenCL] Uses Eigen implementation of asinh, acosh and atanh (#12010)\n\n* [hotfix] Re-enable once available in Eigen\r\n\r\n\t- acosh\r\n\t- asinh\r\n\t- atanh\r\n\r\n* [OpenCL] hyperbolic function registration\r\n\r\n Registers:\r\n  - acosh\r\n  - asinh\r\n  - atanh\r\n\r\n* Fixes typo: SYC->SYCL\r\n\r\n* [Eigen] Bumps to the version that supports asinh, acosh and atanh\r\n\r\n* [Eigen] Version Bump that covers: https://github.com/tensorflow/tensorflow/pull/12010#issuecomment-327412653\r\n\r\n* Avoid numext implementation for Android (asinh, acosh, atanh)\r\n\r\n* As requested in https://github.com/tensorflow/tensorflow/pull/12010#issuecomment-331531894\r\n\r\n* #if instead of #ifdef EIGEN_HAS_CXX11_MATH'"
82cd76bd36217e7739e3763d50a31ef77ab832fa,'Fix for LLVM API changes for fast math (https://reviews.llvm.org/rL317488).\n\nPiperOrigin-RevId: 174799735'
c81acfb025abe417d80ffa677edfe2dd1bcda58e,"""Add 'axis' option for 'tf.boolean_mask()' (#11558)\n\n* Add 'axis' option for 'tf.boolean_mask()'\r\n\r\nThis fix tries to address 9721 where it was not possible to pass an\r\n'axis' option for 'tf.boolean_mask()'.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add tests for 'axis' option in 'tf.boolean_mask()'\r\n\r\nThis fix adds tests for 'axis' option in 'tf.boolean_mask()'\r\n\r\nThis fix is part of the effort to fix 9721.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Move the new args 'axis=None' to the end for backward compatibility\r\n\r\nThis fix move the new args 'axis=None' to the end for backward compatibility\r\nand adds additional tests to cover cases where mask is more than 1-D.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update docstring for 'tf.boolean_mask()'\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update goldens for api compatibility changes.\r\n\r\nThis commit update API goldens.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
e641c402f60aabaca029393355626a54a99809a4,'Fix DepthToSpaceGrad and SpaceToDepthGrad on data_format NCHW.\n\nThis fixes #14243.\n\nPiperOrigin-RevId: 174772870'
48631f367ebcbb23f6fe73482398b594279c2dea,"""Fix race bug in AdaptiveSharedBatchScheduler.\n\nIn ASBSQueue::Schedule, when a new batch is created, it was added to the scheduler outside of the queue's lock.  This was done to prevent any unforeseen interactions between the queue lock and scheduler lock.  However, this wasn't being done in a thread safe way.\n\nPiperOrigin-RevId: 174769383"""
6fcd9785902f6fd004c6b11212c0611dda442547,'Fix device querying in Keras backend.\n\nPiperOrigin-RevId: 174769308'
389eaade3fd29426f4263430e20384ec1ae912be,"""BUGFIX:  special_math.ndtri didn't work with dynamic shapes.  This was due to use of constant_op.constant(..., shape=p.shape), where sometimes p was a Tensor of unknown shape.\n\nPiperOrigin-RevId: 174764744"""
19559c06fef36c75b0bd773ba78088a4bc7161a3,"'Apply layer normalization to LSTMCell and class CoupledInputForgetGateLSTMCell #9600 (#9839)\n\n* Apply layer normalization to CoupledInputForgetGateLSTMCell. (Review required #9600)\r\n\r\n* changed variable name _g, _b => _norm_gain, _norm_shift\r\n\r\n* Add layer normalization reference.\r\n\r\n* Add an unit test that checks the layer normalization to LSTMCell.\r\n\r\n* Add unit test verifies LSTM Layer Normalization.\r\n\r\nThe results of LSTMCell and LayerNormBasicLSTMCell should be same.\r\n\r\n* Fix bugs on rnn cells.\r\n\r\n* Add LayerNormLSTMCell on contrib.rnn\r\n\r\n* Apply changes on rnn_cell_test.\r\nFix bugs on rnn_cell.\r\nAdd layer_norm parameter on _linear function.\r\n\r\n* Bug fix : add missing import\r\n\r\n* Add custom _linear function inside the LayerNormLSTMCell.\r\n\r\n* Sanity check fix : RNNCell => LSTMCell\r\n\r\n* Sanity check fix again\r\n\r\n* remote state_is_tuple argument\r\n\r\n* remove num_unit_shards and num_proj_shards arguments.\r\n\r\n* remove state_is_tuple in LayerNormLSTMCell\r\n\r\n* remove state_is_tuple in core_rnn_cell_test.py\r\n\r\n* fix LayerNormLSTMCell test\r\n\r\n* keep rnn_cell_impl.py unmodified.\r\n\r\n* @ebrevdo your feedback is applied :)'"
17ce98437f34ab5439b3e46adb2eb5b692c48abd,'Fix quantizing graph with control flows (#9792)\n\nRelated to #7162'
8fd1de8116b7412aca886b24b9bb4897bd7d9209,'Fix batch dataset op test (#14297)\n\n* Include deps for batch_dataset_op_test in pip\r\n\r\n* Add deps of batch_dataset_op_test to pip\r\n\r\n* Update BUILD\r\n\r\n* Disable batch_data_op_test in pip\r\n\r\n* Update BUILD'
2652704b576adc16b4d735f651cea1024e88b72e,"""Replace the implementation of tf.flags with absl.flags.\n\nPrevious tf.flags implementation is based on argparse. It contains -h/--help flags, which displays all flags.\nabsl.app's --help flag only displays flags defined in the main module. There is a --helpfull flag that displays all flags.\nSo added --helpshort --helpfull flags.\n\napp.run now raises SystemError on unknown flags (fixes #11195).\n\nAccessing flags before flags are parsed will now raise an UnparsedFlagAccessError, instead of causing implicit flag parsing previously.\n\nPiperOrigin-RevId: 174747028"""
e120e50bf5fd883cc28b584c720d959341db502d,'Fix invalid flush_secs argument.\n\nPiperOrigin-RevId: 174745329'
c9885ea7a73ade2d3f8e4712c3a14d9da72462b8,"""Fix generate_examples build\n\n- Add -march=native to host_copts and host_cxxopts in configure.py\n- Make string.h for abstracting string differences at core interpreter level\n- Use tensorflow special arg parse instead of flags\n- Switch to using tool instead of data for dependency\n- Fix python3  compatibility\n  + Use six.StringIO instead of StringIO.StringIO\n  + Use print_function\n  + Properly set binary flags on TempFile's used in toco_convert\n- Misc other path fixes\n\nPiperOrigin-RevId: 174717673"""
7edaa93308d7b4d03dd32c009c1ffe5847b9a8b8,'fix compilation error when working without cuda\n\nSigned-off-by: Noa Ezra <noae@mellanox.com>\n\nadding cuda library to BUILD file in order to use GOOGLE_CUDA define\n\nSigned-off-by: Noa Ezra <noae@mellanox.com>'
097d536c02d5e9f8ab0c2269161343471c2a00fe,'Call done in case of not OK status fix + light code refactoring\n\nSigned-off-by: dariavel <daria@mellanox.com>'
8011eda4b70faac6025c6b0553c3d95474adb5fe,"'Arbitrary dim for slice (#11140)\n\n* finish refactor\r\n\r\n* delete impl files\r\n\r\n* compile success\r\n\r\n* modify slice interface used in strided_slice\r\n\r\n* delete impl files\r\n\r\n* fix undefined error of helper function\r\n\r\n* finish refactor\r\n\r\n* delete impl files\r\n\r\n* compile success\r\n\r\n* modify slice interface used in strided_slice\r\n\r\n* delete impl files\r\n\r\n* fix undefined error of helper function\r\n\r\n* type unsupported\r\n\r\n* remove changes in py file\r\n\r\n* move SliceSimple function into header\r\n\r\n* fix compiling problem\r\n\r\n* add python test\r\n\r\n* add python test\r\n\r\n* change type\r\n\r\n* compile each dim of slice seperately\r\n\r\n* add files in tensorflow/contrib/makefile/tf_op_files.txt\r\n\r\n* add some const\r\n\r\n* add benchmark\r\n\r\n* capitalize and punctuate comment\r\n\r\n* uncollapse the for loop by Duff\'s device\r\n\r\n* remove "">>>>>>>>>>""'"
9e22eaabce4d3c34c8b9f447e98b6c2e5f4a4f5a,'fix fused_batchnorm_test.py (#14099)'
c3252b9671f3b689b9c6a8fe6f23ea3292a87922,'Fix position of arguments of nce_loss calculation (#14066)'
6cd78fa2ffcbb903c4c4218ce541487c724abb2e,'Fix typo in `mobile/prepare_models.md` (#14258)\n\nThis fix fixes a typo in `mobile/prepare_models.md`:\r\n`targetting` -> `targeting`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
9389c25983e025daff330fc4126d6a525ce32c77,"'Add GPU kernel for `tf.bincount` (#13813)\n\n* Split BincountOp with GPU and CPU version\r\n\r\nThis commit splits BincountOp with GPU and CPU version.\r\nGPU implementation to follow.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add GPU kernel for `tf.bincount`.\r\n\r\nThis fix tries to address the issue raised in 11554 where\r\nthere is no GPU support for `tf.bincount`.\r\n\r\nThis fix adds GPU support for `tf.bincount`.\r\n\r\nThis fix fixes 11554.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update test cases for GPU support of `tf.bincount`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address cases where input.size() == 0 or output.size() == 0\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Use CUB for histogram bincount when weight = 1.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Use unsorted_segment_sum when weights.size() != 0\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Remove unneeded GPU kernels.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update Bazel BUILD file with Buildifier\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Move unsorted_segment_sum to python part.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address review comments\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address review feedback.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add benchmark tests.\r\n\r\nSome run result:\r\n```\r\nRunning main() from test_main.cc\r\nBenchmark                  Time(ns) Iterations\r\n----------------------------------------------\r\nBM_Bincount_cpu_32_1000      114922       5150   285.1M items/s\r\nBM_Bincount_cpu_32_2000      124291       5524   263.6M items/s\r\nBM_Bincount_cpu_32_5000      159548       4287   205.4M items/s\r\nBM_Bincount_cpu_64_1000      145006       4793   452.0M items/s\r\nBM_Bincount_cpu_64_2000      150301       4457   436.0M items/s\r\nBM_Bincount_cpu_64_5000      180001       3880   364.1M items/s\r\nBM_Bincount_cpu_128_1000     204993       3405   639.4M items/s\r\nBM_Bincount_cpu_128_2000     209144       3311   626.7M items/s\r\nBM_Bincount_cpu_128_5000     231580       3003   566.0M items/s\r\n\r\nBM_Bincount_gpu_32_1000       61178      10000   535.6M items/s\r\nBM_Bincount_gpu_32_2000       61021      10000   537.0M items/s\r\nBM_Bincount_gpu_32_5000       61177      10000   535.6M items/s\r\nBM_Bincount_gpu_64_1000       61317      10000   1068.8M items/s\r\nBM_Bincount_gpu_64_2000       60726      10000   1079.2M items/s\r\nBM_Bincount_gpu_64_5000       61721      10000   1061.8M items/s\r\nBM_Bincount_gpu_128_1000      69935      10000   1874.2M items/s\r\nBM_Bincount_gpu_128_2000      79760       9852   1643.3M items/s\r\nBM_Bincount_gpu_128_5000     100407       6974   1305.4M items/s\r\n```\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Remove Bincount from `hidden_ops.txt`, and remove unneeded\r\n\r\nlibraries so that Jenkins could pass.\r\n\r\nBincount should not be added `hidden_ops.txt` as it will cause\r\ncompatibility test fail.\r\n\r\nAnd the following libs should not be needed in CI/CD:\r\n```\r\n-        ""@local_config_cuda//cuda:cublas"",\r\n-        ""@local_config_cuda//cuda:cuda_driver"",\r\n-        ""@local_config_cuda//cuda:cudnn"",\r\n-        ""@local_config_cuda//cuda:cufft"",\r\n-        ""@local_config_cuda//cuda:curand"",\r\n```\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
40fc0cb0258352b5d00f25bab55a6991b06b959b,'Fix issue in the `Defun` docs\n\nThis fix fixes a couple of typos in the `Defun` docs:\n`tf.Constant` -> `tf.constant`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
7f84d88d39f236e5c0cea492a2248782e696c972,'Fix typo : specified (#14210)'
98f121b0e87624d97edfc3bdb85f419fe3e0da00,"'Initial Haiku support (#13569)\n\n* Disable PIE on Haiku for external deps\r\n\r\n* Networking functionality lives in libnetwork on Haiku\r\n\r\n* Disable PIE for Haiku\r\n\r\n* Haiku support for getting CPU_COUNT\r\n\r\n* ERRNO fix for Haiku\r\n\r\n* Revert ""Disable PIE on Haiku for external deps""\r\n\r\nThis reverts commit a2f135e553c9c8f7cc6dfa0f6456b1025a434f10.\r\n\r\n* Revert ""Disable PIE for Haiku""\r\n\r\nThis reverts commit bbd0215fbd208b8c5af7b2a0739058d2306832fb.\r\n\r\n* Implement PIE switch on top level\r\n\r\nand PIE switch for external modules'"
7f1c0af69e19321f960ee108c3af4eb652ec8b56,"'Float16 (half or Eigen::half) for conv3d ops (#12832)\n\n* fp16 on conv3d, conv3d_transpose, tf.layers.batch_norm and tf.slim.batch_norm (batchnorms without fused_batch_norm)\r\n\r\n* fp16 for conv3d_transposed\r\n\r\n* remove batch_norm fp16 and rewrite conv3d kernels registrations\r\n\r\n* remove additional logging prints\r\n\r\n* tests for conv3d gradients\r\n\r\n* fp64 test for cpu\r\n\r\n* input normalization and requests\r\n\r\n* fix initialization comment and remove unnecessary variable\r\n\r\n* lowered tolerance for fp16 test\r\n\r\n* remove unnecessary part of the comment'"
69ba0d89d3c5a026afd569ebd35d72a4505cd2e3,'Fix typos (#14204)'
7603480f369f53e49d7f3f35dab23a8ffc177e88,'Add support of `axis` for `tf.unique` (#12952)\n\n* Convert unique implementation to be compatible with axis\r\n\r\nThis commit made the conversion so that unique could\r\nbe extended with axis. A custom unordered_map is used.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add support of `axis` for `tf.unique`\r\n\r\nThis commit adds support of `axis` for `tf.unique`.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases of `axis` support for `tf.unique`.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address review feedback.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Change forward_input_or_allocate_output to allocate_output to fix\r\n\r\nthe following failures:\r\n```\r\n//tensorflow/python/debug:analyzer_cli_test\r\n//tensorflow/python/debug:session_debug_file_test\r\n//tensorflow/python/feature_column:feature_column_test\r\n```\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
bfd05fe0bcacd1de932836e70492d9b5e1ee16cb,"'Add RDMA verbs configuration (#13564)\n\n* RDMA device and port configuration added\r\n\r\n* RDMA pkey, q_depth, timeout, retry_cnt and sl configuration added\r\n\r\n* RDMA mtu configuration added + chage tab to 2 spaces\r\n\r\n* Add RDMA_GID_INDEX to configure verbs\r\n\r\nSigned-off-by: dariavel <daria@mellanox.com>\r\n\r\n* No need in device, context is enough\r\n\r\nSigned-off-by: dariavel <daria@mellanox.com>\r\n\r\n* Add PORT check during DEVICE setting + some minor refactoring\r\n\r\nSigned-off-by: dariavel <daria@mellanox.com>\r\n\r\n* RDMA mtu configuration change->check value before channel state\r\n\r\n* Typo fix\r\n\r\nSigned-off-by: dariavel <daria@mellanox.com>\r\n\r\n* Allow GID index without RoCE v2 to run but with a warning\r\n\r\nSigned-off-by: dariavel <daria@mellanox.com>\r\n\r\n* Add RDMA configuration description\r\n\r\n* Post code review fixes and function headers\r\n\r\nSigned-off-by: dariavel <daria@mellanox.com>\r\n\r\n* create 1 set_param function instead of many functions\r\n\r\nSigned-off-by: Noa Ezra <noae@mellanox.com>\r\n\r\n* add error if sl value is larger than 7\r\n\r\nSigned-off-by: Noa Ezra <noae@mellanox.com>\r\n\r\n* Update DEARME. Fix spacing and remove useless query\r\n\r\nSigned-off-by: dariavel <daria@mellanox.com>\r\n\r\n* Fix spacing, indentation and port_num bug\r\n\r\nSigned-off-by: Noa Ezra <noae@mellanox.com>\r\n\r\n* Improve GID index checks\r\n\r\nSigned-off-by: dariavel <daria@mellanox.com>\r\n\r\n* fix bug in set_device\r\n\r\nSigned-off-by: Noa Ezra <noae@mellanox.com>\r\n\r\n* INFO instead of error in case of Unknown port link layer\r\n\r\nSigned-off-by: Noa Ezra <noae@mellanox.com>\r\n\r\n* Add traffic class configuration\r\n\r\nSigned-off-by: dariavel <daria@mellanox.com>\r\n\r\n* Clang code formating\r\n\r\nSigned-off-by: dariavel <daria@mellanox.com>\r\n\r\n* Cut long line to 80 caracters\r\n\r\nSigned-off-by: dariavel <daria@mellanox.com>\r\n\r\n* Code styling\r\n\r\nSigned-off-by: dariavel <daria@mellanox.com>'"
75bc4cb0f4f85c2f8f355ed3a0171a73c0937646,'typo fixed (#14088)\n\nthere is an additional whitespace'
83dbec4a24d0baae66e1652c35729d9d0de09c6a,"'Fix typos (#14152)\n\n* Fix typos\r\n\r\nThis PR fixes some typos: tf.constant, tf.placeholder.\r\n\r\n* Made tuple to real complex type.\r\n\r\nfixed `tf.Variable((12.3, -4.85), tf.complex64)` to generate a rank\r\n0 tensor instead of 1, the same for another error.'"
8c588ea0cf92b3a9d9cf96a5a5fb4770d9d26e57,'Update head.py (#14197)\n\n* Minor typo fix\r\n\r\n* Minor typo fix'
ab158ef8f28a8ec46bf9fab6a7a16d8045790898,'Fixes for Raspberry Pi cross-compilation in CI Build (#14253)\n\n* Fixes for Raspberry Pi cross-compilation problems\r\n\r\n* Fixes for Raspberry Pi cross-compilation problems'
c47abd8cf3f142f23fdd325c09b59b73fae5792a,'[CMake] Generate `gen_audio_ops.py`. (#14216)\n\nFixes #14004.'
55e0fd903f45d9be6c212d3bc09057b634b52202,'Fix bad_color param on tf.contrib.summary.image\n\nPiperOrigin-RevId: 174549117'
f21c31c01b04db909e206949087d40f4fff90553,'Fix cudnn v6 function being used in cudnn v5 build (#13255)'
db10718b38b2884cb5ed46d33c135c079f649d16,"'Handle nil return from TF_TensorData (#14082)\n\nWith some memory allocators, attempting to allocate 0 bytes will return\r\na null pointer. This specifically happens when building tensorflow with\r\nmkl support. If TF_TensorData returns null, the go code to create a\r\nslice from the data leads to a null pointer exception. This fixes the\r\nissue by checking for the nil return and returning a slice zero value to\r\n(nil) to the caller. Fixes #13764.'"
8245e79eff1ba3b790dbfbc0acb2a31e6dd30d1d,'fix typo (#14168)'
9cd686f868aa60b73ea9a270077997fcac5c4b25,'Dockerfile.gpu: use the runtime cuDNN v6 image (#14192)\n\nThe generated Docker image will be approximately 900 MB smaller.\r\n\r\nThe Dockerfile switched to the devel image a long time ago to\r\nworkaround a bug when looking up CUDA libraries. This problem has been\r\nfixed in the meantime.'
fccc3d2365fca265d3c6cecf367a3b147b7b51dc,'Upgrade gRPC (#13958)\n\n* Set up command line option to make sure that grpc build is done with GRPC_ARES=0\r\n\r\n* Update cmake tag\r\n\r\n* Remove cares\r\n\r\n* Remove no-longer-used file\r\n\r\n* Properly identify location of GRPC_ARES=0\r\n\r\n* style nit: remove extra empty lines\r\n\r\n* Use https\r\n\r\n* Comment out the mirrors\r\n\r\n* Update commit point\r\n\r\n* Allow grpc to depend on protobuf-headers external dependence\r\n\r\n* Fix to master version of gRPC'
8fdcecc8018682eef1386beb3ae1bdcf137c5c1c,'Apply lib_internal defines to both lib_internal and lib_internal_impl\n\nShould fix checkpoint reading with snappy compression.\n\nWill follow up with testing for this sort of checkpoint issue.\n\nPiperOrigin-RevId: 174538693'
ab1ca70f6fef0bbc608ed45a804afe5db0c45b6b,'merge fix'
a0671c40d8940c4faff2112d8137bc51b958fcb9,'Fix some recently introduced invalid memory accesses.\n\nPiperOrigin-RevId: 174535271'
bfd39838de87cba85f9edf028c1c30bae86da164,"'Android demo: fix handling of landscape rotation mode in classifier and detector demos. To use the orientation must be changed from ""portrait"" to ""landscape"" in AndroidManifest.xml. Resolves #9412 and #10348\n\nStylization demo is still portrait-only due to the complexity of the UI.\n\nPiperOrigin-RevId: 174534886'"
0752bba43ecf770aaa22c218bd35c3e9a1d71792,"""Add C API if/else in import_graph_def in approximately the right place\n\nI'm working on the C API path for import_graph_def, and diff tools are\nhaving trouble highlighting the relevant changes correctly. This\nchange adds the if/else switch that will eventually be needed, and\nindents the Python-only code (these are the only changes besides\nfixing long lines, despite what the diff looks like). This will make\nthe future diff that actually makes interesting changes more readable.\n\nPiperOrigin-RevId: 174516543"""
26f2465b5acba2b5c77a6015bf145b31e27035f2,'Fix flush_millis in create_summary_file_writer\n\nThis changes the parameter name to fix a discrepancy with the\nC++ implementation.\n\nPiperOrigin-RevId: 174514788'
46c1e3b362f2ee16f8476a5eaf7e952e44c1b653,'Fix bullets on install page\n\nPiperOrigin-RevId: 174497360'
4e75ae1f1e8c6479cfa86fde1a940453945e6671,'Allow LMDB to be opened by multiple readers simultaneously (#13398)\n\n* Clean up context at LMDBReader::OnWorkStartedLocked()\r\n\r\n* Add testcase: test_read_from_file_repeated\r\n\r\n* Update lmdb test\r\n\r\n* Allow a single LMDB to be opened by multiple readers simultaneously\r\n\r\n* Add test\r\n\r\n* Fix the range issue\r\n\r\n* Fix the range issue'
fc0c746e57f231d78f1d6f6d3a4e9fd770f58422,'typo fixed (#14175)'
7bb2d57b0b051d1cf8dd74d3276bf5a452774172,"""Rewrite CopyInsertion to use module-scoped HloAliasAnalysis. The net effect (number of copies inserted) is roughly similar to the existing implementation, but the new implementation is much more general. The new implementation can handle entry argument buffer reuse with minimal modification, for example.\n\nSome unnecessary copies are still added due to deficiencies in buffer assignment (b/62548313), but these can be removed when buffer assignment also uses HloAliasAnalysis.\n\nAlso address a few issues uncovered with this cl:\n\n(1) For inplace dynamic slice in llvm backends, truncate do not wrap the slice. This matches the behavior of the non-inplace variant.\n\n(2) Disable SelectBetweenPredTuples test on GPU. The test introduces top-level buffer ambiguity which is not tolerated by the gpu backend.\n\n(3) When deserializing HLO form a proto, do not uniquify instruction names in fused computations.\n\n(4) In dataflow analysis, don't deallocate deleted HloValues during propagation.\n\n(5) In dataflow analysis, fix issue with live_out_of_computation property.\n\nPiperOrigin-RevId: 174423881"""
8a7f5c47dcb71deb71df4a72f3cf829904c5a28e,'Fix broken code tag in tf.contrib.data README\n\nPiperOrigin-RevId: 174417572'
fbc5460b0a5c2daa477c68477b9330424054ba25,"'Fix incorrect use of JNI_COMMIT.\nIn the case of GetByteArrayElements returning a copy, JNI_COMMIT will not free the copy buffer. Using 0 instead fixes the issue:\n\nTable 4-10 Primitive Array Release Modes\nmode       actions\n0          copy back the content and free the elems buffer\nJNI_COMMIT copy back the content but do not free the elems buffer\nJNI_ABORT  free the buffer without copying back the possible changes\n\nhttp://docs.oracle.com/javase/7/docs/technotes/guides/jni/spec/functions.html#wp17314\n\nIn this case, the getByteArrayElements and matching release call are unnecessary - since the elements are never observed, we can just copy into it directly via the JNI APIs.\n\nPiperOrigin-RevId: 174409824'"
3a8eaaf6a238e238a7adac9886b1569d7e43ae23,'Add a new method `get_master` to `TPUClusterResolver` such that users can easily specify the grpc connection string using ClusterResolvers rather than specifying the IP address manually.\n\nAlso fixes a bug in the `TPUClusterResolverTest` that caused tests to not run at all.\n\nPiperOrigin-RevId: 174398488'
b7e59ae74ac189df78ec2222694796cb6791d63c,"'Hlo parser: support rank 0-5 literals and tuple literal.\n\nAlso,\n- Get rid of the trailing commas in Literal::ToString;\n- Change comments Literal::ToString from line comment style to block comment style.\n- Fix test failures caused by the literal format change.\n- Print all literals.\n\nPiperOrigin-RevId: 174392388'"
88917888f509e3e61ffe632534476e7b09d3326a,"'Merge changes from github.\nEND_PUBLIC\n\n---\nCommit d77b99809 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by gunan<gunan@google.com>:\nUpdate docs for `begin_params_axis` (#13979)\n\nThis fix fixes the issue raised in 13975 where `begin_shift_axis`\nis actually `begin_params_axis`.\n\nThis fix fixes 13975.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n---\nCommit e6a242b4e authored by Yifei Feng<fengyifei2026@gmail.com>\nCommitted by gunan<gunan@google.com>:\nAdd GCC/Compiler version to issue template. (#14113)\n\nAs suggested in #13930\n---\nCommit 7ece1c0b8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMoving model_pruning library to tf.contrib\n\nPiperOrigin-RevId: 174214419\n\n---\nCommit 693325c83 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nLog the full traceback in Coordinator.request_stop if it\'s available\n\nPiperOrigin-RevId: 174213375\n\n---\nCommit 6c4a769ab authored by Mark Daoust<markdaoust@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDelete duplicate label_image script.\n\nThe version in examples/label_image is more complete (with image size and normalization options), so it can be used with `mobilenets`.\n\nAlso: removed bazel from main tutorial instructions.\nPiperOrigin-RevId: 174212674\n\n---\nCommit 7a5b81c29 authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMaterialize shape for ShapeN.\n\nPiperOrigin-RevId: 174211500\n\n---\nCommit 78041b1dd authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ninternal change\n\nPiperOrigin-RevId: 174211190\n\n---\nCommit 2118fcf62 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBUILD cleanup in contrib/tensor_forest/...\n\nPiperOrigin-RevId: 174201884\n\n---\nCommit 6849ef8f6 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ninternal change.\n\nPiperOrigin-RevId: 174197506\n\n---\nCommit 37370d98f authored by resec<resec0109@gmail.com>\nCommitted by gunan<gunan@google.com>:\nSupport more Android arch in Makefile build (#12806)\n\n* Support more Android arch in Makefile build\n\n* update Makefile\n\n* fix MARCH_OPTION\n\n* persist multiple architectures across builds\n\n* persist multiple architectures across builds\n\n* persist multiple architectures across builds\n\n* persistence bug fix\n\n* persistence bug fix\n\n* persistence bug fix\n\n* add -latomic to linker flags for benchmark\n\n* Change ANDROID_OS_ARCH to ANDROID_HOST_OS_ARCH\n\n---\nCommit c40d54173 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExposes recall_at_top_k under tf.metrics.\n\nPiperOrigin-RevId: 174189641\n\n---\nCommit 18bf5b2d9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nReturn a classifier score of the same type as the logits.\n\nPiperOrigin-RevId: 174184871\n\n---\nCommit 9da02be11 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake \'collections\' a list, as documented and expected by downstream custom getters.\n\nPiperOrigin-RevId: 174184867\n\n---\nCommit 16b0bb095 authored by loki der quaeler<quaeler@users.noreply.github.com>\nCommitted by gunan<gunan@google.com>:\nAdding a feed for boolean tensors to TensorFlowInferenceInterface (#14059)\n\n* Sublime Text index-ignore file (a copy of .gitignore)\n\n* Adding the requested implementation to TensorFlowInferenceInterface\n\n* Removing Sublime Text .ignore file from remote repository\n\n* indeed there was\n\n---\nCommit fa9d8aab4 authored by Urs K?ster<ursk@users.noreply.github.com>\nCommitted by gunan<gunan@google.com>:\nAdd  \'log_progress\' argument for tf.estimator.Estimator\'s evaluate function (#13695)\n\n* Add  argument for tf.estimator.Estimator\'s evaluate function\n\n* add log_progress argument to ._convert_eval_steps_to_hooks for TPU estimator\n\n* log only every 10th step if more than 100 iterations in _StopAfterNEvalsHook\n\n* ensure last step is logged and aim for 10 outputs total\n\n---\nCommit 07a91dac5 authored by nolan liu<nolan.liou@gmail.com>\nCommitted by gunan<gunan@google.com>:\nmake `gather` cpu kernel to be multiple threads. (#12246)\n\n* Change the gather op to multi-thread.\n\n* Modify the gather kernel of xla compiler in order to be compatible with multi-threads cpu kernel.\n\n* Add prefetch logic to gather op kernel.\n\n* Update the indention of gather op kernel code.\n\n* Update the gather kernel code for multiple thread.\n\n* Remove reference to ealier version of code in gather functor.\n\n* Change the framework_lite dep of gather_functor to framework.\n\n* Remove mutex guard in gather functor.\n\n---\nCommit a956486be authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove an erronous __attribute__((...)) tag.\n\nThere is no __attribute__((guarded)) or __attribute__((pt_guarded)) attribute in Clang, and if we turn on warnings for unknown attributes (which are currently turned off), this causes build failures.  This means that, when the warnings are turned off, this is simply a no-op.\n\nPiperOrigin-RevId: 174134252\n\n---\nCommit 27412f3b6 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd compiler/tf2xla/sharding_util.h with utilities for getting the core device from\na Node.\n\nPiperOrigin-RevId: 174133602\n\n---\nCommit ab4349a26 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBUILD cleanup in selected packages in contrib/...\n\nPiperOrigin-RevId: 174115744\n\n---\nCommit 4aa90bfd3 authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add HLO matchers that check parameter numbers and GTE indices.\n\nThis lets you do\n\n  EXPECT_THAT(foo, op::Parameter(42));\n\nand\n\n  EXPECT_THAT(bar, op::GetTupleElement(baz, 8));\n\nPiperOrigin-RevId: 174113597\n\n---\nCommit f97e7c69b authored by Olivia Nordquist<nolivia@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\npartially exposing the _set_attr and _get_attr method in python\n\nPiperOrigin-RevId: 174113043\n\n---\nCommit 8e732a312 authored by Artem Belevich<tra@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPrefer cubin over PTX when we launch CUDA kernels.\n\nNative GPU code, if we have it, should be preferred over JIT compilation of PTX.\n\nPiperOrigin-RevId: 174110646\n\n---\nCommit 2ccf3aba4 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPermanently remove several modules from tf.contrib.bayesflow.\n\nThese modules are very infrequently used and will not be developed moving forward.\nRemoving this code paves the way for remaining modules in tf.contrib.bayesflow\nto move to their own repo.\n\nPiperOrigin-RevId: 174110067\n\n---\nCommit ef7052fbd authored by Andrew Selle<aselle@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nOpen source build support for TensorFlow Lite Toco.\n\n- Handle proto incompatibilities\n- Mixed bazel compatibility fixes.\n- Add link to absl libraries\n\nPiperOrigin-RevId: 174103981\n\n---\nCommit d6a9cd40c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix ""hides overloaded virtual function"" error in default/gpu_tracer.cc when compiled with -Werror,-Woverloaded-virtual.\n\nPiperOrigin-RevId: 174101519\n\n---\nCommit b242a7988 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSet metric variable initializers as lambda.\n\nPiperOrigin-RevId: 174100686\n\n---\nCommit 57b1c5621 authored by Alan Yee<alyee@ucsd.edu>\nCommitted by drpngx<drpngx@users.noreply.github.com>:\nAdd deprecation notes (#12614)\n\n* Update lookup_ops.py\n\nMinor comment fix\n\n* Update metrics_ops.py\n\nAdd deprecated notes\n\n* Update tensor_util.py\n\nUpdate deprecated note on remove_squeezable_dimensions\n\n* Update metric_ops.py\n\nAdd deprecated notes\n\n---\nCommit 453dd5848 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nK-FAC: Support for tf.AUTO_REUSE when re-using registrations. Multi-tower support for FullFB, NaiveDiagonalFB. Removal of LayerCollection.generic_registrations.\n\nPiperOrigin-RevId: 174092003\n\n---\nCommit 0a7be5a2f authored by Sanjoy Das<sanjoy@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRename (Add|Get)ProfileResult to something more specific; NFC\n\nPiperOrigin-RevId: 174084570\n\n---\nCommit f1916f8f6 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n- Remove slice hack to properly initialize missing entries in weight matrices\n  - Add real support for EmbeddingColumns / input_layer()\n- Fix warmstarting for non-PartitionedVariables\n\nPiperOrigin-RevId: 174083777\n\n---\nCommit f567ddf87 authored by Alex Sergeev<alexander.sergeev@live.com>\nCommitted by drpngx<drpngx@users.noreply.github.com>:\nAdd tf.sysconfig.get_compile_flags() & tf.sysconfig.get_link_flags() for custom operators (#13496)\n\n* Add flags for custom op compilation\n\n* Move ABI logic into version_info.cc\n\n* Add #include <string> to be able to read _GLIBCXX_USE_CXX11_ABI value.\n\n* Make flags to be lists\n\n* Add _flag to cxx11_abi\n\n* Address review comment.\n\n* Move CXX import to the top level.\n\n* Add goldens update\n\n---\nCommit 0cddb9bca authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 174074499\n\n---\nCommit ba8c38959 authored by Neal Wu<wun@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nChange wide_deep.md and wide.md to reference the TensorFlow official models version rather than the tf.contrib.learn version\n\nPiperOrigin-RevId: 174074112\n\n---\nCommit f3006422c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake `RunTrainOpsHook` public.\n\nPiperOrigin-RevId: 174073925\n\n---\nCommit 21dafd6d2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 174073569\n\n---\nCommit 66fc99a3b authored by Artem Belevich<tra@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA:GPU] Short-circuit compilation of no-op IR -> empty PTX.\n\nThere\'s no point constructing/running LLVM pipeline if we know that we have no\nkernels in the IR we\'ve generated for the given HLO op. This is often the case\nfor ops we can optimize away at the HLO level.\n\nPiperOrigin-RevId: 174072540\n\n---\nCommit c911d0f16 authored by Dhananjay Nakrani<dhananjayn@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSwitch over python calls to RandomPoissonV2.\n\nPart 2 of Support int32/64 in tf.random_poisson().\n\nPiperOrigin-RevId: 174071745\n\n---\nCommit b5d5326c6 authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA:GPU] Fix race condition in gpu_compiler.cc.\n\nWe were racing on libdevice_dir_.\n\nPiperOrigin-RevId: 174070334\n\n---\nCommit 35939d2d3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Fix string to HLO opcode conversion for atan2, complex, imag and real.\n\nMake sure that we can\'t forget opcodes by auto-generating the conversion\nfunctions.\n\nAdd auto-generated functions to test HLOs for properties (like IsVariadic,\nIsComparison, etc.)\n\nThis makes changing HLO more robust and easier because there are fewer places\nto update when adding or removing an HLO opcode.\n\nAlso:\n* Fix IsElementwiseBinary for atan2.\n* Add a unit test for HLO opcode helpers.\n* Express IsElementwiseBinary in terms of IsElementwise() and operand_count()\n  to avoid having to keep the two in sync manually.\nPiperOrigin-RevId: 174069664\n\n---\nCommit 3b845c80d authored by Allen Lavoie<allenl@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDisable resnet50_graph_test under TSAN due to timeouts.\n\nPiperOrigin-RevId: 174066937\n\n---\nCommit 8a09bbc4a authored by Igor Ganichev<iga@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd TFE_Py_TensorShapeSlice function\n\nTFE_Py_TensorShapeSlice takes a list of EagerTensors and returns a list\nof their i\'th dimensions. This utility is fairly niche but it is simple\nand reduces SPINN training time by over 12%.\n\nPiperOrigin-RevId: 174065044\n\n---\nCommit 585432cc2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRefactor ArgMin / ArgMax index ops as XlaHelpers.\n\nPiperOrigin-RevId: 174061370\n\n---\nCommit e6faa845c authored by Michael Case<mikecase@chromium.org>\nCommitted by gunan<gunan@google.com>:\nMerge v1.4-rc1 back into master branch. (#13960)\n\n* Update RELEASE NOTES for TensorFlow 1.4\n\n* Update the version strings for TF 1.4-rc0.\n\n* Update version strings in POM files missed by update script.\n\n* Pin TensorBoard 0.4 to TensorFlow 1.4\n\n* Fixing the name of the disabled test. (#13592)\n\n* Revert ""Implementing ghost batch norm as defined in https://arxiv.org/pdf/1705.08741.""\n\nThis reverts commit 125f7afa4a483855dc75791445d2dea64587876a.\n\n* Disable iterator_ops_test on Windows for 1.4 release (#13609)\n\n* Disable failing Windows tests for r1.4 release.\n\ntestRemoteIteratorUsingRemoteCallOpDirectSessionGPUCPU test is failing\nwith ""TypeError: only integer scalar arrays can be converted to a scalar\nindex"" on the Windows GPU Release bot. Disabling test.\n\n* Fix typo.\n\n* Also disalbe iterator_ops_test from contrib/.\n\n* Add contributing authors to 1.4 Release notes.\n\nThanks!\n\n* Fixes to authors.\n\nRemoved duplicate and removed googler from contributing author list.\n\n* Fixes and additions to release notes.\n\nAdded line about Keras moving into core.\nAdded line about CUDA/cuDNN versions.\nAdded line about custom ops.\n\n* Fixing a master regression (#13562)\n\n* Update version strings for 1.4.0rc1\n\n* Remaining cherry-picks for 1.4.0rc1 (#13700)\n\n* Java: Tweak to address some Javadoc errors.\n\nPiperOrigin-RevId: 171987329\n\n* Fix S3 BUILD not including files explicitly.\n\nThis causes remote builds to fail since they AWS headers were missing.\n\nPiperOrigin-RevId: 171718021\n\n* Add missing default config setting in aws.BUILD (#13662)\n\n* Remove setting AWS logging for S3 file system.\n\nWas causing issues with tests. Can repro test failures on Macs by running...\n\nbazel test --config=s3  --cache_test_results=no --test_output=streamed\n//tensorflow/core/kernels:control_flow_ops_test\n\nPossible reason for error is symbol collision with AWS logging code.\nOne possible solution would be to split out another shared object for\nthe S3 filesystem op which does not link in libtensorflow_framework.so.\nThis is done, for example, by libforestprotos.so in\ntensorflow/contrib/tensor_forest/BUILD\n\nPiperOrigin-RevId: 171246381\n\n* Relanding change to add config to enable S3 file system support.\n\nPass --config=s3 argument to Bazel to build with S3 file system support.\nChange was originally rolled back due to a failure it caused in\n//tensorflow/core/kernels:control_flow_ops_test on Macs which is now fixed.\n\nPiperOrigin-RevId: 171579378\n\n* Update release notes about Amazon S3 file system support being default.\n\n* Add documentation to sloppy_interleave function\n\nPiperOrigin-RevId: 171303413\n\n* Add `cudnn_rnn_ops` to the Windows build\n\nFixes #13696.\n\n* Creating a patch for the wrong links that still point to dev. (#13753)\n\n* tfdbg release notes in r1.4\n\n* Fix ambiguous type comparison in s3_crypto.cc (#13758)\n\ntensorflow/contrib/s3/s3_crypto.cc(74): error C2666:\n\'std::fpos<_Mbstatet>::operator ==\': 3 overloads have similar conversions\ncould be \'bool std::fpos<_Mbstatet>::operator ==(std::streamoff) const\'\nor \'bool std::fpos<_Mbstatet>::operator ==(const std::fpos<_Mbstatet> &)\nWe were seeing this compilation error on Windows builds.\n\n* Set estimator run_config default random seed to None. This will make it aligned with other parts of the TF. Many users are not aware of impact of non-random seed. For example it may lead to train only on a small fraction of training data due to preemptions.\nWe\'re changing default behavior since we consider it as a bug fix.\n\nPiperOrigin-RevId: 172519268\n\n* Move global_step_read dependency to model_fn instead of input_fn.\n\nPiperOrigin-RevId: 172366972\n\n* [tf.data] Fix broken implementation of `Dataset.from_generator()` on Windows.\n\nDue to a mix-up between NumPy\'s default array element type for a Python `int` on Windows and Linux, a tf.py_func() in `Dataset.from_generator()` would appear to return the wrong type on Windows (np.int32 instead of np.int64).\n\nAll code using `Dataset.from_generator()` on Windows was previously broken. This change fixes both `tf.data.Dataset.from_generator()` and `tf.contrib.data.Dataset.from_generator()`. It also enables test coverage for this method on Windows, which should prevent future breakage.\n\nPiperOrigin-RevId: 172346533\n\n* Update RELEASE notes for change to run_config random seed.\n\n* Disable probable timeout flake on Ubuntu machines.\n\nPiperOrigin-RevId: 172408922\n\n* Disabling failing contrib tests.\n\n* Disable S3 on Windows due to build issues.\n\n* Update serving_input_fn argument name to serving_input_receiver_fn\n\nPiperOrigin-RevId: 172787460\n\n* Update the C++ API guide (#13858)\n\n- Adds the standard warning at the top that people may want the master branch\n- Includes a documentation fix for 1.4 (cc_binary -> tf_cc_binary to avoid\n  undefined symbols).\n\n* Add known Dataset issue to RELEASE.md. (#13870)\n\nAdding info about issue using Unicode strings with Datasets.\n\n* Fixes to merge.\n\n* Fix spelling of tensorflow in install_sources.md\n\n---\nCommit 6eac524ef authored by cglewis<clewis@iqt.org>\nCommitted by cglewis<clewis@iqt.org>:\nUse \'LABEL maintainer=\' in Dockerfile\n\n* Use \'LABEL maintainer=\' in Dockerfile\n\nThis fix is a follow up of 13961 to replace `MAINTAINER`\nwith `LABEL maintainer=` in Dockerfile. The keyword\n`MAINTAINER` has long been deprecated and is replaced by `LABEL`,\nwhich is much more flexible and is easily searchable through `docker\ninspect`.\n\nThis fix replaces remaining `MAINTAINER` with `LABEL`.\n\nSigned-off-by: Charlie Lewis <clewis@iqt.org>\n\n* Additional `MAITAINER` -> `LABEL`\n\nSigned-off-by: Charlie Lewis <clewis@iqt.org>\n\n---\nCommit 469970260 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nModify quantization to support add ops that occur after Conv2D\n\nPiperOrigin-RevId: 174058697\n\n---\nCommit 938643b56 authored by Amit Patankar<amitpatankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nReplace the docker check with an OS check.\n\nPiperOrigin-RevId: 174057778\n\n---\nCommit 5f1a66ccb authored by Igor Saprykin<isaprykin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd more recovery functionality to MonitoredSession.run_step_fn.\n\nCurrent implemention wouldn\'t recover from one of `_PREEMPTION_ERRORS` during a fetch through the raw session that is made available to the step_fn.\n\nThe changelist presents a way to map the desired functionality to the hiearchy of _MonitoredSession > (possibly!) _RecoverableSession > _CoordinatedSession > _HookedSession.\n\nPiperOrigin-RevId: 174053865\n\n---\nCommit 9a2b0983a authored by Yifei Feng<fengyifei2026@gmail.com>\nCommitted by gunan<gunan@google.com>:\nAdd apt-key for ubuntu keyserver (#14114)\n\n---\nCommit 479ee24a0 authored by Asim Shankar<asimshankar@gmail.com>\nCommitted by gunan<gunan@google.com>:\neager: Update broken link in README (#14136)\n\n---\nCommit ad7bb2b9e authored by Asim Shankar<asimshankar@gmail.com>\nCommitted by gunan<gunan@google.com>:\neager: Update broken links in guide.md (#14135)\n\n---\nCommit c37ebf0d5 authored by Thomas Deegan<tadeegan@gmail.com>\nCommitted by gunan<gunan@google.com>:\nResolve //tensorflow relative to tensorflow repo so that tfcompile.bzl can be correctly loaded from another Bazel project (#14103)\n\n---\nCommit b2ff3ad96 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded GraphKeys.METRIC_VARIABLE collection. Added all variables under tf.metrics and tf.contrib.metrics into this collection. This will enable replication of model for evaluation. When we replicate a metric in multiple towers (let\'s say for each qpu we replicate same model/metric), we cannot reduce the output of metrics. On the other hand internal state (local-variables) of those metrics can reducible via sum.\n\nPiperOrigin-RevId: 174051559\n\n---\nCommit 98dad195d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds sigmoid to the list of operations that can be recomputed.\n\nPiperOrigin-RevId: 174047825\n\n---\nCommit 123749fb1 authored by Yuan (Terry) Tang<terrytangyuan@users.noreply.github.com>\nCommitted by Martin Wicke<martin.wicke@gmail.com>:\nRemove Scikit Flow link and description (#14036)\n\n---\nCommit 0d118e4dc authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nImplemented tensorflow::port::NominalCPUFrequency()\n\nPiperOrigin-RevId: 174041196\n\n---\nCommit 648993e82 authored by Andrew Harp<andrew.harp@gmail.com>\nCommitted by Andrew Harp<andrew.harp@gmail.com>:\ndelete extraneous file\n\n---\nCommit c2ff8a5ab authored by Mark Daoust<markdaoust@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDelete backticks\n\nPiperOrigin-RevId: 174030921\n\n---\nCommit 333ba224d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDependency information for Skylark macros\n\nPiperOrigin-RevId: 174023371\n\n---\nCommit 9ee0cecec authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nShrink the model size for unit test.\n\nPiperOrigin-RevId: 174001263\n\n---\nCommit c44f67a7e authored by Yifei Feng<fengyifei2026@gmail.com>\nCommitted by gunan<gunan@google.com>:\nDisable clang_format check. (#14115)\n\nDifferent clang_format version can cause different formats with the same style option. This check might be too strict. Disable for now.\n---\nCommit a6a618843 authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\neager: Documentation and example models.\n\n- Updated README\n- A preliminary ""User\'s Guide""\n- A few example models, some with benchmarks\n\nPiperOrigin-RevId: 173996303\n\n---\nCommit de38e5dff authored by ???<dev@goodow.com>\nCommitted by GitHub<noreply@github.com>:\nfix broken link\n---\nCommit cd81bc8e0 authored by Rohan Jain<rohanj@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds a PrefetchWithFn op to contrib/data. Alongwith the FunctionBufferingResource, this can be used to prefetch and fill up a buffer by making repeated function calls.\n\nAlso fixes a TODO in the ProcessFLR implementation to respect alloc_attrs for Rendezvous calls.\n\nPiperOrigin-RevId: 173990680\n\n---\nCommit 17695212c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Don\'t pass HLO operands in HandleAtan2.\n\nThis makes it consistent with the rest of the Visit methods where we only\npass the HLO itself.\n\nPiperOrigin-RevId: 173990595\n\n---\nCommit 113be5746 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nA few profiler improvements\n1. Track the full allocation history of each tensor, visualized in timeline.\n2. Better ProfileContext for tracing step selection.\n3. Small bug fix.\n\nPiperOrigin-RevId: 173988293\n\n---\nCommit 6d1263cdf authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Remove dead opcode kIndex.\n\nPiperOrigin-RevId: 173987428\n\n---\nCommit a4b5356e4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Reduce boilerplate code in HLO visitors.\n\nOnly pass the HloInstruction into visitor methods. This makes changing\ninstructions and visitors easier.\n\nPiperOrigin-RevId: 173983398\n\n---\nCommit d9cee35b6 authored by LevineHuang<levinehuang@163.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nTypo fix in file \'fully_connected_feed.py\' (#14033)\n\n* Typo fix in file \'fully_connected_feed.py\'\n\n* Minor edits to coding style\n\n---\nCommit bb7ed1c88 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nK-FAC: Multi-tower ConvNet example.\n\nPiperOrigin-RevId: 173982527\n\n---\nCommit 2ba529856 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInitial add of docs for Tensorflow on Mobile.\n\nPiperOrigin-RevId: 173980290\n\n---\nCommit 187453d61 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nChange momentum optimizer to allow callable learning_rate and momentum\nparameters. This can be useful for implementing learninge rate decay.\n\nPiperOrigin-RevId: 173975321\n\n---\nCommit 542b323e5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRegister quint16/qint16 for GatherOp.\n\nPiperOrigin-RevId: 173974904\n\n---\nCommit 309e34061 authored by Allen Lavoie<allenl@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAvoid uncollectable cycles with a separate deleter object for resources.\n\nPiperOrigin-RevId: 173972515\n\n---\nCommit 73fdaf0b5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSummary-writing support for Evaluators.\n\nPiperOrigin-RevId: 173971621\n\n---\nCommit 72be26dc8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf.data] Iterator Save and Restore for Dataset.from_tensors(..), Dataset.from_tensor_slices(..) and dataset.concatenate(..).\n\nPiperOrigin-RevId: 173971324\n\n---\nCommit 09f62ab38 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSpeeding up the case for sparse float columns that have only 1 value.\n\nPiperOrigin-RevId: 173971121\n\n---\nCommit c315cf1ee authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal-only changes\n\nPiperOrigin-RevId: 173968246\n\n---\nCommit 293ba20be authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake learning_rate_decay.piecewise_constant work in Eager mode.\n\nPiperOrigin-RevId: 173967531\n\n---\nCommit 0e6abfcda authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nK-FAC: Example for multi-tower support for MNIST MLP.\n\nPiperOrigin-RevId: 173967370\n\n---\nCommit b46c196e9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n* Add graph rewrite rule that removes repeated application of scalar unary ops that are involutions (their own inverse).\n* Update rewrite rule for Transpose to also handle ConjugateTranspose.\n\nPiperOrigin-RevId: 173967184\n\n---\nCommit ff5c276ad authored by Stephan Hoyer<shoyer@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nLonger README for tf.contrib.labeled_tensor\n\nPiperOrigin-RevId: 173966577\n\n---\nCommit 558f146e1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 173966068\n\n---\nCommit f9a673cb7 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the overloaded HloVerifier::CheckShape, include the failing instruction in\nthe error message.\n\nPiperOrigin-RevId: 173965368\n\n---\nCommit 302ab0ff7 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 173965174\n\n---\nCommit 89120eb68 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nscatter_update for resource variables\n\nPiperOrigin-RevId: 173963715\n\n---\nCommit 8f7903b4c authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIntroduce SQLite SummaryWriterInterface\n\nThis change allows tensors to be written from the graph, as they flow, directly\nto the database. Many of the important details haven\'t been implemented yet.\n\nThis has been done with the new summary interface that\'s going to be used with\neager.\n\nPiperOrigin-RevId: 173961448\n\n---\nCommit 9aaa49a4e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAvoid using variables as booleans (similarly to tensors).\n\nPiperOrigin-RevId: 173956625\n\n---\nCommit a60cd87c4 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nNo need for unique variable names in eager.\n\nPiperOrigin-RevId: 173954805\n\n---\nCommit f17f389d8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a workaround in the Grappler arithmetic optimizer for the ""Add"" op not being marked commutative. This will allow Grappler to dedup nodes Add(x,y) and Add(y,x).\n\nPiperOrigin-RevId: 173950586\n\n---\nCommit e40eb810a authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nTFE: Add errors for classic tf.summary.* ops and FileWriter\n\nPiperOrigin-RevId: 173949980\n\n---\nCommit 25620825b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDataset: Adds eager warnings to make_initializable_iterator and make_one_shot_iterator.\n\nPiperOrigin-RevId: 173949737\n\n---\nCommit 1d6dae88e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd check to tf.device when called with a function in eager mode.\n\nPiperOrigin-RevId: 173947845\n\n---\nCommit 3639aa7ff authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAlways run iterator deleter in eager mode for safety.\n\nPiperOrigin-RevId: 173947019\n\n---\nCommit efcbf6e34 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSupported in this CL:\n  * Attaching sharding descriptors to HLO ops\n  * Partitioning the HLO graph into per-device computations based on those sharding descriptors.\n  * All operator support for device placement and ops replicated on all devices.\n  * Elementwise op support for tiled shardings.\n  * 2D Convolution support for tiled shardings (no stride or dilation support).\n\nPiperOrigin-RevId: 173946036\n\n---\nCommit 682a6ed64 authored by Jon Shlens<shlens@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate the documentation for sample_distorted_bounding_box\n\nPiperOrigin-RevId: 173943029\n\n---\nCommit 4f6e6ea4c authored by Sanjoy Das<sanjoy@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix typo in comment; NFC\n\nPiperOrigin-RevId: 173942305\n\n---\nCommit 07584221f authored by Anna R<annarev@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSet visibility to HIDDEN for hidden Python ops in ApiDef.\n\nPiperOrigin-RevId: 173942001\n\n---\nCommit 35cc8bb0a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nK-FAC: Multiple minibatches support for LayerCollection.register_conv2d()\n\nPiperOrigin-RevId: 173941279\n\n---\nCommit 32f3c3a43 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 173933228\n\n---\nCommit 8cc7b47a4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 173932574\n\n---\nCommit b9337de5b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nK-FAC: Multi-tower support for ConvKFCBasicFB\n\nPiperOrigin-RevId: 173932013\n\n---\nCommit 1b6b7e208 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd registration for op AddV2, which is identical to Add, except that it does does not implement string concatenation. This allows us to mark AddV2 is_commutative and is_aggregate, which will allow optimizers more freedom.\n\nPiperOrigin-RevId: 173931848\n\n---\nCommit 629e6d0c1 authored by Joshua V. Dillon<jvdillon@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBugfix: Make `tf.contrib.distributions.Independent` tests not flaky.\n\nPiperOrigin-RevId: 173921378\n\n---\nCommit 4b63f47d9 authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA:CPU] Don\'t crash if someone tries to do dot(X, X) or dot(X, X^T).\n\nPiperOrigin-RevId: 173919310\n\n---\nCommit 89582677c authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nEagerVariableStore, for compatibility with functional layers.\n\nPiperOrigin-RevId: 173915730\n\n---\nCommit cef680b53 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nEnable shape inference on functions in grappler.\n\nPiperOrigin-RevId: 173914941\n\n---\nCommit e8ac0b48f authored by Akshay Agrawal<akshayka@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nReport a nicer error message when differentiating a function\nthat returns None in eager\n\nPiperOrigin-RevId: 173914883\n\n---\nCommit 85f8d9240 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tensorflow training input] If SparseTensors are used in batch* ops, ensure restoration.\n\nThis forces the ST restore op to be called if any tensors are accessed at the output\nof the batch, thus fixing a memory leak.\n\nSolution suggested by Derek Murray.\n\nFixes #13999.\n\nPiperOrigin-RevId: 173904309\n\n---\nCommit 7fd261602 authored by Skye Wanderman-Milne<skyewm@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd TF_GraphVersions() to C API and use in Graph.graph_def_versions()\n\nPiperOrigin-RevId: 173902666\n\n---\nCommit 4723f8f6e authored by RJ Ryan<rjryan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSupport SymbolicGradient for functions with non-trainable arguments.\n\nThe non-trainable arguments end up with None as their incoming out_grad, which is not a valid input to SymbolicGradient (inputs have to be convertible to Tensor, and None isn\'t).\n\nPiperOrigin-RevId: 173901727\n\n---\nCommit 494672475 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded ""NOTE: You may only install TensorFlow on 64-bit machines"" to all the\nTensorFlow Install guides.\n\nPiperOrigin-RevId: 173899394\n\n---\nCommit b73743e3a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove accidental disablation of (already manual) tests.\n\nPiperOrigin-RevId: 173898910\n\n---\nCommit ce0238198 authored by Skye Wanderman-Milne<skyewm@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd ability to fetch return nodes and unused input mappings from C API GraphDef import\n\nThis change introduces yet another ImportGraphDef function to the C\nAPI (TF_GraphImportGraphDefWithResults), but this one has extensible\nreturn values so we shouldn\'t have to add more in the future.\n\nThis change also modifies the ImportGraphDef C interface to manage all\nstring data for the user.\n\nPiperOrigin-RevId: 173894710\n\n---\nCommit ef4490f63 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBUILD cleanup in contrib/...\n\nPiperOrigin-RevId: 173889798\n\n---\nCommit 2e54fd6de authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds eager execution compatibility note in Readers, Queues, and QueueRunner.\n\nRaises a RuntimeError in base classes for QueueBase, ReaderBase, and QueueRunner.\n\nPiperOrigin-RevId: 173888425\n\n---\nCommit 32ab30cb0 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixes typo in compatibility.\n\nPiperOrigin-RevId: 173887031\n\n---\nCommit 325c8e5ef authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nImprove C++ SQLite veneer\n\n- Use shared_ptr for Sqlite\n- Don\'t need unique_ptr on SqliteStatement\n- Don\'t need db namespace\n- Include SQL in error statuses\n\nPiperOrigin-RevId: 173802267\n\n---\nCommit 0eba15fe6 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds eager compatability message for PartitionedVariable.\n\nPiperOrigin-RevId: 173772851\n\n---\nCommit e7645b629 authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] DOT dumper: Handle fusion nodes nested inside other nodes (e.g. map).\n\nPiperOrigin-RevId: 173752314\n\n---\nCommit 8ec7540e0 authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nTFE: Fix pip test for tf.contrib.summary\n\nFixes test failure in tensorflow/contrib/summary:summary_ops_test, e.g.,\nhttp://ci.tensorflow.org/job/tensorflow-cl-cpu-python3-pip/10933/console\n\nPiperOrigin-RevId: 173749502\n\n---\nCommit c16797ec3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds eager execution compatibility note in Estimators.\n\nRaises a RuntimeError in Estimator base class.\n\nPiperOrigin-RevId: 173744765\n\n---\nCommit e8a62a30b authored by ???<dev@goodow.com>\nCommitted by GitHub<noreply@github.com>:\nFix minor typo\n---\nCommit 36696ad58 authored by ???<dev@goodow.com>\nCommitted by Larry Tin<dev@goodow.com>:\ntf.zeros doesn\'t accept a tensor argument\n\nValueError: Shape must be rank 1 but is rank 0 for \'zeros_2\' (op: \'Fill\') with input shapes: [], [].\n\n---\nCommit 9f4b12bb5 authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] DOT dumper: Print constant shape when we elide the constant\'s value.\n\nFor example, instead of ""operand 1 = %constant.42"", we now print\n""operand 1 = %constant.42 (f32[100])"".\n\nPiperOrigin-RevId: 173741373\n\n---\nCommit 45c5118f0 authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nWhen creating an HloModule from an HloProto construct the HloModuleConfig\nwith a correct ProgramShape which matches the shapes of the entry computation.\nPreviously the module config had a bogus or default constructed ProgramShape.\n\nPiperOrigin-RevId: 173741104\n\n---\nCommit 09a89ae57 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd `tf.contrib.distributions.bijectors.Reshape`.\n\nPiperOrigin-RevId: 173740491\n\n---\nCommit 729db035e authored by Mark Daoust<markdaoust@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAllow compatibility notes in class, property and module doc-strings\n\nPiperOrigin-RevId: 173739674\n\n---\nCommit ca56fa49a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 173739110\n\n---\nCommit 48df7c972 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 173738765\n\n---\nCommit fb2c84cb2 authored by Jeremy Lau<lauj@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal change\n\nPiperOrigin-RevId: 173738655\n\n---\nCommit 245a5c171 authored by Akshay Agrawal<akshayka@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake functional_ops compatible with eager exeuction by ignoring\ncaching devices when in eager mode\n\nPiperOrigin-RevId: 173737949\n\n---\nCommit d1c59bd37 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd tf.quantize op, which is the same as tf.quantize_v2.\n\nPiperOrigin-RevId: 173735986\n\n---\nCommit 3ff9c8d2a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix typos in Linear Model Tutorial samples\n\n1. test_file_name is undefined (should be test_file.name)\n2. train_file_name is undefined (should be train_file.name)\n\nPiperOrigin-RevId: 173733442\n\n---\nCommit abbab2430 authored by Michael Case<mikecase@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd bazel mirror links for newly added workspace dependencies.\n\nPiperOrigin-RevId: 173732606\n\n---\nCommit 46a577feb authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[CMake] Generate audio_ops wrappers in the CMake build.\n\nFixes #14004.\n\nPiperOrigin-RevId: 173732397\n\n---\nCommit 7cb7f88c5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd count metric, a helper function that computes the total number or total weight of examples.\n\nPiperOrigin-RevId: 173731046\n\n---\nCommit e1d7615eb authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix issue with gradients of functions which return multiple values.\n\nPiperOrigin-RevId: 173730922\n\n---\nCommit 80374a7b4 authored by Joshua V. Dillon<jvdillon@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBreaking change: Rename `tf.contrib.distributions.Independent` parameter from\n`reduce_batch_ndims` to `reinterpreted_batch_ndims`. Also change default;\n`reinterpreted_batch_ndims` default has semantics of `tf.layers.flatten`, i.e.,\nall batch dimensions except the first (batch axis 0) are interpretted as being\npart of the event.\n\nPiperOrigin-RevId: 173729585\n\n---\nCommit 5426a3c93 authored by Allen Lavoie<allenl@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd tfe.get_optimizer_variables for fetching a list of variables which an\noptimizer has created. Useful for saving them if executing eagerly.\n\nPiperOrigin-RevId: 173726859\n\n---\nCommit 02f55400f authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ncustom_gradient functions should be able to return their inputs\n\nPiperOrigin-RevId: 173723462\n\n---\nCommit 78bac7290 authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nTFE: Add compatbility doc string to add_to_collection() and friends\n\nPiperOrigin-RevId: 173716912\n\n---\nCommit 9bf00c371 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nShorter import for tfe.\n\nPiperOrigin-RevId: 173716375\n\n---\nCommit 0bc432a44 authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nTFE: Add compatibility errors and doc strings to queues, input pipelines and Supervisor\n\nPiperOrigin-RevId: 173712330\n\n---\nCommit e9af1af4f authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nFixing the sources docs in master.\n\n---\nCommit b31b08bb0 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds randomized tests for newly introduced complex and related ops.\n\nPiperOrigin-RevId: 173709206\n\n---\nCommit 466b9ecf8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n  Report total number of bytes to be transferred when the curl request makes no progress.\n\nPiperOrigin-RevId: 173707608\n\n---\nCommit 7c4e98eb4 authored by Igor Ganichev<iga@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd Tensor._rank() getter\n\nIt appears to speed up SPINN model by about 1%, which is not much, but\nthis method is very simple and easier to use than len(tensor._shape_tuple())\n\nPiperOrigin-RevId: 173703259\n\n---\nCommit d7cffe9c0 authored by Allen Lavoie<allenl@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds save and restore methods to tfe.Network\n\nSave just saves the variables to a checkpoint. Restore either restores immediately or defers the restoration to variable creation time with a custom getter.\n\nPiperOrigin-RevId: 173703075\n\n---\nCommit 9158f974a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse tf.app.run in gcs_smoke, so that the flags are explicitly parsed, instead of parsed when first accessed.\n\nPiperOrigin-RevId: 173702828\n\n---\nCommit 3d39b32b9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix a tfprof bug. Throws an error when the flops cannot be calculated.\n\nPiperOrigin-RevId: 173702740\n\n---\nCommit 73155f56a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Small code cleanup. Re-alphabetized.\n\nPiperOrigin-RevId: 173702336\n\n---\nCommit 32bcf46f1 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ninternal\n\nPiperOrigin-RevId: 173697389\n\n---\nCommit 97484a4d9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 173690751\n\n---\nCommit 873ef2ca3 authored by Oleg Zabluda<ozabluda@gmail.com>\nCommitted by GitHub<noreply@github.com>:\nFix documentation error in tf.size() - output type\n---\nCommit 16538dab7 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSaves summaries in the mnist example.\n\nPiperOrigin-RevId: 173690505\n\n---\nCommit 6b05b36cd authored by Jiri Simsa<jsimsa@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGeneralizing sloppy_interleave, making sloppiness an option.\n\nPiperOrigin-RevId: 173687797\n\n---\nCommit 7775a6604 authored by Michael Case<mikecase@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal Change\n\nPiperOrigin-RevId: 173685895\n\n---\nCommit 5120e75cf authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Yong Tang<yong.tang.github@outlook.com>:\nMove `@compatibility(eager)` from class docstring to __init__ docstring\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 7d7b2ec58 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Yong Tang<yong.tang.github@outlook.com>:\nAlso fixes `@end_compatiblity` -> `@end_compatibility`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 96dc501cd authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Yong Tang<yong.tang.github@outlook.com>:\nFix incorrect annotation tag in tf.Variable\n\nIn tf.Variable the annotation tag of `@compatiblity` should be `@compatibility`\n\n---\nCommit c22973867 authored by Mark Daoust<markdaoust@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDelete bad links (md links not supported in html blocks).\n\nPiperOrigin-RevId: 173680417\n\n---\nCommit 4198e27be authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA:CPU] [XLA:GPU] Adds compiler support for C64 primitive type, including relevant elementwise unary and binary op lowering for CPU and GPU.\n\nWe use a named LLVM struct ""complex64"", laid out the same as std::complex<float>. This named struct is accessed via the llvm::Module, which required changes to accessors of PrimitiveTypeToIrType & friends.\n\nOps that require atan2 (in particular, angle and log) are only supported on GPU at this point. LLVM lacks a CPU intrinsic for atan or atan2, whereas libdevice provides this for GPU.\n\nPiperOrigin-RevId: 173676849\n\n---\nCommit 4ae245a7d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nn/a (internal change only)\n\nPiperOrigin-RevId: 173674697\n\n---\nCommit 0ccf5cf60 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nLimit the amount of logspam a use of GraphKeys.VARIABLES causes.\n\nMultiple copies of this warning next to each other often make logs unreadable.\n\nPiperOrigin-RevId: 173672701\n\n---\nCommit a7b872527 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Yong Tang<yong.tang.github@outlook.com>:\nFix an ouput typo in `ci_sanity.sh`\n\nIn the last PR #13924 (clang sanity check) the output message should be changed:\n`due to the absence of Python code changes`\n->\n`due to the absence of .h or .cc code changes`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 58d2c5f50 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Shanqing Cai<cais@google.com>:\nAdd `SANITY_STEPS_DESC` for do_clang_format_check (#14030)\n\n* Add `SANITY_STEPS_DESC` for do_clang_format_check\n\nThis fix is a follow up to PR #13924 to add the corresponding\ndescription in `SANITY_STEPS_DESC`.\n\nSee comment #13924#discussion_r147314599\nfor details.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Update description for Clang Format Check\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 62a9ab28c authored by ???<dev@goodow.com>\nCommitted by GitHub<noreply@github.com>:\nfix broken link\n---\nCommit c6292a3f9 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Yong Tang<yong.tang.github@outlook.com>:\nSanitize decode_csv_op.cc with `clang-format -i`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 285ea3910 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Yong Tang<yong.tang.github@outlook.com>:\nAdd test cases for `double` support of `tf.decode_csv`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 73aaed655 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Yong Tang<yong.tang.github@outlook.com>:\nUpdate docs for `double` support on `tf.decode_csv`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 3595d1613 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Yong Tang<yong.tang.github@outlook.com>:\nAdd `double` support for `tf.decode_csv`\n\nIn the current tensorflow `tf.decode_csv` accepts\n`float`, `int32`, `int64`, `string` but not `double`.\nIt seems adding `double` support makes sense as `StringToNumber`\nalready support `double` type.\n\nThis fix adds `double` support for `tf.decode_csv`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 37d483fda authored by Sergii Khomenko<sergii.khomenko@stylight.com>\nCommitted by Sergii Khomenko<sergii.khomenko@stylight.com>:\nFix a typo\n\n---\nCommit 9c8a520b0 authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd WriteEvent method to SummaryWriterInterface\n\nAnother change will follow that adds an op for this method. It will be useful\nfor loading event logs into other types of summary writer implementations, like\na database.\n\nThis change might also make the new summary file writer go faster, due to less\nmemory copying.\n\nPiperOrigin-RevId: 173640116\n\n---\nCommit a49455812 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 172654120\n\nPiperOrigin-RevId: 174388998'"
b8f6842bf148a5d2e924b6e865e4c39555f2a066,'[XLA] Fix typo. `Le` is less-or-equal-than. `Lt` is less-than.\n\nPiperOrigin-RevId: 174377720'
6a8322f6dc007573e97a452e056b76f2be4794a7,"'Fix discrepancy between docs and registered kernels for `tf.ones_like`/`tf.zeros_like` (#13598)\n\n* Fix discrepancy between docs and registered kernels for `tf.ones_like`\r\n\r\nThis fix tries to address the discrepancy between docs and registered\r\nkernels for `tf.ones_like`. From the implementation the OnesLike is\r\nregistered with all POD types. However, in the documentation several\r\ndata types are missing (uint8, int8, uint16, int16, bool).\r\n\r\nThis fix addresses the issue by adding missing types to documentation.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix python docs for `tf.ones_like`\r\n\r\nThis commit fixes python docs for `tf.ones_like`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix python docs for `tf.zeros_like`\r\n\r\nThis commit fixes python docs for `tf.zeros_like`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for different dtypes on `tf.ones_like` and `tf.zeros_like`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
028809769de5b0a4a06510e7edf7ed208f04e110,"'Fix for #13498 (#13505)\n\n* Added Skye\'s fix plus a fix for ""RemoveEdge"".\r\n\r\n* Fixed a problem with ""RemoveEdge"".\r\n\r\n* Small fix.\r\n\r\n* Requested edits.\r\n\r\n* Minor edit in the documentation.\r\n\r\n* Added a unit test for the ""RemoveControlEdge"" method.\r\n\r\n* Made the requested changes.\r\n\r\n* Made the requested edits.\r\n\r\n* Made a small requested change.'"
29a94ac6f15bd121aea4693bfe72f619f071229a,"'Cauchy Distribution (#13894)\n\n* cauchy docstring\r\n\r\n* added __init__ method\r\n\r\n* added other cauchy methods with non-nan outcomes\r\n\r\n* survival functions, nan stats\r\n\r\n* log prob, shape tests\r\n\r\n* tests for other deterministic methods\r\n\r\n* sample tests\r\n\r\n* shape, invalid arg tests\r\n\r\n* pylint fixes\r\n\r\n* registering class to allowed symbols\r\n\r\n* corrections to examples in cauchy docstring\r\n\r\n* cauchy with softplus scale\r\n\r\n* tested, registered cauchy w softplus scale\r\n\r\n* review changes, log1p where possible, math to np\r\n\r\n* pylint fixes, remove references to CauchyWithSoftplusScale\r\n\r\n* use np.nan, not float(""nan"") for nan_stats\r\n\r\n* Update cauchy.py\r\n\r\n* Corrected cauchy test path in BUILD\r\n\r\n* tests fixes'"
44505e5cfeb01ea715c39d15a571eae4d144230a,'Fix LMDBReader crash due to not fully cleanup (#13396)\n\n* Clean up context at LMDBReader::OnWorkStartedLocked()\r\n\r\n* Add testcase: test_read_from_file_repeated\r\n\r\n* Update lmdb test\r\n\r\n* Fix the range issue'
53a4fcbdbad571e659203733f6a07ba82651d40b,"'Fixed HloComputation/HloInstruction clone to allow deep clone, and avoid the cloned instruction and computations to still have live link to their parent original modules and computations.\n\nPiperOrigin-RevId: 174271432'"
83621c7ec59a400d83de0dd3e7b45ec670c02893,'Bug fix: Expose get_pruning_hparams function\n\nPiperOrigin-RevId: 174260120'
d77b99809c2ef0b35723fd13e648b9e7652d32cf,'Update docs for `begin_params_axis` (#13979)\n\nThis fix fixes the issue raised in 13975 where `begin_shift_axis`\r\nis actually `begin_params_axis`.\r\n\r\nThis fix fixes 13975.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
740267f07bcb5a7591eb8a3ab6460c26d56ebdd3,'Merge pull request #14119 from larrytin/patch-3\n\nfix broken link'
37370d98f4fab2488394ddc1b51f76c5f5b9a2ea,'Support more Android arch in Makefile build (#12806)\n\n* Support more Android arch in Makefile build\r\n\r\n* update Makefile\r\n\r\n* fix MARCH_OPTION\r\n\r\n* persist multiple architectures across builds\r\n\r\n* persist multiple architectures across builds\r\n\r\n* persist multiple architectures across builds\r\n\r\n* persistence bug fix\r\n\r\n* persistence bug fix\r\n\r\n* persistence bug fix\r\n\r\n* add -latomic to linker flags for benchmark\r\n\r\n* Change ANDROID_OS_ARCH to ANDROID_HOST_OS_ARCH'
ef7052fbd9166d10bc8343586c067a22096c5ae6,'Open source build support for TensorFlow Lite Toco.\n\n- Handle proto incompatibilities\n- Mixed bazel compatibility fixes.\n- Add link to absl libraries\n\nPiperOrigin-RevId: 174103981'
d6a9cd40c1987e2caf9cd2956e398a68881f4b5d,"'Fix ""hides overloaded virtual function"" error in default/gpu_tracer.cc when compiled with -Werror,-Woverloaded-virtual.\n\nPiperOrigin-RevId: 174101519'"
57b1c56214e88fc3b00f6ff518cb3277bfeb660a,'Add deprecation notes (#12614)\n\n* Update lookup_ops.py\r\n\r\nMinor comment fix\r\n\r\n* Update metrics_ops.py\r\n\r\nAdd deprecated notes\r\n\r\n* Update tensor_util.py\r\n\r\nUpdate deprecated note on remove_squeezable_dimensions\r\n\r\n* Update metric_ops.py\r\n\r\nAdd deprecated notes'
f1916f8f6cf46b5383b90511ba66e60aed545030,'- Remove slice hack to properly initialize missing entries in weight matrices\n  - Add real support for EmbeddingColumns / input_layer()\n- Fix warmstarting for non-PartitionedVariables\n\nPiperOrigin-RevId: 174083777'
b5d5326c6228e449c53c4ea02fa9225f4eec5ee7,'[XLA:GPU] Fix race condition in gpu_compiler.cc.\n\nWe were racing on libdevice_dir_.\n\nPiperOrigin-RevId: 174070334'
35939d2d37a03d95c86708ad0bf52865fbbd3c90,"""[TF:XLA] Fix string to HLO opcode conversion for atan2, complex, imag and real.\n\nMake sure that we can't forget opcodes by auto-generating the conversion\nfunctions.\n\nAdd auto-generated functions to test HLOs for properties (like IsVariadic,\nIsComparison, etc.)\n\nThis makes changing HLO more robust and easier because there are fewer places\nto update when adding or removing an HLO opcode.\n\nAlso:\n* Fix IsElementwiseBinary for atan2.\n* Add a unit test for HLO opcode helpers.\n* Express IsElementwiseBinary in terms of IsElementwise() and operand_count()\n  to avoid having to keep the two in sync manually.\nPiperOrigin-RevId: 174069664"""
e6faa845c51bb69465146d93646947fd2ba53efa,"'Merge v1.4-rc1 back into master branch. (#13960)\n\n* Update RELEASE NOTES for TensorFlow 1.4\r\n\r\n* Update the version strings for TF 1.4-rc0.\r\n\r\n* Update version strings in POM files missed by update script.\r\n\r\n* Pin TensorBoard 0.4 to TensorFlow 1.4\r\n\r\n* Fixing the name of the disabled test. (#13592)\r\n\r\n* Revert ""Implementing ghost batch norm as defined in https://arxiv.org/pdf/1705.08741.""\r\n\r\nThis reverts commit 125f7afa4a483855dc75791445d2dea64587876a.\r\n\r\n* Disable iterator_ops_test on Windows for 1.4 release (#13609)\r\n\r\n* Disable failing Windows tests for r1.4 release.\r\n\r\ntestRemoteIteratorUsingRemoteCallOpDirectSessionGPUCPU test is failing\r\nwith ""TypeError: only integer scalar arrays can be converted to a scalar\r\nindex"" on the Windows GPU Release bot. Disabling test.\r\n\r\n* Fix typo.\r\n\r\n* Also disalbe iterator_ops_test from contrib/.\r\n\r\n* Add contributing authors to 1.4 Release notes.\r\n\r\nThanks!\r\n\r\n* Fixes to authors.\r\n\r\nRemoved duplicate and removed googler from contributing author list.\r\n\r\n* Fixes and additions to release notes.\r\n\r\nAdded line about Keras moving into core.\r\nAdded line about CUDA/cuDNN versions.\r\nAdded line about custom ops.\r\n\r\n* Fixing a master regression (#13562)\r\n\r\n* Update version strings for 1.4.0rc1\r\n\r\n* Remaining cherry-picks for 1.4.0rc1 (#13700)\r\n\r\n* Java: Tweak to address some Javadoc errors.\r\n\r\nPiperOrigin-RevId: 171987329\r\n\r\n* Fix S3 BUILD not including files explicitly.\r\n\r\nThis causes remote builds to fail since they AWS headers were missing.\r\n\r\nPiperOrigin-RevId: 171718021\r\n\r\n* Add missing default config setting in aws.BUILD (#13662)\r\n\r\n* Remove setting AWS logging for S3 file system.\r\n\r\nWas causing issues with tests. Can repro test failures on Macs by running...\r\n\r\nbazel test --config=s3  --cache_test_results=no --test_output=streamed\r\n//tensorflow/core/kernels:control_flow_ops_test\r\n\r\nPossible reason for error is symbol collision with AWS logging code.\r\nOne possible solution would be to split out another shared object for\r\nthe S3 filesystem op which does not link in libtensorflow_framework.so.\r\nThis is done, for example, by libforestprotos.so in\r\ntensorflow/contrib/tensor_forest/BUILD\r\n\r\nPiperOrigin-RevId: 171246381\r\n\r\n* Relanding change to add config to enable S3 file system support.\r\n\r\nPass --config=s3 argument to Bazel to build with S3 file system support.\r\nChange was originally rolled back due to a failure it caused in\r\n//tensorflow/core/kernels:control_flow_ops_test on Macs which is now fixed.\r\n\r\nPiperOrigin-RevId: 171579378\r\n\r\n* Update release notes about Amazon S3 file system support being default.\r\n\r\n* Add documentation to sloppy_interleave function\r\n\r\nPiperOrigin-RevId: 171303413\r\n\r\n* Add `cudnn_rnn_ops` to the Windows build\r\n\r\nFixes #13696.\r\n\r\n* Creating a patch for the wrong links that still point to dev. (#13753)\r\n\r\n* tfdbg release notes in r1.4\r\n\r\n* Fix ambiguous type comparison in s3_crypto.cc (#13758)\r\n\r\ntensorflow/contrib/s3/s3_crypto.cc(74): error C2666:\r\n\'std::fpos<_Mbstatet>::operator ==\': 3 overloads have similar conversions\r\ncould be \'bool std::fpos<_Mbstatet>::operator ==(std::streamoff) const\'\r\nor \'bool std::fpos<_Mbstatet>::operator ==(const std::fpos<_Mbstatet> &)\r\nWe were seeing this compilation error on Windows builds.\r\n\r\n* Set estimator run_config default random seed to None. This will make it aligned with other parts of the TF. Many users are not aware of impact of non-random seed. For example it may lead to train only on a small fraction of training data due to preemptions.\r\nWe\'re changing default behavior since we consider it as a bug fix.\r\n\r\nPiperOrigin-RevId: 172519268\r\n\r\n* Move global_step_read dependency to model_fn instead of input_fn.\r\n\r\nPiperOrigin-RevId: 172366972\r\n\r\n* [tf.data] Fix broken implementation of `Dataset.from_generator()` on Windows.\r\n\r\nDue to a mix-up between NumPy\'s default array element type for a Python `int` on Windows and Linux, a tf.py_func() in `Dataset.from_generator()` would appear to return the wrong type on Windows (np.int32 instead of np.int64).\r\n\r\nAll code using `Dataset.from_generator()` on Windows was previously broken. This change fixes both `tf.data.Dataset.from_generator()` and `tf.contrib.data.Dataset.from_generator()`. It also enables test coverage for this method on Windows, which should prevent future breakage.\r\n\r\nPiperOrigin-RevId: 172346533\r\n\r\n* Update RELEASE notes for change to run_config random seed.\r\n\r\n* Disable probable timeout flake on Ubuntu machines.\r\n\r\nPiperOrigin-RevId: 172408922\r\n\r\n* Disabling failing contrib tests.\r\n\r\n* Disable S3 on Windows due to build issues.\r\n\r\n* Update serving_input_fn argument name to serving_input_receiver_fn\r\n\r\nPiperOrigin-RevId: 172787460\r\n\r\n* Update the C++ API guide (#13858)\r\n\r\n- Adds the standard warning at the top that people may want the master branch\r\n- Includes a documentation fix for 1.4 (cc_binary -> tf_cc_binary to avoid\r\n  undefined symbols).\r\n\r\n* Add known Dataset issue to RELEASE.md. (#13870)\r\n\r\nAdding info about issue using Unicode strings with Datasets.\r\n\r\n* Fixes to merge.\r\n\r\n* Fix spelling of tensorflow in install_sources.md'"
6eac524ef63728bdc10c40f95d30c94aede5f4ea,"""Use 'LABEL maintainer=' in Dockerfile\n\n* Use 'LABEL maintainer=' in Dockerfile\n\nThis fix is a follow up of 13961 to replace `MAINTAINER`\nwith `LABEL maintainer=` in Dockerfile. The keyword\n`MAINTAINER` has long been deprecated and is replaced by `LABEL`,\nwhich is much more flexible and is easily searchable through `docker\ninspect`.\n\nThis fix replaces remaining `MAINTAINER` with `LABEL`.\n\nSigned-off-by: Charlie Lewis <clewis@iqt.org>\n\n* Additional `MAITAINER` -> `LABEL`\n\nSigned-off-by: Charlie Lewis <clewis@iqt.org>"""
de38e5dffc9c29a8bee84b1b15665ffb32244504,'fix broken link'
cd81bc8e09c7f551911276c5bfaafa6930f1961f,"'Adds a PrefetchWithFn op to contrib/data. Alongwith the FunctionBufferingResource, this can be used to prefetch and fill up a buffer by making repeated function calls.\n\nAlso fixes a TODO in the ProcessFLR implementation to respect alloc_attrs for Rendezvous calls.\n\nPiperOrigin-RevId: 173990680'"
113be57466d36ab7086794475cf4579f3e6b940b,"'A few profiler improvements\n1. Track the full allocation history of each tensor, visualized in timeline.\n2. Better ProfileContext for tracing step selection.\n3. Small bug fix.\n\nPiperOrigin-RevId: 173988293'"
d9cee35b66440a00d2582d6043a6f6d4007bae6e,"""Typo fix in file 'fully_connected_feed.py' (#14033)\n\n* Typo fix in file 'fully_connected_feed.py'\r\n\r\n* Minor edits to coding style"""
3c8ade09e75788a9f11865aa8275902d75fa4939,'Merge pull request #14052 from larrytin/patch-2\n\nFix minor typo'
4f6e6ea4cd4f10aa18a34603dff29d9af157b5f0,'Fix typo in comment; NFC\n\nPiperOrigin-RevId: 173942305'
629e6d0c103f96061d42094e32f509f76436ba35,'Bugfix: Make `tf.contrib.distributions.Independent` tests not flaky.\n\nPiperOrigin-RevId: 173921378'
85f8d924086657852c900c0ba7e8f0fbdac0a509,"'[tensorflow training input] If SparseTensors are used in batch* ops, ensure restoration.\n\nThis forces the ST restore op to be called if any tensors are accessed at the output\nof the batch, thus fixing a memory leak.\n\nSolution suggested by Derek Murray.\n\nFixes #13999.\n\nPiperOrigin-RevId: 173904309'"
32ab30cb0a6bc86a6423c9078cfdddac79d79451,'Fixes typo in compatibility.\n\nPiperOrigin-RevId: 173887031'
0623993f08c5357302bf64a50a52120da323ed25,'Merge pull request #14078 from lc0/contrib-gan\n\nFix a minor typo in readme'
3c2bdbea5b285c377a07814046a376b189617bc7,'Merge pull request #14035 from yongtang/10272017-typo\n\nFix an ouput typo in `ci_sanity.sh`'
8ec7540e008f37abc9fb7c0bb02dd0b25c4b7b78,"'TFE: Fix pip test for tf.contrib.summary\n\nFixes test failure in tensorflow/contrib/summary:summary_ops_test, e.g.,\nhttp://ci.tensorflow.org/job/tensorflow-cl-cpu-python3-pip/10933/console\n\nPiperOrigin-RevId: 173749502'"
e8a62a30b35153e3ba8d32bdfd5845e1f92fe46b,'Fix minor typo'
3ff9c8d2af2ede9ee7c16fb3b15d004e423f95e5,'Fix typos in Linear Model Tutorial samples\n\n1. test_file_name is undefined (should be test_file.name)\n2. train_file_name is undefined (should be train_file.name)\n\nPiperOrigin-RevId: 173733442'
46a577febccf874b4b8bb8d42be0a3fb069e380d,'[CMake] Generate audio_ops wrappers in the CMake build.\n\nFixes #14004.\n\nPiperOrigin-RevId: 173732397'
1aabd75996ed3a9c0ed7f50b3fe96c4448e351b5,'Merge pull request #14045 from av8ramit/fix_typo\n\nFixing the sources docs in master.'
e1d7615ebcad6f45b41f7849bc77a8aae17b8690,'Fix issue with gradients of functions which return multiple values.\n\nPiperOrigin-RevId: 173730922'
2133deab41549cf646fefee1901a0e75cfc64167,'Merge pull request #14031 from yongtang/10272017-compatibility-annotation\n\nFix incorrect annotation tag in the docs of tf.Variable'
2079a76cff81f937f75af8faf55af33d25af25fc,'Merge pull request #14038 from ozabluda/patch-2\n\nFix documentation error in tf.size() - output type'
e9af1af4f2ca7dd0d767ff60cb08034f37de44ad,'Fixing the sources docs in master.'
3d39b32b9a7833807dad037c3f57c818e9251f85,'Fix a tfprof bug. Throws an error when the flops cannot be calculated.\n\nPiperOrigin-RevId: 173702740'
873ef2ca375f2f6a4fed55e0bcd9a6fba6e8d545,'Fix documentation error in tf.size() - output type'
7d7b2ec58e9625c5f2320c67516a5e0aff06d0d3,'Also fixes `@end_compatiblity` -> `@end_compatibility`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
96dc501cd9e9aefd2766cc02f8d0e5436d198bb8,'Fix incorrect annotation tag in tf.Variable\n\nIn tf.Variable the annotation tag of `@compatiblity` should be `@compatibility`'
e46b4f86a0fadf575d3df2efcdc1afd00241ecec,'Merge pull request #14029 from larrytin/patch-2\n\nfix broken link'
a7b8725271634e892781080464d0cef8516a9d36,'Fix an ouput typo in `ci_sanity.sh`\n\nIn the last PR #13924 (clang sanity check) the output message should be changed:\n`due to the absence of Python code changes`\n->\n`due to the absence of .h or .cc code changes`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
58d2c5f50508fad6591166f6e264d574f9c42768,'Add `SANITY_STEPS_DESC` for do_clang_format_check (#14030)\n\n* Add `SANITY_STEPS_DESC` for do_clang_format_check\r\n\r\nThis fix is a follow up to PR #13924 to add the corresponding\r\ndescription in `SANITY_STEPS_DESC`.\r\n\r\nSee comment https://github.com/tensorflow/tensorflow/pull/13924#discussion_r147314599\r\nfor details.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update description for Clang Format Check\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
62a9ab28caef7bb6f3eb0c8b625c58fa8d88a173,'fix broken link'
3595d1613d0d46fad7cda0140965472351ff84b1,"'Add `double` support for `tf.decode_csv`\n\nIn the current tensorflow `tf.decode_csv` accepts\n`float`, `int32`, `int64`, `string` but not `double`.\nIt seems adding `double` support makes sense as `StringToNumber`\nalready support `double` type.\n\nThis fix adds `double` support for `tf.decode_csv`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
37d483fda09a4e5f0580e5fe4a5d9b98cd7f02b8,'Fix a typo'
88991bb4a119328e4522bc9e4dd0414b9b10ed7d,'Fixed formatting issue'
d1907fef39e447d42955ff8e6291374ece59fbb4,'Merge pull request #14010 from ozabluda/patch-1\n\nFix documentation error in tf.size()'
2f8d3387c3b27cd77509efb69732c336479e014c,'[XLA] Fix race condition in LocalClientTestBase.\n\nGetOrCreateAllocator needs to be thread-safe.\n\nPiperOrigin-RevId: 173604923'
f13b76a52886e39d8e97c9256c383eb3b79748d8,"'Replace the fake updates with no updates when not training. This is possible now that the tf.cond bug has been fixed, and is needed to remove rare data races.\n\nPiperOrigin-RevId: 173601427'"
a0c33c48e05a32adddf2119cc20bc3ea7a0e7253,"'Fix documentation error in tf.size()\n\ntf.size() returns a symbolic `Tensor`, not an integer.'"
a8e1c3a88d5470e813de9a3642c1bf2f08baef5f,'[XLA:CPU] [XLA:GPU] Run DCE during fixed-point simplification pass.\n\nPiperOrigin-RevId: 173592048'
2cbe1ffd23a0214492d182935212fc7c613e4a05,"'[XLA] Comment fixes (spelling, grammar, and a bit of correctness).\n\nPiperOrigin-RevId: 173589267'"
00adbdb9bc4650e3fa594cfdd408b30cf38243bf,"'Object-orient Metrics fixes:\n* Add examples for usage in both eager and graph execution.\n* Remove references to Evaluator in the doc string, to support stand-alone\n  uses.\n* Remove the need to override reset() if you use non-zero initialization of\n  some variable, by recording the initial values of variables.\n* Merge reset() into init_variables().\n\nPiperOrigin-RevId: 173586350'"
3db4df07101b013eacc37de0e2ff990bdadb3219,'fixed eval num_epochs.\n\nPiperOrigin-RevId: 173581816'
50914f04dc5eb28695933bf94a8e8fe221371b7c,'Changed GPU driver version assumption\nFixes #9669'
075866e09c682c390add689e63e0f65a8e85aa9b,'Merge pull request #13929 from sarahmaddox/patch-1\n\nAdd links and fix typos'
9ff1aebc2b3dcb07f15b92c0a58027b0438f502a,'Merge pull request #13997 from tensorflow/MarkDaoust-patch-1\n\nFix list formatting'
10a183353513d61863072cd47776bf9e488397a2,'Fix list formatting\n\nMarkdown needs a blank line before the list to render it correctly.\r\n\r\nhttps://www.tensorflow.org/api_docs/python/tf/estimator/RunConfig#replace'
7924f8bce946b367a3cdcacd91ee2a6a8b29e14e,'Bugfix: Fix gradient of KL divergence of\n`tf.distributions.MultivariateNormal*`. Previous it was `nan` when the two\ndistributions are identical.\n\nPiperOrigin-RevId: 173476896'
eea18bd6e5e5c8d0f0c90d6cb5b06433090c5d90,"'Fix wall_time in Summaries 2.o\n\nIt was previously storing microseconds in tf.Event.wall_time, which is a double\nmeant for UNIX timestamps.\n\nPiperOrigin-RevId: 173475843'"
35ca57d39b9e368ef43302421db774e4ac3e3625,'Bugfix: Improve numerical stability of `tf.contrib.distributions.NegativeBinomial.log_prob`.\n\nPiperOrigin-RevId: 173474795'
7efbfc22850394c94785885d3b06cdd71124e5d6,'Fix test:\nCall instruction was added to builder instead of call_builder. Triggers the assertion in MakeInstructionPostOrder when dumping out the module.\n\nPiperOrigin-RevId: 173464579'
2ece96046d32c205c78393441404604db8706b9b,"'Add clang style check as part of the sanity check.\n\nThis fix is an effort to add clang style check as part of the sanity check.\n\nIn `CONTRIBUTING.md` it has been advised to run `clang-format --style=google file.cc`\nso that Google coding style is conformed. However, there is no sanity check\nin the current Jenkins build so current .cc and .h files in the repo are not really\nconforming to the coding style.\n\nThis actually causes issues. In case a PR is submitted with `clang-format --style=google file.cc`,\nthe reviewer may see additional unrelated changes which might be a distraction. The\ndeveloper may also spent additional time to manually check for any discrepancies manually with additional\nunrelated style changes.\n\nThis fix adds the clang-format check to the ci build so that when `ci_sanity.sh` is running,\nit will use clang-format to make sure the code is conforming to the coding style as specified\nin `CONTRIBUTING.md`.\n\nOne thing that might need to take notice is the header order of the Eigen library. See\nhttps://github.com/tensorflow/tensorflow/pull/13907#issuecomment-338718110\nfor further details.\n\nBasically, if Eigen headers could be placed in any order, then no additional steps are needed.\nOtherwise, it is always possible to place the Eigen headers at the top, then leave one empty\nline like:\n```cpp\n\n```\n\nIn this way, even a run of `clang-format -i --style=google file.cc` will still respect\nthe order and leave Eigen header at the top.\n\nThis PR is experimeal so it only checks `tensorflow/core/ops` directory. Other files could be\nadded if this PR is OK.\n\nThis PR also sanitizes all files in `tensorflow/core/ops` directory so that it conforms to\ncoding style requirement.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
cb7cb40a57fde5cfd4731bc551e82a1e2fef43a5,'Merge pull request #13972 from taehoonlee/fix_typos\n\nFix typos'
b81c8eda6074d17142b1f6e64ab30b341a8338a0,'Better shape function for fixed width histogram op.\n\nPiperOrigin-RevId: 173446796'
9ad48ae2652291b4ea6f4b03da8637f58d6fccf4,"'Add de-fuser pass which replaces fusion nodes with their non-fused\nequivalents. This pass will be used in tools added in followup CLs.\nThe motivation for this pass is running an HLO module which was built\nfor one backend on a different backend for testing and debugging. De-fusing\nis necessary because different backends have different fusion support.\n\nAlso, fix problem with deletion of fused computation identified when testing\nthe defuser.\n\nPiperOrigin-RevId: 173442671'"
836d9fe7d3de3057db30bbb475bfb82ea258a880,'fix equation'
f1f60ac3e59b7cbbd2badef11cc3da42064fc695,"'1. Separate the special case BinaryFunctor when NDIMS == 2 into a template specialization. This prevents the NDIMS==2 optimization code from being compiled in the general case, which can lead to compile time errors when the underlying Eigen implementation becomes more strict about NDIMS.\n\n2. Fix the 64-bit dimension() call on output in extract_image_patches_op.h when other operands have been cast to use 32-bit index.\n\nPiperOrigin-RevId: 173409602'"
2eeb6df0bd7c329163a6a25dd111a25a7b9ad16f,'Fix SIGSEGV in GraphRunner::Run when called with a function library for a non-CPU device.\n\nPiperOrigin-RevId: 173401446'
90278e68c03964fdbb0371357feb7cb1d86bd09b,'Fix typos'
355e25ebcab64e833dfc987638c3e6c79d838266,"'Merge changes from github.\nEND_PUBLIC\n\n---\nCommit 9f8523640 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 173145770\n\n---\nCommit 01b6b0638 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nCut tracing memory cost\n\nPiperOrigin-RevId: 173144626\n\n---\nCommit 5e23e0e67 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Erase cloned instructions on the fly when merging fusion nodes.\n\nThis avoids the awkward situation where an RNG which is clearly eligible for fusion becomes ineligible mid-fusion because it suddenly has an extra (dead) user.\n\nPiperOrigin-RevId: 173141716\n\n---\nCommit 1038927c0 authored by Saurabh Saxena<srbs@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd SerializeIterator op that serializes an IteratorResource into a variant tensor.\nAdd DeserializeIterator op that builds IteratorResource from a variant tensor.\nMove BundleReaderWrapper and BundleWriterWrapper from dataset.h to iterator_ops.cc.\nAdd generic key-value store interfaces IteratorStateReader and IteratorStateWriter for reading/writing state of iterators.\nGet rid of IteratorBundleReader and IteratorBundleWriter.\n\nPiperOrigin-RevId: 173140858\n\n---\nCommit 57f3e529d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal change\n\nPiperOrigin-RevId: 173136642\n\n---\nCommit 0e56ffb7b authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix breakages in OSS builds\n\nSee example breakages logs at:\nhttp://ci.tensorflow.org/job/tensorflow-cl-cpu-python3-pip/10847/console\nhttp://ci.tensorflow.org/job/tensorflow-cl-gpu/11008/console\n\n1. CL/172477381 added the no_oss tag to tests with oss_serial tags, which broke the logic of OSS_SERIAL tests in pip.sh and run_pip_test.sh. This CL fixes that.\n\n2. The nccl_kernels BUILD target in contrib/nccl/BUILD was missing some dependencies. This CL adds the missing ones.\n\nFixes: #13918\nPiperOrigin-RevId: 173133914\n\n---\nCommit 3ed049b67 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAllows calling keras layers in eager mode.\n\nPiperOrigin-RevId: 173129805\n\n---\nCommit 4ec6f2b07 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSwitching contrib.summaries API to be context-manager-centric\n\nPiperOrigin-RevId: 173129793\n\n---\nCommit 03b02ffc9 authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPut Bazel mirror URLs first\n\nPiperOrigin-RevId: 173127955\n\n---\nCommit 46ab25e4d authored by David Majnemer<majnemer@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add support for convolutions with no spatial dimensions\n\nPiperOrigin-RevId: 173126950\n\n---\nCommit fc56349b7 authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf.data] Convert dataset arguments to tensors as early as possible.\n\nThis change raises a `TypeError` earlier if (for example) the `batch_size`\nargument to `Dataset.batch()` has the incorrect type.\n\nPiperOrigin-RevId: 173126678\n\n---\nCommit 4f7503a87 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nK-FAC: Support for registering multiple minibatches with register_fully_connected()\n\nPiperOrigin-RevId: 173121735\n\n---\nCommit 2845bfcd6 authored by Tim Harley<tharley@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAvoid listing all modified Enter/RefEnter nodes on INFO, use VLOG(1) instead.\n\nLeave a single, simple, message on INFO.\n\nPiperOrigin-RevId: 173121726\n\n---\nCommit 434695921 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nK-FAC: _check_registration() supports multiple towers.\n\nPiperOrigin-RevId: 173115870\n\n---\nCommit 670dddf4a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMulti-minibatch support for\ntf.contrib.kfac.fisher_blocks.FullyConnectedKFACBasicFB.\n\nPiperOrigin-RevId: 173109677\n\n---\nCommit dc13a8e2f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix import of meta graphs with partitioned variables into a scope.\n\nSaver inspects SliceInfo to decide the variable name when creating a\ncheckpoint. Before this fix even if a partitioned variable (""weights"")\nwas imported into a scope ""a"" it would still be checkpointed as (""weights"")\ninstead of (""a/weights"") since import_scoped_meta_graph was not adjusting\nthe SliceInfo.\n\nWARNING: if you use import_meta_graph on graphs with partitioned_variables WITH an import_scope argument AND then create a Saver to write/read checkpoints this change\nmay break your checkpoint loading.\nPiperOrigin-RevId: 173105796\n\n---\nCommit eea089bdb authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nK-FAC: Multi-tower support for ConvDiagonalFB.\n\nPiperOrigin-RevId: 173105412\n\n---\nCommit 9b9cbbe2a authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nAdd int64 Tperm type support for `Transpose` (#13909)\n\n* Add int64 Tperm type support for `Transpose`\n\nThis fix adds int64 Tperm support for `Transpose`. In\n`array_ops.cc`, `Transpose` and `ConjugateTranspose`\nhave been specified as accepting int32 and int64 perm\ntypes. However, only int32 kernels has been registered.\n\nThis fix adds the int64 perm support by removing\nthe constraint on Tperm, resolve the type at runtime,\nand copying the data type accordingly to correctly handle\nthe int64/int32 types.\n\nAdditional tests have been added as well.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Add test cases for int64 of perm in Transpose.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Add namespace to hide PermutationHelper\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Enable use_gpu=True for perm type test.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* extra // namespace annotation\n\n* Adding a comment about int32 casting that should be safe.\n\nPermutations only contain values that refer to dimensions, and the maximum number of dimensions we have is 254, so an int32 is always safe here.\n\n---\nCommit ac0004e71 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nAdd int64 shape support on GPU for stateless random ops. (#13908)\n\n* Add int64 shape support on GPU for stateless random ops.\n\nThis fix adds int64 shape support on GPU for stateless random ops\n`StatelessRandomUniform`, `StatelessRandomNormal`, `StatelessTruncatedNormal`.\n\nThe int64 shape for stateless random ops is already supported on CPU\nwith int32/int64 processed properly through `MakeShape`.\n\nHowever, on GPU a type constraint `.TypeConstraint<int32>(""T"")`\nhas been improperly added. Such a type constraint actually prevents\nan int64 shape type to run on GPU. (As a comparision, no type constraint\non CPU).\n\nThis fix removes the type constraint and allows int64 shape to be run on GPU.\n\nThis fix also adds test cases for int64 shape support on stateless random ops.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Add test cases for int64 shape support for stateless random ops.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Add int32 to shape types tested.\n\n---\nCommit 0d437c3be authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nAdd int64 padding support for MirrorPad (#13907)\n\n* Add int64 padding support for MirrorPad\n\nThis fix adds int64 padding support for `MirrorPad`.\nIn the `array_ops.cc` the `MirrorPad`/`MirrorPadGrad`\nhas been specified as supporting int64 padding. The related\nkernels does not have the int64 padding registered though.\nThis fix adds the int64 padding support. This fix also adds\nadditional test cases for coverage.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Update template for CPU and GPU support of int64 paddings.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Add int64 padding support for MirrorPad\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Put eigen header first like before, just in case.\n\n---\nCommit 690003cc0 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nAdd `int64` type `multiples` support for `tf.tile` (#13884)\n\n* Add `int64` type `multiples` support for `tf.tile`\n\nIn the doc of `tf.tile` (tf.tile.__doc__) both `int32`\nand `int64` are supported for `multiples`. However, the kernel\nfor `int64` is not registered yet.\n\nThis fix adds the support of `int64` `multiples` so that the\nbehavior matches the description of the docs.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Update functors for int64 multiples support in `tf.tile`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Update test cases for int64 of multiples in `tf.tile`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Add GPU and non GPU tests\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* format with clang-format -i\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Move Tmultiples after T (as it is  auxilliary)\n\nAnd use `use_gpu=True`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit fd8d517b9 authored by Yunxing Dai<yunxing@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd tests for convolution 1D\nRELNOTES: n/a\n\nPiperOrigin-RevId: 173060283\n\n---\nCommit 40c475b48 authored by formath<jinpengliu@163.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nadd segment_reduction_ops to tf_op_files (#13901)\n\n---\nCommit bfa4ec194 authored by Tayo Oguntebi<10927929+tayo@users.noreply.github.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nUpdate node_def.proto comments (#13874)\n\nThe device field had outdated comments.\n\nNote: We could consider adding tpu as an example here, e.g. ""gpu"" | ""cpu"" | ""tpu"".  Thoughts?\n---\nCommit c9cb5a58d authored by formath<jinpengliu@163.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nprotobuf lib path bug fix for benckmark on osx (#13878)\n\n---\nCommit 1c1dad105 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nAdd int64 axis support for reduction ops. (#13891)\n\n* Add int64 axis support for reduction ops.\n\nThis fix is a follow up to PR 13863. In PR 13863 the\nprogram crash is fixed if int64 axis is passed to reduction ops,\ne.g. reduce_sum, reduce_max, etc. However, 13863 does not\nprocess the case of int64 support, it merely fixes the crash.\n\nThis fix adds the support for int64 axis of reduction ops.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Add int64 axis support for mean, prod, sum\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Add int64 axis support for min and max.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Add int64 axis support for reduce_all and reduce_any\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Add test cases for int64 axis support of reduce_any and reduce_all\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 17096081e authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nImprove resize_bicubic performance by reorganizing loops (#13840)\n\n* Improve resize_bicubic performance by reorganizing loops\n\nThis fix tries to address the issue raised in 13693 where\nperformance of `resize_bicubic` is not on par with opencv.\n\nThis fix rearranges the loops so that it is the same for\nnum_channel=40 and num_channel=3:\n\nPre-fix:\n```\nCHANNEL=40\nopencv: 145.08ms\ntf: 314.26ms\n\nCHANNEL=3\nopencv: 11.95ms\ntf: 8.95ms\n```\n\nPost-fix:\n```\nCHANNEL=40\nopencv: 144.25ms\ntf: 214.55ms\n\nCHANNEL=3\nopencv: 11.78ms\ntf: 14.07ms\n```\n\nThis fix fixes 13693.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Keep special handling of `num_channels=3` for `resize_bicubic`\n\nThis commit keeps special handling of `num_channels=3` for\n`resize_bicubic`:\nWithout special handling:\n```\nopencv: 11.78ms\ntf: 14.07ms\n```\nWith special handling:\n```\nopencv: 11.74ms\ntf: 9.46ms\n```\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Expand Benchmark test for resize_bicubic\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Update from review feedback.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit b927df57f authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nUpdate protobuf.cmake to b04e5cba356212e4e8c66c61bbe0c3a20537c5b9 (#13893)\n\nThis fix tries to address the issue raised in 8187 where\nprotobuf.cmake used different version as bazel.\n\nThe reason for discrepancy was due to the fact that a customerized\nprotobuf was needed with Windows patch. Since the patch has been\nmerged in (https://github.com/google/protobuf/pull/2203),\nit makes sense to update protobuf.cmake so that the same version\nof cmake is used.\n\nThis fix fixes 8187.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n---\nCommit d1183ca6a authored by Vijay Vasudevan<vrv@google.com>\nCommitted by GitHub<noreply@github.com>:\nGive each variable a unique name in accumulate_n_v2_eager_test. (#13886)\n\n---\nCommit a69945810 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate pin for bazel-toolchains to latest version\n\nPiperOrigin-RevId: 173002530\n\n---\nCommit 9d55c249c authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nFix doc in TF_CALL_ when invoked in mobile platform (#13881)\n\n* Fix doc in TF_CALL_ when defined(IS_MOBILE_PLATFORM) && !defined(__ANDROID_TYPES_FULL__)\n\nThis is a small doc fix that includes bool as part of the types\nthat is supported in mobile (IS_MOBILE_PLATFORM && !__ANDROID_TYPES_FULL__),\nas bool is clearly invoked in the following define.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Also add bool to android full version.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit ba49d8583 authored by Bjarke Hammersholt Roune<broune@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSlight change to reduce_test to avoid generating inf, which was triggering an inf detector unnecessarily.\n\nPiperOrigin-RevId: 172965466\n\n---\nCommit 93e8f3c67 authored by Anna R<annarev@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdding Python ApiDef overrides.\n\nPiperOrigin-RevId: 172960496\n\n---\nCommit 0d6a2e353 authored by Anna R<annarev@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal change.\n\nPiperOrigin-RevId: 172960439\n\n---\nCommit 62df65c72 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd dtype argument to Mean and Accuracy object-oriented metrics.\n\nPiperOrigin-RevId: 172957714\n\n---\nCommit d7409d32b authored by Simone Cirillo<my.accounts@gmx.se>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nFix import of spatial_softmax from tensorflow.contrib.layers (#13833)\n\n---\nCommit df8bce63d authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nFix crash when `int64` axis is passed to `tf.reduce_sum` (#13863)\n\n* Fix crash when `int64` axis is passed to `tf.reduce_sum`\n\nThis fix tries to fix the crash triggered by `int64` axis passed\nto `tf.reduce_sum`:\n```\nubuntu@ubuntu:~/tensorflow2$ (cd && python)\nPython 2.7.12 (default, Nov 19 2016, 06:48:10)\n[GCC 5.4.0 20160609] on linux2\nType ""help"", ""copyright"", ""credits"" or ""license"" for more information.\n>>> import tensorflow as tf\n>>> v = tf.reduce_sum([1,2,3], tf.constant(0, tf.int64))\n2017-10-20 15:55:06.993430: F tensorflow/core/framework/tensor.cc:601] Check failed: dtype() == expected_dtype (9 vs. 3)\nubuntu@ubuntu:~/tensorflow2$\n```\n\nThe issue is caused by the fact that shape inference in `common_shape_fns.cc`\nonly assumes int32 without proper handling of diffent types. In `math_ops.cc`\nboth int32 and int64 are mentioned.\n\nNOTE that this fix does not address the issue that int64 is not supported.\nTo allow int64 axis it is more than adding a template in `ReductionOp` as the type\nof the axis seems to be decided by some other ways in Eigen.\n\nThis fix merely fixed the crash so that an error message will return without\nexit from the python program ""No OpKernel was registered to support Op \'Sum\' with these attrs"".\n\nStill, I think its worth to at least allow the program to continue in case of unsupported kernel.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Update implementation with a template helper function.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 29c7b4658 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdding the Stanford Tensorflow class to community resources.\n\nPiperOrigin-RevId: 172956049\n\n---\nCommit f758b24a8 authored by Alexandre Passos<apassos@google.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nVariable name for the eager test (#13873)\n\n---\nCommit a5fe66b15 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemoved some unnecessary broadcasts in binary ops where only one input needs\nbroadcasting (which is a fairly common case, even in the fallback path).\n\nPiperOrigin-RevId: 172950493\n\n---\nCommit c77090a0a authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nFix issues where int64 crops could not be passed to batch_to_space. (#13862)\n\n* Fix issues where int64 crops could not be passed to batch_to_space.\n\nThis fix tries to address the issue where int64 `crops` could\nnot be passed to `batch_to_space` even though both int32 and\nint64 are specified as supported in the docs (tf.batch_to_space.__doc__)\n\nThe reason is that BatchToSpace kernel puts a constraint of int32 to crops\ndata types.\n\nThis fix removed the constraint so that int64 `crops` could be supported.\n\nNOTE: Just removing the constraint should work and it is not necessary\nto add specification to the kernel class template, as `SubtleMustCopyFlat`\ncalled in the class already correctly handled both int32 and int64 cases.\nBesides, other data types (e.g., float or double) will not be passed to the\nkernel as they are guarded by the specification in `array_ops.cc`.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Also remove int64/int32 type constraints for SpaceToBatch kernels\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Add test cases for int64 crops of batch_to_space and space_to_batch\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Fix test failures.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 494837936 authored by Joshua V. Dillon<jvdillon@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake `tf.contrib.distributions` quadrature family accept a `Tensor` for\n`quadrature_grid_and_probs` argument.\n\nPiperOrigin-RevId: 172950094\n\n---\nCommit 9c825d32c authored by Jinze Bai<baijinze1994@163.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nMerge two GPU kernel launching to one in DiagOp. (#13859)\n\n---\nCommit c0ca50a47 authored by Yan Facai (???)<facai.yan@gmail.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nENH: add Relu6GradGrad (#13268)\n\n* ENH: add Relu6GradGrad\n\n* TST: add test case\n\n* CLN: import nn_grad\n\n* TST: add init value\n\n---\nCommit 8ff33271e authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDump the computation\'s SessionModule as part of the tf_compile rule.\n\nPiperOrigin-RevId: 172946149\n\n---\nCommit ebcae4a5e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd streaming_precision_recall_at_equal_thresholds\n\nThis helper method computes streaming tp, fp, tn, fp, precision, and recall for the user in a way that exhibits O(T + N) time and space complexity (instead of O(T * N)), where T is the number of thresholds and N is the size of the predictions tensor.\n\nThanks to Frank Chu for the efficient algorithm!\n\nPiperOrigin-RevId: 172946073\n\n---\nCommit ccfd9c1e5 authored by Sanjoy Das<sanjoy@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nLog Hlo IR during AOT compilation\n\nPiperOrigin-RevId: 172944165\n\n---\nCommit 985031a10 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAllows tfe.enable_eager_execution(device_policy=tfe.DEVICE_POLICY_WARN).\n\nPiperOrigin-RevId: 172943398\n\n---\nCommit 703182d85 authored by Mingxing Tan<tanmingxing@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd performance guide for fused decode_and_crop_jpeg optimization.\n\nPiperOrigin-RevId: 172943116\n\n---\nCommit 66b1f4383 authored by Francois Chollet<fchollet@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake Network compatible with eager mode. Currently it only allows to instantiate a Network in eager mode using the regular Keras API, and call it on eager tensors.\n\nPiperOrigin-RevId: 172942569\n\n---\nCommit 41df2cec2 authored by ashankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nTesting pending CL: 172939383\n\n---\nCommit 37fd95179 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSimplifies capturing code in graph_callable to use recent function improvements.\n\nPiperOrigin-RevId: 172937003\n\n---\nCommit d1e7382af authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 172924803\n\nPiperOrigin-RevId: 173347587'"
e67f3af48c94c9456c3ff376dc30c82a4bf982cd,"""Use 'LABEL maintainer=' in Dockerfile (#13961)\n\n* Use 'LABEL maintainer=' in Dockerfile\r\n\r\nThis fix is a follow up of 13661 to replace `MAINTAINER`\r\nwith `LABEL maintainer=` in Dockerfile. The keyword\r\n`MAINTAINER` has long been deprecated and is replaced by `LABEL`,\r\nwhich is much more flexible and is easily searchable through `docker inspect`.\r\n\r\nThis fix replaces remaining `MAINTAINER` with `LABEL`.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Additional `MAITAINER` -> `LABEL`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
8e7390ff4e0d9d173df5e193bf90af934e42f193,"""Fix FusedConv2DBiasActivationOp for OIHW filter format.\n\nThe 'filter' variable wasn't initialized for OIHW filter format.\n\nPiperOrigin-RevId: 173327533"""
64ba163dc8fa1bdf780cbbb67811f9adce05e325,"'Evaluator changes:\n* Get graph execution working, by adding init_variables() and\n  supporting graph mode in evaluate_on_dataset().\n* Use track_*() instead of add_*() to match Network.\n* Fill in several doc strings.\n* Detect metric added to two different Evaluators.\n* Return prefix along with metrics from metrics property.\n\nPiperOrigin-RevId: 173320585'"
15bd614fedc20d229f3e97a99e0748136ba4852c,"'Merge pull request #13955 from jasharpe/patch-1\n\nFix a typo of ""Jenkins"".'"
bf1fad214febef6af5c101d8f953d0109c46dfbb,'Fix NCCL rewrite bug when rerunning sessions (assigned device id is not stable).\nFix collocate_gradients for initial losses.\nRemove NcclBroadcast gradient test for now. The generated AddN to accumulate the broadcast outputs before passing it to the gradient function is CPU only and cannot be collocated with NcclBroadcast on the GPU.\n\nPiperOrigin-RevId: 173306409'
6d6c8e012bb4498bbdd75de3f64f0cab72b1391c,"'Fix a typo of ""Jenkins"".'"
34f5d001c4224c8c1f4ce615bcb1e76610e95673,"""Fix K-FAC's loss_functions.insert_slice_in_zeros and add tests\n\nPiperOrigin-RevId: 173299853"""
c89ebd31d6d729704d77a712c7103f0a7e5353e1,"'Creating a fix for a threading issue with ffmpeg_lib in third_party.\n\nBug is at:\n\n#5804\n\nFix is to add a unique identifier to each temp file name. The id is unique to\nthe process. Multiple processes could still have a conflict, though even there\nthe odds do go down somewhat with this fix.\n\nPiperOrigin-RevId: 173261202'"
5487545cfba94bff67f494a038e4314518982b45,'Merge pull request #13832 from tjingrant/aws-fix\n\nFix AWS SDK missing symbols on Linux PPC'
6254d0583d49dc9f3635b818b201c71015698f2b,'Merge pull request #13937 from annarev/fix_makefile\n\nUse := instead of ?= to set MAKEFILES_DIR to fix Android build flakiness'
5bef42720aac651957139d78e4edf0f7bcda1a5f,'Use := instead of ?= to set MAKEFILES_DIR to fix Android build flakiness'
b20c66a2ad6055602b680ba8f7c8f359e104fd6b,"'nsync update: portability fixes for MacOS, s390x.\n\nPiperOrigin-RevId: 173208878'"
6bcc00668094be8daf8465b8689bbed5ab285b2d,'Fix error in topk heap launch code. It assumed sizeof(struct) == sizeof(struct\ncomponents).\n\nPiperOrigin-RevId: 173188044'
fbb71d767d890ead9007e713ae77dd223df232bd,"'Add links and fix typs\n\nAdd links to the docs in GitHub, to make it easier for contributors to find them. Also fix some typos in the names of GitHub and TensorFlow, and standardise capitalisation in headings.'"
0e56ffb7b7cddaf3f0521747d2fade90c56b586f,"'Fix breakages in OSS builds\n\nSee example breakages logs at:\nhttp://ci.tensorflow.org/job/tensorflow-cl-cpu-python3-pip/10847/console\nhttp://ci.tensorflow.org/job/tensorflow-cl-gpu/11008/console\n\n1. CL/172477381 added the no_oss tag to tests with oss_serial tags, which broke the logic of OSS_SERIAL tests in pip.sh and run_pip_test.sh. This CL fixes that.\n\n2. The nccl_kernels BUILD target in contrib/nccl/BUILD was missing some dependencies. This CL adds the missing ones.\n\nFixes: #13918\nPiperOrigin-RevId: 173133914'"
ed03c433ae5c89075717476f9bc1e731de656c6f,'Add int64 type `multiples` support for TileGrad.\n\nThis fix is a follow up of #13884 to add int64 type of `multiples`\nsupport for TileGrad for completeness.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
f300bcbb3419e7ad7130a84d5375ae53d92e1568,"""Propagate -DPCRE_STATIC from pcre.BUILD to swig.BUILD\n\nTo fix a build error on Windows:\nERROR: C:/os/t/external/swig/BUILD.bazel:5:1: Linking of rule '@swig//:swig'\n  failed (Exit 1120): link.exe failed: error executing command\nmisc.o : error LNK2019: unresolved external symbol __imp_pcre_compile\n  referenced in function Swig_string_regex\n..."""
dc13a8e2f7cfd56121347f5596f8b5a770da41c9,"'Fix import of meta graphs with partitioned variables into a scope.\n\nSaver inspects SliceInfo to decide the variable name when creating a\ncheckpoint. Before this fix even if a partitioned variable (""weights"")\nwas imported into a scope ""a"" it would still be checkpointed as (""weights"")\ninstead of (""a/weights"") since import_scoped_meta_graph was not adjusting\nthe SliceInfo.\n\nWARNING: if you use import_meta_graph on graphs with partitioned_variables WITH an import_scope argument AND then create a Saver to write/read checkpoints this change\nmay break your checkpoint loading.\nPiperOrigin-RevId: 173105796'"
9b9cbbe2a69b7fcec72d82f271cb90839c3035b7,"'Add int64 Tperm type support for `Transpose` (#13909)\n\n* Add int64 Tperm type support for `Transpose`\r\n\r\nThis fix adds int64 Tperm support for `Transpose`. In\r\n`array_ops.cc`, `Transpose` and `ConjugateTranspose`\r\nhave been specified as accepting int32 and int64 perm\r\ntypes. However, only int32 kernels has been registered.\r\n\r\nThis fix adds the int64 perm support by removing\r\nthe constraint on Tperm, resolve the type at runtime,\r\nand copying the data type accordingly to correctly handle\r\nthe int64/int32 types.\r\n\r\nAdditional tests have been added as well.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for int64 of perm in Transpose.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add namespace to hide PermutationHelper\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Enable use_gpu=True for perm type test.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* extra // namespace annotation\r\n\r\n* Adding a comment about int32 casting that should be safe.\r\n\r\nPermutations only contain values that refer to dimensions, and the maximum number of dimensions we have is 254, so an int32 is always safe here.'"
ac0004e71120e237989422bd4a7441df72613072,"'Add int64 shape support on GPU for stateless random ops. (#13908)\n\n* Add int64 shape support on GPU for stateless random ops.\r\n\r\nThis fix adds int64 shape support on GPU for stateless random ops\r\n`StatelessRandomUniform`, `StatelessRandomNormal`, `StatelessTruncatedNormal`.\r\n\r\nThe int64 shape for stateless random ops is already supported on CPU\r\nwith int32/int64 processed properly through `MakeShape`.\r\n\r\nHowever, on GPU a type constraint `.TypeConstraint<int32>(""T"")`\r\nhas been improperly added. Such a type constraint actually prevents\r\nan int64 shape type to run on GPU. (As a comparision, no type constraint\r\non CPU).\r\n\r\nThis fix removes the type constraint and allows int64 shape to be run on GPU.\r\n\r\nThis fix also adds test cases for int64 shape support on stateless random ops.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for int64 shape support for stateless random ops.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add int32 to shape types tested.'"
0d437c3beb14c08b5b9c08d806de91d7f3d2c0e3,"'Add int64 padding support for MirrorPad (#13907)\n\n* Add int64 padding support for MirrorPad\r\n\r\nThis fix adds int64 padding support for `MirrorPad`.\r\nIn the `array_ops.cc` the `MirrorPad`/`MirrorPadGrad`\r\nhas been specified as supporting int64 padding. The related\r\nkernels does not have the int64 padding registered though.\r\nThis fix adds the int64 padding support. This fix also adds\r\nadditional test cases for coverage.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update template for CPU and GPU support of int64 paddings.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add int64 padding support for MirrorPad\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Put eigen header first like before, just in case.'"
690003cc015d6d56630d5836adb6769729bd9c3d,"'Add `int64` type `multiples` support for `tf.tile` (#13884)\n\n* Add `int64` type `multiples` support for `tf.tile`\r\n\r\nIn the doc of `tf.tile` (tf.tile.__doc__) both `int32`\r\nand `int64` are supported for `multiples`. However, the kernel\r\nfor `int64` is not registered yet.\r\n\r\nThis fix adds the support of `int64` `multiples` so that the\r\nbehavior matches the description of the docs.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update functors for int64 multiples support in `tf.tile`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update test cases for int64 of multiples in `tf.tile`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add GPU and non GPU tests\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* format with clang-format -i\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Move Tmultiples after T (as it is  auxilliary)\r\n\r\nAnd use `use_gpu=True`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
c9cb5a58d5e174e9870c40328d6be427ccf8be54,'protobuf lib path bug fix for benckmark on osx (#13878)'
1c1dad105a57bb13711492a8ba5ab9d10c91b5df,"'Add int64 axis support for reduction ops. (#13891)\n\n* Add int64 axis support for reduction ops.\r\n\r\nThis fix is a follow up to PR 13863. In PR 13863 the\r\nprogram crash is fixed if int64 axis is passed to reduction ops,\r\ne.g. reduce_sum, reduce_max, etc. However, 13863 does not\r\nprocess the case of int64 support, it merely fixes the crash.\r\n\r\nThis fix adds the support for int64 axis of reduction ops.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add int64 axis support for mean, prod, sum\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add int64 axis support for min and max.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add int64 axis support for reduce_all and reduce_any\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for int64 axis support of reduce_any and reduce_all\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
17096081eed7881c0b8ce3c32b5e9795619e27bb,'Improve resize_bicubic performance by reorganizing loops (#13840)\n\n* Improve resize_bicubic performance by reorganizing loops\r\n\r\nThis fix tries to address the issue raised in 13693 where\r\nperformance of `resize_bicubic` is not on par with opencv.\r\n\r\nThis fix rearranges the loops so that it is the same for\r\nnum_channel=40 and num_channel=3:\r\n\r\nPre-fix:\r\n```\r\nCHANNEL=40\r\nopencv: 145.08ms\r\ntf: 314.26ms\r\n\r\nCHANNEL=3\r\nopencv: 11.95ms\r\ntf: 8.95ms\r\n```\r\n\r\nPost-fix:\r\n```\r\nCHANNEL=40\r\nopencv: 144.25ms\r\ntf: 214.55ms\r\n\r\nCHANNEL=3\r\nopencv: 11.78ms\r\ntf: 14.07ms\r\n```\r\n\r\nThis fix fixes 13693.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Keep special handling of `num_channels=3` for `resize_bicubic`\r\n\r\nThis commit keeps special handling of `num_channels=3` for\r\n`resize_bicubic`:\r\nWithout special handling:\r\n```\r\nopencv: 11.78ms\r\ntf: 14.07ms\r\n```\r\nWith special handling:\r\n```\r\nopencv: 11.74ms\r\ntf: 9.46ms\r\n```\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Expand Benchmark test for resize_bicubic\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update from review feedback.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
b927df57f0c09ea62a855795e340d6daf70553df,"'Update protobuf.cmake to b04e5cba356212e4e8c66c61bbe0c3a20537c5b9 (#13893)\n\nThis fix tries to address the issue raised in 8187 where\r\nprotobuf.cmake used different version as bazel.\r\n\r\nThe reason for discrepancy was due to the fact that a customerized\r\nprotobuf was needed with Windows patch. Since the patch has been\r\nmerged in (https://github.com/google/protobuf/pull/2203),\r\nit makes sense to update protobuf.cmake so that the same version\r\nof cmake is used.\r\n\r\nThis fix fixes 8187.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
9d55c249c18745fdd2e4e50b8faa3eef2aac4f90,"'Fix doc in TF_CALL_ when invoked in mobile platform (#13881)\n\n* Fix doc in TF_CALL_ when defined(IS_MOBILE_PLATFORM) && !defined(__ANDROID_TYPES_FULL__)\r\n\r\nThis is a small doc fix that includes bool as part of the types\r\nthat is supported in mobile (IS_MOBILE_PLATFORM && !__ANDROID_TYPES_FULL__),\r\nas bool is clearly invoked in the following define.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Also add bool to android full version.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
d7409d32bba5ffa89141ec5427780f68a3b6942d,'Fix import of spatial_softmax from tensorflow.contrib.layers (#13833)'
df8bce63d6de6e728e69eb9f45862b816f88a0db,"'Fix crash when `int64` axis is passed to `tf.reduce_sum` (#13863)\n\n* Fix crash when `int64` axis is passed to `tf.reduce_sum`\r\n\r\nThis fix tries to fix the crash triggered by `int64` axis passed\r\nto `tf.reduce_sum`:\r\n```\r\nubuntu@ubuntu:~/tensorflow2$ (cd && python)\r\nPython 2.7.12 (default, Nov 19 2016, 06:48:10)\r\n[GCC 5.4.0 20160609] on linux2\r\nType ""help"", ""copyright"", ""credits"" or ""license"" for more information.\r\n>>> import tensorflow as tf\r\n>>> v = tf.reduce_sum([1,2,3], tf.constant(0, tf.int64))\r\n2017-10-20 15:55:06.993430: F tensorflow/core/framework/tensor.cc:601] Check failed: dtype() == expected_dtype (9 vs. 3)\r\nubuntu@ubuntu:~/tensorflow2$\r\n```\r\n\r\nThe issue is caused by the fact that shape inference in `common_shape_fns.cc`\r\nonly assumes int32 without proper handling of diffent types. In `math_ops.cc`\r\nboth int32 and int64 are mentioned.\r\n\r\nNOTE that this fix does not address the issue that int64 is not supported.\r\nTo allow int64 axis it is more than adding a template in `ReductionOp` as the type\r\nof the axis seems to be decided by some other ways in Eigen.\r\n\r\nThis fix merely fixed the crash so that an error message will return without\r\nexit from the python program ""No OpKernel was registered to support Op \'Sum\' with these attrs"".\r\n\r\nStill, I think its worth to at least allow the program to continue in case of unsupported kernel.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update implementation with a template helper function.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
c77090a0ae61fc69fcdff7c58be9feb6121e3bd4,"'Fix issues where int64 crops could not be passed to batch_to_space. (#13862)\n\n* Fix issues where int64 crops could not be passed to batch_to_space.\r\n\r\nThis fix tries to address the issue where int64 `crops` could\r\nnot be passed to `batch_to_space` even though both int32 and\r\nint64 are specified as supported in the docs (tf.batch_to_space.__doc__)\r\n\r\nThe reason is that BatchToSpace kernel puts a constraint of int32 to crops\r\ndata types.\r\n\r\nThis fix removed the constraint so that int64 `crops` could be supported.\r\n\r\nNOTE: Just removing the constraint should work and it is not necessary\r\nto add specification to the kernel class template, as `SubtleMustCopyFlat`\r\ncalled in the class already correctly handled both int32 and int64 cases.\r\nBesides, other data types (e.g., float or double) will not be passed to the\r\nkernel as they are guarded by the specification in `array_ops.cc`.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Also remove int64/int32 type constraints for SpaceToBatch kernels\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for int64 crops of batch_to_space and space_to_batch\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix test failures.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
a528ccdbfe6e4dadad4d982099e8ea5be93fe96f,'Add GPU support and improve performance for tf.diag and tf.diag_part (#13666)\n\n* improve tf.diag and tf.diag_part in CPU and GPU\r\n\r\n* add comment\r\n\r\n* make changes of DiagOp according to reviews\r\n\r\n* tidy indent\r\n\r\n* remove uesless comment prefix\r\n\r\n* add shard function for DiagOp\r\n\r\n* add benchmark for diag_op_test in core/kernel\r\n\r\n* change symbol order in BUILD file\r\n\r\n* remove empty line for Sanity Checks\r\n\r\n* add some comments and fix benchmark throughput ratio for DiagOp'
49f9c6f890c938955fa2d448ac5b556b9a6d9aa0,"'Fix ../makefile/download_dependencies.sh on OSX (#13845)\n\nwget expects parameters before the URL on OSX (tested on\r\nversion 1.16 and 1.19)\r\n\r\nIt would fail trying to use -P as a URL\r\n\r\nResolving -p... failed: nodename nor servname provided, or not known.\r\nwget: unable to resolve host address \xe2\x80\x98-p\xe2\x80\x99'"
513f7df42e4eadfcd241a3be695af6fd426b734e,"'Add `int64` out_idx` support for `listdiff`/`list_diff`/`setdiff1d` (#13839)\n\n* Add `int64` out_idx` support for `listdiff`/`list_diff`/`setdiff1d`\r\n\r\nThis fix tries to add `int64` `out_idx` support for `listdiff`/`list_diff`/`setdiff1d`.\r\nAs was specified in docs (`tf.setdiff1d.__doc__`), it is possible to specify\r\n`tf.int32` or `tf.int64` for the type of the output idx. However,\r\nthe `tf.int64` kernel has not been registered. As a consequence,\r\nan error will be thrown out if `tf.int64` is used.\r\n\r\nThis fix adds `int64` out_idx` support for `listdiff`/`list_diff`/`setdiff1d`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add template for signature matching of ListDiff kernel.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for `int64` out_idx support for `tf.listdiff`/`setdiff1d`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test case for int32 (missed in the last commit)\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
7a1ddf26aed9166af69a560e644abd3f0d4f8ecf,'Fix casting to size_t for mkl conv filter dims (#13831)'
bbf1985db1e1b9cddaa04819e29f98f81600f49c,"'Fix MPI and Verbs compilation when not using GPUs (#13800)\n\n* Fix build errors when building without CUDA support, but with MPI / verbs support\r\n\r\n* Fix buildifier errors\r\n\r\n* Moved stream_executor dependency after PR feedback'"
c2f91136bdfbc0103f01a932566ef46ad4ba9054,'Fixes build breakage (#13843)'
db07ee27b75f5efecf3f3706ec1a11e4cd05da54,'Fix bug introduced in\nhttps://github.com/tensorflow/tensorflow/commit/dc442f4ce2d3b11b56721337fe2b9e2282be93be\n\nPotentially invalid pointers passed to GraphConstructor::Construct()\n\nPiperOrigin-RevId: 172826567'
f1054553eafc74df8be9425c3344e71af98962ad,"""Add missing backslash in macro in mkl_transpose_op.cc. Fix erroneous formatting that resulted from it.\nFix return type for function template MKLTranspose2D.\nDefine MKL_Complex8 and MKL_Complex16 macros before including the MKL headers.\nOnly conjugate but don't transpose if conjugate=true && perm[0] == 0 && perm[1] == 1.\n\nPiperOrigin-RevId: 172824073"""
7a253f3da99c3692d464a8dd95d8280d4cd8973a,'Fix random_forest_mnist.py and eliminate a contrib.learn reference to skcompat.\n\nPiperOrigin-RevId: 172815173'
bc93dcbd9f7b445c5f6f0d1c8f597324d412a76a,"'Fix precision/recall test.\n\nPrecision and Recall have as the numerator TP: true positives.\nThe labels generated in the test were only negative, and hence the test passed before because all updates were 0.\n\nPiperOrigin-RevId: 172812994'"
47e92cfd08a230034268a1eeca625fd1e9908616,"'`tf.py_func`: Handle NumPy arrays of np.object that hold unicode strings.\n\nThis also fixes a bug affecting `tf.data.Dataset.from_generator()` on Python 3,\nwhere the generator yields Unicode (i.e. default) strings.\n\nPiperOrigin-RevId: 172798007'"
17ba3a69f4c3509711a3da5eff3cb6be99e0936d,"'`tf.py_func`: Handle NumPy arrays of np.object that hold unicode strings.\n\nThis also fixes a bug affecting `tf.data.Dataset.from_generator()` on Python 3,\nwhere the generator yields Unicode (i.e. default) strings.\n\nPiperOrigin-RevId: 172798007'"
eeabcaffd502a5e9fb3664eaa89134c855a86148,"'`tf.py_func`: Handle NumPy arrays of np.object that hold unicode strings.\n\nThis also fixes a bug affecting `tf.data.Dataset.from_generator()` on Python 3,\nwhere the generator yields Unicode (i.e. default) strings.\n\nPiperOrigin-RevId: 172798007'"
e858968dc720f47dd15ed8c2d7a5c3910a7e29b1,'Fix potential Tensor memory leak in GraphCompiler.\n\nPiperOrigin-RevId: 172792724'
3238fab55f4e9daf5a06fc44e78082da42fad8a0,'Fix potential Tensor memory leak in GraphCompiler.\n\nPiperOrigin-RevId: 172792724'
1c878e69cbb6276ee38364e42fde4db2239e15a6,'Fixed small typo in a docstring.\n\nPiperOrigin-RevId: 172775242'
89f15928293f62b63404ffbdabbb6a3b07274ff8,"'fix the issue: ""libcuda.so.1 not found"" and add some minor changes. (#13811)\n\n* fix the issue: ""libcuda.so.1 not found"" and add some minor changes.\r\n\r\n* Install wheel instead of python-wheel. Also, unnecessary lines are removed.'"
52e9b19b4fdf7ac966858f906c397e5ba2a1bf85,'fix aws build file for linux ppc'
b8f8a3d3660c75a4034bbe69a766d481638a6a4e,'Fix the build file and a memory issue for text_classification_character_cnn.py.\n\nPiperOrigin-RevId: 172695522'
274786ab9b825b18dc9a7dd5eb3f312ec6cb92f9,'[XLA] Run HLO verifier for hlo_evaluator_test and fix one shape mismatch in DoesConcateSimple test case.\n\nPiperOrigin-RevId: 172684383'
cdd3b14e47e9d5143569730485ad963936256d45,'Fix MKL build broken by stray line left behind in transpose_op.h.\n\nPiperOrigin-RevId: 172683597'
d94db4be7ebc02c2de169274f9f863611e68f98d,"'Branch 172647355 (#13819)\n\n* Update inception score to match the openAI version from https://github.com/openai/improved-gan/tree/master/inception_score.\r\n\r\nPiperOrigin-RevId: 172562573\r\n\r\n* Stub support for retrieving LossFunction by name.\r\n\r\nPiperOrigin-RevId: 172588516\r\n\r\n* Don\'t emit fusion computations separately in HloModule::ToString. These computations are emitted with their fusion instruction and therefore don\'t need to be emitted as a separate comptutation in the module.\r\n\r\nPiperOrigin-RevId: 172612725\r\n\r\n* Make `tf.contrib.distributions` quadrature family parameterized by\r\n`quadrature_grid_and_prob` vs `quadrature_degree`. Enables support of\r\nquadrature methods other than Gauss-Hermite.\r\n\r\nPiperOrigin-RevId: 172622919\r\n\r\n* Fixes test breakage.\r\n\r\nPiperOrigin-RevId: 172626499\r\n\r\n* Remove global step read dependency from model_fn. Estimator behavior still will be deterministic since the step checking logic in session_run_hooks was changed as follows:\r\n* assume stale step\r\n* before using the step, check for the current value by session.run\r\n\r\nPiperOrigin-RevId: 172629797\r\n\r\n* More changs to avoid flakes in random_shuffle_queue_test\r\n\r\nPiperOrigin-RevId: 172630989\r\n\r\n* Add expected keys to predictor exception if unexpected key detected.\r\n\r\nPiperOrigin-RevId: 172634275\r\n\r\n* Add TF_GraphGetOpDef() to C API and use in Operation.op_def()\r\n\r\nNote that this creates a small change in behavior with the C API\r\nenabled, since previously not all Python Operations had an OpDef\r\n(op_def() returns None). With the C API enabled, op_def() always\r\nreturns an OpDef.\r\n\r\nPiperOrigin-RevId: 172634411\r\n\r\n* Implement ZlibInputStream::Tell() by keeping track of the number of bytes\r\nconsumed by the reader.\r\n\r\nPiperOrigin-RevId: 172634455\r\n\r\n* Upgrade tensorflow pip dependency version to 3.4.0+\r\n\r\nPiperOrigin-RevId: 172635727\r\n\r\n* [XLA] Deterministically dump an executable.\r\n\r\nPreviously, dumping a executable is nondeterministic as a map in protobuf is serialized in random order.\r\n\r\nThis CL enables ""Deterministic dump"" mode of protobuf, which sorts the map first before dumping them. This is helpful in comparing if two dumps are the same in XLA determinism test.\r\n\r\nPiperOrigin-RevId: 172637100\r\n\r\n* Fixed work size computation in Split and SplitV ops to avoid integer overflow.\r\n\r\nPiperOrigin-RevId: 172637818\r\n\r\n* Internal change.\r\n\r\nPiperOrigin-RevId: 172641543\r\n\r\n* Bug fixes for fold_constants_lib.\r\n\r\n1. Tensor names in TF may be in the form of ""a:0"", ""a:1"", or ""a"" as a shorthand\r\nnotation of ""a:0"". FoldConstant library always expected the shorthand notation,\r\nand did not handle the cases where explicit notation was passed to input or\r\noutput list. This means that this library could not handle the case when input\r\nor output were not the first output of a node.\r\n\r\n2. To match the input nodes in the original graph and the added Recv nodes in\r\nrewritten graph, FoldConstant library used prefix matching. Unfortunately, this\r\nmeans that when a input name is a prefix of another input name, there is\r\npossibility that wrong Recv node gets matched. For example, if input names were\r\n""placeholder"" and ""placeholder_1"", then it did not handle the case very well.\r\n\r\n3. RemoveUnusedNodes() in FoldConstants lib could remove nodes which output\r\ndepended on. This happened when an input name points to a node with multiple\r\noutputs and not all outputs of that node were included in the input names.\r\n\r\n4. ReplaceSendRecvs() in FoldConstants lib assumed that all input nodes are\r\nremoved during rewriting the graph. This assumption is not necessarily true,\r\nand it could add a duplicate node in the graph.\r\n\r\nPiperOrigin-RevId: 172641947\r\n\r\n* Adds visibility to sgdr_learning_rate_decay.\r\n\r\nCurrently SGD with warm restarts is siloed in\r\ntensorflow/contrib/training/python/training/sgdr_learning_rate_decay.py, since\r\nit is not listed in the \'training_py\' build filegroup. This change simply adds\r\nsgdr_learning_rate_decay to this filegroup so that other projects can use warm\r\nrestarts during optimization.\r\n\r\nPiperOrigin-RevId: 172643218\r\n\r\n* Add logging verbosity to mnist.py\r\n\r\nPiperOrigin-RevId: 172643922\r\n\r\n* Automated g4 rollback of changelist 172336111\r\n\r\nPiperOrigin-RevId: 172645893\r\n\r\n* Correct the docstring to reflect that the values of cols_to_vars are always lists of Variable\'s (never single Variable\'s or PartitionedVariables), and make this true for bias.\r\n\r\nPiperOrigin-RevId: 172646456\r\n\r\n* Changes MultiLabelHead.create_loss to return a Tensor of size [batch_size, 1], to be consistent with other heads.\r\n\r\nPiperOrigin-RevId: 172647355\r\n\r\n* Disabling failing contrib tests.'"
b2f5acd2c3fbcccb580d6393c0ce77a32ad01279,'Fix a memory leak in graph compiler.\n\n- Fix a memory leak in graph compiler by using better memory management.\n- Simplify the code as I know understand more assumptions of this part of the stack.\n\nPiperOrigin-RevId: 172661754'
8548e18647d4e574dbf697a81f844b2f0d89bacb,'Fix typo in error message for set_caching_device\n\nPiperOrigin-RevId: 172653499'
38bcb3c02fbc5185d6c1fb7e8327a070284b66e4,"'Bug fixes for fold_constants_lib.\n\n1. Tensor names in TF may be in the form of ""a:0"", ""a:1"", or ""a"" as a shorthand\nnotation of ""a:0"". FoldConstant library always expected the shorthand notation,\nand did not handle the cases where explicit notation was passed to input or\noutput list. This means that this library could not handle the case when input\nor output were not the first output of a node.\n\n2. To match the input nodes in the original graph and the added Recv nodes in\nrewritten graph, FoldConstant library used prefix matching. Unfortunately, this\nmeans that when a input name is a prefix of another input name, there is\npossibility that wrong Recv node gets matched. For example, if input names were\n""placeholder"" and ""placeholder_1"", then it did not handle the case very well.\n\n3. RemoveUnusedNodes() in FoldConstants lib could remove nodes which output\ndepended on. This happened when an input name points to a node with multiple\noutputs and not all outputs of that node were included in the input names.\n\n4. ReplaceSendRecvs() in FoldConstants lib assumed that all input nodes are\nremoved during rewriting the graph. This assumption is not necessarily true,\nand it could add a duplicate node in the graph.\n\nPiperOrigin-RevId: 172641947'"
7321905ff14c47211c95e430625f8b29986c1df1,'Add missing `uint16` type registration for ops `CropAndResize`/`CropAndResizeGradBoxes` (#13812)\n\n* Add missing `uint16` type registration for ops `CropAndResize`/`CropAndResizeGradBoxes`\r\n\r\nThis fix adds missing `uint16` type registration in `image_ops.cc`\r\nfor `CropAndResize` and `CropAndResizeGradBoxes`.\r\n\r\nThe kernel of `uint16` is available for `CropAndResize` and `CropAndResizeGradBoxes`\r\nthough it is missing in `image_ops.cc`. This fix addresses this issue.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add incomplete test cases for `CropAndResize`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
192f1c24ec6692342391c03bb620f5de1af9de3b,'Fixed work size computation in Split and SplitV ops to avoid integer overflow.\n\nPiperOrigin-RevId: 172637818'
d19ec7126735ca98a632ebd69ad64973fd454e6e,"'Update boringssl to a0fb951d2a26a8ee746b52f3ba81ab011a0af778 (#13798)\n\n* Update boringssl to a0fb951d2a26a8ee746b52f3ba81ab011a0af778\r\n\r\nThis fix update boringssl to a0fb951d2a26a8ee746b52f3ba81ab011a0af778,\r\nwhich contains bug fix related to 13733.\r\n\r\nSee https://github.com/tensorflow/tensorflow/pull/13734#issuecomment-337440239\r\nfor update details.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Remove unneeded patch part for boringssl, as 13733 has been fixed.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Remove s390x patch for boringssl\r\n\r\nPer discussion:\r\nhttps://github.com/tensorflow/tensorflow/pull/13798#discussion_r145459255\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
bc0822675598385d8068bf114b453dac52512caf,'Fixes test breakage.\n\nPiperOrigin-RevId: 172626499'
139e1e0771faeaa614e3c6672a5c203866ba0176,"'Add `int64` axis support for `tf.cumsum` and `tf.cumprod` (#13791)\n\n* Add `int64` axis support for `tf.cumsum` and `tf.cumprod`\r\n\r\nThis fix adds `int64` axis support for `tf.cumsum` and `tf.cumprod`.\r\nThough `int64` is the registered data type for `axis` (`Tidx`), no\r\nkernel is available.\r\n\r\nThe issue could be described as:\r\n```\r\n>>> import tensorflow as tf\r\n>>> v = tf.cumsum([1, 2, 3], tf.constant(0, tf.int64))\r\n>>> tf.Session().run(v)\r\nTraceback (most recent call last):\r\n  File ""<stdin>"", line 1, in <module>\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py"", line 889, in run\r\n    run_metadata_ptr)\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py"", line 1120, in _run\r\n    feed_dict_tensor, options, run_metadata)\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py"", line 1317, in _do_run\r\n    options, run_metadata)\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/client/session.py"", line 1336, in _do_call\r\n    raise type(e)(node_def, op, message)\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: No OpKernel was registered to support Op \'Cumsum\' with these attrs.  Registered devices: [CPU], Registered kernels:\r\n  device=\'CPU\'; T in [DT_COMPLEX128]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_COMPLEX64]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_DOUBLE]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_FLOAT]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_HALF]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_INT8]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_UINT8]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_INT16]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_UINT16]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_INT32]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_INT64]; Tidx in [DT_INT32]\r\n\r\n\t [[Node: Cumsum = Cumsum[T=DT_INT32, Tidx=DT_INT64, exclusive=false, reverse=false](Cumsum/x, Const)]]\r\n\r\nCaused by op u\'Cumsum\', defined at:\r\n  File ""<stdin>"", line 1, in <module>\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/math_ops.py"", line 2246, in cumsum\r\n    x, axis, exclusive=exclusive, reverse=reverse, name=name)\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/gen_math_ops.py"", line 1370, in cumsum\r\n    name=name)\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/op_def_library.py"", line 787, in _apply_op_helper\r\n    op_def=op_def)\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py"", line 2966, in create_op\r\n    op_def=op_def)\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/framework/ops.py"", line 1473, in __init__\r\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\r\n\r\nInvalidArgumentError (see above for traceback): No OpKernel was registered to support Op \'Cumsum\' with these attrs.  Registered devices: [CPU], Registered kernels:\r\n  device=\'CPU\'; T in [DT_COMPLEX128]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_COMPLEX64]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_DOUBLE]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_FLOAT]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_HALF]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_INT8]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_UINT8]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_INT16]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_UINT16]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_INT32]; Tidx in [DT_INT32]\r\n  device=\'CPU\'; T in [DT_INT64]; Tidx in [DT_INT32]\r\n\r\n\t [[Node: Cumsum = Cumsum[T=DT_INT32, Tidx=DT_INT64, exclusive=false, reverse=false](Cumsum/x, Const)]]\r\n\r\n>>>\r\n```\r\n\r\nThis fix adds the missing kernel.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for `int64` axis support of `tf.cumsum` and `tf.cumprod`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Reformat scan_ops.cc with `clang-format -i`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
bedfe8ac14bddbf21c5acf80d55abff9df4a7967,'Fix minor typos in TF Boosted Trees (#13792)\n\n* Fix a typo in readme of a module of boosted trees\r\n\r\n* Remove trailing backslashes'
6cf5b86c552093114344bde67ca737fd84b8f57e,'Include <numeric> in transpose_functor.h to fix Windows build.\n\nPiperOrigin-RevId: 172556044'
c696dcf24438fdb29394e776f1c865e0167cd368,'Fix link in audio tutorial (no https for direct download.tensorflow.org links).\n\nPiperOrigin-RevId: 172551595'
4c7e02c082fdf3b4b04e42f1880cf6e0ff4fc409,'Add bitwise LeftShift (aka. tf.bitwise.left_shift) and RightShift (tf.bitwise_right_shift) operators to Tensorflow. Their semantics are intended to mirror numpy.left_shift and numpy.right_shift.\n\nFix a couple of missing cases of missing uint32/uint64 support exposed when adding tests for bitshifts.\n\nPiperOrigin-RevId: 172530375'
84edca032719d2aa1da465e26c51d32c205df3bc,"""Fix a bug in BFCAllocator::Log2FloorNonZero() under non gnuc non windows mode, where it returns the bit index of the most significant '1' bit, starting from 1, but the expected result should start from 0 (i.e. it should return floor(log2(n)) ).\n\nPiperOrigin-RevId: 172522745"""
110dfa8953e7e9b625681744fde51f30ace2aecd,"'Bugfix: add `fill_triangular`, `reduce_weighted_logsumexp`, `tridiag` to\n`tf.contrib.distributions.__init__`.\n\nPiperOrigin-RevId: 172521590'"
2fb1f1d837d8f86f3ad753ea235a1b3a22ba195f,"""Set estimator run_config default random seed to None. This will make it aligned with other parts of the TF. Many users are not aware of impact of non-random seed. For example it may lead to train only on a small fraction of training data due to preemptions.\nWe're changing default behavior since we consider it as a bug fix.\n\nPiperOrigin-RevId: 172519268"""
cbb705f10149a11b8d17182343ef12ab2dbfd7a8,'Fix crash when `tf.pad` is used with int64 paddings. (#13517)\n\n* Add int64 bounds support for `tf.image.pad_to_bounding_box`\r\n\r\nThis fix tries to fix the issue raised in 13506 where int64 data types\r\nfor bounds in `tf.image.pad_to_bounding_box` crashes.\r\n\r\nThe reason of the crash is caused by the fact that int64 was directly\r\nconverted into int32 without passing through kernel registeration.\r\n\r\nThis fix fixes the issue by adding `typename Tpadding` to the template.'
bb7869aad43e329e9fafa027a23ee96d4ccca124,'Remove remaining nomac tags for TFBT as the memory corruption issue is fixed.\n\nPiperOrigin-RevId: 172512636'
568127ac3b8e501bb230ee287ec9a46129fad349,"'Improve shape inference with `DecodeAndCropJpeg` (#13750)\n\n* Improve shape inference with `DecodeAndCropJpeg`\r\n\r\nWhile working on improving shape inference for several\r\nother ops in 13561 and 13193, I noticed that `DecodeAndCropJpeg`\r\ndoes not inference shape even though crop size might have already\r\nbe provided. In that case the shape will be `[h, w, channel]`\r\nand `h`, `w` is part of the `crop_window`.\r\n\r\nThis fix updates the shape function in `DecodeAndCropJpeg`\r\nfor improving shape inference.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases to cover shape inference for `DecodeAndCropJpeg`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address failed unit tests\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
962ed613cf1087637848d3e2b23f5b01d93c7eda,'Fix #13731 by adding HistogramdFixedWidth in hidden_ops.txt and create the python wrapper (#13781)\n\n* Fix 13731 by adding HistogramdFixedWidth in hidden_ops.txt and create the python wrapper\r\n\r\nso that both api compatibility and test utility code in contrib could be\r\npreserved. See https://github.com/tensorflow/tensorflow/pull/13731#issuecomment-337186002\r\nfor reference.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add underscore (`_histogram_fixed_width`) in calling gen_math_ops.py\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* clang-format -i histogram_op.cc\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
c4fd2362bc73b48add49d7af0ddd9ea7b6409323,'Fix TF workspace issue that prevents submodules from using aws build targets correctly. Fixes https://github.com/tensorflow/serving/issues/615\n\nPiperOrigin-RevId: 172489253'
18f89c81d288f191abd56501ec6f86fe29265bdd,"'[tf.contrib.seq2seq] Bugfixes to BeamSearchDecoder and GatherTree.\n\n1. Begin the gather tree at the maximum sequence length across all beams (within the batch).\n2. Take a second pass starting from t=0 and mask out any beam ids past the *first* beam occurrence of end_token.\n3. Update the final sequence lengths to include the first <eos> token in the beam.\n4. Update dynamic_decode to allow the BeamSearchDecoder to keep track of its own ""finished"" states, as the shuffling in the decoder confused the tracking mechanism in dynamic_decode.  This fixes a bug where beam search decoding stops early.\n5. Cap sequence length used in GatherTree to min(max_time, max_seq_len(b)) to avoid accessing memory outside the dimensions of input matrices.\n\nBugs caught by @bdaskalov on github and Pavel Sountsov.  Proper solution and analysis thanks to Rui Zhao.  Thanks all!\n\nFixes #13536.\n\nPiperOrigin-RevId: 172471462'"
684f88fa7e61721c3264dc70abeed2b3e6fa7717,"""[XLA:GPU] Don't crash with --vmodule=gpu_compiler=2 if we can't run ptxas.\n\nAt --vmodule=gpu_compiler=2, we run ptxas over our generated PTX, to\nvalidate it, and also to dump out stats like the number of registers\nused.\n\nBut previously, this would fail if your GPU was anything other than\nsm_35 (i.e. K20/40/80), because we didn't pass down cc_major/cc_minor to\nptxas.  And moreover, if ptxas failed to compile your program, we'd\nLOG(FATAL), which is probably no what you want.\n\nThis change fixes both those issues.  Tested on my local GTX1080.\n\nPiperOrigin-RevId: 172403304"""
528457ea3cbe4edfbd3eb90c303b2a1408fe8d65,'Add GPU and CPU implementation of `tf.histogram_fixed_width`. (#13731)\n\n* Add GPU and CPU implementation of `tf.histogram_fixed_width`.\r\n\r\nThis fix adds the GPU and CPU implementation of `tf.histogram_fixed_width`.\r\nThe previous implementation was done in python. This fix adds\r\nC++ kernel for GPU and CPU>\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update python ops for `tf.histogram_fixed_width`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update test cases to invoke GPU test for `tf.histogram_fixed_width`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Disable int64 output on GPU for now as atomicAdd is not supported yet.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address review feedback and use a stable version of summation.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Maintain backward compatibility of the API\r\n\r\nKeep `dtype` and make sure `nbins = 100` is in attr\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
a072aa0d2c8412160748995bdea0cc15f121fd95,"'Revert ""Fix broken link in debugger doc"" (#13760)\n\n* Revert ""Fix broken link in debugger doc (#13757)""\r\n\r\nThis reverts commit 4e1d0f4e32b7f7a463930543dc773997bdb9d545.'"
51e5b692a5f8f6942cb43291ba9faab39e4b6104,"""Fix ambiguous type comparison in s3_crypto.cc (#13758)\n\ntensorflow/contrib/s3/s3_crypto.cc(74): error C2666:\r\n'std::fpos<_Mbstatet>::operator ==': 3 overloads have similar conversions\r\ncould be 'bool std::fpos<_Mbstatet>::operator ==(std::streamoff) const'\r\nor 'bool std::fpos<_Mbstatet>::operator ==(const std::fpos<_Mbstatet> &)\r\nWe were seeing this compilation error on Windows builds."""
4e1d0f4e32b7f7a463930543dc773997bdb9d545,'Fix broken link in debugger doc (#13757)'
a36ff5499df443d768fd2f4ff810f9daba30d35a,"""Respect __array__ and __array_interface__ for string types\n\n__array__ fixes use-cases like:\n\n  import tensorflow as tf\n  import pandas as pd\n  series = pd.Series(['a','b','c'])\n  tf.constant(series)\n  df = pd.DataFrame({'a':[1,2,3],'b':['a','b','c']})\n  tf.data.Dataset.from_tensor_slices(dict(df))\n\nPiperOrigin-RevId: 172372593"""
b46b741b7a8f04049b451be5299c61a373ec7612,'Close session on infeed error.  This should fix most of the cases where the client process hangs waiting for the main training loop to exit.\n\nPiperOrigin-RevId: 172371951'
2ed69577b08e5e8845619748249ecd41dc0f7c87,"'Add fast_tensor_util.cpp to .gitignore (#13749)\n\nWhile working on building TensorFlow I noticed that a file\r\n`fast_tensor_util.cpp` is generated:\r\n```sh\r\nubuntu@ubuntu:~/tensorflow$ git status\r\nOn branch master\r\nYour branch is up-to-date with \'origin/master\'.\r\nUntracked files:\r\n  (use ""git add <file>..."" to include in what will be committed)\r\n\r\n        tensorflow/python/framework/fast_tensor_util.cpp\r\n\r\nnothing added to commit but untracked files present (use ""git add"" to track)\r\nubuntu@ubuntu:~/tensorflow$\r\n```\r\n\r\nThis fix adds `fast_tensor_util.cpp` to .gitignore so that\r\nit will not be added inadvertently when adding commit with `git add -A`.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
b6d14a05cc51a6c32086cea8e6950ed45372fa7f,'Fix divergence between core.data and contrib.data Python tests.\n\nPiperOrigin-RevId: 172353443'
cc5268be7d251e5116229f83aacab80ae6dd917f,"""[tf.data] Fix broken implementation of `Dataset.from_generator()` on Windows.\n\nDue to a mix-up between NumPy's default array element type for a Python `int` on Windows and Linux, a tf.py_func() in `Dataset.from_generator()` would appear to return the wrong type on Windows (np.int32 instead of np.int64).\n\nAll code using `Dataset.from_generator()` on Windows was previously broken. This change fixes both `tf.data.Dataset.from_generator()` and `tf.contrib.data.Dataset.from_generator()`. It also enables test coverage for this method on Windows, which should prevent future breakage.\n\nPiperOrigin-RevId: 172346533"""
f8471a8012e823795f5d29f728f36e3e02dbb353,"'Fix xla_jit_compiled_cpu_function deps to pull in cpu_plugin.\n\nThe intention was always for the user to only depend on\nxla_jit_compiled_cpu_function, and not need dependencies on internal targets.\n\nPiperOrigin-RevId: 172346257'"
2ebbce8e82d8d07bee6b8be14a3961ebdef977a0,"""fixed type error (API r1.3 document, tf.truncatediv) (#13712)\n\nIt was just type error\r\nfrom '-7 / 5 = 1'  to '-7 / 5 = -1'"""
51c115b33fecd9e96aa12c264c2c717afe8bfea8,"'Fix typo (undefined variable `mean_absolute_error`, should refer to `error` previously defined).\n\nPiperOrigin-RevId: 172331504'"
05aebd4c342c3ab432250fa3ef17bf212061f931,'tfdbg doc: Fix minor typo\n\nPiperOrigin-RevId: 172326303'
bba2bc1c6c6a47c2b9c0889d4aa2628a0cdf6c92,'Fixing comment mismatch.\n\nPiperOrigin-RevId: 172324333'
be79652c76a7cb82c4ea3afb8b9614233a22bbad,'Merge pull request #13747 from taehoonlee/fix_typos\n\nFix typos'
c0f8a1fad0c91aa04b69e17717b75a43b3ca7ecd,'Fix typos'
78e01f465c8f474b79015c1dc1851c609e3dc9f4,"'Update CUB to 1.7.4 (#13732)\n\n* Update CUB to 1.7.4\r\n\r\nThis fix updates CUB to 1.7.4. It consists of bug fixes in radix sort,\r\ncompared with the old version (1.7.3).\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update CMAKE file for CUB 1.7.4\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
1b0ca6d1dfea0f328737a026135669783f840c1e,"'Fix build error with boringssl (#13734)\n\n* Fix build error with boringssl\r\n\r\nThis fix tries to fix build error with boringssl on `Ubuntu 16.06`, `gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.4)`, and `bazel` `0.6.1`.\r\n\r\n```sh\r\n  /usr/bin/gcc -U_FORTIFY_SOURCE -fstack-protector -Wall -B/usr/bin -B/usr/bin -Wunused-but-set-parameter -Wno-free-nonheap-object -fno-omit-frame-pointer -g0 -O2 \'-D_FORTIFY_SOURCE=1\' -DNDEBUG -ffunction-sections -fdata-sections \'-march=native\' -MD -MF bazel-out/local-opt/bin/external/curl/_objs/curl/external/curl/lib/curl_multibyte.pic.d -fPIC -iquote external/curl -iquote bazel-out/local-opt/genfiles/external/curl -iquote external/zlib_archive -iquote bazel-out/local-opt/genfiles/external/zlib_archive -iquote external/bazel_tools -iquote bazel-out/local-opt/genfiles/external/bazel_tools -iquote external/boringssl -iquote bazel-out/local-opt/genfiles/external/boringssl -isystem external/curl/include -isystem bazel-out/local-opt/genfiles/external/curl/include -isystem external/zlib_archive -isystem bazel-out/local-opt/genfiles/external/zlib_archive -isystem external/bazel_tools/tools/cpp/gcc3 -isystem external/boringssl/src/include -isystem bazel-out/local-opt/genfiles/external/boringssl/src/include -Iexternal/curl/lib -D_GNU_SOURCE -DHAVE_CONFIG_H -DCURL_DISABLE_FTP -DCURL_DISABLE_NTLM -DHAVE_LIBZ -DHAVE_ZLIB_H -Wno-string-plus-int \'-DCURL_MAX_WRITE_SIZE=65536\' -fno-canonical-system-headers -Wno-builtin-macro-redefined \'-D__DATE__=""redacted""\' \'-D__TIMESTAMP__=""redacted""\' \'-D__TIME__=""redacted""\' -c external/curl/lib/curl_multibyte.c -o bazel-out/local-opt/bin/external/curl/_objs/curl/external/curl/lib/curl_multibyte.pic.o)\r\nERROR: /home/ubuntu/.cache/bazel/_bazel_ubuntu/ad1e09741bb4109fbc70ef8216b59ee2/external/boringssl/BUILD:128:1: C++ compilation of rule \'@boringssl//:ssl\' failed (Exit 1)\r\nexternal/boringssl/src/ssl/t1_lib.cc: In function \'int bssl::ssl_ext_key_share_parse_clienthello(bssl::SSL_HANDSHAKE*, bool*, bssl::Array<unsigned char>*, uint8_t*, CBS*)\':\r\nexternal/boringssl/src/ssl/t1_lib.cc:2189:7: error: \'peer_key.cbs_st::len\' may be used uninitialized in this function [-Werror=maybe-uninitialized]\r\n   CBS peer_key;\r\n           ^\r\nexternal/boringssl/src/ssl/t1_lib.cc:2189:7: error: \'peer_key.cbs_st::data\' may be used uninitialized in this function [-Werror=maybe-uninitialized]\r\ncc1plus: all warnings being treated as errors\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\nINFO: Elapsed time: 107.966s, Critical Path: 18.12s\r\nFAILED: Build did NOT complete successfully\r\n```\r\n\r\nThis fix is related to PR 13638\r\n\r\nThis fix fixes 13733.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix build error with clang\r\n\r\nChange `-Wno-maybe-uninitialized` -> `-Wno-uninitialized`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
1cf9f7ab2fd019531629b266e7d0863b0d6417ce,"'tfdbg: add persistent config\n\n* Add two persistent UI configurations backed by a file at ~/.tfdbg_config by default.\n  * graph_recursion_depth, which controls the recursive output of li/lo commands.\n  * mouse_mode, which controls the mouse state of the CursesUI.\n* Add `config` command to set and inspect the persistent configuration. E.g.,\n  * config show\n  * config set graph_recursion_depth 3\n  * config set mouse_mode False\n\nFixes: #13449\nPiperOrigin-RevId: 172270804'"
d8b4b00de8d022e8ccd24bebc1173c2c4244dbf9,'Add note pointing to master version of adding_an_op.\n\nFixes #13607\n\nPiperOrigin-RevId: 172262174'
dc65f63c3d5c22eea00833abe72f9b5cd8a662ba,'Update documentation for uint16 support in `tf.resize_...` ops (#13721)\n\n* Update documentation for uint16 support in `tf.resize_...` ops\r\n\r\nThis fix tries to address the different between the registered\r\nkernels and the documentation differnet for uint16 support of:\r\n`tf.resize_area`\r\n`tf.resize_bicubic`\r\n`tf.resize_bilinear`\r\n`tf.resize_nearest_neighbor`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for uint16 of `tf.resize_...`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test case of float16 for `tf.resize...`.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
cffe603e93520318aaaf07c165cfaf1a3f13805a,'Merge pull request #13722 from yongtang/11975-cmake-tensorflow_BUILD_ALL_KERNELS=OFF\n\nFix cmake build with `Dtensorflow_BUILD_ALL_KERNELS=OFF` error'
3c29973a6b973e4a857251ba1c42b5ff26609057,'Fixed incorrect `hooks` doc in `EvalSpec` (#13724)'
81bc3b4e746a35906c8b7ab01f27a4c9ada4fd66,"""Fix cmake build with `Dtensorflow_BUILD_ALL_KERNELS=OFF` error\n\nThis fix tries to address the issue raised in #11975 where cmake\nwith `Dtensorflow_BUILD_ALL_KERNELS=OFF` will throw out an error:\n```\n[ 93%] Building CXX object CMakeFiles/tf_tools_transform_graph_lib.dir/workspace/tensorflow/tools/graph_transforms/freeze_requantization_ranges.cc.o\nCMakeFiles/tf_core_cpu.dir/workspace/tensorflow/core/grappler/costs/measuring_cost_estimator.cc.o: In function `tensorflow::grappler::MeasuringCostEstimator::MeasuringCostEstimator(tensorflow::grappler::Cluster*, int, int)':\nmeasuring_cost_estimator.cc:(.text+0x18c): undefined reference to `tensorflow::SanitizeThreadSuffix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)'\ncollect2: error: ld returned 1 exit status\nmake[2]: *** [benchmark_model] Error 1\nCMakeFiles/benchmark_model.dir/build.make:949: recipe for target 'benchmark_model' failed\nmake[1]: *** [CMakeFiles/benchmark_model.dir/all] Error 2\nCMakeFiles/Makefile2:6884: recipe for target 'CMakeFiles/benchmark_model.dir/all' failed\nmake[1]: *** Waiting for unfinished jobs....\n```\n\nThe issue is casued by `ops_util.cc` which is needed even if all kernels are OFF.\n\nThis fix fixes the issue with cmake file update.\n\nThis fix fixes 11975.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
d76ab0431f30ed7ca283b2e343fefb7b4cb9e9f5,'Fix typos in datasets guide (#13701)\n\n* Fix typos in datasets guide\r\n\r\n* mrry review'
860f8c50753bcbfca8243c585033b3d44c4b7c7f,'Fix case where broadcasting is not necessary.\n\nPiperOrigin-RevId: 172169909'
5dd569cf026bae92330a194c8f2895d0f48149d9,"'Make the HLO proto representation (hlo.proto) full fidelity. Hlo modules can be serialized to HLO protos and deserialized without any information loss.\n\nAs part of this change, a bug is fixed in NameUniquer. Previously, passing names with numeric suffixes could result in name collisions.\n\nPiperOrigin-RevId: 172161360'"
7679a2ec746bec36191087feaf9ec8371180669c,'Fix crash if tf.nn.conv2d_backprop_filter or tf.nn.conv2d_backprop_input is run with empty filter or input respectively. Resolves #13643.\n\nPiperOrigin-RevId: 172153646'
0c2a50e951bb840e84b0bc643b85f104c59a10ef,"'eager: Fix issue with custom_gradients and implicit_gradients.\n\nWhile at it, clean up some dead code/comments in tape.py\n\nPiperOrigin-RevId: 172143125'"
2f3812501d3ac10165acfcae228e52f6f3358f7e,'Add `cudnn_rnn_ops` to the Windows build\n\nFixes #13696.'
23afdede4726a8fcb1886c619186b863c04ffc1e,"'Merge changes from 1.4-rc0 back into master (#13670)\n\n* Update RELEASE NOTES for TensorFlow 1.4\r\n\r\n* Update the version strings for TF 1.4-rc0.\r\n\r\n* Update version strings in POM files missed by update script.\r\n\r\n* Pin TensorBoard 0.4 to TensorFlow 1.4\r\n\r\n* Fixing the name of the disabled test. (#13592)\r\n\r\n* Revert ""Implementing ghost batch norm as defined in https://arxiv.org/pdf/1705.08741.""\r\n\r\nThis reverts commit 125f7afa4a483855dc75791445d2dea64587876a.\r\n\r\n* Disable iterator_ops_test on Windows for 1.4 release (#13609)\r\n\r\n* Disable failing Windows tests for r1.4 release.\r\n\r\ntestRemoteIteratorUsingRemoteCallOpDirectSessionGPUCPU test is failing\r\nwith ""TypeError: only integer scalar arrays can be converted to a scalar\r\nindex"" on the Windows GPU Release bot. Disabling test.\r\n\r\n* Fix typo.\r\n\r\n* Also disalbe iterator_ops_test from contrib/.\r\n\r\n* Add contributing authors to 1.4 Release notes.\r\n\r\nThanks!\r\n\r\n* Fixes to authors.\r\n\r\nRemoved duplicate and removed googler from contributing author list.\r\n\r\n* Fixes and additions to release notes.\r\n\r\nAdded line about Keras moving into core.\r\nAdded line about CUDA/cuDNN versions.\r\nAdded line about custom ops.\r\n\r\n* Back out cherry-picking batch norm revert into master.'"
6a04ffd44758dea92120ac3c0f3bdf473c5b77d6,'Fix build issue when tf/core:framework on an Android build.\n\nPiperOrigin-RevId: 172127789'
aa99ddb85e54664a16d824b96418c20a9b841692,'Fix the python 3 breakage caused by 172073518\n\nPiperOrigin-RevId: 172118528'
943feb0d3be870481f4537da53ae2b3c92b30fc0,'Fix a dtype\n\nPiperOrigin-RevId: 172114960'
6025f064bca43be5a08f23338635b4beb588670b,"'Improve shape inference for `tf.slice` (#13561)\n\n* Improve shape inference for `tf.slice`\r\n\r\nThis fix is an effort to address the issue raised by 4590 where\r\nimprovement of shape inference for `tf.slice` is needed.\r\n\r\nWhen one of the size element is unknwon, the output shape is completely\r\nunknwon (with right rank):\r\n```\r\n>>> z = tf.zeros((1, 2, 3))\r\n>>> z.get_shape().as_list()\r\n[1, 2, 3]\r\n>>> m = tf.slice(z, [0, 0, 0], [tf.constant(1) + 0, 2, -1])\r\n>>> m.get_shape().as_list()\r\n[None, None, None]\r\n```\r\n\r\nThis fix improves the shape inference so that:\r\n```python\r\n>>> import tensorflow as tf\r\n>>> z = tf.zeros((1, 2, 3))\r\n>>> m = tf.slice(z, [0, 0, 0], [tf.constant(1) + 0, 2, -1])\r\n>>> m.get_shape().as_list()\r\n[None, 2, None]\r\n```\r\n\r\nNote: this fix does not handle the case where one of the size element is\r\n`-1` and one of the size element is unknown. However, it is an improvement\r\nnevertheless.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for partial shape inference for `tf.slice`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address review feedback\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Inline `SliceHelper` for simplication\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
3564997e080329af3ea1b4d88b442866a9593263,'Merge pull request #13684 from sjperkins/fix-staging-area-race-deadlocks\n\nFix deadlocks in Staging Areas.'
6eabe2abe9248b429c4855ed427fb193ae3fb0fa,'Merge pull request #13497 from craffel/master\n\nFix documentation error in tf.reverse docstring (#1)'
d5e99136e47f1add4df3f577983ec7b02d20d4c3,"""Fix possible deadlocks in Staging Areas.\n\nPreviously, `notify_one` was used to notify inserters and removers\nwaiting to insert and remove elements into the Staging Areas. This could\nresult in deadlock when  many removers where waiting for\ndifferent keys in the case of the MapStagingArea, or were waiting on\neither peeks or get operations in the StagingArea.\n\nFor example, if two removers were waiting for keys 2 and 3 in a\nMapStaging Area respectively, and 2 was inserted but only 3's remover was\nnotified, it is possible that 2's remover would never be notified resulting\nin deadlock. Thus, both should be notified.\n\nSimilarly in the case of the StagingArea with a remover and a peeker\nwanting to remove the last element and peek at a specific element\nrespectively, it is not clear which one should be notified due to\nan insert. Thus, both should be notified.\n\nAdditionally, all inserters are now notified when an element is removed.\nConsider the case where two inserters are waiting to small elements into\nthe Staging Area and a remover removes a single large element. As there\nmay be space for both insertion elements, both inserters should be\nnotified."""
b86aae85c0ef6bbefd840fb7392e3993366d2de1,'Merge pull request #13676 from gunan/cuda9\n\nFix cuDNN version string in CUDA9 cuDNN7 docker image.'
0c563bd8e163dbee028e4a762298ba950684ea91,'Fix cuDNN version string in CUDA9 cuDNN7 docker image.'
4351f887967a521458f98948e278abcd6ad63292,'Multi-axis batch normalization support and changing from num_virtual_batches to virtual_batch_size\n\nKey changes:\n1) adding support for multi-axis batch norm by allowing the axis to be either an int or a list of ints\n2) multi-axis batch norm is handled entirely by TensorFlow ops at the moment (no special kernel) and the performance is heavily dependent on the Tensor format (see reduce_* kernels for reduction rules)\n3) Fix ghost batch norm by sharing the same gamma/beta/mean/var parameter across all virtual batches\n4) Change ghost batch norm API to virtual_batch_size to be more consistent with its intended use case.\n\nPiperOrigin-RevId: 172012360'
2a9b5312ea0e1ee5090e10288c671ab11efd065b,'Fixing a master regression (#13562)'
a71ca255c93cd4a187fd6c2b2798c816fa699344,'Merge pull request #13667 from meteorcloudy/fix_aws_BUILD\n\nconfigure.py: Disable AWS support on Windows by default'
d6b616925657bc44de9bd6a5ddf3437e9c7ba88b,'Wrap grad_ys tensors passed to tf.gradients in the tf.gradients name scope.\n\nFixes #13355.\n\nPiperOrigin-RevId: 171972633'
c801d23a3c449cf7ed44df5320e0bc9746bc3752,"'Fix LSTM tests to use the same parameters for all blocks.  Now that the tests\nare correct, lower the tolerance from 1e-2 to 1e-6.\n\nPiperOrigin-RevId: 171885525'"
f4bcfc00ce4b43675969a04960878d27a89a3af7,'Fixes typo in hparams comment\n\nPiperOrigin-RevId: 171842961'
b861f66ad1a39af3a70cbd6b5248db229dd50983,'Merge pull request #13554 from donigian/fix/donigian-9702-update-install-instructions\n\nUpdate installation instructions for conda install to include pip'
cc9e6b38fa0a3484f0878f3ab2c4fb41c3ffc1cf,'Merge pull request #13633 from Atlas7/fix-prog-guide-graph-typo\n\nadd the missing closing parenthesis to code snippet'
1ad5e692e2fc218ca0b2a9a461c19762fdc9674b,"""Added support for Python3 Raspberry Pi CI builds (#13612)\n\n* Fix for RTLD_GLOBAL breakage of Pi builds, and removed Eigen version change for Pi that's no longer needed\r\n\r\n* Fixed Pi Zero OpenBLAS build problems and tidied up directories used\r\n\r\n* More robust checks in Pi build script\r\n\r\n* Changed output directory for Pi CI build to fix permissions problem\r\n\r\n* Added support for Python3 Raspberry Pi CI builds\r\n\r\n* Tidied up comments and updated Python tool template\r\n\r\n* Cleaned up Python include path logic"""
010506f4feb93ff210fe92d5b48b8b6da56fea9b,'Fix docstring typos in tf.distributions.bijectors.Bijector.\n\nPiperOrigin-RevId: 171756150'
e540a893f14d9b0beea9161962694bf7d139caf3,"""[XLA] Fix setting of changed_ in AlgebraicSimplifier.\n\nDue to this bug, sometimes AlgebraicSimplifier would make a change but\nsay that it didn't.  This would cause us to run the HLO simplification\npipeline fewer times than we should.\n\nPiperOrigin-RevId: 171735154"""
e74adb670920dd6f41306a4a40784a535ea7b878,'Fix S3 BUILD not including files explicitly.\n\nThis causes remote builds to fail since they AWS headers were missing.\n\nPiperOrigin-RevId: 171718021'
30e40833147f04467b791b9faad3284504194eb8,'Fix bug in peephole implementation of BlockLSTM Cell.  Fix tests.\n\nPiperOrigin-RevId: 171717566'
253f5386cb6478dba6d9b99286775c6cbbe86a9a,"'eager: Fix an issue with tf.identity.\n\nLike with graph execution, tf.identity should accept an input that\nis not a Tensor instance but can be converted to one.\n\nPiperOrigin-RevId: 171714919'"
90121d582dbad4bd13dd2a9750c3a908e89469dd,"""Add a tf.contrib.image.translate function (#12306)\n\n* Add a tf.contrib.image.translate function\r\n\r\n* Remove redundant checks from tf.contrib.image.translate.\r\n\r\n* Add translate and translations_to_projective_transforms to the docstring.\r\n\r\n* Fix lint errors for tf.contrib.image.translate\r\n\r\n* Add name_scopes in image_ops.\r\n\r\nIndicate in the docstrings when the static shape of the arguments must\r\nhave a known rank.\r\n\r\n* Fix pyformat's weird docstring indentation.\r\n\r\n* tf.name_scope -> ops.name_scope\r\n\r\n* Move the test session inside the _DTYPES loop.\r\n\r\n* Use the default_name arg of name_scope.\r\n\r\n* Check for ndims == None\r\n\r\n* Fix translate docstring and add a comment.\r\n\r\n* s/vector/matrix/ for the multiple translations."""
091504af57f70df13ebf1db9946dc59482e1190a,'Fix gradient behavior of fully dynamic tensor arrays + stop_gradients on tf.scan.\n\nAdded a test checking that this fixes a bug with tf.stop_gradient of tf.scan output.\n\nPiperOrigin-RevId: 171697920'
9026756727e7c6782ab89c181c80b2117bf78c05,'Merge pull request #13605 from taehoonlee/fix_typos\n\nFix typos'
4b6eacbcdb8ca5182f83eee89edad24d87420b8e,'Fix typos'
90f257e0fc12e54d96d1e8a2afd374d1a2723577,"'Fix ReshapeMover bug with reshaped constants; add HloVerifiedTestBase.\n\nAn example of a bad ReshapeMover rewrite:\n\nBEFORE\n  %reshape.1 = f32[1,1,128] reshape(f32[1,128] %dot)\n  %constant = f32[128] constant({...})\n  %reshape.2 = f32[1,1,128] reshape(f32[128] %constant)\n  %add = f32[1,1,128] add(f32[1,1,128] %reshape.1, f32[1,1,128] %reshape.2)\n\nAFTER\n  %constant = f32[128] constant({...})\n  %add = f32[1,128] add(f32[1,128] %dot, f32[128] %constant)\n  %reshape = f32[1,1,128] reshape(f32[1,128] %add)\n\nThe problem in AFTER is the add now contains an implicit broadcast. One way to\nfix this is to re-shape the %constant to f32[1,128] before the %add.\n\nInstead of that, the fix introduced in this CL is to simply prevent the\nReshapeMover from moving the reshapes in this case. A comment in\nreshape_mover.cc describes the complexities that led to this choice.\n\nAlso added HloVerifiedTestBase, which keeps track of a default HloModule, and\nautomatically runs HloVerifier at the end of every test. This is useful for many\nHLO tests; the tests of various passes can probably all use this. Three existing\nissues in reshape_mover_test.cc were found and fixed as a result.\n\nPiperOrigin-RevId: 171628656'"
485cb179ea84c8de26263628510f930d07a98c4a,'Fix the example in the RNN tutorial which left out one of the pieces of data.\n\nPiperOrigin-RevId: 171611082'
52d3a842463d11990600bb65f9752b59f6d8f418,'Fix wasserstein gradient penalty name scope issue and add the proper name scope.\n\nPiperOrigin-RevId: 171610946'
fdb2b12d1ad84392df09dc5dcd457ca7e96cb423,'TFE: Fix reference counts when copying to Numpy arrays.\n\nPiperOrigin-RevId: 171608395'
319d823a09e8c3f1c0850b9d146f7e4d7e5bd310,'TFE: Fix reference counts when copying to Numpy arrays.\n\nPiperOrigin-RevId: 171608395'
33d55122d994d12f2a066f9ec4f0f03094a59579,"'[Grappler] Fixed two bugs in ArithmeticOptimizer.\n\n1. The data type of Mul should be stored in key ""T"" instead of ""dtype"".\n2. Add consumer_of_mul to new_nodes because it is modified. This caused\n  Grappler to miss some optimizations.\n\nPiperOrigin-RevId: 171594972'"
be69f13a074013a9c0322822e83b6320ef6c52bc,'[TF:XLA] Fix broken build of xla_interpreter_device.\n\nPiperOrigin-RevId: 171586211'
7e4e336ce5b874fadf8024b6a9c90e1bc8ed2867,'Relanding change to add config to enable S3 file system support.\n\nPass --config=s3 argument to Bazel to build with S3 file system support.\nChange was originally rolled back due to a failure it caused in\n//tensorflow/core/kernels:control_flow_ops_test on Macs which is now fixed.\n\nPiperOrigin-RevId: 171579378'
9ff05e9e7f471a8487cdd8a7bb6fdd554055e2dd,'Fixing the name of the disabled test. (#13593)'
022b25cd72af3127180728baf20351630a294609,"'Fix for the IOU metric (#12709)\n\n* Fixed mean iou case when a class does not appear in the labels nor in the prediction.\r\n\r\n* Added 3 tests for both mean_iou and streaming_mean_iou, 2 of which would fail with the previous code and one to make sure the behavior is still correct in the normal case. Fixed broken tests as well.\r\n\r\n* Added check for div by 0 in iou metric.\r\n\r\n* Add space around operator\r\n\r\nAs per style guide.'"
edfb9bb100f9814bf1bbcff2e8a32f12f049bfcc,'Correct documentation typo.\n\nFixes #13576\n\nPiperOrigin-RevId: 171540987'
87ac9901b35d80b38dd1530c6f32db5ce2a7fe15,"'Merge pull request #13534 from jeffcarp/fix-unevald-link\n\nFix unevaluated link in ""Reading data"" docs'"
159dfb5e0b8e2b393ac6fa24a38c707bca154c1e,'Fix for AVX2 support in Visual Studio (#13525)\n\n* Fixed AVX2 support for Visual Studio 2015.\r\n\r\n* Fixed for portability.'
ca9899fb1da37c8644c447b401663a0b10483c91,'Merge pull request #13573 from yongtang/10082017-link\n\nFix broken link in performance models'
074b66af3415cb3c60336b0a94f23aec04a715e3,'Change `dim` to `axis` for cosine_distance (#12801)\n\n* Change `dim` to `axis` for cosine_distance\r\n\r\nThis fix changes  `dim` to `axis` for cosine_distance\r\nso that the args are consistent with other methods in TensorFlow.\r\n\r\nThe backward-compatibility has been maintained in the fix.\r\n\r\nThis fix fixes 8205.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Change `dim` to `axis` for tf.losses.cosine_distance\r\n\r\nso that args are consistent with other TensorFlow methods.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update API goldens and address review feedback\r\n\r\nThis commit updates API goldens so that\r\n`//tensorflow/tools/api/tests:api_compatibility_test`\r\ncould pass. Review feedback has also been addressed.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
97bcc65e4c218ec9e1af1c9353cb8aa0d84b7014,'Merge pull request #13555 from yongtang/10072017-link\n\nFix broken link in performance guide'
4209f4ff14b5f78737fe2a08e61d6579535e6d5f,'Merge pull request #13547 from taehoonlee/fix_typos\n\nFix typos'
9077d4f4a8510d60b8a9ec4d0001e5151d3aad61,'Merge pull request #13548 from qinhanmin2014/typo\n\nFix a small typo'
b3a286301beb68d6809f892b7f252204eb02b880,'Fix broken link in performance models\nThis fix fixes broken link in performance models as models repo moved\ninception to `models/research/inception`:\n`https://github.com/tensorflow/models/tree/master/inception#getting-started`\n->\n`https://github.com/tensorflow/models/tree/master/research/inception#getting-started`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
0652d7aced72f795c494cd371d9e6aa8e082d0c8,'Fix broken link in performance guide\n\nThis fix fixes broken link in performance guide as models repo moved\nslim to `models/research/slim`\n`https://github.com/tensorflow/models/tree/master/slim#Data`\n->\n`https://github.com/tensorflow/models/tree/master/research/slim#Data`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
d43911058b63c7e91fac01b8b18bffa4cd936868,'Fix typos'
5a107a9a278e98f2fcb77c8ac6c224d40c06e8c2,'Fix broken docs links to other TensorFlow interfaces in tf.contrib.learn.Experiment\n\nPiperOrigin-RevId: 171375351'
96d276fe4db70a79a9283f35442b5e37dbfd66c6,"'Improvements and fixes in VirtualPlacer:\n\n- fixed a recent regression where VirtualPlacer stopped placing onto non-default devices like ""device:TPU"", added a test for this, verified that the test failed without the fix;\n- fixed a number of problems with uppercase/lowercase mismatch in VirtualPlacer code, before that a slight difference between VirtualCluster device and node device (""/tpu:0"" vs ""/device:TPU:0"") could cause fallback to default device, new code should be more resilient.\n\nPiperOrigin-RevId: 171374421'"
30c5f4347b722961a40eab483f2391a92d9088bb,"'Fix float32 precision causing test failure in gcs cloud TF tests.\n\nThe time in nanoseconds was being cast to float32 which caused loss\nof precision. Because floats are used when parsing the time, the time\ncalculation can still be rounded incorrectly. Also changing EXPECT_EQ\nto EXPECT_NEAR(,,1).\n\nPiperOrigin-RevId: 171338952'"
129947535edd50225b7a6bbe620ea58c6d32953c,'Fixed a typo in a message from the debugger.\n\nPiperOrigin-RevId: 171333405'
b1c095a28a7aa9bbee4af4d9a7e9d0c60567765b,"""Bugfix: Ensure tf.distributions.Multinomial doesn't underflow in log_prob.\n\nPiperOrigin-RevId: 171331659"""
e35372fe3e8a5de4a90a42cdd5a62c5e0fe452ff,"'Fix unevaluated link in ""Reading data"" docs'"
5eaefbabce16bffeeb4b19cee9890b1aeccabb09,"'Merge changes from github.\nEND_PUBLIC\n\n---\nCommit ee0fdc296 authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd noasan tag to estimator_test\n\nPiperOrigin-RevId: 171075499\n\n---\nCommit a02116882 authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA:CPU] Put the HLO name in IR values that hold the HLO\'s value.\n\nPiperOrigin-RevId: 171075449\n\n---\nCommit 89aaac4bc authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAllow Layer.add_update() in Eager mode.\n\nPiperOrigin-RevId: 171070861\n\n---\nCommit 840dcae57 authored by Amit Patankar<amitpatankar@google.com>\nCommitted by gunan<gunan@google.com>:\nUpdating the install sources file with a supported configs table (#13450)\n\n* Updating the install sources file with a supported configs page.\n\n* Implementing Gunan\'s suggestions.\n\n* Adding GCC string to Linux compiler.\n\n* Updating the bazel/cmake column.\n\n---\nCommit 89df2e336 authored by Igor Saprykin<isaprykin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd the \'is_the_final_export\' signal to Exporters. Use them in training.\n\nWhen the training ends, the final export is performed via `Exporter.export()` call.  That final export is going to have is_the_final_export parameter being set to true.\n\nIf `TrainSpec.max_steps` is `None`, then ""when training ends"" is undefined.  We are going to train forever.  In that case, `is_the_final_export` is going to be always False.  I added a note about it.\n\nPiperOrigin-RevId: 171070760\n\n---\nCommit 4486b4f69 authored by Akshay Agrawal<akshayka@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake graph_callable compatible with functions that do not return anything\n\nPiperOrigin-RevId: 171067061\n\n---\nCommit 39565c0cb authored by Martin Wicke<wicke@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPublish train_and_evaluate and associated classes.\n\nPiperOrigin-RevId: 171066379\n\n---\nCommit 3b4477000 authored by Saurabh Saxena<srbs@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake VariantTensorData::tensors_size() const.\n\nPiperOrigin-RevId: 171063397\n\n---\nCommit 53cc63a2d authored by Dhananjay Nakrani<dhananjayn@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[part 1] Add support for int32 & int64 in RandomPoissonOp.\n\nThis computes int32/int64-precision poisson samples with double precision intermediate calculations (same as it\'s done for `half`) respectively.\n\npart 2 will switch over python calls to new op once forward compatibility period has passed.\n\nPiperOrigin-RevId: 171058336\n\n---\nCommit 70fc9bf9b authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nJava: Add support for loading op libraries dynamically.\n\nThis change adds the equivalent of tf.load_op_library in Python to Java.\n(https://github.com/tensorflow/tensorflow/commit/5c7f9e316d8c7735308a217310350d416d7498cc\n was required to make this possible)\n\nThough, TensorFlow.loadLibrary() is likely to fail on Windows as symbols\nrequired by custom op libraries (those exported by the tensorflow_framework library)\nare not exported by the monolithic JNI library yet.\n\nThis should help with #10454 and #13476\n\nPiperOrigin-RevId: 171054707\n\n---\nCommit e7c53698e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal cleanup\n\nPiperOrigin-RevId: 171053770\n\n---\nCommit cc8ee6c0f authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFast path for tf.conj when it should be pass-through.\n\nPiperOrigin-RevId: 171053662\n\n---\nCommit c41dbc3c1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdding TF Boosted trees regression example on boston dataset, minor fix for mnist example.\n\nPiperOrigin-RevId: 171052367\n\n---\nCommit d66e77f7c authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded get variable utils to tf.estimator.Estimator.\n\nPiperOrigin-RevId: 171052121\n\n---\nCommit 083bd5dde authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nJava: Add support for loading op libraries dynamically.\n\nThis change adds the equivalent of tf.load_op_library in Python to Java.\n(https://github.com/tensorflow/tensorflow/commit/5c7f9e316d8c7735308a217310350d416d7498cc\n was required to make this possible)\n\nThough, TensorFlow.loadLibrary() is likely to fail on Windows as symbols\nrequired by custom op libraries (those exported by the tensorflow_framework library)\nare not exported by the monolithic JNI library yet.\n\nThis should help with #10454 and #13476\n\nPiperOrigin-RevId: 171054707\n\n---\nCommit 2fe6cf285 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal cleanup\n\nPiperOrigin-RevId: 171053770\n\n---\nCommit 15155493b authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFast path for tf.conj when it should be pass-through.\n\nPiperOrigin-RevId: 171053662\n\n---\nCommit 6c954d0b3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdding TF Boosted trees regression example on boston dataset, minor fix for mnist example.\n\nPiperOrigin-RevId: 171052367\n\n---\nCommit ad69076eb authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded get variable utils to tf.estimator.Estimator.\n\nPiperOrigin-RevId: 171052121\n\n---\nCommit 3cf41b2ed authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nTest save/restore variable from graph_callable.\n\nPiperOrigin-RevId: 171051237\n\n---\nCommit cf17ec96e authored by Yangzihao Wang<yangzihao@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd V2 versions of output window size computation functions for convolution.\nThese V2 versions take arbitrary dilation rates.\nIn preparation for the support of native cudnn dilated convolution.\n\nPiperOrigin-RevId: 171048878\n\n---\nCommit 491584ff4 authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\neager: Always run dataset iterator operations on CPU.\n\nIt has no kernels for other devices.\nWith an explicit ""tf.device()"" before invoking the kernel we ensure\nthat Iterator.next() functions even when placed inside a:\n\nwith tf.device(""/device:GPU:0"")\n\nPiperOrigin-RevId: 171048558\n\n---\nCommit 3b354016e authored by Igor Saprykin<isaprykin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRename SavedModelExporter to LatestExporter.\n\nPiperOrigin-RevId: 171048345\n\n---\nCommit 943c6d7af authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nerrors out if the evaluator has task id > 0.\n\nPiperOrigin-RevId: 171047652\n\n---\nCommit 8c9ef4466 authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExpand set of 64-bit type tests in LocalClientExecuteTest.ShapeBufferToLiteralConversion64bit and factor out into their own test.\n\nPiperOrigin-RevId: 171043047\n\n---\nCommit cc521eb06 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPlace all the nodes created by the trivial_test_graph_input_yielder\n\nPiperOrigin-RevId: 171045878\n\n---\nCommit 9b9301240 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA:CPU] Factor out parallel task assignment from cpu parallelization prep (no functional changes).\n\nPiperOrigin-RevId: 171045137\n\n---\nCommit 558d878d9 authored by Allen Lavoie<allenl@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nTFTS: Move normalization to the base class, start using it for state space models\n\nPreivously, state space models adjusted their priors based on the data\n(e.g. setting initial variances to match sample variance) but did not normalize\nthe data itself. When the data has a rather extreme scale, this runs into\nprecision issues. After this CL, state space models will first normalize, then\nuse adjusted statistics on top of that normalization to estimate initial\nobservation/transition noise.\n\nAlso fixes an issue where start-of-series statistics were incorrect for the first\nbatch (which only shows up with large input scales).\n\nPiperOrigin-RevId: 171044863\n\n---\nCommit 266f77156 authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExpand set of 64-bit type tests in LocalClientExecuteTest.ShapeBufferToLiteralConversion64bit and factor out into their own test.\n\nPiperOrigin-RevId: 171043047\n\n---\nCommit c9915d1a2 authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf-signal] Fix pip tests by including test_util in signal_py\n\nPiperOrigin-RevId: 171042732\n\n---\nCommit f8550f4e9 authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExpand set of 64-bit type tests in LocalClientExecuteTest.ShapeBufferToLiteralConversion64bit and factor out into their own test.\n\nPiperOrigin-RevId: 171043047\n\n---\nCommit 87dc532cd authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf-signal] Fix pip tests by including test_util in signal_py\n\nPiperOrigin-RevId: 171042732\n\n---\nCommit 0578dd65e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd more debugging output for XLA send/recv.\n\nPiperOrigin-RevId: 171041978\n\n---\nCommit 23992bb09 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSeveral minor documentation fixes.\n\nPiperOrigin-RevId: 171038610\n\n---\nCommit af14ed3f3 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSome docstring twists and argument validations.\n\nPiperOrigin-RevId: 171037949\n\n---\nCommit 6b90a65f6 authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove ""hybrid"" HloModuleConfig option. The option was used to generate executables which only generated the array values of tuple-shaped outputs, not the tuple index tables.. With cl/170133015, ShapedBuffers which hold the computation output now have materialized tuples with these index tables so this option is no longer desired or necessary.\n\nNo functional change. Just cleanup.\n\nPiperOrigin-RevId: 171035738\n\n---\nCommit 41a0264ab authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded utilities to make global step reading deterministic. Used them in Estimator.\nEnabled/Fixed some tests.\n\nPiperOrigin-RevId: 171035291\n\n---\nCommit 9d7843c0a authored by Skye Wanderman-Milne<skyewm@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd optional unused_input_map_keys output param to ImportGraphDef\n\nThis is a more general feature than that in the Python importer, which\nraises an exception if the input map contains unused names.\n\nPiperOrigin-RevId: 171029316\n\n---\nCommit 4f10a6597 authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd vlogging of HloModule before and after fusion.\n\nPiperOrigin-RevId: 171029054\n\n---\nCommit 9e658545a authored by Reed Wanderman-Milne<reedwm@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDocument what dtype tf.image.resize_images returns.\n\nFor consistency, tf.image.resize_images now will always return a float32 when method != ResizeMethod.NEAREST_NEIGHBOR. Before, it returned the same dtype as its input if it could be determined statically that the height and width would not be changed.\n\nPiperOrigin-RevId: 171028825\n\n---\nCommit 4d70239f0 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nReplace the contrib FC with core FC  in canned Estimator docstring.\n\nPiperOrigin-RevId: 171027602\n\n---\nCommit 6a1b867ff authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds the docstring with details for tf.estimator.train_and_evaluate\n\nPiperOrigin-RevId: 171027527\n\n---\nCommit 7209c1602 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Mark IdentityN as CompilationOnly().\n\nPiperOrigin-RevId: 171025171\n\n---\nCommit 8e22eb874 authored by FAIJUL<md.faijul.amin@intel.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nEigen BiasAdd and BiasAddGrad Fix for NCHW Format. (#13158)\n\n---\nCommit 7db7a890c authored by Jingyue Wu<jingyue@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[Grappler] Move InferOutputShapes to GraphProperties.\n\nSo it can be used by other optimizers. No functional changes.\n\nPiperOrigin-RevId: 171010106\n\n---\nCommit 2114fd51e authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Improve numerical stability of SoftPlus.\n\nPiperOrigin-RevId: 171003559\n\n---\nCommit 727d6270f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix race condition in TensorForest tree traversal.\n\nPiperOrigin-RevId: 170990425\n\n---\nCommit d016cb020 authored by Suharsh Sivakumar<suharshs@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix c++ gradients issue where multiple dependent outputs result in incorrect answer.\n\nThe issue is that we incorrectly calculate the pending num_expected_backprops for outputs nodes when one output transitively depends on another. this is because we use output nodes as an indicator of when we need to end our traversal. Instead we should only use output nodes that don\'t transitively get consumed by other output nodes as end indicators for our traversal. This change implements that fix.\n\nFixes #13190\n\nPiperOrigin-RevId: 170971937\n\n---\nCommit 5405f3bd7 authored by gunan<gunan@google.com>\nCommitted by Frank Chen<frankchn@gmail.com>:\nFix tf-signal tests on pip packages. (#13483)\n\n---\nCommit f9f037c1c authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBugfix to LSTMBlockCell and friends: clipping is off by default.\n\n* Rename broken API argu clip_cell boolean to cell_clip value.\n* Make default no clipping.\n\nPiperOrigin-RevId: 170960975\n\n---\nCommit bfaaefa9e authored by Frank Chen<frankchn@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate APIs for TPU Cluster Resolver to remove the custom API definition and instead use a standard definition file stored in GCS.\n\nPiperOrigin-RevId: 170960877\n\n---\nCommit c31c118a3 authored by Ian Langmore<langmore@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtend tf.contrib.bijector API to handle some non-injective transforms.\nAbsoluteValue Bijector added to contrib/distributions/bijectors/\nTransformedDistribution udpated to handle some non-injective transforms.\n\nPiperOrigin-RevId: 170960054\n\n---\nCommit 664dd0859 authored by Frank Chen<frankchn@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDisable cluster_function_library_runtime_test on Mac OS as it is currently failing with an Unimplemented error\n\nPiperOrigin-RevId: 170958505\n\n---\nCommit 6af7ab97a authored by Mahmoud Abuzaina<mahmoud.abuzaina@intel.com>\nCommitted by gunan<gunan@google.com>:\nMKL-DNN open source integration. (#13135)\n\n* MKL-DNN conv and build integration\n\n* Adding new files that were mistakenly missing from the PR\n\n* Minor change in the pip package build file\n\n* Added missing #include\n\n* Fixed a linking failure when running the bazel test\n\n* Fixing BUILD file format\n\n* Using -fopenmp for building mkl_dnn only when running on linux\n\n* Fixing build rule attribute value\n\n* Removing unnecessary deps from mkl test rule\n\n* Removed deps on mkl-dnn when not building with --config=mkl\n\n---\nCommit 93fa1af76 authored by Akshay Agrawal<akshayka@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake graph_callable, defun tf_decorators\n\nPiperOrigin-RevId: 170948777\n\n---\nCommit b39525785 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded comment re:behavior of listener in case of multiple saver hooks.\n\nPiperOrigin-RevId: 170946536\n\n---\nCommit de14fcbb6 authored by Igor Saprykin<isaprykin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSupport evaluation in `_TrainingExecutor.run_master()`.\n\nThis CL aims to address the following TODO:\n\n    # TODO(b/66720832): Once listener API is added into Estimator.train, the\n    # eval and export process should be wrapped as a listener and passed to\n    # _start_distributed_training. The expected behavior should be\n    # 1. The export is invoked after each intermediate evaluation.\n    # 2. The evaluation and export should be invoked correctly at the end of\n    # training. This should be fine if the listener works as intended (it will\n    # send the `after_save` signal for the final ckpt saving).\n\n1. is achieved as follows:\n  a. saving_evaluators are added to the CheckpointSaverHook\'s listeners inside the Estimator.\n  b. MonitoredSession calls after_run() of CheckpointSaverHook, which in turn calls after_save on the listeners.\n\n2. is achieved in a similar way, but when MonitoredSession calls .end() on CheckpointSaverHook.\n\nPiperOrigin-RevId: 170945961\n\n---\nCommit d4ea993ca authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemoves unnecessary eager-mode call to convert_to_tensor in record_gradient.\n\nPiperOrigin-RevId: 170944265\n\n---\nCommit add6d2d03 authored by RJ Ryan<rjryan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf-signal] Use tf.spectral.dct in mfccs_from_log_mel_spectrograms instead of a private implementation.\n\nPiperOrigin-RevId: 170943986\n\n---\nCommit b959da92f authored by Jiri Simsa<jsimsa@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixing CPU implementation of parallel_stack for tensors with non-zero rank.\n\nPiperOrigin-RevId: 170942814\n\n---\nCommit 4cf61262a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nImprove TFGAN documentation.\n\nPiperOrigin-RevId: 170940188\n\n---\nCommit 0068086b9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIntroduce `tf.data` namespace.\n\nPiperOrigin-RevId: 170939033\n\n---\nCommit 0c8dbc1fd authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nmatmul uses shape_tuple internally\n\nPiperOrigin-RevId: 170938790\n\n---\nCommit ad37fa81f authored by Igor Saprykin<isaprykin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRefactor ExportStrategies into Exporters.\n\nThis design eliminates some indirection.  Instead of combining an `export_fn` with `make_export_strategy` call to arrive at an ExportStrategy that is going to call the supplied `export_fn` inside its `export` call with Exporters one just defines the `export` call in an Exporter.\n\nPiperOrigin-RevId: 170936640\n\n---\nCommit b925f8553 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFast-path for EagerTensorBase.dtype\n\nPiperOrigin-RevId: 170933005\n\n---\nCommit 08e266d9b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPass activity_regularizer to __init__ instead of using the (now\ndeprecated) property setter.\n\nPiperOrigin-RevId: 170932807\n\n---\nCommit b002c8b7d authored by Jingyue Wu<jingyue@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[Grappler] Fold chains of reshapes.\n\nReshape(Reshape(input, shape1), shape2) is equivalent to Reshape(input,\nshape2).\n\nPiperOrigin-RevId: 170932278\n\n---\nCommit 075d1d13b authored by horance<horance@aliyun.com>\nCommitted by Frank Chen<frankchn@gmail.com>:\nremove warning for forward decl (#13459)\n\n---\nCommit 931609fcf authored by Ryohei Kuroki<ryohei.kuroki@gmail.com>\nCommitted by Frank Chen<frankchn@gmail.com>:\nRemove unnecessary specification for default kernel name (#13465)\n\n---\nCommit 94463f521 authored by Akshay Agrawal<akshayka@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPreserve target function signature in custom_gradient decorator\n\nPiperOrigin-RevId: 170931715\n\n---\nCommit 681056636 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal change to simplify prediction ops.\n - it no longer returns predictions_no_dropout, which is mostly for debugging purpose.\n - as a consequence, MultipleAdditiveTrees::Predict() doesn\'t return prediction_no_dropout, and it accept trees_to_include indexes intead of trees_to_drop indexes.\n\nPiperOrigin-RevId: 170926422\n\n---\nCommit d6e963b82 authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSYCL: Fix build breakage introduced in\nhttps://github.com/tensorflow/tensorflow/commit/f0e8c545e0196b8b48ce0ad0f116df97d980d1f1\n\nFixes #13350\n\nPiperOrigin-RevId: 170923862\n\n---\nCommit 5123f2971 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal cleanup.\n\nPiperOrigin-RevId: 170922297\n\n---\nCommit d0c76cd18 authored by Igor Saprykin<isaprykin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nHandle the absence of a fresh eval checkpoint in `run_local`.\n\nIt is ~unexpected condition for an eval checkpoint to not be available after a train call to the estimator.  There is a corner case when it is possible, but that\'s going to be resolved soon.\n\nThis case is handled for continuous (distributed) evaluation differently.  Instead of erroring out, we skip evaluation runs.  That behavior is captured in the `test_skip_evaluation_due_to_ckpt` test.\n\nPiperOrigin-RevId: 170919925\n\n---\nCommit 435b31b9f authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 170892257\n\nPiperOrigin-RevId: 171321707'"
ce2f89c8bfdbef373c1b1ff9a1c6818f6bf462f8,'Fix stats_collector_ null pointer error.\n\nPiperOrigin-RevId: 171318477'
d749f56a3e0b17a5fe5f3252446223b84e485f04,"'[XLA] Fix a bug in ComputationBuilder::Collapse and add more tests/docs.\n\nAlso updated test infrastructure so a shape mismatch does not cause a fatal\ncrash in index_util, but rather reports an appropriate test failure message.\n\nPiperOrigin-RevId: 171315165'"
af6e00f7c661c7d93bacfc3adc40d17f0faeb9b4,'Fix a minor issue w/ allreduce\n\nPiperOrigin-RevId: 171314944'
32e044d333e85d535a27a3729ed836855383be1b,'Fix stats_collector_ null pointer error.\n\nPiperOrigin-RevId: 171318477'
b99457c2138482470ae976a6364ce0ba754503cf,"'[XLA] Fix a bug in ComputationBuilder::Collapse and add more tests/docs.\n\nAlso updated test infrastructure so a shape mismatch does not cause a fatal\ncrash in index_util, but rather reports an appropriate test failure message.\n\nPiperOrigin-RevId: 171315165'"
71a285922a4279fd35f73271e09b90d5787746a9,'Fix a minor issue w/ allreduce\n\nPiperOrigin-RevId: 171314944'
9aad24f89ee9fbaa31f36087ec5fc527d7b728b6,'One last data_set race condition fix.\n\nPiperOrigin-RevId: 171313226'
251a1e70dc04b10fb25e8013d1ad1f27d5eda30b,"'Add an actionable error message for build_info ImportError (#13528)\n\nThis `import` statement is now the first point where we attempt to import a generated file, and hence could see a failure if the user tries to `import tensorflow` from the root of the git repository source tree. When this `import` fails, raise a more actionable error message.\r\n\r\nFixes #13526.'"
2daa40f9d096d47fc3add05a36fb7e41a00ba69d,'Fix transpose bug for large dimension.\nAdd random tests of large shapes for better coverage.\nUpdate transpose benchmark with cases that swap one small dimension with one large dimension.\n\nPiperOrigin-RevId: 171302097'
3251bc07927c6a60916fc274e11445d42e5ec193,'Fixed typo in DynamicRnnEstimator __init__ documentation.\n\nPiperOrigin-RevId: 171300981'
e7ab55b01f25bc1c9023dcc9510667ea480c6186,"'SinhArcsinh distributions modified so that their skewness is symmetric.\n\nAlso, some doc-fixes/changes, and make SinhArcsinh bijector have same None kwargs and naming scheme as the distributions\n\nPiperOrigin-RevId: 171294037'"
d86448938260d0abb8e0f154cfefe0b82ff2e6cd,'Merge pull request #13514 from case540/fix_small_parameter_typo\n\nFix small typo in docs of learn runner.'
7680d8d00dec8897b64ea864da71537b7be957de,'checkstyle fix'
03233a04cf07d639d8d2b5f3fbcab479b267ac4e,"'Adressed reviewer comments: moved to contrib, fixed erroneous doc, modified _compute_sampled_logits to optionally return target indices'"
bdbcde775f47d56a98b7f0f7dcd72bcb83867ae8,'Fix small typo in docs of learn runner.'
f5ac1f40c96e3d41464ce39d18d9f97b9acfadc7,'Fixed the training_test on gpu-py3.\n\nPiperOrigin-RevId: 171225190'
e11b9fd32eb5b8f1eb9b8a30dbb08fc1f83fc1dd,'[Grappler] Fix a bug with multiple-output nodes.\n\nTrySimplifyAndReshapeUses should return a tensor not a node. Added a regression\ntest that would have failed without this CL. ArithmeticOptimizer would have\nredirected the second input of concat to Split rather than Split:1.\n\nPiperOrigin-RevId: 171220303'
8b90d603a9359af361fc4dad7883f533dd365f32,'Fix ASAN test.\n\nASAN correctly complains about the overflow on `CT(Eigen::NumTraits<U>::highest())`. This fixes the issue by providing correct CT for half and floats.\n\nPiperOrigin-RevId: 171212745'
ccc00be1b1e3ed9bbf1b47fec007ac3f06b8ce7c,'PREP: migrate ErfGrad to c++ side (#12872)\n\n* ENH: migrate ErfGrad\r\n\r\n* TST: add test case for real value\r\n\r\n* CLN: add semicolon\r\n\r\n* DOC: add comment\r\n\r\n* CLN: remove useless dependency\r\n\r\n* CLN: remove useless dependency in LgmmaGrad\r\n\r\n* TST: move lgamma test case\r\n\r\n* TST: add test case for Erf\r\n\r\n* TST: complex is unsupported for kernel\r\n\r\n* TST: complex64 -> float\r\n\r\n* ENH: use grad_scope\r\n\r\n* ENH: fix grad_scope for TanhGrad and SigmoidGrad\r\n\r\n* ENH: import M_PI'
91df2c942ebf4bd048edba055418467cae510431,'Give accumulate_n op a gradient (version 2) (#13325)\n\n* Changed accumulate_n ==> accumulate_n_v2 and moved to contrib\r\n\r\n* Moving source files to contrib.\r\n\r\n* Better startup message.\r\n\r\n* Fixing up build\r\n\r\n* Removal of temporary code.\r\n\r\n* Reduce logging output\r\n\r\n* Fixing build issues.\r\n\r\n* CI sanity fixes.\r\n\r\n* Cleanup prior to PR\r\n\r\n* Cleanup\r\n\r\n* Cleanup.\r\n\r\n* Cleanup.\r\n\r\n* Cleanup.\r\n\r\n* Moved AccumulateNV2 to main build and added fallback to AddN for eager mode\r\n\r\n* Fixing CI issues'
c8b3f67ba3f8895ebaf0cc78f1859a604ac68c16,'Fix checkpoint_path is None handling in export_fn of make_best_model_export_strategy.\n\nPiperOrigin-RevId: 171195079'
fd5326666ac5297e2bec09b29728d8731951be23,"'Fixes markdown formatting of EstimatorSpec constructor.\nBefore, it was rendering as italics because of the missing newline.\n\nPiperOrigin-RevId: 171175131'"
7e7d55c0f5bae2380a76d39fbc51131f843c0320,'[tf.data] Iterator and data/nest documentation fixes\n\nPiperOrigin-RevId: 171165796'
09fa4a4e355171fa30f5793ff9eb1b61a4e34ed0,'Fix ConvBackpropComputeDimensionsV2() interface.\n\nPiperOrigin-RevId: 171165222'
07124fac0ec20e584d018035300d44ee55e451f0,'Fix build of dumped_computation_to_operation_list.\n\nCompileExecutable had its last arg removed.\n\nPiperOrigin-RevId: 171109500'
55e765b578529364522b92d732d1240243412197,'BUGFIX:  AbsoluteValue.invert(y) raises if y < 0 and validate_args\n\nPiperOrigin-RevId: 171106639'
929e9c5578c3d38df28da57ca22d1e4ce2600987,'Fix docstring.\n\nPiperOrigin-RevId: 171105949'
df2768c93b60fd60e353cebddc27de8390bebd4b,'Fix silly typo\n\nPiperOrigin-RevId: 171102230'
2c3bf9eff79156e32512e8d6da2179cd044167b8,'[Windows] Include tf.contrib.image ops as part of the Windows build.\n\nFixes #9672.\n\nPiperOrigin-RevId: 171098255'
ef2ee630e8fe290b06363f13ff440b4efcec9c81,'Fixes docs.\n\nPiperOrigin-RevId: 171098172'
f2114a01130ded172ea4afb8f3ca20294ae62961,'[XLA] Fix build of dumped_computation_to_text after change that removed an arg from CompileExecutable.\n\nPiperOrigin-RevId: 171098077'
c38773f18bfdce1de16ab5110e0cbbd50f0d6a79,'[XLA] Fix build of dumped_computation_to_text after change that removed an arg from CompileExecutable.\n\nPiperOrigin-RevId: 171098077'
76eb8726160a192ebe6ac5e61d0a0a539cc0dc1a,"'Fix documentation error in tf.reverse docstring (#1)\n\nThe first example in the tf.reverse docstring causes a ValueError:\r\n\r\n```Python\r\nIn [1]: import tensorflow as tf\r\nIn [2]: t = tf.constant([[[[ 0,  1,  2,  3], [ 4,  5,  6,  7], [ 8,  9, 10, 11]], [[12, 13, 14, 15], [16, 17, 18, 19], [20, 21, 22, 23]]]])\r\nIn [3]: dims = -1\r\nIn [4]: sess = tf.InteractiveSession()\r\nIn [5]: tf.reverse(t, dims).eval()\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-6-7752813cc8a9> in <module>()\r\n----> 1 tf.reverse(t, dims).eval()\r\n\r\n/Users/craffel/.pyenv/versions/2.7.13/lib/python2.7/site-packages/tensorflow/python/ops/array_ops.pyc in reverse(tensor, axis, name)\r\n   2332\r\n   2333 def reverse(tensor, axis, name=None):\r\n-> 2334   return gen_array_ops.reverse_v2(tensor, axis, name)\r\n   2335 reverse.__doc__ = gen_array_ops.reverse_v2.__doc__\r\n   2336\r\n\r\n/Users/craffel/.pyenv/versions/2.7.13/lib/python2.7/site-packages/tensorflow/python/ops/gen_array_ops.pyc in reverse_v2(tensor, axis, name)\r\n   2697   """"""\r\n   2698   result = _op_def_lib.apply_op(""ReverseV2"", tensor=tensor, axis=axis,\r\n-> 2699                                 name=name)\r\n   2700   return result\r\n   2701\r\n\r\n/Users/craffel/.pyenv/versions/2.7.13/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.pyc in apply_op(self, op_type_name, name, **keywords)\r\n    765         op = g.create_op(op_type_name, inputs, output_types, name=scope,\r\n    766                          input_types=input_types, attrs=attr_protos,\r\n--> 767                          op_def=op_def)\r\n    768         if output_structure:\r\n    769           outputs = op.outputs\r\n\r\n/Users/craffel/.pyenv/versions/2.7.13/lib/python2.7/site-packages/tensorflow/python/framework/ops.pyc in create_op(self, op_type, inputs, dtypes, input_types, name, attrs, op_def, compute_shapes, compute_device)\r\n   2506                     original_op=self._default_original_op, op_def=op_def)\r\n   2507     if compute_shapes:\r\n-> 2508       set_shapes_for_outputs(ret)\r\n   2509     self._add_op(ret)\r\n   2510     self._record_op_seen_by_control_dependencies(ret)\r\n\r\n/Users/craffel/.pyenv/versions/2.7.13/lib/python2.7/site-packages/tensorflow/python/framework/ops.pyc in set_shapes_for_outputs(op)\r\n   1871       shape_func = _call_cpp_shape_fn_and_require_op\r\n   1872\r\n-> 1873   shapes = shape_func(op)\r\n   1874   if shapes is None:\r\n   1875     raise RuntimeError(\r\n\r\n/Users/craffel/.pyenv/versions/2.7.13/lib/python2.7/site-packages/tensorflow/python/framework/ops.pyc in call_with_requiring(op)\r\n   1821\r\n   1822   def call_with_requiring(op):\r\n-> 1823     return call_cpp_shape_fn(op, require_shape_fn=True)\r\n   1824\r\n   1825   _call_cpp_shape_fn_and_require_op = call_with_requiring\r\n\r\n/Users/craffel/.pyenv/versions/2.7.13/lib/python2.7/site-packages/tensorflow/python/framework/common_shapes.pyc in call_cpp_shape_fn(op, input_tensors_needed, input_tensors_as_shapes_needed, debug_python_shape_fn, require_shape_fn)\r\n    608     res = _call_cpp_shape_fn_impl(op, input_tensors_needed,\r\n    609                                   input_tensors_as_shapes_needed,\r\n--> 610                                   debug_python_shape_fn, require_shape_fn)\r\n    611     if not isinstance(res, dict):\r\n    612       # Handles the case where _call_cpp_shape_fn_impl calls unknown_shape(op).\r\n\r\n/Users/craffel/.pyenv/versions/2.7.13/lib/python2.7/site-packages/tensorflow/python/framework/common_shapes.pyc in _call_cpp_shape_fn_impl(op, input_tensors_needed, input_tensors_as_shapes_needed, debug_python_shape_fn, require_shape_fn)\r\n    674       missing_shape_fn = True\r\n    675     else:\r\n--> 676       raise ValueError(err.message)\r\n    677\r\n    678   if missing_shape_fn:\r\n\r\nValueError: Shape must be rank 1 but is rank 0 for \'ReverseV2\' (op: \'ReverseV2\') with input shapes: [1,2,3,4], [].\r\n```'"
875df6262977eebd73d558600c5a216882b88164,"'[XLA:CPU] Mark loads of parameter addresses as invariant.\n\nAlso delete a dead member in the IrEmitter, make param names match\nbetween the header and the cc file, and make a cosmetic comment fix.\n\nPiperOrigin-RevId: 171088993'"
c57a4ace4a9a9a5cf871e6a090a4252f0c9ef2ad,'Fix error when loading s3 file system library.\n\nIf attempting to call tf.load_file_system_library on the S3 library you\nwould previously get an error similiar to...\ns3_file_system.so: undefined symbol: _ZN5nsync13nsync_mu_lockEPNS_11nsync_mu_s_E\n\nChanging the build rule to be tf_cc_binary instead of cc_binary fixes this issue.\n\nPiperOrigin-RevId: 171079804'
c41dbc3c1832bc6c3662d4d942d095baa1fb49c9,"'Adding TF Boosted trees regression example on boston dataset, minor fix for mnist example.\n\nPiperOrigin-RevId: 171052367'"
6c954d0b3f02ea586a5fd3f9c2ea13bf8473d17f,"'Adding TF Boosted trees regression example on boston dataset, minor fix for mnist example.\n\nPiperOrigin-RevId: 171052367'"
558d878d9189dfac42d518a6bf5aa35328689e48,"'TFTS: Move normalization to the base class, start using it for state space models\n\nPreivously, state space models adjusted their priors based on the data\n(e.g. setting initial variances to match sample variance) but did not normalize\nthe data itself. When the data has a rather extreme scale, this runs into\nprecision issues. After this CL, state space models will first normalize, then\nuse adjusted statistics on top of that normalization to estimate initial\nobservation/transition noise.\n\nAlso fixes an issue where start-of-series statistics were incorrect for the first\nbatch (which only shows up with large input scales).\n\nPiperOrigin-RevId: 171044863'"
c9915d1a20d0f072dadc543254d4aa0b68dcbb05,'[tf-signal] Fix pip tests by including test_util in signal_py\n\nPiperOrigin-RevId: 171042732'
87dc532cd4e3fb138a0f005e8d5a8d8b3d1e49ae,'[tf-signal] Fix pip tests by including test_util in signal_py\n\nPiperOrigin-RevId: 171042732'
23992bb091457f3e881ae1413d04c2aebbccfa2f,'Several minor documentation fixes.\n\nPiperOrigin-RevId: 171038610'
41a0264ab60fa18badf0014fe6d39186736ada3a,'Added utilities to make global step reading deterministic. Used them in Estimator.\nEnabled/Fixed some tests.\n\nPiperOrigin-RevId: 171035291'
8e22eb8748deb022af051e0663c0b4c82e475786,'Eigen BiasAdd and BiasAddGrad Fix for NCHW Format. (#13158)'
727d6270f9d16b4f60ac35039abb161bd037812d,'Fix race condition in TensorForest tree traversal.\n\nPiperOrigin-RevId: 170990425'
d016cb020583b1ecbc260c1492e347c2731b1c29,"""Fix c++ gradients issue where multiple dependent outputs result in incorrect answer.\n\nThe issue is that we incorrectly calculate the pending num_expected_backprops for outputs nodes when one output transitively depends on another. this is because we use output nodes as an indicator of when we need to end our traversal. Instead we should only use output nodes that don't transitively get consumed by other output nodes as end indicators for our traversal. This change implements that fix.\n\nFixes #13190\n\nPiperOrigin-RevId: 170971937"""
5405f3bd7966663a005572e6cf0e870197f399d3,'Fix tf-signal tests on pip packages. (#13483)'
f9f037c1c489d6a72ef682e3bce01e6f154222e4,'Bugfix to LSTMBlockCell and friends: clipping is off by default.\n\n* Rename broken API argu clip_cell boolean to cell_clip value.\n* Make default no clipping.\n\nPiperOrigin-RevId: 170960975'
6af7ab97ac71fde3cf5875a9e7e2db9887e9cae1,'MKL-DNN open source integration. (#13135)\n\n* MKL-DNN conv and build integration\r\n\r\n* Adding new files that were mistakenly missing from the PR\r\n\r\n* Minor change in the pip package build file\r\n\r\n* Added missing #include\r\n\r\n* Fixed a linking failure when running the bazel test\r\n\r\n* Fixing BUILD file format\r\n\r\n* Using -fopenmp for building mkl_dnn only when running on linux\r\n\r\n* Fixing build rule attribute value\r\n\r\n* Removing unnecessary deps from mkl test rule\r\n\r\n* Removed deps on mkl-dnn when not building with --config=mkl'
b959da92f945129596d2cec5bf0c727b213beacf,'Fixing CPU implementation of parallel_stack for tensors with non-zero rank.\n\nPiperOrigin-RevId: 170942814'
719d6e7061809141ee42fdd8f283c6bd675a335f,'Merge pull request #13470 from nluehr/tensor-op-search-2\n\nGetConvolveAlgorithms fixup take 2'
d6e963b82b3fd6ed331206ec89de83cc7bdb5b91,'SYCL: Fix build breakage introduced in\nhttps://github.com/tensorflow/tensorflow/commit/f0e8c545e0196b8b48ce0ad0f116df97d980d1f1\n\nFixes #13350\n\nPiperOrigin-RevId: 170923862'
7d62e1d926b7d11b3ca155d58066c00dd122f02e,'[tf.data] Fix typo in docstring.\n\nPiperOrigin-RevId: 170909071'
9be96491599cd8890092f7010d4afd22862b26dd,'[tf.data] Fix docstring descriptions.\n\nPiperOrigin-RevId: 170896806'
9d93a11431f62a82eda1f314c6c8b2acee1bc1c1,'Bugfix: tf.contrib.distributions.Affine incorrectly computed log-det-jacobian\nwhen using `event_ndims=0` and `scale_identity_multiplier` flag.\n\nPiperOrigin-RevId: 170887218'
68ec8b8a11c2a83e9e4cfb5c74f31bb7255b5ad6,"'Bugfix: tf.random_gamma incorrectly handles non-batch, scalar draws.\n\nPiperOrigin-RevId: 170887206'"
cb291f3943e8f038a43f23dc238bc7a55460e6a7,'Bugfix: tf.contrib.distributions.Affine incorrectly computed log-det-jacobian\nwhen using `event_ndims=0` and `scale_identity_multiplier` flag.\n\nPiperOrigin-RevId: 170887218'
0e286d372b9c04e7db62fa88695282cc0a0d61d9,"'Bugfix: tf.random_gamma incorrectly handles non-batch, scalar draws.\n\nPiperOrigin-RevId: 170887206'"
0cde91d06b1f84c14e548e5312cc008c8f8e4edc,'GetConvolve*Algorithms fixup take 2\n\nMove loop to toggle tensor_ops inside GetConvolveAlgorithms functions. Also\ntensor_ops are not included in the returned list if they are not supported by\nthe cuDNN or GPU architecture versions.\n\nThis is a re-submit of PR 13252 which seems to have been accidentally squashed\nduring the merge at hash 37800b9.'
0466135756ff23ddb86ca90d975d66b69c0f750d,'Fix backwards_compatibility_test broken by rollback of changes to Where op.\n\nPiperOrigin-RevId: 170799942'
9b027db459ff771c246a266ac3ec40cfbb4a63ce,'[tf.data] Use the user-provided type when converting to a NumPy array.\n\nThis eases Windows-vs-Linux `np.int32`-vs-`np.int64` issues when no types\nare given. Fixes #13431.\n\nPiperOrigin-RevId: 170772767'
ac6ee67af055edc75af16fd91b3ce72c0f19a79a,'Initialize fetchTensors to fix NullPointerException (#13425)\n\ncloseFetches() needs fetchTensors to not be null. fetchTensors is initialized by run() and the first thing run() does is call closeFetches().'
131bdd888d5bd3f88c1989a13b77eb179ec904db,'Fix typos (#13440)'
b6d5ff49ecfb5925597c3d5dcf40dd289125e8c2,'Support --xla_dump_ir_to for the GPU backend\n\nAnd while at it:\n - Fix some misleading comments on how the CPU backend processes the IR dump\n   flag.\n - Change the optimized IR file suffix to -with-opt.ll for easier globbing.\n\nPiperOrigin-RevId: 170751446'
a8444b7c19d971e3f109adf4f1295f37d439af6c,'[Windows] Improve import self-check with tests for GPU-related DLLs.\n\nThis change incorporates the full logic of the [Windows self-check\nscript](https://gist.github.com/mrry/ee5dbcfdd045fa48a27d56664411d41c)\ninto core TensorFlow.\n\nFixes #9170.\n\nPiperOrigin-RevId: 170746452'
684bb8e79da25d4f5096fcb2cc50a9463cfb8588,'Fix incorrect input Tensor name.\n\nPiperOrigin-RevId: 170737051'
ed686146ccdf034093bc1a7a24b7de9d1cc79219,'TFE: Fix tf.layers.Flatten\n\nFix issues in framework/ops.py and layers/core.py that prevented tf.layers.Flatten from working.\n\nPiperOrigin-RevId: 170735291'
bf1114170f2294467b3e96d8a723823c4b5fec94,'Rename set to depset (#13443)\n\nFixes #13377'
e3ceea3f65a4091b2a13f3e9c34bf4d1cf3c27fe,'Fix the Docker GPU build (adds a symlink + library path) (#13399)'
09d0c5fd8cd815d3bcaa883b0e63535a4a786533,'[tf-signal] Remove checks that frame_length <= fft_length in stft and inverse_stft.\n\nAlso add tests for stft/inverse_stft when the shape/rank of the inputs are unknown.\n\nFixes GitHub Issue #13363.\n\nPiperOrigin-RevId: 170662530'
0e0b2039d40445e7620b1c268199a8dab707c905,'Fix merge conflicts'
242b0f11302095110ba4014b62a4ca98833d827e,'Merge pull request #13427 from taehoonlee/fix_typos\n\nFix typos'
f73a25ef58a43bd66f7394880efe71248c61526f,'Fix typos'
da8349412fe03c9f55307c7f2674f072073d1b40,'fix the typo in docstring of dense_to_sparse_batch\n\nPiperOrigin-RevId: 170607818'
cff829fb16e8824719559f4f7237af546307d7fd,'Change tmp filename behavior in contrib.ffmpeg to support simultaneous decodes (#13394)\n\n* Changed temporary filename behavior in contrib.ffmpeg.decode_audio to support multiple decodes simultaneously\r\n\r\n* Fixed mkstemp behavior to create file descriptor in corect directory'
ade8e9f29d4b1374d41fcc5ca9109bd05df765d1,'Extracted time_series_regression_head (#13275)\n\n* Extracted time_series_regression_head\r\n\r\n* Addressed comments and fix ci build\r\n\r\n* Fixed BUILD file and tests\r\n\r\n* Remove whitelisted timeseries head lint error'
aae34fa7e35d9c3931cae49bfc20384dd20dffec,"'[tf.contrib.seq2seq] Better docstrings for AttentionWrapper and BeamSearchDecoder.\n\nFixes #9832, #12569.\n\nPiperOrigin-RevId: 170553460'"
a07e5581ea01ba64242f4aaaf4a6a0c8dd282cc9,'Fixed failing test.\n\nPiperOrigin-RevId: 170548275'
244b8d6b0767c0fb63e58e56f58d03bd97c27822,"""Java API Generics Phase 2 (#11535)\n\n* Phase 1 of the proposed generic Java API.\r\n\r\nThis adds new classes to represent each of the possible tensor types,\r\nand some scripting support for generating those classes. There is\r\nessentially no effect on existing classes, except that DataType is\r\nmade slightly more efficient.\r\n\r\nAll tests pass.\r\n\r\n* Addressed Asim's review.\r\n\r\n* Hoisted copyright into a separate declaration. Maybe it should go\r\nin a separate file?\r\n\r\n* Added private constructors to TF types and shortened their javadoc to be\r\nmore standard.\r\n\r\n* Added more explanation about the enum relationship.\r\n\r\n* Used more-idiomatic import statement.\r\n\r\n* Rename zero column.\r\n\r\n* Removed the datatype code from tftypes.csv\r\n\r\n* Fix the default value for Double, add one for UInt8.\r\n\r\n* Got rid of 'boxed type' column in CSV file\r\n\r\n* Somehow I did not notice that TFType.java was not checked in.\r\n\r\n* Phase 2 : Tensor, Output and friends are now parameterized.\r\n\r\n* All tests now pass.\r\n\r\n* Cleaned up and added some Javadoc and made some static fields private.\r\n\r\n* Made Outputs more convenient to use.\r\nImproved Javadoc regarding this functionality.\r\nAdded explicit type parameters to examples and tests to make them better models of expected practice.\r\n\r\n* Removed extra copy of method.\r\n\r\n* This change to the Android demo app should allow it to compile successfully\r\n\r\n* Backed out unnecessary but presumably harmless removal of calls to clear().\r\n\r\n* Change from Unicode times symbol to x, to be more consistent with\r\nthe rest of the Javadoc.\r\n\r\n* Updated Constant and ConstantTest with generics.\r\n\r\n* Registered UInt8 like all the other data types.\r\n\r\n* Removed the UINT8 test because UINT8 doesn't seem to be fully supported in next\r\nlayer down. That probably should be fixed but it's orthongonal to this change.\r\n\r\n* * Added some missing pieces so that uint8 seems now to be supported fully by the Java API,\r\naddressing #12797.\r\n* Resurrected the uint8 test case.\r\n* Allowed arrays of bytes to be used to construct both tensors of strings and tensors of uint8.\r\n* Simplified the computation of the number of dimensions of a Java object representing a tensor.\r\n\r\n* Get rid of tab characters that violate the Google Java style guide. My IDE\r\nwas not configured correctly.\r\n\r\n* Fix javadoc nit.\r\n\r\n* Replace testUInt8 with the generic version.\r\n\r\n* Ran formatter on code.\r\n\r\n* Addressed some of Asim's comments.\r\n\r\n- implemented constant() methods in terms of each other to reduce code duplication\r\n- improved a spec regarding when types are checked\r\n- got rid of an unnecessary method that used wildcards\r\n\r\n* Back out change to comments in Operand.java\r\n\r\n* This is what things look like if we make Tensor run on DataType as much as\r\npossible. Only Tensor.expect() is still using class objects as a way to\r\nrepresent tensor datatypes. It can be moved off to class Tensors when Tensors\r\nexists, though it will not be as convenient as when it's a method of Tensor.\r\n\r\n* Fixed build errors. This is is being committed primarily so Asim can take a look at it conveniently.\r\nMore work will be needed before merging.\r\n\r\n* - Changed from TF-prefixed types to regular Java classes, e.g. Integer instead of\r\nTFInt32. Deleted most classes in org.tensorflow.types, including TFType.\r\n- Made Tensor mostly work in terms of Class<T> since that is the user-facing\r\n  interface.\r\n- Moved zeroValue() stuff off to the testfile where it belongs\r\n\r\n* Remove unnecessary run-time check.\r\n\r\n* Updated Android inference test to latest Java API changes.\r\n\r\n* Address Asim's comments (thanks!)\r\n\r\n- Removed now-gratuitous run-time type-check.\r\n- Fixed non-Google-styled if.\r\n- Reworded/fixed a few comments as requested.\r\n- Removed all uses of unsafe casts and @SuppressWarnings in test cases.\r\n- Cleaned up constant() implementations in LabelImage example.\r\n- Removed reference to Tensors class (next PR!)\r\n\r\n* Ran gformat on everything.\r\n\r\n* Fixed an old typo in a comment.\r\nRemoved a couple of unnecessary casts from the example program.\r\n\r\n* Fixed the last suppressed warnings."""
0b131503a04f1ebbe0967bebb2559dd1367baded,"'Add new op BytesInUse, similar to MaxBytesInUse (#13107)\n\n* Add new op BytesInUse, similar to MaxBytesInUse\r\n\r\n* incorporate PR suggestions\r\n\r\n* improve test + fix\r\n\r\n* make test more strict'"
fd927db76477f0efec32e7eb6ed0d469c75484f4,'Fixed some non deterministic tests.\n\nPiperOrigin-RevId: 170525148'
9c78cb1aa44c859f5c81759c58e432d015e3560d,'Fix NumPy equivalent comment.\n\nPiperOrigin-RevId: 170522553'
eb2508166ca6a3d5eedb680bf4d95c3d54cc50cd,'Fixes #6365\nAdded gradient to tf.mod\n\nPiperOrigin-RevId: 170522376'
bf6b82614997f7b97cf1b4043d5c255b53597b51,'`metropolis_hastings_test` documentation fix.\n\nPiperOrigin-RevId: 170496475'
082d8843024666df8f2aca3d512dfc54368bcf46,'Fixes a race condition in TensorForest tree traversal code resulting in use-after-free of input dense/sparse tensors.\nThe race occurs when multiple TreePredictionsV4Op kernels are invoked simultaneously resulting in data_set_.set_input_tensors() being invoked concurrently with tree traversal code accessing the current tensors.\n\nPiperOrigin-RevId: 170497611'
5dacf51a71b1187f53c1b02b83e01fd4e7b93442,'`metropolis_hastings_test` documentation fix.\n\nPiperOrigin-RevId: 170496475'
bf63da5259f0e69569701ea15eac3d3c67554a3b,'Modification Upon Request\n\nFix Buildifier warnings and add missing newlines at the end of files'
cf79d3ea649e83467c3a941a93f5f1331b7c69c9,'Changes Upon Request\n\nReformat of ```tensorflow/core/platform/default/build_config/BUILD``` to fix warnings.'
fe197f7dc5bd3b986141bcdaa27928206e74741a,"'Add triSYCL support for Tensorflow\n\nHere is a description of the changes brought to each file :\n\nconfigure :\n\n- Add the option to choose triSYCL when choosing to configure Tensorflow\n  with OpenCL, this will require the user to give the path to the\n  triSYCL include directory\n\ntensorflow/core/common_runtime/sycl/sycl_device.h :\n\n- Add the SYCL host device as a device that can be used for\n  computations, currently triSYCL only supports the host device\n  throught OpenMP parallelism\n\ntensorflow/core/kernels/ransom_op.cc :\n\n- Fix calls to item.get_global_range that should not take any arguments\n  as specified in the SYCL specification\n\ntensorflow/core/platfom/default/build_config/BUILD :\n\n- Modify the BUILD file to not include ComputeCPP dependencies when\n  using triSYCL\n\ntensorflow/stream_executor/platform/default/mutex.h :\n\n- Modify mutex to use std::condition_variable_any, std::shared_lock\n  and std::shared_mutex when using C++14\n\ntensorflow/workspace.bzl :\n\n- Update the version of Eigen used to a version compatible with triSYCL\n\nthird_party/sycl/crosstool/CROSSTOOL.tpl :\n\n- Made the config file able to take triSYCL variable to configure crosstool\n\nthird_party/sycl/crosstool/tristcl.tpl :\n\n- Create the triSYCL compiling script file\n\nthird_party/sycl/sycl/* :\n\n- Modify the configuration files to enable triSYCL\n\ntools/bazel.rc :\n\n- Add the --opt=sycl_trisycl option to enable triSYCL with Tensorflow'"
2db0279e5bb0c88b9ccb3b4714f8af80faa62695,'Merge pull request #12672 from raphael-sch/master\n\nFixing typo in default_name argument for name_scope'
751b201b45986cc3293e8cd8dbe9d331911246f2,'Merge pull request #13364 from lhlmgr/patch-2\n\nFixed typo in function documentation'
d3d60ff6acec178b1cf912938aa6180bbd1a676f,"'Merge changes from github.\nEND_PUBLIC\n\n---\nCommit 301b14c24 authored by Skye Wanderman-Milne<skyewm@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBasic while loop gradient functionality in C++\n\nThis change introduces the basic framework to create the gradient\ngraph of a while loop using the C++ API. This supports building the\ngradient graph as long as the body function of the while loop contains\nno ops whose gradient function requires a stack. In other words, it\ndoesn\'t support gradient functions that use the input values to the op\n(e.g. add will work, but multiply will not). It also doesn\'t support\nnested while loops, and doesn\'t detect all error cases.\n\nPiperOrigin-RevId: 170243281\n\n---\nCommit 545e3572f authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDatasets: Reference the programmer\'s guide in API docs.\n\nPiperOrigin-RevId: 170241348\n\n---\nCommit 24890d550 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 170241322\n\n---\nCommit 02d2f3760 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 170240603\n\n---\nCommit 759690f02 authored by Reed Wanderman-Milne<reedwm@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd float16 support to tf.nn.fused_batch_norm on the GPU.\n\nScale, offset, mean, and variance must still be float32 if the input is float16.\n\nPiperOrigin-RevId: 170239448\n\n---\nCommit 20370104c authored by Igor Saprykin<isaprykin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSupport export strategies in _TrainingExecutor.\n\nOne could set export strategies to the EvalSpec.  An exception is raised if the type isn\'t export_strategy.ExportStrategy.  During continuous evaluation, export strategies are going to be triggered. They in turn call Estimator\'s export_savedmodel.\n\nPiperOrigin-RevId: 170237073\n\n---\nCommit 56402103e authored by Reed Wanderman-Milne<reedwm@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix BFC allocator\'s log messages on OOM error.\n\nBefore, the ""Chunks in use"" message and other in-use messages would always be 0.\n\nPiperOrigin-RevId: 170233715\n\n---\nCommit bc80e46b1 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Implement BroadcastArgs.\n\nPiperOrigin-RevId: 170228025\n\n---\nCommit bced6676e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 170204652\n\nPiperOrigin-RevId: 170367641'"
7f8d3c6756da611de73585a80b7d153c38534076,'- fixed the docstrings in loss_functions.py to reflect the factorization F = B*B^T which is actually used (instead of F=B^T*B)\n\nPiperOrigin-RevId: 170358951'
09ace5b75b00c0bee0f53e7cbe75bfd4c50dc8de,'Fixed typo in function documentation'
86635c165ef3255150d907beabaecd46e6e57840,'[XLA] Move definition of xla::PrintTo out of line to fix duplicate definition error in Mac build.\nFixes GitHub issue #13357\n\nPiperOrigin-RevId: 170347379'
f2231b147539dcca41003b14508c72e722b044ef,'[XLA] Move definition of xla::PrintTo out of line to fix duplicate definition error in Mac build.\nFixes GitHub issue #13357\n\nPiperOrigin-RevId: 170347379'
8a154ead1e7089873746a8b282c5f4be22b65626,'[XLA] Move definition of xla::PrintTo out of line to fix duplicate definition error in Mac build.\nFixes GitHub issue #13357\n\nPiperOrigin-RevId: 170347379'
e321d1cd5227529d466fdf6c8f35259a48e8eed8,"""Fix finding the trace of sqrt(sigma_1 sigma_2) in Frechet Inception Distance. Update test to use Scipy's sqrtm function as used by the FID authors.\n\nPiperOrigin-RevId: 170319767"""
6dc4aac4744876873c74c30678502c773a6318ca,'Fixed outdated comment\n\nPiperOrigin-RevId: 170276755'
1f12c8d52de92812cad935ec32887e4bb5f3557a,'Fix loading large embeddings (300+gb) with init_from_checkpoint.\n\nPiperOrigin-RevId: 170271911'
e8a14aaca471be754742cf06182b42e807a77e8b,'fixed typos in docs\n\nPiperOrigin-RevId: 170255818'
2a5fb08bf2885cba29065d7269c5f6a32614b89a,'SymbolicGradients: create the underlying runtime with the correct step container.\n\nThis fixes a bug where calling tf.gradients of a tf.while_loop inside a Defun\nwould hard crash the program.\n\nAlso added some safety checks inside StackOps to avoid the hard crash if\nsomething like this happens again.\n\nPiperOrigin-RevId: 170246274'
50be30c78ec9e3844d8ddaf642312e67257c9278,'Fix indentation'
56402103ef05ea9e203afea39946ad781f894a66,"'Fix BFC allocator\'s log messages on OOM error.\n\nBefore, the ""Chunks in use"" message and other in-use messages would always be 0.\n\nPiperOrigin-RevId: 170233715'"
76c08ffc96e845e8e7063b0e2483ab1e8d4dce29,'Fix Java native library extraction with --config=monolithic\n\nPiperOrigin-RevId: 170220522'
3076ee0a760ec3aace7a77778951df9033103e40,"""Fix flaky saver_test. Don't trust sleep to sleep through the night.\n\nPiperOrigin-RevId: 170207579"""
184e35365cf3161d85aab9d66876051bb395b057,'Fix TFGAN losses docstring about weights.\n\nPiperOrigin-RevId: 170188660'
35c44ab67d6e5d9b24f3f154c92e7aa3edfee957,'tfdbg: fix a bug re. string representation of SparseTensor feeds\n\nFixes: #12059\nPiperOrigin-RevId: 170138936'
2e5bc305ff328cbd55bc1b4301457c5a00762a05,'Fix broken open source build.\n\nPiperOrigin-RevId: 170136839'
0b0d3c12ace80381f4a44365d30275a9a262609b,"'Fix issue of `name` used in `build_default_serving_input_fn` (#12759)\n\n* Fix issue of `name` used in build_default_serving_input_fn\r\n\r\nThis fix tries to address the issue raised in 12755 where the\r\nname used in `build_default_serving_input_fn` is not a valid\r\nvariable scope:\r\n```\r\n$ python -c ""import tensorflow as tf\r\nf = {\'feature\': tf.placeholder(name=\'feature\', shape=[32], dtype=tf.float32) }\r\nserving_input = tf.contrib.learn.utils.input_fn_utils.build_default_serving_input_fn(f)\r\nserving_input()""\r\n...\r\nValueError: \'feature:0\' is not a valid scope name\r\n```\r\n\r\nIn `build_default_serving_input_fn`, the name of the tensor\r\nis used directly which consists of the op name and the value index:\r\n```\r\n  @property\r\n  def name(self):\r\n    """"""The string name of this tensor.""""""\r\n    if not self._op.name:\r\n      raise ValueError(""Operation was not named: %s"" % self._op)\r\n    return ""%s:%d"" % (self._op.name, self._value_index)\r\n```\r\n\r\nThis fix fixes this issue by using the name of the tensor\'s op (not tensor):\r\n`t.op.name` instead, to avoid the "":0"" (value index) at the end.\r\n\r\nThis fix fixes 12755.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test case for \'name\' in build_default_serving_input_fn\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test case for build_raw_serving_input_receiver_fn\r\n\r\nAlso use t.op.name instead of split the name with \':\'\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
e5ba5155a6f5f4787ff1ca910518cf38ac88e9c0,'Merge pull request #12920 from nluehr/cuda9-internal-error-fix\n\nWorkaround for NVCC 9.0 internal error'
bd3208200a5e20514c872d65579076df63f25047,"'Merge pull request #13270 from codrut3/docs_fix\n\nFix docs for tf.tanh, tf.sigmoid and tf.tan.'"
82a2ce152ddd5330801b3769d141da823a78a981,"""Fix a bug where it'll report an incorrect allocated bytes when backpedalling, as after Alloc() it shrinks 'bytes' again. Also fix a comparison problem: we should try to allocate as long as bytes>=rounded_bytes, where it used '>' initially.\n\nPiperOrigin-RevId: 170103892"""
46cf6262476b1d058e43acacc2c15097cc7bbf5a,'Fix `tf.distributions.TransformedDistribution` caching.\n\nPiperOrigin-RevId: 170093434'
b74b788f4befa777e68af990dcbd1b1bbd64029a,'Merge pull request #13123 from guillaumekln/patch-2\n\nFix argument name mismatch in FinalBeamSearchDecoderOutput docstring'
202d7e812ebcb2a88fc44cba145dbde560b31ffe,"'[TF:XLA] Push closures to run onto a worklist during XLA compilation, rather than running them directly.\n\nFixes a stack overflow for large graphs on threads with small amounts of stack space.\n\nPiperOrigin-RevId: 170076911'"
0120939de92fa60c01569ea3ed33f785e6026450,'Fixes #12401: Use traceback instead of inspect for frame information (#13217)\n\n* Use traceback for faster stack lookup\r\n\r\n* Use traceback for faster stack lookup\r\n\r\n* fix rebase typo\r\n\r\n* revert arg_scope change'
e669d80866a055db3cd253b270ff798bf84abc44,'Merge pull request #13314 from EMCP/pi_doc_fix\n\ntypo fix'
7b81ebf6cbd8481c6ec4299fd8f8d83b0900c2f0,'typo fix'
044a1176067420731187a0ec904f16fe79cb39b0,'Fix incorrect tensor_util.constant_value results for Pack ops with axis != 0.\n\ntensor_util.constant_value treated all Pack ops as having axis == 0. Return None until we can add proper support for arbitrary axes.\n\nPiperOrigin-RevId: 170002249'
e2e3a943c0a28b7656325acb3fcd035743d55ea0,"""Merge changes from github.\nEND_PUBLIC\n\n---\nCommit 1e1b3d902 authored by Pete Warden<pete@petewarden.com>\nCommitted by gunan<gunan@google.com>:\nChanged output directory for Pi CI build to fix permissions problem with nightlies (#13257)\n\n* Fix for RTLD_GLOBAL breakage of Pi builds, and removed Eigen version change for Pi that's no longer needed\n\n* Fixed Pi Zero OpenBLAS build problems and tidied up directories used\n\n* More robust checks in Pi build script\n\n* Changed output directory for Pi CI build to fix permissions problem\n\n---\nCommit fe3a2e65c authored by Yan Facai (???)<facai.yan@gmail.com>\nCommitted by drpngx<drpngx@users.noreply.github.com>:\ncheck invalid string type for dest_nodes in extract_sub_graph (#13057)\n\n* BUG: check str type\n\n* TST: add unit test\n\n* CLN: remove list check\n\n* CLN: use warning\n\n* CLN: 2 indent\n\n* CLN: raise TypeError if not list\n\n* CLN: check string only\n\n---\nCommit 225ab7629 authored by Jean Wanka<jm.wanka@gmail.com>\nCommitted by Jean Wanka<jm.wanka@gmail.com>:\nFix polynomial decay with cycle for global step=0\n\nFor polynomial decay with cycle=True the learning rate at\nstep 0 becomes NaN, because in the process of calculating it we\ndevide by 0. This change should fix it, by setting the multiplier\nfor the decay steps to one for global_step=0.\n\n---\nCommit 286f57061 authored by Bjarke Hammersholt Roune<broune@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake Service::TransferToClient not attempt to manipulate the literal when the transfer failed, preventing a crash and allowing the caller to see the reason for the failed transfer.\n\nPiperOrigin-RevId: 169770126\n\n---\nCommit e0501bc4d authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Shanqing Cai<cais@google.com>:\nFix GRUBlockCell parameter naming inconsistency (#13153)\n\n* Fix GRUBlockCell parameter naming inconsistency\n\nThis fix tries to fix the issue in 13137 where\nparameter `cell_size` is used instead of `num_units`.\nThis is inconsistent with other RNN cells.\n\nThis fix adds support of `num_units` while at the same\ntime maintains backward compatiblility for `cell_size`.\n\nThis fix fixes 13137.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Add `@deprecated_args` for 'cell_size' in `GRUBlockCell`\n\nThis commit adds `@deprecated_args` for 'cell_size' in `GRUBlockCell`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Address review comment\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 02a2eba05 authored by Pete Warden<pete@petewarden.com>\nCommitted by gunan<gunan@google.com>:\nFix for RTLD_GLOBAL breakage of Pi builds, and removed Eigen version change that's no longer needed (#13251)\n\n* Fix for RTLD_GLOBAL breakage of Pi builds, and removed Eigen version change for Pi that's no longer needed\n\n* Fixed Pi Zero OpenBLAS build problems and tidied up directories used\n\n* More robust checks in Pi build script\n\n---\nCommit 8ef722253 authored by Sanjoy Das<sanjoy@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove a redundant setName.\n\nThe EmitComputation should have emitted a function with the right name, so use a\nCHECK instead.\n\nPiperOrigin-RevId: 169764856\n\n---\nCommit 1b94147dc authored by Neal Wu<wun@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix broken GitHub links in tensorflow and tensorflow_models resulting from The Great Models Move (a.k.a. the research subfolder)\n\nPiperOrigin-RevId: 169763373\n\n---\nCommit b1ada5f0c authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix TensorBoard python -m invoke in docs\n\nPiperOrigin-RevId: 169758752\n\n---\nCommit 2957cd894 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nLocal run option of estimator training.\n\nPiperOrigin-RevId: 169756384\n\n---\nCommit 1dc2fe7ac authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 166264198\n\nPiperOrigin-RevId: 169998124"""
1398d4bec48618bc497b7be7cfd655d5d80c4efd,'Add int64 support for `tf.reduce_max` on GPU\n\nThis fix tries to address the issue raised in 13293 where\n`tf.reduce_max` on GPU does not have int64 support.\n\nThis fix fixes 13293.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
ba3fc7b80b94fff3445cdc85759ae07134012620,"""Fix continuous_train_and_eval docstring formatting\n\nFirst item in ordered list doesn't render properly:\nhttps://www.tensorflow.org/api_docs/python/tf/contrib/learn/Experiment#continuous_train_and_eval.\n\nRELNOTES: n/a\nPiperOrigin-RevId: 169980456"""
9917dc00c3b2b382c692477989785b1cc10577ef,'Merge pull request #13273 from yongtang/fmt\n\nFix several issues with `go fmt` and `go lint`'
b058f8df76844dbf0a1700ac81a17146801712d6,'Fix type error for TFRecordDataset when input is an empty list.\n\nPiperOrigin-RevId: 169975928'
2c6cecd00ed2623dc53ad5fd5a9e4e77957f3407,'Fix build errors for iOS.\n\nPiperOrigin-RevId: 169936203'
6e1c9ce4090402986bd4c6623e5f9f7a3763517d,'Fix comment.\n\nPiperOrigin-RevId: 169907225'
1e1b3d90295f9396a25b9cfd4c571f7949716182,"""Changed output directory for Pi CI build to fix permissions problem with nightlies (#13257)\n\n* Fix for RTLD_GLOBAL breakage of Pi builds, and removed Eigen version change for Pi that's no longer needed\r\n\r\n* Fixed Pi Zero OpenBLAS build problems and tidied up directories used\r\n\r\n* More robust checks in Pi build script\r\n\r\n* Changed output directory for Pi CI build to fix permissions problem"""
d148404041ec911aadc6f55cdb28d77f59bef7bb,'Merge pull request #13271 from jemaw/master\n\nFix polynomial decay with cycle for global step=0'
0d1e4cf5b7dc60b1f0a45eb06a120df058ff4077,"'Fix several issues with `go fmt` and `go lint`\n\nThis fix fixes several issues related to `go fmt` and `go lint`\nbased on https://goreportcard.com/report/github.com/tensorflow/tensorflow\n\nThere are several changes:\n- `gofmt -s tensorflow/go/tensor.go`\n- `gofmt -s tensorflow/go/example_inception_inference_test.go`\n- `golint tensorflow/go/genop/internal/lib.go`\n\nAt the moment there are still quite a few golint and ineffassign warnings\nin the current go code base. However, all of them are from `tensorflow/go/op/wrappers.go`\nwhich is machine generated code.\n\nThis fix does not cover `tensorflow/go/op/wrappers.go`.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
225ab7629f2d8c3fa216180447dcdee96ce0b18f,"'Fix polynomial decay with cycle for global step=0\n\nFor polynomial decay with cycle=True the learning rate at\nstep 0 becomes NaN, because in the process of calculating it we\ndevide by 0. This change should fix it, by setting the multiplier\nfor the decay steps to one for global_step=0.'"
0858a91d6ea82bf7e9cabd2340f492eece80db44,"'Fix docs for tf.tanh, tf.sigmoid and tf.tan.\n\nThe API docs incorrectly state that tf.tanh accepts int32\nor int64 inputs. This was referenced in issue #10376, however,\nthe fix to #10376 only removed the reference to qint32. A look\nat the implementation in cwise_op_tanh.cc shows that int32 and\nint64 are indeed not supported. This fix removes them from\nthe API.\n\nSimilarly, we remove int32, int64 and qint32 from tf.sigmoid\nAPI.\n\nFinally, tf.tan is defined only for float and double, so I\nchanged in math_ops.cc to use UNARY_REAL.'"
e0501bc4d0293f4c2a42d56cf0caff1b9a8b4e4c,"""Fix GRUBlockCell parameter naming inconsistency (#13153)\n\n* Fix GRUBlockCell parameter naming inconsistency\r\n\r\nThis fix tries to fix the issue in 13137 where\r\nparameter `cell_size` is used instead of `num_units`.\r\nThis is inconsistent with other RNN cells.\r\n\r\nThis fix adds support of `num_units` while at the same\r\ntime maintains backward compatiblility for `cell_size`.\r\n\r\nThis fix fixes 13137.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add `@deprecated_args` for 'cell_size' in `GRUBlockCell`\r\n\r\nThis commit adds `@deprecated_args` for 'cell_size' in `GRUBlockCell`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address review comment\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
02a2eba057be6327e2f62e19ef3d7e5c92f30e40,"""Fix for RTLD_GLOBAL breakage of Pi builds, and removed Eigen version change that's no longer needed (#13251)\n\n* Fix for RTLD_GLOBAL breakage of Pi builds, and removed Eigen version change for Pi that's no longer needed\r\n\r\n* Fixed Pi Zero OpenBLAS build problems and tidied up directories used\r\n\r\n* More robust checks in Pi build script"""
b19cf25c5536f218bfe6c91a5a262061b8ea37ce,'Merge pull request #13248 from yongtang/13245-object_detection-doc\n\nFix broken link for object detection model'
93f8323c8b1526bd63c373f605558baf4a743cf4,'Merge pull request #13240 from meteorcloudy/fix_windows_build\n\nFix Windows build after 5c7f9e316d8c7735308a217310350d416d7498cc'
1b94147dc9793e63389d2099672351954fa2c326,'Fix broken GitHub links in tensorflow and tensorflow_models resulting from The Great Models Move (a.k.a. the research subfolder)\n\nPiperOrigin-RevId: 169763373'
ce807c7c92afb8a5f41dcf5f2de92c9f556813e8,"'Convert InputTensorShapeOrUnknown to MakeShapeFromShapeTensor in tf.nn_ops\n\nThis fix convert InputTensorShapeOrUnknown to MakeShapeFromShapeTensor in\ntf.nn_ops, based on review comments\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
b1ada5f0c7047ac0f20ee8666d07c5853f8fd974,'Fix TensorBoard python -m invoke in docs\n\nPiperOrigin-RevId: 169758752'
cca4ee0110ce3a214bd442f8daeb0ef56893e0ed,"'Add cmake generated files/dirs in Linux to .gitignore\n\nThis fix adds cmake generated files in Linux to .gitignore\n\nBefore this fix, after:\n```\n$ tensorflow/tools/ci_build/ci_build.sh CMAKE tensorflow/tools/ci_build/builds/cmake.sh\n```\nThe following files/dirs are left out:\n```\nubuntu@ubuntu:~/tensorflow$ git status\nOn branch master\nYour branch is up-to-date with \'origin/master\'.\nUntracked files:\n  (use ""git add <file>..."" to include in what will be committed)\n\n        build/\n        tensorflow/core/util/version_info.cc\n\nnothing added to commit but untracked files present (use ""git add"" to track)\nubuntu@ubuntu:~/tensorflow$\n```\n\nThis fix addresses the above issue.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
0d864630161d9f3b9eaef0b7c6ce7443654df97a,"'Move GPU-specific dependencies of core/grappler:devices into\ncuda_deps.\n\nFix #includes and deps of contrib/verbs:verbs_util, in particular\nremoving an unnecessary #include of gpu_util.h that relied on a\ntransitive dependency through :devices.\n\nPiperOrigin-RevId: 169732234'"
7766611a1939842316997214bc911a80fcee4697,"""Fix flakiness issues in c++ nn gradient tests.\n\nChanges:\n- Tolerance was too strict for L2LossGrad. Reducing tolerance to 1e-3 resolved the issue.\n- Numeric gradient computation perturbation changed the value of the max value in MaxPool and MaxPoolV2 if two values were too close together (thanks Chad!). Resolved this by ensuring that the tests only compute one window on the entire input. Then I ensure that the max value of the random value is max by 1e-2, so that a perturbation can't replace it.\n- Also some minor formatting fixes in nn_grad.cc\nPiperOrigin-RevId: 169732110"""
784ffc77e82fe1b97dddd1a855980a50a7c25c3f,'Fix broken link in object detection\n\nIn tensorflow/models repo the models have been moved under\ndirectory `research`.\n\nThis fix fixes a couple of broken links associated with `object_direction`:\n`object_detection/` -> `research/object_detection/`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
b650bf5a32432770a4c2b580464b0b736993a210,"'Handling empty path names by fixing how TranslateName() works. Currently that calls out to io::CleanPath which converts """" to ""."" which isn\'t correct.\n\nPiperOrigin-RevId: 169729593'"
7a3345d4d5251f160ca1ea094ddcc7e0c3aca428,"""Bugfix: don't force dummy global step to be int64.\n\nPiperOrigin-RevId: 169725538"""
d9bd87b17c87959938273ef5167e161882be2be4,"""Fix tensorflow::Scope documentation: angle brackets in comments don't play well with HTML docs.\n\nSee: https://www.tensorflow.org/api_docs/cc/class/tensorflow/scope#classtensorflow_1_1_scope_1a726021aa3104fec02353e8713f1e5b63\nPiperOrigin-RevId: 169718650"""
ed817358453a8dfd8e5c089f94bbf65c84741b9f,'Fix Windows build after 5c7f9e316d8c7735308a217310350d416d7498cc'
7b2f14a73d336dc0a98bbb69ecef9338568c839c,'Fix sometimes overwriting the default bazel config arguments in Jenkins build script.\n\nPiperOrigin-RevId: 169708266'
2a7a3a3e4ec7904ee4303b380141eaef87ff617e,'Add libtensorflow_framework.so to a bunch of genrules\n\nFixes hermetic builds\n\nPiperOrigin-RevId: 169706567'
0fccb5d8384d2fd6e0c8d57fc1ebfd094a5c19af,'Replace assert_called() with called to fix python3 test failures\n\nPiperOrigin-RevId: 169702185'
b72f1e106e42343dab63bbe55a24023be59d2c19,'Merge pull request #13236 from jbn/patch-1\n\nFix documentation for `tf.case`'
fc71df089646cced8d48c30e1210c38f4d78445b,'Fix documentation for `tf.case`'
7abd587dab3ac633f24745a070f353e9025ad456,'Fixes for Raspberry Pi cross-compilation issues (#13223)\n\n* Fixes for Raspberry Pi cross-compilation issues\r\n\r\n* Fixed permissions for OpenSSL move\r\n\r\n* Fixed permissions for folder deletion\r\n\r\n* Fixed permissions for folder deletion'
ea85614323295b4c8a10b2a138fb7d8ec52cbdce,'More fixes to makefile build script and use android docker image.'
3a38f48a32f1190520b3647d99752c1d805ffb42,'Fix memory leak if a node evaluation fails due to a divide by zero exception.\n\nPiperOrigin-RevId: 169644909'
da2606f4963744f6940f8060ea5ca1f7f18181cc,'Fix typos in the API documentation for tensorflow::PendingCounts.\n\nPiperOrigin-RevId: 169644786'
04933363e818bd03aee4c5478be038c8dc18eb72,"'eager: Fix bug in tfe.gradients_function().\n\nThe generated function was not always treating function parameters as distinct\ntensors. Added test would fail (the calls to np_g() would return [2., 2.]\ninstead of [1., 1.]) without the corresponding change to backprop.py\n\nPiperOrigin-RevId: 169642367'"
5ee38042d2bd7368ab671846a3ed507e6ae8d23e,"'Add kernels for FusedBatchNormGrad when is_training=False (#12580)\n\n* Add kernels for FusedBatchNormGrad when is_training=False. (fix #10857)\r\n\r\n* remove unnecessary headers\r\n\r\n* Rename some variables\r\n\r\n* Update comments about reserve_space of FusedBatchNormGrad\r\n\r\n* Comments and variable rename to avoid confusing of batch var/pop var/inv var, etc\r\n\r\n* fix build for CPU\r\n\r\n* (Hopefully) fix build for android.'"
36647440d2e62cb494e4e6f6d5d9144ceb0b29c7,"'Add methods to convert between Literals and ShapedBuffers to LocalClient. These ""conversion"" methods copy the data to/from the device into/from literals.\n\nAlso fix various issues I noticed along the way:\n * Move LocalClient tests into open source.\n * Add proper == operator to Literals\n * Add << overload for streaming Literals to output.\n * Add Literal::GetSubliteral methods.\n * Remove unused AllocatBufferOnDevice methods from LocalClient and LocalService.\n\nPiperOrigin-RevId: 169606342'"
054b88233bf6d6bc5b953fca50dbb01d108b2d18,'Add fixed space sparse class stats handling.\n\nPiperOrigin-RevId: 169570470'
9183a2eae12576cdfb8f4a383b1b063a2f1afe3a,"'eager: Bugfix for tfe.gradients_function() involving the ""Pow"" operator.\n\n""Pow"" was incorrectly marked as an operation whose gradient doesn\'t use its\noutput. As a result the following:\n\ndef f(x): return tf.pow(x, 3)\ng = tfe.gradients_function(f)(10)\n\nwould raise an execption like:\n\ntensorflow/python/ops/math_grad.py in _PowGrad(op, grad)\n    792   x = op.inputs[0]\n    793   y = op.inputs[1]\n--> 794   z = op.outputs[0]\n    795   sx = array_ops.shape(x)\n    796   sy = array_ops.shape(y)\n\nTypeError: \'NoneType\' object has no attribute \'__getitem__\'\nPiperOrigin-RevId: 169547088'"
e9d5ee1ebffba25cef65f1f354b9e4ca9bcea10c,'Merge pull request #13198 from av8ramit/fix_nightly_links\n\nUpdating the README with the correct nightly links to tf_nightly.'
8f27889356cb6d0e9b1f2d73c8d0adb2dbbb7f33,'Fixes in MKL add_n  to address several regressions (#13021)\n\n* Fixes in add_n to address several regressions\r\n\r\n* minor modifications\r\n\r\n* fixes for bad indent'
f6a061bb0818ebc27b36d9e02c0794fd874cf8d4,"'Support S3 Filesystem for Tensorflow (#11089)\n\n* Add AWS C++ SDK to bazel BUILD file\r\n\r\nThis commit adds AWS C++ SDK to bazel BUILD file,\r\nas part of the effort to support AWS S3 for TensorFlow.\r\n\r\nAdd LICENSE file for AWS C++ SDK\r\n\r\nAdds srcs to bazel BUILD based on platform for AWS C++ SDK\r\n\r\nThis commit adds srcs to bazel BUILD based on platform\r\nfor AWS C++ SDK so that only related platform files (like in Linux)\r\nare built.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add stub s3 file system for TensorFlow\r\n\r\nThis commit adds stub s3 file system for TensorFlow.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add basic S3 file system for TensorFlow\r\n\r\nThis fix adds basic S3 file system for TensorFlow.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add WritableFileSystem for TensorFlow S3 file system\r\n\r\nThis fix adds WritableFileSystem for TensorFlow S3 file system.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add ReadOnlyMemoryRegion and AppendableFileSystem for S3.\r\n\r\nThis fix adds implementation of ReadOnlyMemoryRegion and AppendableFile\r\nsystems for S3.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add implementation of S3 File System.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Get S3 configurations from environment variables to support 3rd-party S3 implementations\r\n\r\n* Use old ListObject (V1) instead of ListObjectV2 to support some 3rd-party S3 implementations\r\n\r\n* A workaround for the Invalid Range Error when reading ImageNet data set\r\n\r\n* Sanitize s3_file_system.cc with clang-format.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Split the header and source of s3_file_system.cc\r\n\r\n* Fix a return status issue in RandomAccessFile::Read\r\n\r\n* Add the unit test of S3 file system\r\n\r\n* Change @protobuf to @protobuf_archive\r\n\r\nAnd reformat with clang-format and additional cleanup\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address review comments\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix bazel build error on darwin.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update sha256sum for aws cpp sdk download.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
b8614b5059ba00328a54db53d973d0e1262859bd,'Merge pull request #13185 from anight/golang_fix_random_crashes\n\nFix random crashes in SessionRun()'
6346745f18ded325cdd476d1e521b301b2f38db5,"'Allow partial shape inference for `tf.nn.conv2d_transpose`\n\nThis fix tries to address the issue raised in 8972 where\nit was not possible to infer a partial shape for\n`tf.nn.conv2d_transpose`. In case any dimensions are not\ndefined, the shape will be totally undefined.\n\nThis fix utilizes `tensor_util.constant_value_as_shape`\nso that partial shape is possible.\n\nThis fix fixes 8972.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
66ed02fed37613148a83b15f0d115d2baf66f393,"'Add cudnn7 support (#12503)\n\nFix cudnnSetRNNDescriptor API change\r\nAdd support for CUDNN_TENSOR_OP_MATH in cudnn v7\r\n- Applies to forward and backward convolutions that have fp16\r\n  input/output. Computations will fall back to pseudo-fp16\r\n  if tensor op math is disabled or not supported.\r\n- Enabled by default, but can be disabled using the environment\r\n  variable TF_DISABLE_TENSOR_OP_MATH=1.\r\n- The choice of whether to use tensor op math is included in the\r\n  autotuning of convolutions.'"
639661f1a7ddb8c82898d0b4247bd1892f03c7ae,"""tfdbg: fix a few bugs in grpc_debug_server.py\n\n1. Remove an extraneous EventReply yielding from core metadata case. This bug prevented request_watch() and request_unwatch() calls from taking effect from on_core_metadata() of a stream handler. Covering this fix with a new option in start_server_on_separate_thread in grpc_debug_test_server.py and a new test: SessionDebugGrpcGatingTest.testToggleWatchesOnCoreMetadata in session_debug_grpc_test.py.\n\n2. Fix a typo related to op state: READ_WRITE --> READ_ONLY.\n\n3. Fix a race condition in DebugGrpcChannel::ReadEventReply by moving the mutex_lock to the right place. This prevented multiple breakpoints from working, but did not affect multiple watchpoints (which is what's used by NanChucks). Covering the fix by watching two nodes (instead of one) at a time in SessionDebugGrpcGatingTest.testToggleBreakpointsWorks in session_debug_grpc_test.py\n\nAlso:\n* Refactor the code for getting or creating a DebugGrpcChannel from a grpc:// URL into a helper method: GetOrCreateDebugGrpcChannel().\nPiperOrigin-RevId: 169413046"""
d1286ab1a7810047fb23251e6f0642f942d5fc64,'Merge pull request #13192 from m-colombo/doc-typo\n\nfixed doc typo'
8eb5aa62c81cbd2e2140e571ecfcd5de497b51b6,'fixed doc typo'
846454faae5a66fa430b03c82f571440919070f3,"'Fix: Go GC could destroy input tensors while SessionRun() was still running, see https://github.com/tensorflow/tensorflow/issues/13129'"
7daaa4405253e19e9621d885ea6ddb8f9b91b76f,"""Fix bug ID.\n\nNot sure how I ended up with the bug ID that's in the code today, but it is pretty obviously wrong.\n\nPiperOrigin-RevId: 169351631"""
76293c2d5f9a3759c553cbb07d20729a242326a7,"""Fixes for bare-column and column generators as inputs\n\n1) Passing a single feature column (not wrapped in a list) should succeed, or fail clearly (In this change I wrap it in a list so it succeeds)\n\nCurrently, since concrete `_FeatureColumn` classes are iterable (inherit from named_tuple), the code attempts to interpret the _FeatureColumn object as a list of feature columns.\n\nThis can give confusing errors:\n\n    fc.input_layer({'a':[1]},fc.numeric_column('a'))\n\n    ValueError: Items of feature_columns must be a _FeatureColumn. Given (type <class 'str'>): a.\n\n    fc.input_layer(\n        {'a':[1]},\n        fc.indicator_column(\n            fc.categorical_column_with_identity('a', 100)))\n\n    ValueError: Items of feature_columns must be a _DenseColumn. You can wrap a categorical column with an embedding_column or indicator_column. Given: _IdentityCategoricalColumn(key='a', num_buckets=100, default_value=None)\n\n2) Passing an `iterator` should fail, or convert it to a list (so it can be iterated multiple times).\n\nIn this change I convert it to a list\n\nCurrently it throws an unclear error:\n\n    features = {'a':[1],'b':[2]}\n    columns = (fc.numeric_column(key) for key in features)\n    fc.input_layer(features,columns)\n\n    ValueError: List argument 'values' to 'ConcatV2' Op with length 0 shorter than minimum length 2.\n\nPiperOrigin-RevId: 169314383"""
0e222435d28eaf0efb8a30493d98cace3d4f02bf,'Fix cmake build issue on Linux (#13145)\n\n* Add grpc_cpp_plugin to the cmake build process\r\n\r\nThis fix adds grpc_cpp_plugin to the cmake build process\r\nso that the following error could be fixed:\r\n\r\n```\r\nerror: fatal error: tensorflow/core/debug/debug_service.grpc.pb.h: No such file or directory\r\n```\r\n\r\nThis fix fixes 12018.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix cmake build error on Linux for sqlite.\r\n\r\nThis fix fixes cmake build error on Linux for sqlite\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Replace WIN32 with LIBJPEG_TURBO_VERSION for jpeg_mem.cc\r\n\r\nThis fix replace WIN32 with LIBJPEG_TURBO_VERSION for jpeg_mem.cc\r\nso that cmake could build on Linux.\r\n\r\nAt the moment bazel uses libjpeg_turbo while CMAKE uses jpeg library\r\nso it is necessary to pass different macros and build\r\nseparately on bazel/cmake.\r\n\r\nAlso add `#include <algorithm>` to fix build error.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
f78a2ee858dbc636cf902c59dccbf8debb684c57,'Bugfix: Correct batch-shape broadcast bugs in tf.contrib.distributions.VectorDiffeomixture.\n\nPiperOrigin-RevId: 169287171'
6e6f767d0db9404285dcb15cf155a3c954955af5,'Fixed a flaky test.\n\nPiperOrigin-RevId: 169266697'
a24994925c01d5bd98c64c4532e72159807799b7,'Fix build errors caused by #12502\n\nPiperOrigin-RevId: 169264011'
20f7eb36d9d5881ba78eb948f7cf482231d0873b,'Fix build errors caused by #12502\n\nPiperOrigin-RevId: 169264011'
5b9435628071121fd2d2aa12919eaefc59b53d80,'Fix typo in convert_image_to_dtype\n\nPiperOrigin-RevId: 169252296'
095f6aa7d133606351399ec32842a0ca515d515b,'Fix ops namespace to boosted_trees.\n\nPiperOrigin-RevId: 169251963'
d10902f0a947da40f80479d74e9a487617759085,"'[XLA] Fix HLO-graph-dump handling of nodes near computation edges, and indicate root node.\n\nPreviously, attempting to dump the neighborhood of a node that was too close to a computation edge would result in a crash when we tried to create an edge that went outside the bounds of the computation to a node that wasn\'t included in the graph.  This CL fixes that bug.\n\nIn addition, we previously did not indicate the root node of the outermost computation, so that it wasn\'t obvious whether a ""bottom"" node on the graph was actually the root node or simply didn\'t have its outputs drawn (or didn\'t have any outputs).  This CL adds a ""psuedonode"" tag onto the root node that makes it clear that it\'s the root.\n\nThis also adds a little verbosity to the graph title.  When the graphed computation is a fused computation, we also mention which fusion instruction it\'s associated with.\n\nFinally, this adds some verbose-mode logging that\'s useful to trace the operation of the graph-generation.  (I added this when debugging the crash mentioned above.)\n\nPiperOrigin-RevId: 169182331'"
8864b8813a836f2a3351eb593cfc0a8824586bcc,'Merge pull request #13131 from anight/golang_fix_missed_error_check\n\nAdded missing error check'
e5ed09b87f071da8c8173b5b5de9f743ae1dd8d5,"'Fix docs parser to handle keras docs\n\nMost keras files use 4-space indentation for the ""Args/Raises/Returns"" block. These were rendering as code cells on the website. Switched the doc parser to allow 2-to-4-spaces.\n\nPiperOrigin-RevId: 169168614'"
704a1bd3a8aa0186d27245f909be408beb872ccf,'Update layers.py (#13138)\n\nfixed a typo in the documentation'
7de939bb74c5edbc2f45e77a5d4696e70bb59e5b,"""[TF:XLA] Create Interpreter backend from the Executor backend.\n\n- Move plugin/executor to xla/service/interpreter/\n- Remove executor's TransferManager, and use GenericTransferManager instead.\n- Renamings and minor fixes.\n\nPiperOrigin-RevId: 169160056"""
12933c19382f3b092a2aaa54046993a125fe4824,"""Annotate more loops in LLVM IR with their HLO names.\n\nAlso fix the name of bitcasts: Previously they had the form %%bitcast.42\n-- now they're simply %bitcast.42.  And fix a typo in a VLOG while we're\nhere.\n\nPiperOrigin-RevId: 169146622"""
9dc8947a852e07f150c859493ed81281c6e8b6e4,'Rolling forward a reduction in the number of strided slice constants\n\nFixes a test which flakes due to graph-level seeding.\n\nPiperOrigin-RevId: 169136779'
8f3cd727bbd15a7fe03dd61e8e583c93bf3f0aca,'Fix anchor tag in adding_an_op.md (#12625)\n\n* Fix anchor tag in adding_an_op.md\r\n\r\nDefault anchor tag id is generated by the target text of the title.\r\n\r\n* Update adding_an_op.md\r\n\r\nRemoved manual markdown ID tags: {#...}\r\nTested + fixed links.'
894fa3af5ba491883dfe24273083927cfe6a7e3c,'Fix undefined reference to libtensorflow-core.a (#12778)\n\nAdjust gcc parameter order to fix linker error. Tested on gcc version 5.4.0 20160609 (Ubuntu/Linaro 5.4.0-6ubuntu1~16.04.4).'
c8535f36d127a2b2c80241d49546326db5d9a1fd,"""Introduce MPI allreduce and allgather in a new contrib project (#12299)\n\n* Allreduce: Rebase to TF 1.3-rc1 (#3)\r\n\r\n* Introduce MPI allreduce in a new contrib project.\r\n\r\nThis commit adds the tensorflow.contrib.mpi namespace and contrib\r\nproject, which has a variety of ops that work with MPI.\r\n\r\nThe MPI system works by starting a background thread which communicates\r\nbetween the different processes at a regular interval and schedules\r\nasynchronous reductions. At every tick, every rank will notify rank zero\r\nof the tensors it is ready to reduce, signifying completion with an\r\nempty DONE message. Rank zero will count how many ranks are ready to\r\nreduce every tensor, and, whenever a tensor is ready to reduce (that is,\r\nevery rank is ready to reduce it), rank zero will issue a message to all\r\nother ranks directing them to reduce that tensor.  This repeats for all\r\nthe tensors that are ready to reduce, after which rank zero sends all\r\nother ranks a DONE message indicating that the tick is complete.\r\n\r\nReviewed-by: Joel Hestness <jthestness@gmail.com>\r\n\r\n* Allreduce/Allgather: Major changes and fixes (#2)\r\n\r\nThis commit constitutes many major updates to the TF MPI allreduce and\r\nallgather ops. Specifically, the following changes are included in this\r\ncommit:\r\n1) The allreduce and allgather ops had race conditions, which this commit\r\nfixes. Specifically, the BackgroundThreadLoop previously allocated temporary\r\nand output tensors after the main graph traversal thread has completed its\r\ncall to MPIAll*::ComputeAsync(). Unfortunately, the ops kernel context's\r\nmemory allocator is only guaranteed to be valid during the ComputeAsync call.\r\nThis constraint requires ComputeAsync to allocate all tensors before\r\nreturning; Otherwise, the memory allocator state may reflect allocations and\r\ndeallocations from further ops that can cause races for the memory locations.\r\nTo fix this, hoist the memory allocations to ComputeAsync. In this process,\r\nintroduce a collective op record, which tracks the parameters of the op (e.g.\r\ninput, output, and configurations).\r\n\r\n2) Many models require capability to allreduce or allgather int64 tensors. We\r\nadd functionality to handle long long data type (64-bit ints).\r\n\r\n3) Eliminate the thread sleep. A major to-do item is to eliminate the need for\r\npolling between coordinator threads and other ranks. This change will require\r\nthe coordinator rank to be able to wake up all other ranks when a collective\r\nis ready to be performed, but also for all ranks (i.e. background threads) to\r\nbe woken up by graph traversal threads. In the meantime, remove the thread\r\nsleep, because it introduces significant run time overhead (e.g. >20%) for\r\nmodels with quick-running layers (e.g. few recurrent time-steps or few hidden\r\nnodes per layer).\r\n\r\n* mpi_ops.cc: Move toward more TF nature\r\n\r\nThis commit changes a few bits and pieces to align more closely with\r\nTensorflow structures and organization:\r\n\r\n1) Use TF mutexes. TF mutexes provide nice scoping and management around\r\nstd::mutex, and using them is consistent with other TF code.\r\n\r\n2) Remove thread sleep at MPI initialization time. Thread sleep should not\r\nbe used for polling activity. Instead, this commit replaces sleep-polling\r\nwith a condition variable: The compute graph traversal thread waits on the\r\ncondition variable until the background thread has completed initialization\r\nand signals the graph traversal thread that initialization is complete.\r\n\r\n3) Slim MPI initialization check: Since TF permits many threads to be\r\ntraversing the compute graph concurrently (e.g. with\r\ninter_op_parallelism_threads > 1), some graph traversal threads may not\r\nhave set their GPU device ID. If such a thread executes an MPI op, it would\r\nfail the check in InitializedMPIOnSameDevice, because the background thread\r\nwould be controlling a GPU with ID other than the default (0). Since graph\r\ntraversal threads do not perform GPU activity, this GPU ID check was\r\nunnecessary. Remove it and refactor to just check whether MPI is\r\ninitialized (IsMPIInitialized).\r\n\r\n* Rebase to TF 1.3.0-rc1 complete and tested\r\n\r\n* Allreduce: Rebase to TF 1.3-rc1 (#3)\r\n\r\n* Introduce MPI allreduce in a new contrib project.\r\n\r\nThis commit adds the tensorflow.contrib.mpi namespace and contrib\r\nproject, which has a variety of ops that work with MPI.\r\n\r\nThe MPI system works by starting a background thread which communicates\r\nbetween the different processes at a regular interval and schedules\r\nasynchronous reductions. At every tick, every rank will notify rank zero\r\nof the tensors it is ready to reduce, signifying completion with an\r\nempty DONE message. Rank zero will count how many ranks are ready to\r\nreduce every tensor, and, whenever a tensor is ready to reduce (that is,\r\nevery rank is ready to reduce it), rank zero will issue a message to all\r\nother ranks directing them to reduce that tensor.  This repeats for all\r\nthe tensors that are ready to reduce, after which rank zero sends all\r\nother ranks a DONE message indicating that the tick is complete.\r\n\r\nReviewed-by: Joel Hestness <jthestness@gmail.com>\r\n\r\n* Allreduce/Allgather: Major changes and fixes (#2)\r\n\r\nThis commit constitutes many major updates to the TF MPI allreduce and\r\nallgather ops. Specifically, the following changes are included in this\r\ncommit:\r\n1) The allreduce and allgather ops had race conditions, which this commit\r\nfixes. Specifically, the BackgroundThreadLoop previously allocated temporary\r\nand output tensors after the main graph traversal thread has completed its\r\ncall to MPIAll*::ComputeAsync(). Unfortunately, the ops kernel context's\r\nmemory allocator is only guaranteed to be valid during the ComputeAsync call.\r\nThis constraint requires ComputeAsync to allocate all tensors before\r\nreturning; Otherwise, the memory allocator state may reflect allocations and\r\ndeallocations from further ops that can cause races for the memory locations.\r\nTo fix this, hoist the memory allocations to ComputeAsync. In this process,\r\nintroduce a collective op record, which tracks the parameters of the op (e.g.\r\ninput, output, and configurations).\r\n\r\n2) Many models require capability to allreduce or allgather int64 tensors. We\r\nadd functionality to handle long long data type (64-bit ints).\r\n\r\n3) Eliminate the thread sleep. A major to-do item is to eliminate the need for\r\npolling between coordinator threads and other ranks. This change will require\r\nthe coordinator rank to be able to wake up all other ranks when a collective\r\nis ready to be performed, but also for all ranks (i.e. background threads) to\r\nbe woken up by graph traversal threads. In the meantime, remove the thread\r\nsleep, because it introduces significant run time overhead (e.g. >20%) for\r\nmodels with quick-running layers (e.g. few recurrent time-steps or few hidden\r\nnodes per layer).\r\n\r\n* mpi_ops.cc: Move toward more TF nature\r\n\r\nThis commit changes a few bits and pieces to align more closely with\r\nTensorflow structures and organization:\r\n\r\n1) Use TF mutexes. TF mutexes provide nice scoping and management around\r\nstd::mutex, and using them is consistent with other TF code.\r\n\r\n2) Remove thread sleep at MPI initialization time. Thread sleep should not\r\nbe used for polling activity. Instead, this commit replaces sleep-polling\r\nwith a condition variable: The compute graph traversal thread waits on the\r\ncondition variable until the background thread has completed initialization\r\nand signals the graph traversal thread that initialization is complete.\r\n\r\n3) Slim MPI initialization check: Since TF permits many threads to be\r\ntraversing the compute graph concurrently (e.g. with\r\ninter_op_parallelism_threads > 1), some graph traversal threads may not\r\nhave set their GPU device ID. If such a thread executes an MPI op, it would\r\nfail the check in InitializedMPIOnSameDevice, because the background thread\r\nwould be controlling a GPU with ID other than the default (0). Since graph\r\ntraversal threads do not perform GPU activity, this GPU ID check was\r\nunnecessary. Remove it and refactor to just check whether MPI is\r\ninitialized (IsMPIInitialized).\r\n\r\n* Rebase to TF 1.3.0-rc1 complete and tested\r\n\r\n* Minor fixes\r\n\r\n* Point MPI message proto at contrib/mpi package\r\n\r\n* MPI Session: Fix graph handling\r\n\r\n* Pylint fixes\r\n\r\n* More pylint fixes\r\n\r\n* Python 2 pylint fix\r\n\r\n* MPI Collectives Ops: Fix coordinator shut down\r\n\r\n* Update copyrights to 2017\r\n\r\n* Remove MPIDataType and switch to TF DataType\r\n\r\n* Add Allgather test, fix Allreduce test config\r\n\r\n* Fix BUILD file for TF sanity checks\r\n\r\n* Try guarding MPI collectives C++ files with TENSORFLOW_USE_MPI\r\n\r\nThe TF build system on Github tries to build C++ source files in\r\ntensorflow/contrib/mpi_collectives even when configured with TF_NEED_MPI=0.\r\nThis leads to a build failure when the mpi_collectives C++ files try to link\r\nagainst MPI third party headers, which are not set up. Unable to reproduce\r\nin contributor's build environment, we try guarding the MPI collectives C++\r\ncode with defines for TENSORFLOW_USE_MPI, similar to tensorflow/contrib/mpi.\r\n\r\n* Comment formatting\r\n\r\nHopefully, this will trigger googlebot."""
8187059712125ec6db08b115a1fed7d115576856,'Merge pull request #13110 from taehoonlee/fix_typos\n\nFix typos'
6e7539b8bc7ea1c921ab1865d202e543b80ef539,'Merge pull request #13108 from caisq/training-test-mac\n\nFix test breakage on Mac Python3 due to assert_called()'
3303168ed6d2e93e46d7ca7fc908aa5084d3f299,'Fix issue in tf.image.extract_glimpse (#12829)\n\n* Fix issue in tf.image.extract_glimpse\r\n\r\nThis fix tries to fix the issue raised in 2134 where\r\n`tf.image.extract_glimpse` does not work as expected\r\nwhen `centered=False` and `normalized=False`\r\n\r\nThis fix fixes 2134.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for tf.image.extract_glimpse\r\n\r\nAdd test cases for tf.image.extract_glimpse with\r\ncentered=False and normalized=False\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
a86c0fd5d8e8c901d483e0c6339211f4f4fe143c,'Fix argument name mismatch in docstring.'
fe06f11f569ed17367a826d56c8acad8b11f32d1,'Fix capitalization of some TFE/Python C APIs.\n\nPiperOrigin-RevId: 169043830'
91e6c9bb7dc15bc170dbc7d9a5bdac0b791fe10c,'Fix typos'
dd9ad9c77d97e4e44047f02e8f3860ce5b4e6255,'Fix test breakage on Mac Python3 due to assert_called()\n\nReplace assert_called() with self.assertTrue and called().'
d42ca5a1462e75e80536aa9c46c6834bd9455f2b,'Fixes #11829: Only get the current and previous frame instead of the whole stack (#11830)'
9ba48146942219a2d97e9a2110f88f20d62c4cb6,'Respect `optimize` parameter in `zeros_like` (#12459)\n\nThis fix address the issue in 12436 where\r\n`optimize` flag was not respected when shape is fully defined\r\nfor `zeros_like`.\r\n\r\nThis fix fixes 12436.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
f2a6408b1bebf18f9264c8e6cb74f83fd2ea00bb,"'Fix incorrect error message in `conv2d_transpose` (#13089)\n\nThis fix fixes the incorrect error message in `conv2d_transpose`\r\nwhere `value.get_shape()[3]` should be changed to `value.get_shape()[axis]`\r\nfor `input_depth` in `NCHW` format.\r\n\r\nThe incorrectness could be seen from the following where `4 != 4`\r\nis quite confusing:\r\n\r\n```python\r\nubuntu@ubuntu:~$ cat v.py\r\nimport tensorflow as tf\r\n\r\nstrides = [1, 1, 1, 1]\r\ninput_shape = [2, 3, 6, 4]\r\noutput_shape = [2, 2, 6, 4]\r\nfilter_shape = [3, 3, 2, 4]\r\n\r\ninput = tf.constant(1.0, shape=input_shape, name=""input"", dtype=tf.float32)\r\nfilter = tf.constant(1.0, shape=filter_shape, name=""filter"", dtype=tf.float32)\r\n\r\noutput = tf.nn.conv2d_transpose(input, filter, output_shape, strides=strides, padding=""SAME"", data_format=""NCHW"")\r\nubuntu@ubuntu:~$ python v.py\r\nTraceback (most recent call last):\r\n  File ""v.py"", line 16, in <module>\r\n    output = tf.nn.conv2d_transpose(input, filter, output_shape, strides=strides, padding=""SAME"", data_format=""NCHW"")\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/ops/nn_ops.py"", line 1026, in conv2d_transpose\r\n    )[3]))\r\nValueError: input channels does not match filter\'s input channels, 4 != 4\r\n```\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
3aedb9b11ab435982f35f34b2b817d9c8fdd59fb,'Fix the profiler copy.bara\nIncrease the auto-tracing steps to catch all major fetches.\n\nPiperOrigin-RevId: 168974064'
942193ae360078ff8f9165c5f7a6b59b748f2b1f,'[Docs] tf.constant docstring: Whitespace fix (#13067)\n\nThis should allow the ```python section to properly render on the API page\r\n    https://www.tensorflow.org/api_docs/python/tf/constant\r\nwhich (at the time of writing) displays the fences in plain-text.'
c2749f90b08314c3ae47289ebe803a28f601ad49,'Fixed formatting in contrib.data.Dataset documentation.\n\nPiperOrigin-RevId: 168967082'
7ab165ae9566928e7f0f95ba8d9fe28d12e6d9bf,"'Update `tf.nn.in_top_k` to use v2 kernel.\n\nThis fix is a follow up to PR #11197 so that `tf.nn.in_top_k`\nuses V2 kernel now.\n\nThis fix follows the API compatibility workflow (3 weeks).\n\nThis fix also updates related tests so that `gen_nn_ops` could\nbe removed.\n\nThis fix is related to #9717.\n\nNOTE: In the original PR #11197, the `_in_top_kv2` was incorrectly\ncalled even the comments specified to wait for 3 weeks. That\nwas fixed by commit https://github.com/tensorflow/tensorflow/commit/3e3eebd6adb3512b69e28b6e7acce9a59527f699\n(Thanks @vrv! for the fix).\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
e55574f28257bdacd744dcdba86c839e661b1b2a,"'Branch 168917534 (#13077)\n\n* Use HLO name, rather than pointer address, for profile counter name.\r\n\r\nThis removes a source of nondeterminism in IR generation.\r\n\r\nPiperOrigin-RevId: 168779489\r\n\r\n* Eager gradient tape doesn\'t keep tensors alive.\r\n\r\nPiperOrigin-RevId: 168782341\r\n\r\n* Add missing back-quote\r\n\r\nPiperOrigin-RevId: 168785422\r\n\r\n* Add in a comment that I forgot to add to a previous commit; NFC.\r\n\r\nPiperOrigin-RevId: 168786760\r\n\r\n* Update ops-related pbtxt files.\r\n\r\nPiperOrigin-RevId: 168787665\r\n\r\n* Go: Update generated wrapper functions for TensorFlow ops.\r\n\r\nPiperOrigin-RevId: 168788051\r\n\r\n* Fix typo ""comptuation"" (computation)\r\n\r\nPiperOrigin-RevId: 168799777\r\n\r\n* Fix a bug in export GTFlow model to shared format with sparse float split\r\n\r\nPiperOrigin-RevId: 168802503\r\n\r\n* Add signature def utility functions for inspection of input and output types and shapes.\r\n\r\nPiperOrigin-RevId: 168820997\r\n\r\n* Apply const qualifiers whenever appropriate.\r\n\r\nPiperOrigin-RevId: 168824461\r\n\r\n* TFE: Clearer error message when enable_eager_execution is called more than once\r\n\r\nPiperOrigin-RevId: 168834147\r\n\r\n* [tf.contrib.data] Add colocation constraints between Iterator and Datasets.\r\n\r\nThis restores the colocation behavior that was present when Dataset\r\nobjects were passed as DT_RESOURCE tensors, and avoids the (currently\r\nnot supported) case where TensorFlow may attempt to split the dataset\r\npipeline across devices.\r\n\r\nPiperOrigin-RevId: 168841061\r\n\r\n* Optimize C++ kernels for the matrix_band_part op, which is used in various ops operating on triangular or banded matrices:\r\n * Add benchmark for matrix_band_part.\r\n * Implement simple optimized CUDA kernel instead of calling Eigen generator.\r\n * Parallelize CPU kernel for matrix_band_part.\r\n * Support on-the-fly transposition in the underlying functors (to be used for future QR op in followup).\r\n\r\nBenchmarks:\r\n\r\nFirst column is of the form {device}_{shape}_{num_lower,num_upper}\r\n\r\nTest case                        Before       After    Speedup\r\ncpu_(10,16,16)_(-1,-1)          5.6505e-05  6.2108e-05  -9.92%\r\ncpu_(10,16,16)_(-1,0)           0.00010848  0.00010908  -0.55%\r\ncpu_(10,16,16)_(0,-1)            0.0001055  0.00011396  -8.02%\r\ncpu_(10,16,16)_(2,2)              0.000108  0.00011706  -8.39%\r\ncpu_(10,101,101)_(-1,-1)        0.00013697  6.0558e-05 +55.79%\r\ncpu_(10,101,101)_(-1,0)         0.00054002  0.00017703 +67.22%\r\ncpu_(10,101,101)_(0,-1)         0.00051188  0.00017607 +65.60%\r\ncpu_(10,101,101)_(2,2)          0.00050449  0.00016904 +66.49%\r\ncpu_(10,256,256)_(-1,-1)        0.00032043  5.6028e-05 +82.51%\r\ncpu_(10,256,256)_(-1,0)           0.001335   0.0004015 +69.93%\r\ncpu_(10,256,256)_(0,-1)          0.0013521  0.00038862 +71.26%\r\ncpu_(10,256,256)_(2,2)            0.001269  0.00039959 +68.51%\r\ncpu_(10,1000,1000)_(-1,-1)       0.0090729  6.3419e-05 +99.30%\r\ncpu_(10,1000,1000)_(-1,0)          0.01712   0.0047594 +72.20%\r\ncpu_(10,1000,1000)_(0,-1)         0.016647   0.0046474 +72.08%\r\ncpu_(10,1000,1000)_(2,2)          0.012737   0.0041161 +67.68%\r\ncpu_(10,1024,1024)_(-1,-1)       0.0093709  5.8889e-05 +99.37%\r\ncpu_(10,1024,1024)_(-1,0)         0.017075   0.0051999 +69.55%\r\ncpu_(10,1024,1024)_(0,-1)         0.016867    0.004617 +72.63%\r\ncpu_(10,1024,1024)_(2,2)          0.013191    0.003759 +71.50%\r\ncpu_(10,2048,2048)_(-1,-1)        0.028427  6.2466e-05 +99.78%\r\ncpu_(10,2048,2048)_(-1,0)         0.048134    0.017642 +63.35%\r\ncpu_(10,2048,2048)_(0,-1)         0.048773    0.017558 +64.00%\r\ncpu_(10,2048,2048)_(2,2)          0.036153    0.015452 +57.26%\r\ncpu_(10,10,4,4)_(-1,-1)         5.8055e-05  5.8055e-05  +0.00%\r\ncpu_(10,10,4,4)_(-1,0)          0.00015557   0.0001564  -0.54%\r\ncpu_(10,10,4,4)_(0,-1)          0.00015855  0.00015199  +4.14%\r\ncpu_(10,10,4,4)_(2,2)           0.00016379  0.00018096 -10.48%\r\ncpu_(10,10,10,10)_(-1,-1)       6.0558e-05  6.0558e-05  +0.00%\r\ncpu_(10,10,10,10)_(-1,0)          0.000368  0.00038695  -5.15%\r\ncpu_(10,10,10,10)_(0,-1)        0.00036263  0.00038612  -6.48%\r\ncpu_(10,10,10,10)_(2,2)         0.00038648  0.00042963 -11.17%\r\ncpu_(10,10,16,16)_(-1,-1)       6.9022e-05  5.7578e-05 +16.58%\r\ncpu_(10,10,16,16)_(-1,0)         0.0005815   0.0001874 +67.77%\r\ncpu_(10,10,16,16)_(0,-1)        0.00059354   0.0001924 +67.58%\r\ncpu_(10,10,16,16)_(2,2)         0.00062239  0.00019097 +69.32%\r\ncpu_(10,10,101,101)_(-1,-1)     0.00014806  6.2823e-05 +57.57%\r\ncpu_(10,10,101,101)_(-1,0)       0.0039785  0.00078249 +80.33%\r\ncpu_(10,10,101,101)_(0,-1)       0.0040585  0.00076556 +81.14%\r\ncpu_(10,10,101,101)_(2,2)        0.0039514  0.00077307 +80.44%\r\ncpu_(10,10,256,256)_(-1,-1)      0.0026824  6.0558e-05 +97.74%\r\ncpu_(10,10,256,256)_(-1,0)        0.017269   0.0031619 +81.69%\r\ncpu_(10,10,256,256)_(0,-1)        0.020287   0.0030774 +84.83%\r\ncpu_(10,10,256,256)_(2,2)         0.011919   0.0026599 +77.68%\r\ncpu_(10,10,1000,1000)_(-1,-1)     0.065783  5.6982e-05 +99.91%\r\ncpu_(10,10,1000,1000)_(-1,0)        0.1361    0.054533 +59.93%\r\ncpu_(10,10,1000,1000)_(0,-1)        0.1397    0.053405 +61.77%\r\ncpu_(10,10,1000,1000)_(2,2)        0.10173    0.048561 +52.26%\r\ncpu_(10,10,1024,1024)_(-1,-1)     0.066231  7.5579e-05 +99.89%\r\ncpu_(10,10,1024,1024)_(-1,0)       0.13615    0.059931 +55.98%\r\ncpu_(10,10,1024,1024)_(0,-1)       0.13745    0.064931 +52.76%\r\ncpu_(10,10,1024,1024)_(2,2)        0.10493    0.054258 +48.29%\r\ncpu_(10,10,2048,2048)_(-1,-1)      0.23487  6.6042e-05 +99.97%\r\ncpu_(10,10,2048,2048)_(-1,0)       0.41014     0.24283 +40.79%\r\ncpu_(10,10,2048,2048)_(0,-1)       0.43621     0.26393 +39.49%\r\ncpu_(10,10,2048,2048)_(2,2)        0.29919     0.22302 +25.46%\r\n\r\ngpu_(10,16,16)_(-1,-1)          0.00010753  0.00010753  +0.00%\r\ngpu_(10,16,16)_(-1,0)           0.00011253  0.00012445 -10.59%\r\ngpu_(10,16,16)_(0,-1)           0.00012493  0.00013399  -7.25%\r\ngpu_(10,16,16)_(2,2)              0.000108  0.00011754  -8.83%\r\ngpu_(10,101,101)_(-1,-1)        0.00011849  8.7976e-05 +25.75%\r\ngpu_(10,101,101)_(-1,0)         0.00012743  0.00012243  +3.93%\r\ngpu_(10,101,101)_(0,-1)         0.00012958  0.00012362  +4.60%\r\ngpu_(10,101,101)_(2,2)          0.00011504  0.00011504  +0.00%\r\ngpu_(10,256,256)_(-1,-1)        0.00013447  9.7513e-05 +27.48%\r\ngpu_(10,256,256)_(-1,0)         0.00018752  0.00014746 +21.36%\r\ngpu_(10,256,256)_(0,-1)         0.00017798  0.00016904  +5.02%\r\ngpu_(10,256,256)_(2,2)           0.0001514  0.00013697  +9.53%\r\ngpu_(10,1000,1000)_(-1,-1)       0.0005095  9.8586e-05 +80.65%\r\ngpu_(10,1000,1000)_(-1,0)       0.00088501  0.00056589 +36.06%\r\ngpu_(10,1000,1000)_(0,-1)       0.00090456  0.00055242 +38.93%\r\ngpu_(10,1000,1000)_(2,2)        0.00080955  0.00049639 +38.68%\r\ngpu_(10,1024,1024)_(-1,-1)      0.00050902  9.7036e-05 +80.94%\r\ngpu_(10,1024,1024)_(-1,0)       0.00098789  0.00058246 +41.04%\r\ngpu_(10,1024,1024)_(0,-1)            0.001  0.00059545 +40.46%\r\ngpu_(10,1024,1024)_(2,2)        0.00082254  0.00049961 +39.26%\r\ngpu_(10,2048,2048)_(-1,-1)        0.001495  9.8944e-05 +93.38%\r\ngpu_(10,2048,2048)_(-1,0)         0.003535   0.0017736 +49.83%\r\ngpu_(10,2048,2048)_(0,-1)        0.0034965   0.0017921 +48.75%\r\ngpu_(10,2048,2048)_(2,2)         0.0027704   0.0015399 +44.41%\r\ngpu_(10,10,4,4)_(-1,-1)         0.00011086  9.1076e-05 +17.85%\r\ngpu_(10,10,4,4)_(-1,0)           0.0001235  0.00013411  -8.59%\r\ngpu_(10,10,4,4)_(0,-1)          0.00011849   0.0001204  -1.61%\r\ngpu_(10,10,4,4)_(2,2)           0.00010896  0.00013256 -21.66%\r\ngpu_(10,10,10,10)_(-1,-1)       0.00010657  9.5844e-05 +10.07%\r\ngpu_(10,10,10,10)_(-1,0)        0.00011754  0.00013602 -15.72%\r\ngpu_(10,10,10,10)_(0,-1)        0.00011909  0.00012004  -0.80%\r\ngpu_(10,10,10,10)_(2,2)         0.00013196  0.00011349 +14.00%\r\ngpu_(10,10,16,16)_(-1,-1)       0.00012898  0.00010705 +17.01%\r\ngpu_(10,10,16,16)_(-1,0)        0.00014353  0.00012338 +14.04%\r\ngpu_(10,10,16,16)_(0,-1)        0.00011599  0.00012493  -7.71%\r\ngpu_(10,10,16,16)_(2,2)         0.00011539  0.00011349  +1.65%\r\ngpu_(10,10,101,101)_(-1,-1)     0.00014699  0.00010252 +30.25%\r\ngpu_(10,10,101,101)_(-1,0)       0.0002141  0.00015497 +27.62%\r\ngpu_(10,10,101,101)_(0,-1)       0.0002017  0.00015843 +21.45%\r\ngpu_(10,10,101,101)_(2,2)       0.00018394  0.00015402 +16.27%\r\ngpu_(10,10,256,256)_(-1,-1)     0.00032747  9.0003e-05 +72.52%\r\ngpu_(10,10,256,256)_(-1,0)      0.00074494  0.00040746 +45.30%\r\ngpu_(10,10,256,256)_(0,-1)      0.00072503  0.00042391 +41.53%\r\ngpu_(10,10,256,256)_(2,2)       0.00061846  0.00038004 +38.55%\r\ngpu_(10,10,1000,1000)_(-1,-1)    0.0032645  0.00010896 +96.66%\r\ngpu_(10,10,1000,1000)_(-1,0)      0.007543   0.0038971 +48.34%\r\ngpu_(10,10,1000,1000)_(0,-1)      0.006058   0.0039405 +34.95%\r\ngpu_(10,10,1000,1000)_(2,2)       0.005198    0.003448 +33.67%\r\ngpu_(10,10,1024,1024)_(-1,-1)    0.0034155  9.1434e-05 +97.32%\r\ngpu_(10,10,1024,1024)_(-1,0)      0.007099    0.004158 +41.43%\r\ngpu_(10,10,1024,1024)_(0,-1)      0.006843    0.003849 +43.75%\r\ngpu_(10,10,1024,1024)_(2,2)       0.005506   0.0031376 +43.02%\r\ngpu_(10,10,2048,2048)_(-1,-1)     0.013119  0.00010097 +99.23%\r\ngpu_(10,10,2048,2048)_(-1,0)      0.028533    0.015175 +46.81%\r\ngpu_(10,10,2048,2048)_(0,-1)      0.028458    0.014926 +47.55%\r\ngpu_(10,10,2048,2048)_(2,2)       0.022175    0.011797 +46.80%\r\n\r\nPiperOrigin-RevId: 168849471\r\n\r\n* * dataset_ops.read_batch_features() now discards keys for keyed Dataset.\r\n* dataset_ops.read_batch_features() ignores unnecessary repeat() when num_repeat == 1.\r\n\r\nPiperOrigin-RevId: 168855155\r\n\r\n* Migrate TFGAN eval to opensource.\r\n\r\nPiperOrigin-RevId: 168855880\r\n\r\n* [XLA] Remove superfluous locking from xla::ComputationBuilder.\r\n\r\nThe class is thread compatible, not thread-safe. It is illegal to call non-const methods of the class concurrently. So the mutex is pointless.\r\n\r\nAlso mark a couple of accessors const.\r\n\r\nPiperOrigin-RevId: 168857132\r\n\r\n* Add ConvertGraphDefToXla to convert from GraphDef to xla::Computation.\r\n\r\nThe main logic is simply refactored from tfcompile, with some minor cleanups\r\nalong the way.\r\n\r\nPiperOrigin-RevId: 168857174\r\n\r\n* Bugfix to tf.contrib.seq2seq beam_search_ops: GPU edge case of seq_len == 0.\r\n\r\nPiperOrigin-RevId: 168862288\r\n\r\n* [tf.contrib.data] Add `batch_and_drop_remainder` transformation.\r\n\r\nThis transformation, which is designed for use with `Dataset.apply()`,\r\nacts like the default of behavior of `tf.train.batch()`, which will\r\ntruncate a finite input source if its number of elements is not an\r\nexact multiple of the batch size. A benefit of using this\r\ntransformation is that it gives a statically known shape to the output\r\nelements, because they are all exactly `batch_size` in the 0th\r\ndimension.\r\n\r\nPiperOrigin-RevId: 168863148\r\n\r\n* Minor renaming from tfcompile.Config to tf2xla.Config in comments.\r\n\r\nPiperOrigin-RevId: 168863860\r\n\r\n* Certain ops don\'t need eager gradients to keep their inputs / outputs alive.\r\n\r\nPiperOrigin-RevId: 168864350\r\n\r\n* [XLA] Add S64 while loop test.\r\n\r\nPiperOrigin-RevId: 168865653\r\n\r\n* tfdbg: fix a bug in list_inputs and list_outputs\r\n\r\nwherein a tensor name like ""x:1"" fails to be processed because it were not converted to the node name (""x"" in this example) first.\r\n\r\nAlso simplify analyzer_cli_test.py a little through a new helper function.\r\n\r\nPiperOrigin-RevId: 168867948\r\n\r\n* Adds multi_label_head in tf.contrib.estimator\r\n\r\nPiperOrigin-RevId: 168873313\r\n\r\n* Script that generates __init__.py files based on tf_api_names annotations.\r\n\r\nPiperOrigin-RevId: 168878737\r\n\r\n* Fixing the build command.\r\n\r\nPiperOrigin-RevId: 168881605\r\n\r\n* Make sure all checked threads are joined before they are terminated.\r\n\r\nPiperOrigin-RevId: 168884294\r\n\r\n* Output metrics in train mode for multihead.\r\n\r\nThis is to be consistent with other heads who output the metric tensors in train mode. Outputting the metric tensors allow us for example to plot the metrics on the training set (and compare them to the metircs on the eval set).\r\n\r\nPiperOrigin-RevId: 168884726\r\n\r\n* Automated g4 rollback of changelist 168458634\r\n\r\nPiperOrigin-RevId: 168887778\r\n\r\n* Adds DNNEstimator to tf.contrib.estimator.\r\n\r\nPiperOrigin-RevId: 168887825\r\n\r\n* [tf.contrib.data] Expose `tf.contrib.data.batch_and_drop_remainder()`.\r\n\r\nPiperOrigin-RevId: 168888592\r\n\r\n* disabling timeout test in opensource build\r\n\r\nPiperOrigin-RevId: 168890483\r\n\r\n* Add ops that perform color transforms (including changing value, saturation and hue) in YIQ space.\r\n\r\nPiperOrigin-RevId: 168897736\r\n\r\n* Update the minimum requirement of espsilon for batch norm.\r\n\r\nPiperOrigin-RevId: 168897907\r\n\r\n* Adding support for capture-by-value.\r\n\r\nPiperOrigin-RevId: 168903482\r\n\r\n* disabling failing tsan test\r\n\r\nPiperOrigin-RevId: 168903876\r\n\r\n* disable asan for test timeout\r\n\r\nPiperOrigin-RevId: 168903999\r\n\r\n* Internal change.\r\n\r\nPiperOrigin-RevId: 168910187\r\n\r\n* Fix broken test: tensorflow/contrib/eager/python:datasets_test\r\n\r\nPiperOrigin-RevId: 168914742\r\n\r\n* [XLA:CPU] Implement map fusion.\r\n\r\nPiperOrigin-RevId: 168915358\r\n\r\n* Merge changes from github.\r\nEND_PUBLIC\r\n\r\nI also integrated #13073 by hand to make TAP happy.\r\n\r\n---\r\nCommit 92362d0f0 authored by Skye Wanderman-Milne<skyewm@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdd WhileContext class and add plumbing for creating them.\r\n\r\nThis change introduces WhileContext, which stores information about a\r\nwhile loop and will be used in future changes to generate while loop\r\ngradient graphs. Exit nodes in a while loop now have a pointer to\r\ntheir associated WhileContext. This will be used to retrieve the\r\ncontext for a given loop.\r\n\r\nThis change adds an optional parameter to BuildWhileLoop() to create a\r\nWhileContext for the while loop (currently this is always true, but\r\ngradients will generate while loops without associated contexts). This\r\nchange also adds a as-yet-unused option to BuildWhileLoop() to return\r\nthe predicate output.\r\n\r\nPiperOrigin-RevId: 168562303\r\n\r\n---\r\nCommit a4f6e7c1a authored by RJ Ryan<rjryan@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdd mel-scale conversion matrix support to tf.contrib.signal.\r\n\r\nPiperOrigin-RevId: 168560255\r\n\r\n---\r\nCommit b00b6d23c authored by Henry Tan<henrytan@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nFix a segmentation fault caused by invalid log directory in InternalFlush().\r\n\r\nPiperOrigin-RevId: 168557063\r\n\r\n---\r\nCommit 2bc7a155a authored by Yong Tang<yong.tang.github@outlook.com>\r\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\r\nAdd uint16 support for tf.decode_raw (#12719)\r\n\r\n* Add uint16 support for tf.decode_raw\r\n\r\nThis fix tries to address the request raised in 10124 where\r\nuint16 support for tf.decode_raw is needed. tf.decode_raw\r\nalready support half, float32, float64, int8, int16, int32, int64,\r\nuint8. And uint16 was not supported.\r\n\r\nThis fix adds uint16 support for tf.decode_raw.\r\n\r\nThis fix fixes 10124.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix test failure caused by uint16 support of decode_raw and add unit tests.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n---\r\nCommit 009285c09 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nRemove benchmark for TensorShapeOld.\r\n\r\nPiperOrigin-RevId: 168551108\r\n\r\n---\r\nCommit dc1eda8a6 authored by Peter Hawkins<phawkins@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\n[XLA] Fix CHECK-failure crash if a non-tuple was passed to GetTupleElement.\r\n\r\nPiperOrigin-RevId: 168550703\r\n\r\n---\r\nCommit 010922ed9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nGo: Update generated wrapper functions for TensorFlow ops.\r\n\r\nPiperOrigin-RevId: 168549989\r\n\r\n---\r\nCommit c8a6131e9 authored by Mark Daoust<markdaoust@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nmake `tf.sets` examples executable\r\n\r\nFixes #12969\r\n\r\nPiperOrigin-RevId: 168549712\r\n\r\n---\r\nCommit bece65c6f authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nUse a map instead of a vector of Children() in the BeamEntry.\r\n\r\nThe assumption is that since the entries are sparse (they are all populated, but most are never Active()), using the map will save memory and make iterating over the Children() more efficient.\r\n\r\nPiperOrigin-RevId: 168548814\r\n\r\n---\r\nCommit 0d5ab82ce authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nUpdate ops-related pbtxt files.\r\n\r\nPiperOrigin-RevId: 168548642\r\n\r\n---\r\nCommit 3331c574b authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nImplementing gradients for tf.image.resize_bicubic.\r\n\r\nPiperOrigin-RevId: 168547412\r\n\r\n---\r\nCommit 4982ef0fa authored by Martin Wicke<wicke@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdd the ability to warn only once if deprecated functionality is used, and make that the default.\r\n\r\nPiperOrigin-RevId: 168545655\r\n\r\n---\r\nCommit 99423416a authored by Peter Hawkins<phawkins@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\n[XLA] Make shape inference error messages for the While HLO more readable. Build the error lazily.\r\n\r\nPiperOrigin-RevId: 168531083\r\n\r\n---\r\nCommit d10374e45 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nDiscard some unneccessary logging commands.\r\n\r\nPiperOrigin-RevId: 168500721\r\n\r\n---\r\nCommit 83cbabb85 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nFix wrong format of logging message.\r\n\r\nPiperOrigin-RevId: 168497373\r\n\r\n---\r\nCommit eec4f1b3a authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nGo: Update generated wrapper functions for TensorFlow ops.\r\n\r\nPiperOrigin-RevId: 168494944\r\n\r\n---\r\nCommit 69301f352 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nUpdate ops-related pbtxt files.\r\n\r\nPiperOrigin-RevId: 168494220\r\n\r\n---\r\nCommit 9d56f419c authored by Mingxing Tan<tanmingxing@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdd crop_and_decode_jpeg_op that combines the crop and decode for better\r\nperformance.\r\n\r\nPiperOrigin-RevId: 168493125\r\n\r\n---\r\nCommit 48ddf64d0 authored by Chris Leary<leary@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\n[XLA] Make large params test only run in opt builds.\r\n\r\nPiperOrigin-RevId: 168491913\r\n\r\n---\r\nCommit 11d3ac29d authored by Chris Leary<leary@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\n[XLA] Add tests for large numbers of parameter / return values and while loops.\r\n\r\nPiperOrigin-RevId: 168487225\r\n\r\n---\r\nCommit 3cd6bdef5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdded test cases on R4 slice.\r\n\r\nPiperOrigin-RevId: 168482049\r\n\r\n---\r\nCommit 46a81b5c3 authored by Jacques Pienaar<jpienaar@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdd cast S64 to F32 test.\r\n\r\nPiperOrigin-RevId: 168473650\r\n\r\n---\r\nCommit 59bdf598d authored by Derek Murray<mrry@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdd an automatically-generated ""tensorflow.python.platform.build_info"" script.\r\n\r\nThe motivation for this script is to provide better tools for\r\ndiagnosing load-time errors (such as the ones that plague the Windows\r\nbuild due to DLL issues). Note that the script is intended to be\r\nself-contained, so that it is possible to import it without loading\r\nthe entire TensorFlow runtime.\r\n\r\nThis generated script currently contains a single symbol,\r\n`is_cuda_build`, which records whether the build has GPU support or not.\r\n\r\nPiperOrigin-RevId: 168471034\r\n\r\n---\r\nCommit c3b86347f authored by Olivia Nordquist<nolivia@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nreenabling tests that are passing\r\n\r\nPiperOrigin-RevId: 168466361\r\n\r\n---\r\nCommit c728665ec authored by Henry Tan<henrytan@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdd const qualifiers whenever appropriate.\r\n\r\nPiperOrigin-RevId: 168465926\r\n\r\n---\r\nCommit bf96fcd13 authored by Alexandre Passos<apassos@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nUse the scalar cache in MeanGrad.\r\n\r\nPiperOrigin-RevId: 168462267\r\n\r\n---\r\nCommit 1cada9ea2 authored by Olivia Nordquist<nolivia@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nreenabling test that passed after 100 runs w/o timing out\r\n\r\nPiperOrigin-RevId: 168458634\r\n\r\n---\r\nCommit 00c865566 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nGenerate error (instead of segfault) when trying to copy string tensor\r\nto GPU in EagerTensor constructor.\r\n\r\nPiperOrigin-RevId: 168457320\r\n\r\n---\r\nCommit 655f26fc7 authored by Alexandre Passos<apassos@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nResurrects autograd-free eager gradients.\r\n\r\nPiperOrigin-RevId: 168448557\r\n\r\n---\r\nCommit 8f37f3002 authored by Peter Hawkins<phawkins@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\n[TF:XLA] Cleanups to handling of arguments during XLA compilation:\r\n* combine resource kinds in XlaCompiler::Argument::Kind, use a separate XlaResource::Kind field to distinguish different kinds of resource.\r\n* merge XlaContext::HandleOrConstant and XlaExpression, which were almost identical.\r\n* remove XlaContext::Argument; instead, build XlaExpressions directly from XlaCompiler and add them to the XlaContext.\r\n\r\nPiperOrigin-RevId: 168439341\r\n\r\n---\r\nCommit 7f5346a80 authored by Gunhan Gulsoy<gunan@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nReduce cmake log mess.\r\n\r\n* Echo off for the .bat scripts.\r\n* TF cmake: disable warnings in some of the patched projects (gif,jpeg,lmdb).\r\n\r\nPiperOrigin-RevId: 168432070\r\n\r\n---\r\nCommit 2ad85aa4d authored by Mark Heffernan<meheff@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nUse xla/tests:xla_internal_test_main for all tests under tf/compiler/xla\r\nand remove any main() definitions in tests. This enables use of flags\r\nin all tests.\r\n\r\nPiperOrigin-RevId: 168424796\r\n\r\n---\r\nCommit cd377811d authored by Henry Tan<henrytan@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nComment and error message consistency cleanup.\r\n\r\nPiperOrigin-RevId: 168422582\r\n\r\n---\r\nCommit 7c19b82af authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nUpdate tf.sparse_reset_shape so that when shrinking the shape of an empty\r\nsparse tensor, the result has a shape of all zeros.\r\n\r\nPiperOrigin-RevId: 168419639\r\n\r\n---\r\nCommit fcacb40d4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nFirstReadyManager for scheduling nodes in VirtualScheduler.\r\nThe current FIFOManager may yield inefficient scheduling; _Recv pushed to the\r\nFIFO blocks other nodes that can run before _Recv due to the node order in FIFO.\r\nFirstReadyManager picks a node with the earliest time_ready in the queue,\r\navoiding this problem.\r\n\r\nAlso, fixed VirtualPlacer to properly set device when Node\'s device name does not\r\ninclude job name and to set GPU:0 as default device.\r\n\r\nPiperOrigin-RevId: 168418455\r\n\r\n---\r\nCommit 7e47624f5 authored by Asim Shankar<ashankar@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\neager: Initial support for iteration over tf.contrib.data.Dataset objects.\r\n\r\nTODO:\r\n- Support function-valued operation attributes in eager\r\n  (Required for MapDataset, FilterDataset etc. which encode the\r\n  per-element computation in a TensorFlow function)\r\nPiperOrigin-RevId: 168418250\r\n\r\n---\r\nCommit b0a397fce authored by Asim Shankar<ashankar@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\neager: Remove unnecessary TFE_Context argument to TFE_OpSetDevice.\r\n\r\nPiperOrigin-RevId: 168417999\r\n\r\n---\r\nCommit 86211d554 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nGraph transform to flatten atrous (dilated) convolutions (i.e., a sequence of SpaceToBatchND-Conv-BatchToSpaceND ops) to a regular Conv op with upsampled filters.\r\n\r\nPiperOrigin-RevId: 168414124\r\n\r\n---\r\nCommit 3438981ca authored by David G. Andersen<dga@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nApply exported symbol filtering to the c++ API analogously to\r\nwhat is filtered for the C API.\r\nFixes bug reported in comments on #1924\r\n\r\nPiperOrigin-RevId: 168413719\r\n\r\n---\r\nCommit 7e023d865 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\n[XLA:CPU] Remove code from parallel CPU backend outlining that was causing unnecessary copies to be inserted, and which is no longer necessary since we added co-located buffer support for kCall.\r\n*) All bitcast copy is no longer necessary as CopyInsertion will insert copies\r\nat the root of the computation for a parameter which is live-out.\r\n*) Copy if root does not define buffer no longer necessary because colocated\r\nassignment looks at points-to set of root instruction.\r\n\r\nPiperOrigin-RevId: 168412076\r\n\r\n---\r\nCommit 5da4df92c authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nSimplify some code in grappler_item_builder.cc, no change in logic.\r\n\r\nPiperOrigin-RevId: 168409110\r\n\r\n---\r\nCommit 82ec6241a authored by drpngx<drpngx@users.noreply.github.com>\r\nCommitted by GitHub<noreply@github.com>:\r\nAdd six and numpy imports\r\n---\r\nCommit 9c4ce2452 authored by Mark Heffernan<meheff@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdd flag parsing to more tests in xla/service specifically those which build\r\nHLO graphs. This enables, for example, dumping of the graphs with\r\n--xla_generate_hlo_graph. Also remove some superfluous tensorflow test_main\r\ndependencies.\r\n\r\nPiperOrigin-RevId: 168406746\r\n\r\n---\r\nCommit d4efa695c authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nRelax the feed_nodes collection check, which triggers a false positive in some modes where the feed node collection is auto-generated. Keep it as a warning to help correct user-provided feed node lists.\r\n\r\nPiperOrigin-RevId: 168396408\r\n\r\n---\r\nCommit cbc46a856 authored by Changming Sun<chasun@microsoft.com>\r\nCommitted by gunan<gunan@google.com>:\r\nAdd a missing template explicit instantiation of SetZeroFunctor (#12791)\r\n\r\n---\r\nCommit 7bb08f5bf authored by Kevin Slagle<kjslag@gmail.com>\r\nCommitted by drpngx<drpngx@users.noreply.github.com>:\r\nfix ExponentialMovingAverage documentation so that ExponentialMovingAverage.apply is evaluated within control_dependencies (#12987)\r\n\r\n---\r\nCommit e6b011763 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nExtend c++ gradient_checker to complex types.\r\n\r\nPiperOrigin-RevId: 168392949\r\n\r\n---\r\nCommit 4086219a4 authored by Lyndon White<oxinabox@ucc.asn.au>\r\nCommitted by drpngx<drpngx@users.noreply.github.com>:\r\nCorrect minor typo in substr docs example (#12991)\r\n\r\n---\r\nCommit f63aa7f49 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nMigrate core TFGAN functions to opensource.\r\n\r\nPiperOrigin-RevId: 168391923\r\n\r\n---\r\nCommit bc6b60f1b authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nFix tuple_losses bug caused by Python bug.\r\n\r\nPiperOrigin-RevId: 168386341\r\n\r\n---\r\nCommit 7a8c63da3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nMigrate `leaky_relu` to `nn_ops.py`. Will be used for TFGAN.\r\n\r\nPiperOrigin-RevId: 168386268\r\n\r\n---\r\nCommit f7ba16fdf authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nDo not export from eval on train data steps.\r\n\r\nPiperOrigin-RevId: 168374021\r\n\r\n---\r\nCommit 9b9e54b34 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdding NCCL sum op, register all_sum gradient.\r\nStreamlining nccl test.\r\n\r\nPiperOrigin-RevId: 168347428\r\n\r\n---\r\nCommit bc300318e authored by Gunhan Gulsoy<gunan@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nUpdate gemmlowp hash as the commit history seems to have changed in the\r\nrepository.\r\n\r\nPiperOrigin-RevId: 168343607\r\n\r\n---\r\nCommit 1e96d54d9 authored by gunan<gunan@google.com>\r\nCommitted by GitHub<noreply@github.com>:\r\nAlso accept non-k8 CPU types in build pip package. (#12975)\r\n\r\n* Also accept non-k8 CPU types in build pip package.\r\nFixes #12735\r\n\r\n* Make the script work with `set -e`.\r\n\r\n---\r\nCommit c0a4c7ffc authored by Chris Leary<leary@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\n[XLA] Fix bug in ShapeUtil::ShapeIs that would lead to type inference errors.\r\n\r\nPiperOrigin-RevId: 168323589\r\n\r\n---\r\nCommit 4af9be964 authored by Amy<amy@infosleuth.net>\r\nCommitted by drpngx<drpngx@users.noreply.github.com>:\r\nsupport passing in a source url to the mnist read_data_sets function, to make it easier to use \'fashion mnist\' etc. (#12983)\r\n\r\n---\r\nCommit 9f848734f authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nTweak layer a bit to be eager friendly.\r\n\r\nPiperOrigin-RevId: 168312865\r\n\r\n---\r\nCommit 60f15462b authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nChange conv_input_scale and side_input_scale from attributes to inputs for improved flexibility, in fused_conv2d_bias_activation op.\r\n\r\nPiperOrigin-RevId: 168311988\r\n\r\n---\r\nCommit 4b4e10f9c authored by Jianwei Xie<xiejw@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdds dict support of eval metrics.\r\n\r\nPiperOrigin-RevId: 168310444\r\n\r\n---\r\nCommit ab7f22de6 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nMove FusedConvBiasActivationShape out of common_shape_fns.cc to a lambda inside the op.\r\n\r\nPiperOrigin-RevId: 168300911\r\n\r\n---\r\nCommit 3a98035fa authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\n[XLA] Augment metadata output with source-line info, as before.\r\n\r\nPiperOrigin-RevId: 168292527\r\n\r\n---\r\nCommit 349188152 authored by Yao Zhang<yaozhang@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nEnable fused batch norm, which is 15-20% faster for training and inference.\r\n\r\nPiperOrigin-RevId: 168288154\r\n\r\n---\r\nCommit 08587d45b authored by Yuefeng Zhou<yuefengz@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdded back persistent memory tracking in queue op. The new tracking logic has avoided the crash in previous implementation:  the queue_ passed to CreateTypedQueue may be unreffed if the resource is already created by another resource op that shares the same resource name and type.\r\n\r\nPiperOrigin-RevId: 168284509\r\n\r\n---\r\nCommit 733063d55 authored by Amit Patankar<amitpatankar@google.com>\r\nCommitted by Amit Patankar<amitpatankar@google.com>:\r\nFixing awkward wording.\r\n\r\n---\r\nCommit c7ad6bfef authored by Amit Patankar<amitpatankar@google.com>\r\nCommitted by Amit Patankar<amitpatankar@google.com>:\r\nRemoving accidental hash.\r\n\r\n---\r\nCommit 53dbc761a authored by Amit Patankar<amitpatankar@google.com>\r\nCommitted by Amit Patankar<amitpatankar@google.com>:\r\nAdding Windows self check script to docs.\r\n\r\n---\r\nCommit ed1135994 authored by Andrew Harp<andrewharp@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdd -latomic flag to benchmark_model target to fix Android x86 build.\r\n\r\nPiperOrigin-RevId: 168281337\r\n\r\n---\r\nCommit c0348bb55 authored by Anna R<annarev@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nUpdate tf_export.py to take constant name as an argument instead of a constant.\r\n\r\nPiperOrigin-RevId: 168280613\r\n\r\n---\r\nCommit c3d19e40a authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nCleanup training_ops to reduce code redudancy.\r\n\r\nPiperOrigin-RevId: 168280069\r\n\r\n---\r\nCommit 123fb01ee authored by Yao Zhang<yaozhang@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nSet fused=False for batch norm, because the test assumes no bessel\'s\r\ncorrection. Fused=True would add bessel\'s correction to variance.\r\n\r\nPiperOrigin-RevId: 168274392\r\n\r\n---\r\nCommit f0e8c545e authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nSwitch resource variables from copy-on-read to copy-on-write.\r\n\r\nRELNOTES: Change the signature of (C++) GetInputTensorFromVariable in\r\ntraining_op_helpers to support new copy-on-write semenatics of resource\r\nvariables.\r\nPiperOrigin-RevId: 168273249\r\n\r\n---\r\nCommit 495cc8e47 authored by Yuan (Terry) Tang<terrytangyuan@users.noreply.github.com>\r\nCommitted by drpngx<drpngx@users.noreply.github.com>:\r\nMinor wording change in timeseries module\'s README (#12938)\r\n\r\n* Minor wording change in timeseries module\'s README\r\n\r\n* Address comments\r\n\r\n---\r\nCommit f13b876ed authored by Amit Patankar<amitpatankar@google.com>\r\nCommitted by Amit Patankar<amitpatankar@google.com>:\r\nMaking the default build from source version 1.4.0dev. The whl files that are built will be 1.3.0devDDMMYYYY.\r\n\r\n---\r\nCommit 2356c0ff4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nDelete ScopedTFStatus to avoid leaking it for long running trainers(1+day).\r\n\r\nPiperOrigin-RevId: 168259652\r\n\r\n---\r\nCommit e15f4cae2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nDon\'t remove all aliases from linalg namespace.\r\nGet rid of redundant aliases.\r\n\r\nPiperOrigin-RevId: 168257658\r\n\r\n---\r\nCommit c58082642 authored by postBG<profile2697@gmail.com>\r\nCommitted by drpngx<drpngx@users.noreply.github.com>:\r\nFix minor typo in Programmers guide (#12965)\r\n\r\n* Fix minor typo in Programmers guide\r\n\r\n* change to ""this""\r\n\r\n---\r\nCommit 509372c2e authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdd a lot of operations\' flops calculations\r\n\r\nPiperOrigin-RevId: 168256746\r\n\r\n---\r\nCommit 80ed8afc0 authored by Francois Chollet<fchollet@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdd Flatten to core layers.\r\n\r\nPiperOrigin-RevId: 168254118\r\n\r\n---\r\nCommit a6223c01a authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nFix locking of variables in SparseProximalGradientDescent,\r\nAdagradDA, SparseAdagradDA.\r\n\r\nPiperOrigin-RevId: 168252530\r\n\r\n---\r\nCommit abde00830 authored by Olivia Nordquist<nolivia@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nadding InputTensor class for symmetry with OutputTensor\r\n\r\nPiperOrigin-RevId: 168250085\r\n\r\n---\r\nCommit 0451032ca authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\n[XLA] Fix variable naming style guide violation.\r\n\r\nPiperOrigin-RevId: 168245542\r\n\r\n---\r\nCommit a202a5a94 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nUpdate ops-related pbtxt files.\r\n\r\nPiperOrigin-RevId: 168245371\r\n\r\n---\r\nCommit f93e354cb authored by Derek Murray<mrry@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\n[tf.contrib.data] Switch backend Dataset representation to DT_VARIANT.\r\n\r\nThis change introduces a new `DatasetWrapper` type that wraps a\r\n`DatasetBase*` and can be stored in a DT_VARIANT tensor. All Dataset\r\nops now consume and produce DT_VARIANT instead of DT_RESOURCE, and the\r\nunderlying implementation is simplified because the `DatasetWrapper`\r\ncan be passed directly by value without using the `ResourceMgr`.\r\n\r\nPiperOrigin-RevId: 168240571\r\n\r\n---\r\nCommit a4042cd2a authored by Jianwei Xie<xiejw@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nIntroduces the placeholder for _TrainingExecutor, which serves the implementation of tf.estimator.train_and_evaluate.\r\n\r\nPiperOrigin-RevId: 168240151\r\n\r\n---\r\nCommit 10ba148f7 authored by Peter Hawkins<phawkins@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nSwitch control_flow_ops library to use Resource variants of Stack operators, instead of deprecated Ref variants.\r\n\r\nPiperOrigin-RevId: 168234822\r\n\r\n---\r\nCommit ca43fe82b authored by Ali Yahya<alive@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nTFE: Improves the interfaces of tape.watch_variable() and implicit_grad().\r\n\r\ntape.watch_variable() replaces tape.watch() and now is called on ResourceVariable objects instead of their underlying handles.\r\n\r\nimplicit_grad() now returns a list of (gradient, variable) pairs to be consistent with tf.Optimizer\'s interface.\r\n\r\nPiperOrigin-RevId: 168232055\r\n\r\n---\r\nCommit b72862dfc authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\ninternal change\r\n\r\nPiperOrigin-RevId: 168225993\r\n\r\n---\r\nCommit da3280f4d authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nRe-enable tsan for sdca_estimator_test.\r\n\r\nPiperOrigin-RevId: 168186374\r\n\r\n---\r\nCommit c936c1155 authored by Yifei Feng<yifeif@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nFix pip tests for contrib/gan.\r\n- Add *_impl.py so tests can still access removed symbols.\r\n- Add /python directory layer to make *_impy.py and __init__.py not in the same dir.\r\n\r\nPiperOrigin-RevId: 168161722\r\n\r\n---\r\nCommit ce9a2b00f authored by Toby Boyd<tobyboyd@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nPerformance guide update\r\n\r\nPiperOrigin-RevId: 168159289\r\n\r\n---\r\nCommit 3bce4f9a0 authored by Shanqing Cai<cais@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nTFE: expose tfe.num_gpus()\r\n\r\nPiperOrigin-RevId: 168154345\r\n\r\n---\r\nCommit 67a7cbc28 authored by Jianwei Xie<xiejw@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nChanged the default eval throttle secs from 2 min to 10 mins.\r\n\r\nPiperOrigin-RevId: 168120323\r\n\r\n---\r\nCommit 92bed178f authored by Eugene Brevdo<ebrevdo@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nReduce cmake log mess.\r\n\r\n* Echo off for the .bat scripts.\r\n* TF cmake: disable warnings in some of the patched projects (gif,jpeg,lmdb).\r\n\r\nPiperOrigin-RevId: 168119914\r\n\r\n---\r\nCommit 702d59582 authored by joshkyh<joshkyh@users.noreply.github.com>\r\nCommitted by Yifei Feng<fengyifei2026@gmail.com>:\r\nCorrected hyperlink for audio training tutorial (#12923)\r\n\r\n---\r\nCommit 877c9deca authored by Frank Chen<frankchn@gmail.com>\r\nCommitted by Yifei Feng<fengyifei2026@gmail.com>:\r\nReverse change eb75ded6 so that internal tests will pass. (#12933)\r\n\r\nAs support for int64 global steps is not ready in TPUs, I am reversing this change so that our internal performance and regression tests will pass.\r\n---\r\nCommit 665966438 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nRe-enable grpc_session_test.\r\n\r\nPiperOrigin-RevId: 168078694\r\n\r\n---\r\nCommit 405def792 authored by Chris Leary<leary@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\n[XLA] Switch CallInliner to use CallGraph::VisitNodes.\r\n\r\nPiperOrigin-RevId: 168078645\r\n\r\n---\r\nCommit aba3466f1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nExposes Head and factory methods in tf.contrib.estimator.\r\n\r\nPiperOrigin-RevId: 168071246\r\n\r\n---\r\nCommit b76565b39 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nSome profiler fixes and cleanup.\r\n\r\nPiperOrigin-RevId: 168069346\r\n\r\n---\r\nCommit 32ffc5a81 authored by Jonas<sauercrowd@users.noreply.github.com>\r\nCommitted by Yifei Feng<fengyifei2026@gmail.com>:\r\nJust a dot in order to be consistent (#12919)\r\n\r\nadded a dot to the `7` to make clear it\'s a float (like every other number)\r\n---\r\nCommit 0753b0c79 authored by Alexandre Passos<apassos@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nScope the scalar cache in the context.\r\n\r\nPiperOrigin-RevId: 168065417\r\n\r\n---\r\nCommit 48deb206b authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nMigrate TFGAN features to third_party.\r\n\r\nPiperOrigin-RevId: 168060880\r\n\r\n---\r\nCommit d2ae1311f authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nFixing an issue in the BUILD file of the LSH ops.\r\n\r\nPiperOrigin-RevId: 168056645\r\n\r\n---\r\nCommit 2f440eda4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nExpose NumpyReader for reading timeseries data.\r\n\r\nPiperOrigin-RevId: 168055838\r\n\r\n---\r\nCommit be1916ce7 authored by Daniel Grazian<dgr@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdded functionality to allow `SqlDataset` to interpret a database column as various numeric types, including several integer types and `dtypes.float64`.\r\n\r\nPiperOrigin-RevId: 168055827\r\n\r\n---\r\nCommit fa2000a0b authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nSupporting nightly windows pip packages.\r\n\r\nPiperOrigin-RevId: 168054959\r\n\r\n---\r\nCommit a263ea626 authored by Asim Shankar<ashankar@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\neager: Treat eager tensors as constants during graph construction.\r\n\r\nUnless capturing is explicitly enabled.\r\n\r\nPiperOrigin-RevId: 168052675\r\n\r\n---\r\nCommit 6e402d0d2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nMake TODO a bit more specific.\r\n\r\nPiperOrigin-RevId: 168051381\r\n\r\n---\r\nCommit c779384bc authored by Daniel Grazian<dgr@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdded code example to the doc string for `SqlDataset`.\r\n\r\nPiperOrigin-RevId: 168049037\r\n\r\n---\r\nCommit ff6dd474a authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nUse self._in_graph_mode consistently in ResourceVariable\r\ninstead of sometimes getting it from the context.\r\n\r\nAlso: fix formatting of a comment and use a more precise test to detect\r\nif initial_value is set.\r\nPiperOrigin-RevId: 168047258\r\n\r\n---\r\nCommit f331f528b authored by Alexandre Passos<apassos@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nRemoves ""fast paths"" which are not fast in eager mode.\r\n\r\nPiperOrigin-RevId: 168046278\r\n\r\n---\r\nCommit 86f1713e5 authored by Jianwei Xie<xiejw@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nIntroduces TrainSpec and EvalSpec.\r\n\r\nPiperOrigin-RevId: 168040435\r\n\r\n---\r\nCommit c8b9e92f0 authored by Asim Shankar<ashankar@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\neager: Move ""register_function"" to context.py\r\n\r\nThis will allow function registration from other\r\nmodules without having to import ""function.py"".\r\n(And besides, the function really does belong on the context).\r\n\r\nPiperOrigin-RevId: 168040411\r\n\r\n---\r\nCommit 74137f994 authored by Shanqing Cai<cais@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nFix signed int overflow issue in tensor_id.cc\r\n\r\nWhen a node name has a long numeric suffix, e.g.,\r\n""foo/y_0/gradient_debug_09684b60f2184c67b744721915034528"" (as has happened with tfdbg GradientsDebugger),\r\n\r\nthe parsing algorithm in ParseTensorName() may experience signed int overflow. Replacing the types with ""unsigned int"" resolves the issue.\r\n\r\nPiperOrigin-RevId: 168039195\r\n\r\n---\r\nCommit 450c3b562 authored by Rohan Jain<rohanj@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nUsing rendezvous manager to pass args / rets between devices during function remote execution. This enables CPU->GPU remote device executions now.\r\n\r\nPiperOrigin-RevId: 168038285\r\n\r\n---\r\nCommit 82cc6529f authored by Jianwei Xie<xiejw@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nFixes the wording about StopIteration.\r\n\r\nPiperOrigin-RevId: 168034451\r\n\r\n---\r\nCommit fb5588002 authored by Gunhan Gulsoy<gunan@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdd a statement on install/index.md on what os are supported.\r\n\r\nPiperOrigin-RevId: 168032996\r\n\r\n---\r\nCommit f83f6b9ef authored by Chris Leary<leary@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\n[XLA] Handle higher-order HLOs (e.g. While) in CallInliner and test.\r\n\r\nPiperOrigin-RevId: 168029345\r\n\r\n---\r\nCommit 8988ae365 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nBEGIN_PUBLIC\r\nAutomated g4 rollback of changelist 167916124\r\n\r\nPiperOrigin-RevId: 168916710\r\n\r\n* Update ops-related pbtxt files.\r\n\r\nPiperOrigin-RevId: 168917157\r\n\r\n* Go: Update generated wrapper functions for TensorFlow ops.\r\n\r\nPiperOrigin-RevId: 168917534'"
7a97dfc3ec5fa7bee974cfc163cb537cb5a63d0e,"'Fix tf.image.central_crop return zero dimension (#12239)\n\n* Fix tf.image.central_crop return zero dimension\r\n\r\nThis fix tries to address the issue raised in 10315\r\nwhere tf.image.central_crop will return (0, 0, 3)\r\nwhen input is (240, 320, 3).\r\n\r\nThe issue is that the calculation was done by dividing\r\n```\r\nfraction_offset = int(1 / ((1 - central_fraction) / 2.0))\r\n```\r\nwhich causes deviation when accuracy is not enough.\r\n\r\nThis fix cast the calculation to double until the last step.\r\n\r\nThis fix fixes 10315.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test case for tf.image.central_crop return zero dimension\r\n\r\nThis commit adds test case for 10315.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
a373b1f74215e44920bf9362a51bece530edf88a,"'Merge changes from github.\nEND_PUBLIC\n\nI also integrated #13073 by hand to make TAP happy.\n\n---\nCommit 92362d0f0 authored by Skye Wanderman-Milne<skyewm@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd WhileContext class and add plumbing for creating them.\n\nThis change introduces WhileContext, which stores information about a\nwhile loop and will be used in future changes to generate while loop\ngradient graphs. Exit nodes in a while loop now have a pointer to\ntheir associated WhileContext. This will be used to retrieve the\ncontext for a given loop.\n\nThis change adds an optional parameter to BuildWhileLoop() to create a\nWhileContext for the while loop (currently this is always true, but\ngradients will generate while loops without associated contexts). This\nchange also adds a as-yet-unused option to BuildWhileLoop() to return\nthe predicate output.\n\nPiperOrigin-RevId: 168562303\n\n---\nCommit a4f6e7c1a authored by RJ Ryan<rjryan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd mel-scale conversion matrix support to tf.contrib.signal.\n\nPiperOrigin-RevId: 168560255\n\n---\nCommit b00b6d23c authored by Henry Tan<henrytan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix a segmentation fault caused by invalid log directory in InternalFlush().\n\nPiperOrigin-RevId: 168557063\n\n---\nCommit 2bc7a155a authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nAdd uint16 support for tf.decode_raw (#12719)\n\n* Add uint16 support for tf.decode_raw\n\nThis fix tries to address the request raised in 10124 where\nuint16 support for tf.decode_raw is needed. tf.decode_raw\nalready support half, float32, float64, int8, int16, int32, int64,\nuint8. And uint16 was not supported.\n\nThis fix adds uint16 support for tf.decode_raw.\n\nThis fix fixes 10124.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Fix test failure caused by uint16 support of decode_raw and add unit tests.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 009285c09 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove benchmark for TensorShapeOld.\n\nPiperOrigin-RevId: 168551108\n\n---\nCommit dc1eda8a6 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Fix CHECK-failure crash if a non-tuple was passed to GetTupleElement.\n\nPiperOrigin-RevId: 168550703\n\n---\nCommit 010922ed9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 168549989\n\n---\nCommit c8a6131e9 authored by Mark Daoust<markdaoust@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nmake `tf.sets` examples executable\n\nFixes #12969\n\nPiperOrigin-RevId: 168549712\n\n---\nCommit bece65c6f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse a map instead of a vector of Children() in the BeamEntry.\n\nThe assumption is that since the entries are sparse (they are all populated, but most are never Active()), using the map will save memory and make iterating over the Children() more efficient.\n\nPiperOrigin-RevId: 168548814\n\n---\nCommit 0d5ab82ce authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 168548642\n\n---\nCommit 3331c574b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nImplementing gradients for tf.image.resize_bicubic.\n\nPiperOrigin-RevId: 168547412\n\n---\nCommit 4982ef0fa authored by Martin Wicke<wicke@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd the ability to warn only once if deprecated functionality is used, and make that the default.\n\nPiperOrigin-RevId: 168545655\n\n---\nCommit 99423416a authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Make shape inference error messages for the While HLO more readable. Build the error lazily.\n\nPiperOrigin-RevId: 168531083\n\n---\nCommit d10374e45 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDiscard some unneccessary logging commands.\n\nPiperOrigin-RevId: 168500721\n\n---\nCommit 83cbabb85 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix wrong format of logging message.\n\nPiperOrigin-RevId: 168497373\n\n---\nCommit eec4f1b3a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 168494944\n\n---\nCommit 69301f352 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 168494220\n\n---\nCommit 9d56f419c authored by Mingxing Tan<tanmingxing@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd crop_and_decode_jpeg_op that combines the crop and decode for better\nperformance.\n\nPiperOrigin-RevId: 168493125\n\n---\nCommit 48ddf64d0 authored by Chris Leary<leary@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Make large params test only run in opt builds.\n\nPiperOrigin-RevId: 168491913\n\n---\nCommit 11d3ac29d authored by Chris Leary<leary@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add tests for large numbers of parameter / return values and while loops.\n\nPiperOrigin-RevId: 168487225\n\n---\nCommit 3cd6bdef5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded test cases on R4 slice.\n\nPiperOrigin-RevId: 168482049\n\n---\nCommit 46a81b5c3 authored by Jacques Pienaar<jpienaar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd cast S64 to F32 test.\n\nPiperOrigin-RevId: 168473650\n\n---\nCommit 59bdf598d authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd an automatically-generated ""tensorflow.python.platform.build_info"" script.\n\nThe motivation for this script is to provide better tools for\ndiagnosing load-time errors (such as the ones that plague the Windows\nbuild due to DLL issues). Note that the script is intended to be\nself-contained, so that it is possible to import it without loading\nthe entire TensorFlow runtime.\n\nThis generated script currently contains a single symbol,\n`is_cuda_build`, which records whether the build has GPU support or not.\n\nPiperOrigin-RevId: 168471034\n\n---\nCommit c3b86347f authored by Olivia Nordquist<nolivia@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nreenabling tests that are passing\n\nPiperOrigin-RevId: 168466361\n\n---\nCommit c728665ec authored by Henry Tan<henrytan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd const qualifiers whenever appropriate.\n\nPiperOrigin-RevId: 168465926\n\n---\nCommit bf96fcd13 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse the scalar cache in MeanGrad.\n\nPiperOrigin-RevId: 168462267\n\n---\nCommit 1cada9ea2 authored by Olivia Nordquist<nolivia@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nreenabling test that passed after 100 runs w/o timing out\n\nPiperOrigin-RevId: 168458634\n\n---\nCommit 00c865566 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGenerate error (instead of segfault) when trying to copy string tensor\nto GPU in EagerTensor constructor.\n\nPiperOrigin-RevId: 168457320\n\n---\nCommit 655f26fc7 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nResurrects autograd-free eager gradients.\n\nPiperOrigin-RevId: 168448557\n\n---\nCommit 8f37f3002 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Cleanups to handling of arguments during XLA compilation:\n* combine resource kinds in XlaCompiler::Argument::Kind, use a separate XlaResource::Kind field to distinguish different kinds of resource.\n* merge XlaContext::HandleOrConstant and XlaExpression, which were almost identical.\n* remove XlaContext::Argument; instead, build XlaExpressions directly from XlaCompiler and add them to the XlaContext.\n\nPiperOrigin-RevId: 168439341\n\n---\nCommit 7f5346a80 authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nReduce cmake log mess.\n\n* Echo off for the .bat scripts.\n* TF cmake: disable warnings in some of the patched projects (gif,jpeg,lmdb).\n\nPiperOrigin-RevId: 168432070\n\n---\nCommit 2ad85aa4d authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse xla/tests:xla_internal_test_main for all tests under tf/compiler/xla\nand remove any main() definitions in tests. This enables use of flags\nin all tests.\n\nPiperOrigin-RevId: 168424796\n\n---\nCommit cd377811d authored by Henry Tan<henrytan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nComment and error message consistency cleanup.\n\nPiperOrigin-RevId: 168422582\n\n---\nCommit 7c19b82af authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate tf.sparse_reset_shape so that when shrinking the shape of an empty\nsparse tensor, the result has a shape of all zeros.\n\nPiperOrigin-RevId: 168419639\n\n---\nCommit fcacb40d4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFirstReadyManager for scheduling nodes in VirtualScheduler.\nThe current FIFOManager may yield inefficient scheduling; _Recv pushed to the\nFIFO blocks other nodes that can run before _Recv due to the node order in FIFO.\nFirstReadyManager picks a node with the earliest time_ready in the queue,\navoiding this problem.\n\nAlso, fixed VirtualPlacer to properly set device when Node\'s device name does not\ninclude job name and to set GPU:0 as default device.\n\nPiperOrigin-RevId: 168418455\n\n---\nCommit 7e47624f5 authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\neager: Initial support for iteration over tf.contrib.data.Dataset objects.\n\nTODO:\n- Support function-valued operation attributes in eager\n  (Required for MapDataset, FilterDataset etc. which encode the\n  per-element computation in a TensorFlow function)\nPiperOrigin-RevId: 168418250\n\n---\nCommit b0a397fce authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\neager: Remove unnecessary TFE_Context argument to TFE_OpSetDevice.\n\nPiperOrigin-RevId: 168417999\n\n---\nCommit 86211d554 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGraph transform to flatten atrous (dilated) convolutions (i.e., a sequence of SpaceToBatchND-Conv-BatchToSpaceND ops) to a regular Conv op with upsampled filters.\n\nPiperOrigin-RevId: 168414124\n\n---\nCommit 3438981ca authored by David G. Andersen<dga@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nApply exported symbol filtering to the c++ API analogously to\nwhat is filtered for the C API.\nFixes bug reported in comments on #1924\n\nPiperOrigin-RevId: 168413719\n\n---\nCommit 7e023d865 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA:CPU] Remove code from parallel CPU backend outlining that was causing unnecessary copies to be inserted, and which is no longer necessary since we added co-located buffer support for kCall.\n*) All bitcast copy is no longer necessary as CopyInsertion will insert copies\nat the root of the computation for a parameter which is live-out.\n*) Copy if root does not define buffer no longer necessary because colocated\nassignment looks at points-to set of root instruction.\n\nPiperOrigin-RevId: 168412076\n\n---\nCommit 5da4df92c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSimplify some code in grappler_item_builder.cc, no change in logic.\n\nPiperOrigin-RevId: 168409110\n\n---\nCommit 82ec6241a authored by drpngx<drpngx@users.noreply.github.com>\nCommitted by GitHub<noreply@github.com>:\nAdd six and numpy imports\n---\nCommit 9c4ce2452 authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd flag parsing to more tests in xla/service specifically those which build\nHLO graphs. This enables, for example, dumping of the graphs with\n--xla_generate_hlo_graph. Also remove some superfluous tensorflow test_main\ndependencies.\n\nPiperOrigin-RevId: 168406746\n\n---\nCommit d4efa695c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRelax the feed_nodes collection check, which triggers a false positive in some modes where the feed node collection is auto-generated. Keep it as a warning to help correct user-provided feed node lists.\n\nPiperOrigin-RevId: 168396408\n\n---\nCommit cbc46a856 authored by Changming Sun<chasun@microsoft.com>\nCommitted by gunan<gunan@google.com>:\nAdd a missing template explicit instantiation of SetZeroFunctor (#12791)\n\n---\nCommit 7bb08f5bf authored by Kevin Slagle<kjslag@gmail.com>\nCommitted by drpngx<drpngx@users.noreply.github.com>:\nfix ExponentialMovingAverage documentation so that ExponentialMovingAverage.apply is evaluated within control_dependencies (#12987)\n\n---\nCommit e6b011763 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtend c++ gradient_checker to complex types.\n\nPiperOrigin-RevId: 168392949\n\n---\nCommit 4086219a4 authored by Lyndon White<oxinabox@ucc.asn.au>\nCommitted by drpngx<drpngx@users.noreply.github.com>:\nCorrect minor typo in substr docs example (#12991)\n\n---\nCommit f63aa7f49 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMigrate core TFGAN functions to opensource.\n\nPiperOrigin-RevId: 168391923\n\n---\nCommit bc6b60f1b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix tuple_losses bug caused by Python bug.\n\nPiperOrigin-RevId: 168386341\n\n---\nCommit 7a8c63da3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMigrate `leaky_relu` to `nn_ops.py`. Will be used for TFGAN.\n\nPiperOrigin-RevId: 168386268\n\n---\nCommit f7ba16fdf authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDo not export from eval on train data steps.\n\nPiperOrigin-RevId: 168374021\n\n---\nCommit 9b9e54b34 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdding NCCL sum op, register all_sum gradient.\nStreamlining nccl test.\n\nPiperOrigin-RevId: 168347428\n\n---\nCommit bc300318e authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate gemmlowp hash as the commit history seems to have changed in the\nrepository.\n\nPiperOrigin-RevId: 168343607\n\n---\nCommit 1e96d54d9 authored by gunan<gunan@google.com>\nCommitted by GitHub<noreply@github.com>:\nAlso accept non-k8 CPU types in build pip package. (#12975)\n\n* Also accept non-k8 CPU types in build pip package.\nFixes #12735\n\n* Make the script work with `set -e`.\n\n---\nCommit c0a4c7ffc authored by Chris Leary<leary@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Fix bug in ShapeUtil::ShapeIs that would lead to type inference errors.\n\nPiperOrigin-RevId: 168323589\n\n---\nCommit 4af9be964 authored by Amy<amy@infosleuth.net>\nCommitted by drpngx<drpngx@users.noreply.github.com>:\nsupport passing in a source url to the mnist read_data_sets function, to make it easier to use \'fashion mnist\' etc. (#12983)\n\n---\nCommit 9f848734f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nTweak layer a bit to be eager friendly.\n\nPiperOrigin-RevId: 168312865\n\n---\nCommit 60f15462b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nChange conv_input_scale and side_input_scale from attributes to inputs for improved flexibility, in fused_conv2d_bias_activation op.\n\nPiperOrigin-RevId: 168311988\n\n---\nCommit 4b4e10f9c authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds dict support of eval metrics.\n\nPiperOrigin-RevId: 168310444\n\n---\nCommit ab7f22de6 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMove FusedConvBiasActivationShape out of common_shape_fns.cc to a lambda inside the op.\n\nPiperOrigin-RevId: 168300911\n\n---\nCommit 3a98035fa authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Augment metadata output with source-line info, as before.\n\nPiperOrigin-RevId: 168292527\n\n---\nCommit 349188152 authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nEnable fused batch norm, which is 15-20% faster for training and inference.\n\nPiperOrigin-RevId: 168288154\n\n---\nCommit 08587d45b authored by Yuefeng Zhou<yuefengz@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded back persistent memory tracking in queue op. The new tracking logic has avoided the crash in previous implementation:  the queue_ passed to CreateTypedQueue may be unreffed if the resource is already created by another resource op that shares the same resource name and type.\n\nPiperOrigin-RevId: 168284509\n\n---\nCommit 733063d55 authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nFixing awkward wording.\n\n---\nCommit c7ad6bfef authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nRemoving accidental hash.\n\n---\nCommit 53dbc761a authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nAdding Windows self check script to docs.\n\n---\nCommit ed1135994 authored by Andrew Harp<andrewharp@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd -latomic flag to benchmark_model target to fix Android x86 build.\n\nPiperOrigin-RevId: 168281337\n\n---\nCommit c0348bb55 authored by Anna R<annarev@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate tf_export.py to take constant name as an argument instead of a constant.\n\nPiperOrigin-RevId: 168280613\n\n---\nCommit c3d19e40a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nCleanup training_ops to reduce code redudancy.\n\nPiperOrigin-RevId: 168280069\n\n---\nCommit 123fb01ee authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSet fused=False for batch norm, because the test assumes no bessel\'s\ncorrection. Fused=True would add bessel\'s correction to variance.\n\nPiperOrigin-RevId: 168274392\n\n---\nCommit f0e8c545e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSwitch resource variables from copy-on-read to copy-on-write.\n\nRELNOTES: Change the signature of (C++) GetInputTensorFromVariable in\ntraining_op_helpers to support new copy-on-write semenatics of resource\nvariables.\nPiperOrigin-RevId: 168273249\n\n---\nCommit 495cc8e47 authored by Yuan (Terry) Tang<terrytangyuan@users.noreply.github.com>\nCommitted by drpngx<drpngx@users.noreply.github.com>:\nMinor wording change in timeseries module\'s README (#12938)\n\n* Minor wording change in timeseries module\'s README\n\n* Address comments\n\n---\nCommit f13b876ed authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nMaking the default build from source version 1.4.0dev. The whl files that are built will be 1.3.0devDDMMYYYY.\n\n---\nCommit 2356c0ff4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDelete ScopedTFStatus to avoid leaking it for long running trainers(1+day).\n\nPiperOrigin-RevId: 168259652\n\n---\nCommit e15f4cae2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDon\'t remove all aliases from linalg namespace.\nGet rid of redundant aliases.\n\nPiperOrigin-RevId: 168257658\n\n---\nCommit c58082642 authored by postBG<profile2697@gmail.com>\nCommitted by drpngx<drpngx@users.noreply.github.com>:\nFix minor typo in Programmers guide (#12965)\n\n* Fix minor typo in Programmers guide\n\n* change to ""this""\n\n---\nCommit 509372c2e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a lot of operations\' flops calculations\n\nPiperOrigin-RevId: 168256746\n\n---\nCommit 80ed8afc0 authored by Francois Chollet<fchollet@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd Flatten to core layers.\n\nPiperOrigin-RevId: 168254118\n\n---\nCommit a6223c01a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix locking of variables in SparseProximalGradientDescent,\nAdagradDA, SparseAdagradDA.\n\nPiperOrigin-RevId: 168252530\n\n---\nCommit abde00830 authored by Olivia Nordquist<nolivia@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nadding InputTensor class for symmetry with OutputTensor\n\nPiperOrigin-RevId: 168250085\n\n---\nCommit 0451032ca authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Fix variable naming style guide violation.\n\nPiperOrigin-RevId: 168245542\n\n---\nCommit a202a5a94 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 168245371\n\n---\nCommit f93e354cb authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf.contrib.data] Switch backend Dataset representation to DT_VARIANT.\n\nThis change introduces a new `DatasetWrapper` type that wraps a\n`DatasetBase*` and can be stored in a DT_VARIANT tensor. All Dataset\nops now consume and produce DT_VARIANT instead of DT_RESOURCE, and the\nunderlying implementation is simplified because the `DatasetWrapper`\ncan be passed directly by value without using the `ResourceMgr`.\n\nPiperOrigin-RevId: 168240571\n\n---\nCommit a4042cd2a authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIntroduces the placeholder for _TrainingExecutor, which serves the implementation of tf.estimator.train_and_evaluate.\n\nPiperOrigin-RevId: 168240151\n\n---\nCommit 10ba148f7 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSwitch control_flow_ops library to use Resource variants of Stack operators, instead of deprecated Ref variants.\n\nPiperOrigin-RevId: 168234822\n\n---\nCommit ca43fe82b authored by Ali Yahya<alive@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nTFE: Improves the interfaces of tape.watch_variable() and implicit_grad().\n\ntape.watch_variable() replaces tape.watch() and now is called on ResourceVariable objects instead of their underlying handles.\n\nimplicit_grad() now returns a list of (gradient, variable) pairs to be consistent with tf.Optimizer\'s interface.\n\nPiperOrigin-RevId: 168232055\n\n---\nCommit b72862dfc authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ninternal change\n\nPiperOrigin-RevId: 168225993\n\n---\nCommit da3280f4d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRe-enable tsan for sdca_estimator_test.\n\nPiperOrigin-RevId: 168186374\n\n---\nCommit c936c1155 authored by Yifei Feng<yifeif@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix pip tests for contrib/gan.\n- Add *_impl.py so tests can still access removed symbols.\n- Add /python directory layer to make *_impy.py and __init__.py not in the same dir.\n\nPiperOrigin-RevId: 168161722\n\n---\nCommit ce9a2b00f authored by Toby Boyd<tobyboyd@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPerformance guide update\n\nPiperOrigin-RevId: 168159289\n\n---\nCommit 3bce4f9a0 authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nTFE: expose tfe.num_gpus()\n\nPiperOrigin-RevId: 168154345\n\n---\nCommit 67a7cbc28 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nChanged the default eval throttle secs from 2 min to 10 mins.\n\nPiperOrigin-RevId: 168120323\n\n---\nCommit 92bed178f authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nReduce cmake log mess.\n\n* Echo off for the .bat scripts.\n* TF cmake: disable warnings in some of the patched projects (gif,jpeg,lmdb).\n\nPiperOrigin-RevId: 168119914\n\n---\nCommit 702d59582 authored by joshkyh<joshkyh@users.noreply.github.com>\nCommitted by Yifei Feng<fengyifei2026@gmail.com>:\nCorrected hyperlink for audio training tutorial (#12923)\n\n---\nCommit 877c9deca authored by Frank Chen<frankchn@gmail.com>\nCommitted by Yifei Feng<fengyifei2026@gmail.com>:\nReverse change eb75ded6 so that internal tests will pass. (#12933)\n\nAs support for int64 global steps is not ready in TPUs, I am reversing this change so that our internal performance and regression tests will pass.\n---\nCommit 665966438 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRe-enable grpc_session_test.\n\nPiperOrigin-RevId: 168078694\n\n---\nCommit 405def792 authored by Chris Leary<leary@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Switch CallInliner to use CallGraph::VisitNodes.\n\nPiperOrigin-RevId: 168078645\n\n---\nCommit aba3466f1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExposes Head and factory methods in tf.contrib.estimator.\n\nPiperOrigin-RevId: 168071246\n\n---\nCommit b76565b39 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSome profiler fixes and cleanup.\n\nPiperOrigin-RevId: 168069346\n\n---\nCommit 32ffc5a81 authored by Jonas<sauercrowd@users.noreply.github.com>\nCommitted by Yifei Feng<fengyifei2026@gmail.com>:\nJust a dot in order to be consistent (#12919)\n\nadded a dot to the `7` to make clear it\'s a float (like every other number)\n---\nCommit 0753b0c79 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nScope the scalar cache in the context.\n\nPiperOrigin-RevId: 168065417\n\n---\nCommit 48deb206b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMigrate TFGAN features to third_party.\n\nPiperOrigin-RevId: 168060880\n\n---\nCommit d2ae1311f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixing an issue in the BUILD file of the LSH ops.\n\nPiperOrigin-RevId: 168056645\n\n---\nCommit 2f440eda4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExpose NumpyReader for reading timeseries data.\n\nPiperOrigin-RevId: 168055838\n\n---\nCommit be1916ce7 authored by Daniel Grazian<dgr@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded functionality to allow `SqlDataset` to interpret a database column as various numeric types, including several integer types and `dtypes.float64`.\n\nPiperOrigin-RevId: 168055827\n\n---\nCommit fa2000a0b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSupporting nightly windows pip packages.\n\nPiperOrigin-RevId: 168054959\n\n---\nCommit a263ea626 authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\neager: Treat eager tensors as constants during graph construction.\n\nUnless capturing is explicitly enabled.\n\nPiperOrigin-RevId: 168052675\n\n---\nCommit 6e402d0d2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake TODO a bit more specific.\n\nPiperOrigin-RevId: 168051381\n\n---\nCommit c779384bc authored by Daniel Grazian<dgr@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded code example to the doc string for `SqlDataset`.\n\nPiperOrigin-RevId: 168049037\n\n---\nCommit ff6dd474a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse self._in_graph_mode consistently in ResourceVariable\ninstead of sometimes getting it from the context.\n\nAlso: fix formatting of a comment and use a more precise test to detect\nif initial_value is set.\nPiperOrigin-RevId: 168047258\n\n---\nCommit f331f528b authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemoves ""fast paths"" which are not fast in eager mode.\n\nPiperOrigin-RevId: 168046278\n\n---\nCommit 86f1713e5 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIntroduces TrainSpec and EvalSpec.\n\nPiperOrigin-RevId: 168040435\n\n---\nCommit c8b9e92f0 authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\neager: Move ""register_function"" to context.py\n\nThis will allow function registration from other\nmodules without having to import ""function.py"".\n(And besides, the function really does belong on the context).\n\nPiperOrigin-RevId: 168040411\n\n---\nCommit 74137f994 authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix signed int overflow issue in tensor_id.cc\n\nWhen a node name has a long numeric suffix, e.g.,\n""foo/y_0/gradient_debug_09684b60f2184c67b744721915034528"" (as has happened with tfdbg GradientsDebugger),\n\nthe parsing algorithm in ParseTensorName() may experience signed int overflow. Replacing the types with ""unsigned int"" resolves the issue.\n\nPiperOrigin-RevId: 168039195\n\n---\nCommit 450c3b562 authored by Rohan Jain<rohanj@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUsing rendezvous manager to pass args / rets between devices during function remote execution. This enables CPU->GPU remote device executions now.\n\nPiperOrigin-RevId: 168038285\n\n---\nCommit 82cc6529f authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixes the wording about StopIteration.\n\nPiperOrigin-RevId: 168034451\n\n---\nCommit fb5588002 authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a statement on install/index.md on what os are supported.\n\nPiperOrigin-RevId: 168032996\n\n---\nCommit f83f6b9ef authored by Chris Leary<leary@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Handle higher-order HLOs (e.g. While) in CallInliner and test.\n\nPiperOrigin-RevId: 168029345\n\n---\nCommit 8988ae365 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 167916124\n\nPiperOrigin-RevId: 168916710'"
87f5182a5644993e747c2f42dfe6da75b7431e66,'Fix broken test: tensorflow/contrib/eager/python:datasets_test\n\nPiperOrigin-RevId: 168914742'
8b96630c683f89cd38d461f0d09a5231185bc4eb,'Fixing the build command.\n\nPiperOrigin-RevId: 168881605'
75dbd123c8792f14b676ee75abcc12126c866549,"'tfdbg: fix a bug in list_inputs and list_outputs\n\nwherein a tensor name like ""x:1"" fails to be processed because it were not converted to the node name (""x"" in this example) first.\n\nAlso simplify analyzer_cli_test.py a little through a new helper function.\n\nPiperOrigin-RevId: 168867948'"
efbffdc9df54150552be8718efc7242ff28c8de4,'Bugfix to tf.contrib.seq2seq beam_search_ops: GPU edge case of seq_len == 0.\n\nPiperOrigin-RevId: 168862288'
405b657c07b1754d831a0442eec0d9c5df793042,'Fix a bug in export GTFlow model to shared format with sparse float split\n\nPiperOrigin-RevId: 168802503'
660fa880254c1149ff16260e4269dd976a10a032,"'Fix typo ""comptuation"" (computation)\n\nPiperOrigin-RevId: 168799777'"
9d38152d7b35771f0f7dd0203267df3b395aa18b,'Fixes str/bytes error with iterator_ops_test that made it fail while using python3.\n\nPiperOrigin-RevId: 168769464'
57a4506da1fe74a41812a2b843c46b5fd010193d,"'Verify the output shapes of (almost) all HLO opcodes in the HloVerifier.\nPreviously, only the elementwise ones (approximately) were verified. As part\nof this change fix the newly identified brokenness. The only remaining\nunverified instruction is convolution which is being addressed in cl/166654245.\n\nPiperOrigin-RevId: 168763722'"
c28534e9a6a8fe59f21bb34722d933d15290c731,'Small fixes.\n\nPiperOrigin-RevId: 168763346'
14664766b12a205296342ed20cc17bc8fd3f07d6,"""Improve function name sanitization, and add IrName helper.\n\n* Rename SanitizeIrName to SanitizeFuntionName, because that's what it's\n  for.  LLVM IR names can be basically anything, but function names have\n  to be sanitized to meet the restrictions of the NVPTX backend.\n  (Arguably this is a bug, but people have tried to fix it multiple\n  times, and their changes keep getting stuck.)\n\n* Make SanitizeFunctionName actually sanitize the given name.\n  Previously, it got rid of some, but certainly not all, invalid chars.\n\n* Add a new function, IrName, which lets you construct a name for use in\n  LLVM IR from an HLO instruction and a suffix.\n\nPiperOrigin-RevId: 168759752"""
189b2b47a18a1302b9f272e423798db4234cbbc1,"""Add WAR for nvcc's brokenness on windows related to std::complex\n\nFixes #12977\nFixes #13038\n\nPiperOrigin-RevId: 168757307"""
40d4a31545b6cb61e52c9b07827c6ca92c09ce75,"'eager: gradients_function now accepts primitives and numpy arrays.\n\nFixed bug which changed the output type of the gradients_function\nto be a list of primitives instead of a list of Tensors if the ""dy""\nargument was provided.\n\nPiperOrigin-RevId: 168748297'"
b3278ff54f7e5aff0ff577d529746347c2e009a0,'Fix core/kernels:android_tensorflow_image_op to be a no-op when compiled using a non-android config.\n\nPiperOrigin-RevId: 168736706'
dfc0ab4302a866f1f97b167be0e3c2a4e7b35f0a,"'Fix flaky test by mocking time in basic_session_run_hooks_test.py\n\nThis just copies the approach from the neighboring test, which was similarly fixed in https://github.com/tensorflow/tensorflow/commit/49bab39b2a1be64879ba95515ab6130b7b951be0.\n\nPiperOrigin-RevId: 168703402'"
47c27b0fbba73d461c64403b393bfbc833898959,'docs: Fix Anaconda environment creation step (#13042)\n\n(Python must be installed to environment before using pip.)'
4f9efa79990ca3aadeb00a24772de986a5fce614,'Android: globally use -latomic to link TF Android targets to fix x86 targets (if_android_mips was not sufficient)\n\nPiperOrigin-RevId: 168698051'
131a4240ce068e773c94adcd36d607ee07a26be5,'Fix cases where either predictions or eval_metric_ops is None.\n\nPiperOrigin-RevId: 168645572'
a5e424145cc56be306abf6689f05d16a43a955ca,'eager: fixes build rule; adds requisite srcs_version field.\n\nPiperOrigin-RevId: 168627900'
b04d3f2e5147baa99d994cc94029cb5136916604,"""Fix description of tf.norm as it doesn't actually accept `ord=0`.\n\nPiperOrigin-RevId: 168610199"""
0a78cccdf84000f85b847d34c440446b028ae08a,"""tfdbg: fix a bug wherein the debug session wrappers didn't really work as context managers\n\nPiperOrigin-RevId: 168590122"""
b00b6d23c8a243a3da7e7b145467053321747e92,'Fix a segmentation fault caused by invalid log directory in InternalFlush().\n\nPiperOrigin-RevId: 168557063'
2bc7a155a72d207b4e6254e2cc9a240d523c768e,"'Add uint16 support for tf.decode_raw (#12719)\n\n* Add uint16 support for tf.decode_raw\r\n\r\nThis fix tries to address the request raised in 10124 where\r\nuint16 support for tf.decode_raw is needed. tf.decode_raw\r\nalready support half, float32, float64, int8, int16, int32, int64,\r\nuint8. And uint16 was not supported.\r\n\r\nThis fix adds uint16 support for tf.decode_raw.\r\n\r\nThis fix fixes 10124.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix test failure caused by uint16 support of decode_raw and add unit tests.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
dc1eda8a6d06cff541be768a0c8e2b22b376651c,'[XLA] Fix CHECK-failure crash if a non-tuple was passed to GetTupleElement.\n\nPiperOrigin-RevId: 168550703'
c8a6131e9f40cc8b5db96e3098a7680e16b7d289,'make `tf.sets` examples executable\n\nFixes #12969\n\nPiperOrigin-RevId: 168549712'
83cbabb85c23af5c0c12523567ce0394d37e30ba,'Fix wrong format of logging message.\n\nPiperOrigin-RevId: 168497373'
fcacb40d4c5e2874f176b27ca75e7a1ce31fd87c,"""FirstReadyManager for scheduling nodes in VirtualScheduler.\nThe current FIFOManager may yield inefficient scheduling; _Recv pushed to the\nFIFO blocks other nodes that can run before _Recv due to the node order in FIFO.\nFirstReadyManager picks a node with the earliest time_ready in the queue,\navoiding this problem.\n\nAlso, fixed VirtualPlacer to properly set device when Node's device name does not\ninclude job name and to set GPU:0 as default device.\n\nPiperOrigin-RevId: 168418455"""
3438981ca7b659e57fb1e15152a1f9fd99b5d6bc,'Apply exported symbol filtering to the c++ API analogously to\nwhat is filtered for the C API.\nFixes bug reported in comments on #1924\n\nPiperOrigin-RevId: 168413719'
7bb08f5bf256f063bb311cb7b3353111508ce572,'fix ExponentialMovingAverage documentation so that ExponentialMovingAverage.apply is evaluated within control_dependencies (#12987)'
bc6b60f1bc79c2753cea087cf0eba1d76c5702df,'Fix tuple_losses bug caused by Python bug.\n\nPiperOrigin-RevId: 168386341'
1e96d54d9f928c4ea4bf0564ef9900f6bd03acd5,'Also accept non-k8 CPU types in build pip package. (#12975)\n\n* Also accept non-k8 CPU types in build pip package.\r\nFixes #12735\r\n\r\n* Make the script work with `set -e`.'
c0a4c7ffc2ebb06c544a0764a5812fdc2ddba336,'[XLA] Fix bug in ShapeUtil::ShapeIs that would lead to type inference errors.\n\nPiperOrigin-RevId: 168323589'
733063d5587d809a4999017365a220390d193497,'Fixing awkward wording.'
ed11359944331f9f539a2627f67e67ef4dac4f40,'Add -latomic flag to benchmark_model target to fix Android x86 build.\n\nPiperOrigin-RevId: 168281337'
c58082642d3eeae4473e669d69bf67d7ac5909c6,"'Fix minor typo in Programmers guide (#12965)\n\n* Fix minor typo in Programmers guide\r\n\r\n* change to ""this""'"
a6223c01a6ef252e23fd6c2c26d41d3b40483710,"'Fix locking of variables in SparseProximalGradientDescent,\nAdagradDA, SparseAdagradDA.\n\nPiperOrigin-RevId: 168252530'"
0451032ca43361b4448cd5d3f9058ec36598d172,'[XLA] Fix variable naming style guide violation.\n\nPiperOrigin-RevId: 168245542'
76ad78c6dddb138fee523c80f2701ef3ca56b316,"'Fix numpy-ndarray bug\n\nOn zSystems, the ndarray is not retaining the values for nparray. Defining the data type is required to get the desired behavior.'"
c936c1155dd2f205411dfd784bd490c4f7d3b240,'Fix pip tests for contrib/gan.\n- Add *_impl.py so tests can still access removed symbols.\n- Add /python directory layer to make *_impy.py and __init__.py not in the same dir.\n\nPiperOrigin-RevId: 168161722'
b76565b39dc23116d8f6c2593d213ce9e0b0d413,'Some profiler fixes and cleanup.\n\nPiperOrigin-RevId: 168069346'
d2ae1311f75fe1d453bd7c94cc1097cacb1cf8a0,'Fixing an issue in the BUILD file of the LSH ops.\n\nPiperOrigin-RevId: 168056645'
ff6dd474a624960e89a0a62a7855595cece2edca,'Use self._in_graph_mode consistently in ResourceVariable\ninstead of sometimes getting it from the context.\n\nAlso: fix formatting of a comment and use a more precise test to detect\nif initial_value is set.\nPiperOrigin-RevId: 168047258'
74137f994faad09593ae2daad6251a4ccf72f558,"'Fix signed int overflow issue in tensor_id.cc\n\nWhen a node name has a long numeric suffix, e.g.,\n""foo/y_0/gradient_debug_09684b60f2184c67b744721915034528"" (as has happened with tfdbg GradientsDebugger),\n\nthe parsing algorithm in ParseTensorName() may experience signed int overflow. Replacing the types with ""unsigned int"" resolves the issue.\n\nPiperOrigin-RevId: 168039195'"
82cc6529f4c8d23013096bb5f79514247aa73433,'Fixes the wording about StopIteration.\n\nPiperOrigin-RevId: 168034451'
bc9924d846f6c9535df856c5717640b51e1988e6,"'TFE: Fix an issue wherein tfe.list_device() didn\'t work\n\nThe function errorred out because the undocumented name ""context"" was removed in tfe.py.\n\nPiperOrigin-RevId: 168021533'"
088a880ad6adb4445643f5f5ebaeda32d5c2b1f6,"""Safely read content from InputStream (#12643)\n\n* Safely read content from InputStream\r\n\r\nChanged to use `ByteArrayOutputStream` on converting `InputStream` into `byte[]`, instead of relying on `InputStream. available()`.\r\n\r\n* Bigger initial buffer size to avoid some copying\r\n\r\n* construct byte[] in individual's preference\r\n\r\n* fix io exception not caught"""
92e779366134c6f053afa3c833e16a6ed60385e7,'Fixed typo. (#12914)'
c6eb4ecdb03aa89db83d5ca8d1d8a7228ab03ab3,'docs: Fix link to tf.estimator.DNNLinearCombinedRegressor (#12907)'
70e5618d2b8345e2be996b3b026abe1da4dbf6e4,"""Merge pull request #12900 from meteorcloudy/fix_patch_command\n\nDon't check patch command on Windows"""
4b9e50686928b858a0045e1ddcc0bab4acc7ff37,"'Fix C API Python wrapping for TF_DeviceListMemoryBytes and TF_Dim\n\nIt was returning Swig wrapped pointers, since Swig thinks int64_t is a complex\ntype.\n\nPiperOrigin-RevId: 168005582'"
d5f494ef3f8f1ad783582c74bb8b502ed4c106e1,"'SVD-operation on the GPU (#11878)\n\n* Added GPU implementation of SVD, but without complex number support and it requires m>=n\r\n\r\n* Removed debug logs\r\n\r\n* Fixed SVD: V-matrix was not transposed\r\n\r\n* Fixed SVD implementation, there was a memory corruption error. Also renamed it to the suffix .cu.cc for consistency.\r\n\r\n* Fixed stupid left-over from debug statements\r\n\r\n* fixed formatting with clang-format\r\n\r\n* small improvements based on the comments\r\n\r\n* further tiny improvemens\r\n\r\n* Refactoring, now it should also support m<n, but tests still fail sometimes\r\n\r\n* Added explicit gpu tests\r\n\r\n* Formatting\r\n\r\n* Added checks if DoTranspose was successfull\r\n\r\n* It really is a bug in cuSolver that it always returns zeros for Vt if n==1, but my workaround does not always work yet\r\n\r\n* Fixed cuSolver issue if one dimension of the input matrix is one\r\n\r\n* fixed buildifier error\r\n\r\n* improved readability\r\n\r\n* Fixed a stupid error. This happens if you make changes without testing it\r\n\r\n* Fixed a bug if n==1 and full_matrices=false\r\n\r\n* Implemented changes requested from the Github comments, Moved n==1-fix kernels outside of the batch loop to compute them once over all batches.\r\n\r\n* Cleanup tasks\r\n\r\n* Added TODO what has to be done to support complex matrices\r\n\r\n* fixed issue that the order of } (end namespace) and #endif (GOOGLE_CUDA) was mixed up. This breaks the code if CUDA is disabled'"
0e69f536c13d6db7e8276ee7ffe249a82d89f246,"'[android demo] fix issue #12431 Java implementation of YUV420SP to ARGB8888 converting (#12622)\n\n* Java implementation of YUV420SP to ARGB8888 converting\r\n\r\n* 4 spaces for indentations on continued lines\r\n\r\n* for maximum parallelism with convertYUV420ToARGB8888, output should be the last argument\r\n\r\n* moving common code into helper function YUV2RGB\r\n\r\n* ternary assignment for readability purposes\r\n\r\n* refactoring and cleaning for readability\r\n\r\n* Minor whitespace cleanup'"
fff97f291a92c1f1c837891bcaccbb64ef334311,'Fix merge issue.'
ead3cd6d171c9ea3d5e3fe0143952799ec54fc22,'Fix cmake build.\n\nPiperOrigin-RevId: 167933991'
368dc7946df78b253c4aaea9718cd517200528c6,'Merge pull request #12584 from facaiy/BUG/one_hot_column_missing_label\n\nFix: indices is out of bounds in _OneHotColumn'
a52fc6278299fb6d647609f2b49c0c4cb087b646,"""Fix issue in batch_norm (#12865)\n\n* Fix issue in batch_norm where center=False, data_format='NCHW' and zero_debias_moving_mean=True\r\n\r\nThis fix closes 11673.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test case for issue 11673.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
b92d538836ec24553bb241e00305752c426e18c3,'Merge pull request #12705 from yanivbl6/removed_dependancy_on_dup_flag_for_verbs\n\nVerbs fix: Removed Dependency on Duplicate Recv Flag'
54d39c1775c3ecf215439aca35c53403b3007208,"'Fix non-deterministic bug in constant folding. The shape_map was a map from Node* to InferredShapes, but during constant folding graph nodes are deleted and created, leading to potential issues where a Node* key in the map might become invalid: a new graph node would appear to point to a value in the map because it shared a pointer address with a deleted node. Switching to names fixes this. Although in principle a graph node can be removed and replaced by another node with the same name and different numbers or shapes of outputs, that doesn\'t happen during optimization. It\'s not obvious how to enforce the invariant that new optimization passes don\'t do that, however it seems at odds with the functionality of ""optimization"" to change the semantics of a node in that way so hopefully it won\'t happen.\n\nPiperOrigin-RevId: 167927304'"
997b9f275b70f49d19a410f591f176906af17ceb,'Fix pass names checked in harness for disabling expensive passes.\n\nRELNOTES: n/a\nPiperOrigin-RevId: 167927182'
031024cbf90d94b70d67fb33163ee89e86dbb329,'Merge pull request #12714 from taion/cm-dtype\n\nFix dtype for streaming confusion matrix'
00d61d44c3c233f8f045227d44dcd57059cab288,'fixed mkl_op_registery'
14ae0a63a1402ba8cd7c00797d6fc3885efb54ce,'Merge pull request #12890 from EdwardDixon/fix_broken_conv_op\n\nMKL build broken / Proposed fix here'
b6215a6681fdd1c3d56dc1c5e6acc33d69f91b4d,"'Provide a public property to access model_fn of an Estimator. An example usage of it for extending model_fn is in tf.contrib.estimator.add_metrics function.\n\nDesign decisions:\n* `params` is bound to the returned function: model_fn is made public to help framework developers to extend/compose estimators. We assumed that framework developer does not know much information about how one estimator/model_fn is constructed. We think `params` is part of model_fn construction. If a framework combines estimators, each estimator may be created with different params. Combining those params into single one may create conflicts.\n* model_fn property have a fixed signature instead of optional arguments. We made model_fn arguments as optional to simplify model_fn implementations. In this case users are not model_fn developers but model_fn users. If we kept the arguments optional, then framework developers should handle that optional logic for every model_fn usage. Also model_fn is called by Estimator. Estimator have all those arguments. So there is no need to make them optional.\n\nPiperOrigin-RevId: 167914400'"
a9d7985b2259ac42f9979b9c98c54f007e607544,'Merge pull request #12800 from yongtang/12403-incorrect-error-message\n\nFix incorrect error message in TensorArray.scatter'
70ca6c4c29cc011e015db504abd64cc5f3ec7996,'Merge pull request #12886 from andrewcmyers/java-uint8-fix\n\nFixed #12797: uint8 now has a length'
03c7d7039eee888371b8b079a602472ea2fa0bf7,'Merge pull request #12858 from Keno42/fix/README\n\nFix a path in README.md'
bca067249c91d737345d922913448ec860f50755,"""Merge pull request #12868 from marcelpuyat/master\n\nFix minor typo in Programmer's Guide docs"""
4277099445e5903672410800ef9e9da2ef50741d,'Merge pull request #12884 from tensorflow/terrytangyuan-patch-1\n\nFix typos in contrib.estimator.extenders.py'
0e6735d1d82348415a5c34fc5e1881ae93eb760b,'Merge pull request #12809 from resec/patch-11\n\nFix compile_nsync.sh'
16c8dd51c0ec8f4fc044365394041d1022a49ff8,'Merge pull request #12820 from eaplatanios/install_name_fix\n\nInstall name fix for libtensorflow.so'
e02ca8a56cb614e2527d90acd7f6cba3c7bd73a4,'Merge pull request #12845 from meteorcloudy/fix_saver_test\n\nMake saver_test pass on Windows Bazel Build'
8403a195522b5d7e707c36316ec8d8fd05f33183,"'Fixed #12797: uint8 now has a length, so tensors of it can be constructed.'"
e1a04e51283f63470968206f924939f344019a7a,'Fix typos in contrib.estimator.extenders.py'
d8e5a8c6835272f773f16cfb8e59bd918fd4f586,'Fixed a typo in documentation for select_last_activations().\n\nPiperOrigin-RevId: 167872349'
f8da4742553f401231b15fa145c208f0bf184599,"'Merge changes from github.\nEND_PUBLIC\n\n---\nCommit 18f369271 authored by Yifei Feng<fengyifei2026@gmail.com>\nCommitted by gunan<gunan@google.com>:\nBranch 167812735 (#12867)\n\n* Internal cleanup\n\nPiperOrigin-RevId: 167636242\n\n* Move the Keras API to tf.keras.\n\nPiperOrigin-RevId: 167638421\n\n* Automated g4 rollback of changelist 167604306\n\nPiperOrigin-RevId: 167639833\n\n* Call HloComputation.Accept instead of HloInstruction.Accept to get all instructions profiled.\n\nRELNOTES: n/a\nPiperOrigin-RevId: 167640259\n\n* Add fast math attributes to all generated methods when fast math enabled.\n\nRELNOTES: n/a\nPiperOrigin-RevId: 167646637\n\n* Extended ScratchSpace to expose its underlying scratch tensor object.\n\nPiperOrigin-RevId: 167649551\n\n* Change zip(...)[1] to list(zip(...))[1], for python 3 compatibility.\n\nPiperOrigin-RevId: 167654035\n\n* Add scoped timer to log jit compile times.\n\nRELNOTES: n/a\nPiperOrigin-RevId: 167656720\n\n* Verify that predictions are in the expected range for ops that use thresholds, e.g. tf.contrib.metrics.streaming_auc.\n\nPiperOrigin-RevId: 167658134\n\n* Internal change.\n\nPiperOrigin-RevId: 167658401\n\n* Fix list formatting\n\nPiperOrigin-RevId: 167660250\n\n* Enable java test.\n\nPiperOrigin-RevId: 167660276\n\n* Add shape functions on debug ops.\n\nPiperOrigin-RevId: 167668811\n\n* Increase session_bundle_test to a medium test.\n\nPiperOrigin-RevId: 167672587\n\n* Include layout of convolution input data in the op_profile.\n\nPiperOrigin-RevId: 167680208\n\n* Fix tf.sparse_add for SparseTensor with _ref typed values.\n\nExample:\nst = tf.SparseTensor(\n    indices=[[1]], values=tf.Variable([1.0]), dense_shape=[1])\ntf.sparse_add(st, st)\nPiperOrigin-RevId: 167681121\n\n* Fix conversion to explicit scalar broadcast\n\nThe dimensions field of a broadcast HLO op is meant to be populated with the\ndimensions that are broadcasted, which in case of a scalar is the empty vector.\nGenerally, the rank of the operand of a broadcast op should always equal the\nsize of the dimensions vector.\n\nPiperOrigin-RevId: 167686946\n\n* Add \'unknown shape\' shape functions on deprecated linalg ops.\n\nPiperOrigin-RevId: 167719029\n\n* Be more careful in IsInitalized, and log when it is called on an unknown\nnode_id.\n\nPiperOrigin-RevId: 167722344\n\n* tfdbg: Refactor graph-processing code out of debug_data.py\n\nThe basic idea is to separate the code in debug_data.py that handles graph structures into its own module (debug_graphs.py). This tackles an existing TODO item to simplify the code debug_data.DebugDumpDir.\n\nIn a later CL, code will be added to debug_graphs.DebugGraph to allow reconstruction of the original GraphDef, i.e., the GraphDef without the Copy* and Debug* nodes inserted by tfdbg. This will be useful for, among other things, the TensorBoard Debugger Plugin.\n\nPiperOrigin-RevId: 167726113\n\n* internal\n\nPiperOrigin-RevId: 167727508\n\n* Update MaxPoolV2Shape to support NCHV_VECT_C.\n\nPiperOrigin-RevId: 167732437\n\n* Deleting tf.contrib.learn.dnn benchmark tests.\n\nPiperOrigin-RevId: 167741308\n\n* Fix off-by-one documentation error.\n\nsequence_lengths is the actual length of the sequence and therefor should not be used as zero-based indexing.\nThe code is correct but the documentation was misleading.\n\nPiperOrigin-RevId: 167742082\n\n* contrib summaries work in eager-graph mode (with defun)\n\nAs a side effect fix issues related to using eager-defined variables in graph\nmode.\n\nPiperOrigin-RevId: 167744121\n\n* Fix minor documentation error in ZlibInputStream.\n\nPiperOrigin-RevId: 167745218\n\n* Sets the distributed training related properties of RunConfig based on TF_CONFIG.\n\nPiperOrigin-RevId: 167752997\n\n* Improved documentation about eval ops in EstimatorSpec.\n\nPiperOrigin-RevId: 167753099\n\n* Automated g4 rollback of changelist 156748870\n\nPiperOrigin-RevId: 167753805\n\n* Make cuda_solvers_gpu.cu.cc compile with nvcc8.\n\nPiperOrigin-RevId: 167754383\n\n* Add csv dataset example to get_started/regression.\n\nPiperOrigin-RevId: 167754634\n\n* Switches to OrderedDict to make the dictionary order deterministic so we have less randomness from graph building.\n\nPiperOrigin-RevId: 167755072\n\n* Add int8 version of fused_conv2d_bias_activation operator for the forward phase,\nand support side_input and scaling parameters in float and int8 versions.\n\nPiperOrigin-RevId: 167763219\n\n* Make the text summary write no plugin data content\n\nThis is actually a safe removal because no logic makes use of the content of text plugin data.\n\nPiperOrigin-RevId: 167763880\n\n* Avoid unnecessary buffer allocations & deallocations\n\nBefore this change, when we reached the end of a file, we would\n (1) clear the existing buffer (which at large buffer sizes typically involved\n     deallocating it).\n (2) reserve a buffer (which at large buffer sizes is non-trivial)\n (3) realize we had reached EoF, and therefore clear the buffer, deallocating\n     it again.\n\nWith this change, whenever the buffered reader detects an EoF condition, we\nremember it, so that we can short-circuit the above logic.\n\nThe above optimization results in a more than 25x performance improvement for\nlarge buffers reading small files.\n\nPiperOrigin-RevId: 167766751\n\n* [TF:XLA] In Literal: correctly handle operands with zero elements in\nCopy.\n\nPiperOrigin-RevId: 167769308\n\n* Reduce batch size for resampler backward pass test, to speed up test.\n\nPiperOrigin-RevId: 167769539\n\n* Remove `SimpleGraphExecutionState::costs_`, which is unused.\n\nPiperOrigin-RevId: 167772120\n\n* detecting cycles when users add a control edge to a graph\n\nPiperOrigin-RevId: 167773598\n\n* Make writer_test avoid setting content to a string\n\nThat content field of the PluginData proto is going to be converted into a bytes field, and setting it to a string makes the test fail. Furthermore, the purpose of this test is to make sure that correct data is written, so setting the name of the plugin suffices.\n\nPiperOrigin-RevId: 167776457\n\n* Propagate the original stack trace when exceptions caught be MonitoredSession\nare re-raised.\n\nPiperOrigin-RevId: 167781071\n\n* Change trace.py to not access a graph as a default argument.\n\nChecks for None and access via default graph inside the function.\n\nPiperOrigin-RevId: 167788815\n\n* Added custom metric support for tf.estimator.Estimator.\n\nPiperOrigin-RevId: 167788891\n\n* A eager Saver that allows restore on create.\n\nPiperOrigin-RevId: 167789332\n\n* Make content field of PluginData a bytes field\n\nThe content field had previously been a string field, which had been problematic because\nstring fields can only store UTF-8 strings.\n\nThis problem can manifest in various ways. For instance, take the precision-recall curve plugin. Its summary collects data that scales in size based on the number of thresholds. When the content field is a string, the summary logic serializes the relevant data proto just fine when we only have a few thresholds (about 100). However, for large numbers of thresholds (ie, around 200), the summary logic fails to serialize and throws a cryptic error.\n\nValueError: \'\\x10\\xc8\\x01\' has type str, but isn\'t valid UTF-8 encoding. Non-UTF-8 strings must be converted to unicode objects before being added.\n\nChanging the content field to a bytes field fixes this issue because bytes fields are not restricted to UTF-8 strings. I just happened to have needed a long enough string for the string to no longer be a valid UTF-8 one.\n\nPiperOrigin-RevId: 167790594\n\n* Temporarily disable tf_should_use wrapper, since it can cause\npython Graph/Operation/Tensor memory leaks.\n\nPiperOrigin-RevId: 167790657\n\n* Ensure using ""path"" as a URI will keep working.\n\nPiperOrigin-RevId: 167793848\n\n* Fix typo in graph transforms error message\n\nPiperOrigin-RevId: 167796563\n\n* Merge changes from github.\nEND_PUBLIC\n\n---\nCommit 607816029 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtended ScratchSpace to expose its underlying scratch tensor object.\n\nPiperOrigin-RevId: 167649551\n\n---\nCommit db43fe68e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd fast math attributes to all generated methods when fast math enabled.\n\nRELNOTES: n/a\nPiperOrigin-RevId: 167646637\n\n---\nCommit aebe8cc6f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nCall HloComputation.Accept instead of HloInstruction.Accept to get all instructions profiled.\n\nRELNOTES: n/a\nPiperOrigin-RevId: 167640259\n\n---\nCommit 0ab137cd8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 167604306\n\nPiperOrigin-RevId: 167868631'"
838fded47032fad1be7b3bbe5ca7ce2abf1420f8,"""Fix minor typo in Programmer's Guide docs"""
18f36927160d05b941c056f10dc7f9aecaa05e23,"'Branch 167812735 (#12867)\n\n* Internal cleanup\r\n\r\nPiperOrigin-RevId: 167636242\r\n\r\n* Move the Keras API to tf.keras.\r\n\r\nPiperOrigin-RevId: 167638421\r\n\r\n* Automated g4 rollback of changelist 167604306\r\n\r\nPiperOrigin-RevId: 167639833\r\n\r\n* Call HloComputation.Accept instead of HloInstruction.Accept to get all instructions profiled.\r\n\r\nRELNOTES: n/a\r\nPiperOrigin-RevId: 167640259\r\n\r\n* Add fast math attributes to all generated methods when fast math enabled.\r\n\r\nRELNOTES: n/a\r\nPiperOrigin-RevId: 167646637\r\n\r\n* Extended ScratchSpace to expose its underlying scratch tensor object.\r\n\r\nPiperOrigin-RevId: 167649551\r\n\r\n* Change zip(...)[1] to list(zip(...))[1], for python 3 compatibility.\r\n\r\nPiperOrigin-RevId: 167654035\r\n\r\n* Add scoped timer to log jit compile times.\r\n\r\nRELNOTES: n/a\r\nPiperOrigin-RevId: 167656720\r\n\r\n* Verify that predictions are in the expected range for ops that use thresholds, e.g. tf.contrib.metrics.streaming_auc.\r\n\r\nPiperOrigin-RevId: 167658134\r\n\r\n* Internal change.\r\n\r\nPiperOrigin-RevId: 167658401\r\n\r\n* Fix list formatting\r\n\r\nPiperOrigin-RevId: 167660250\r\n\r\n* Enable java test.\r\n\r\nPiperOrigin-RevId: 167660276\r\n\r\n* Add shape functions on debug ops.\r\n\r\nPiperOrigin-RevId: 167668811\r\n\r\n* Increase session_bundle_test to a medium test.\r\n\r\nPiperOrigin-RevId: 167672587\r\n\r\n* Include layout of convolution input data in the op_profile.\r\n\r\nPiperOrigin-RevId: 167680208\r\n\r\n* Fix tf.sparse_add for SparseTensor with _ref typed values.\r\n\r\nExample:\r\nst = tf.SparseTensor(\r\n    indices=[[1]], values=tf.Variable([1.0]), dense_shape=[1])\r\ntf.sparse_add(st, st)\r\nPiperOrigin-RevId: 167681121\r\n\r\n* Fix conversion to explicit scalar broadcast\r\n\r\nThe dimensions field of a broadcast HLO op is meant to be populated with the\r\ndimensions that are broadcasted, which in case of a scalar is the empty vector.\r\nGenerally, the rank of the operand of a broadcast op should always equal the\r\nsize of the dimensions vector.\r\n\r\nPiperOrigin-RevId: 167686946\r\n\r\n* Add \'unknown shape\' shape functions on deprecated linalg ops.\r\n\r\nPiperOrigin-RevId: 167719029\r\n\r\n* Be more careful in IsInitalized, and log when it is called on an unknown\r\nnode_id.\r\n\r\nPiperOrigin-RevId: 167722344\r\n\r\n* tfdbg: Refactor graph-processing code out of debug_data.py\r\n\r\nThe basic idea is to separate the code in debug_data.py that handles graph structures into its own module (debug_graphs.py). This tackles an existing TODO item to simplify the code debug_data.DebugDumpDir.\r\n\r\nIn a later CL, code will be added to debug_graphs.DebugGraph to allow reconstruction of the original GraphDef, i.e., the GraphDef without the Copy* and Debug* nodes inserted by tfdbg. This will be useful for, among other things, the TensorBoard Debugger Plugin.\r\n\r\nPiperOrigin-RevId: 167726113\r\n\r\n* internal\r\n\r\nPiperOrigin-RevId: 167727508\r\n\r\n* Update MaxPoolV2Shape to support NCHV_VECT_C.\r\n\r\nPiperOrigin-RevId: 167732437\r\n\r\n* Deleting tf.contrib.learn.dnn benchmark tests.\r\n\r\nPiperOrigin-RevId: 167741308\r\n\r\n* Fix off-by-one documentation error.\r\n\r\nsequence_lengths is the actual length of the sequence and therefor should not be used as zero-based indexing.\r\nThe code is correct but the documentation was misleading.\r\n\r\nPiperOrigin-RevId: 167742082\r\n\r\n* contrib summaries work in eager-graph mode (with defun)\r\n\r\nAs a side effect fix issues related to using eager-defined variables in graph\r\nmode.\r\n\r\nPiperOrigin-RevId: 167744121\r\n\r\n* Fix minor documentation error in ZlibInputStream.\r\n\r\nPiperOrigin-RevId: 167745218\r\n\r\n* Sets the distributed training related properties of RunConfig based on TF_CONFIG.\r\n\r\nPiperOrigin-RevId: 167752997\r\n\r\n* Improved documentation about eval ops in EstimatorSpec.\r\n\r\nPiperOrigin-RevId: 167753099\r\n\r\n* Automated g4 rollback of changelist 156748870\r\n\r\nPiperOrigin-RevId: 167753805\r\n\r\n* Make cuda_solvers_gpu.cu.cc compile with nvcc8.\r\n\r\nPiperOrigin-RevId: 167754383\r\n\r\n* Add csv dataset example to get_started/regression.\r\n\r\nPiperOrigin-RevId: 167754634\r\n\r\n* Switches to OrderedDict to make the dictionary order deterministic so we have less randomness from graph building.\r\n\r\nPiperOrigin-RevId: 167755072\r\n\r\n* Add int8 version of fused_conv2d_bias_activation operator for the forward phase,\r\nand support side_input and scaling parameters in float and int8 versions.\r\n\r\nPiperOrigin-RevId: 167763219\r\n\r\n* Make the text summary write no plugin data content\r\n\r\nThis is actually a safe removal because no logic makes use of the content of text plugin data.\r\n\r\nPiperOrigin-RevId: 167763880\r\n\r\n* Avoid unnecessary buffer allocations & deallocations\r\n\r\nBefore this change, when we reached the end of a file, we would\r\n (1) clear the existing buffer (which at large buffer sizes typically involved\r\n     deallocating it).\r\n (2) reserve a buffer (which at large buffer sizes is non-trivial)\r\n (3) realize we had reached EoF, and therefore clear the buffer, deallocating\r\n     it again.\r\n\r\nWith this change, whenever the buffered reader detects an EoF condition, we\r\nremember it, so that we can short-circuit the above logic.\r\n\r\nThe above optimization results in a more than 25x performance improvement for\r\nlarge buffers reading small files.\r\n\r\nPiperOrigin-RevId: 167766751\r\n\r\n* [TF:XLA] In Literal: correctly handle operands with zero elements in\r\nCopy.\r\n\r\nPiperOrigin-RevId: 167769308\r\n\r\n* Reduce batch size for resampler backward pass test, to speed up test.\r\n\r\nPiperOrigin-RevId: 167769539\r\n\r\n* Remove `SimpleGraphExecutionState::costs_`, which is unused.\r\n\r\nPiperOrigin-RevId: 167772120\r\n\r\n* detecting cycles when users add a control edge to a graph\r\n\r\nPiperOrigin-RevId: 167773598\r\n\r\n* Make writer_test avoid setting content to a string\r\n\r\nThat content field of the PluginData proto is going to be converted into a bytes field, and setting it to a string makes the test fail. Furthermore, the purpose of this test is to make sure that correct data is written, so setting the name of the plugin suffices.\r\n\r\nPiperOrigin-RevId: 167776457\r\n\r\n* Propagate the original stack trace when exceptions caught be MonitoredSession\r\nare re-raised.\r\n\r\nPiperOrigin-RevId: 167781071\r\n\r\n* Change trace.py to not access a graph as a default argument.\r\n\r\nChecks for None and access via default graph inside the function.\r\n\r\nPiperOrigin-RevId: 167788815\r\n\r\n* Added custom metric support for tf.estimator.Estimator.\r\n\r\nPiperOrigin-RevId: 167788891\r\n\r\n* A eager Saver that allows restore on create.\r\n\r\nPiperOrigin-RevId: 167789332\r\n\r\n* Make content field of PluginData a bytes field\r\n\r\nThe content field had previously been a string field, which had been problematic because\r\nstring fields can only store UTF-8 strings.\r\n\r\nThis problem can manifest in various ways. For instance, take the precision-recall curve plugin. Its summary collects data that scales in size based on the number of thresholds. When the content field is a string, the summary logic serializes the relevant data proto just fine when we only have a few thresholds (about 100). However, for large numbers of thresholds (ie, around 200), the summary logic fails to serialize and throws a cryptic error.\r\n\r\nValueError: \'\\x10\\xc8\\x01\' has type str, but isn\'t valid UTF-8 encoding. Non-UTF-8 strings must be converted to unicode objects before being added.\r\n\r\nChanging the content field to a bytes field fixes this issue because bytes fields are not restricted to UTF-8 strings. I just happened to have needed a long enough string for the string to no longer be a valid UTF-8 one.\r\n\r\nPiperOrigin-RevId: 167790594\r\n\r\n* Temporarily disable tf_should_use wrapper, since it can cause\r\npython Graph/Operation/Tensor memory leaks.\r\n\r\nPiperOrigin-RevId: 167790657\r\n\r\n* Ensure using ""path"" as a URI will keep working.\r\n\r\nPiperOrigin-RevId: 167793848\r\n\r\n* Fix typo in graph transforms error message\r\n\r\nPiperOrigin-RevId: 167796563\r\n\r\n* Merge changes from github.\r\nEND_PUBLIC\r\n\r\n---\r\nCommit 607816029 authored by Eugene Brevdo<ebrevdo@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nExtended ScratchSpace to expose its underlying scratch tensor object.\r\n\r\nPiperOrigin-RevId: 167649551\r\n\r\n---\r\nCommit db43fe68e authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nAdd fast math attributes to all generated methods when fast math enabled.\r\n\r\nRELNOTES: n/a\r\nPiperOrigin-RevId: 167646637\r\n\r\n---\r\nCommit aebe8cc6f authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nCall HloComputation.Accept instead of HloInstruction.Accept to get all instructions profiled.\r\n\r\nRELNOTES: n/a\r\nPiperOrigin-RevId: 167640259\r\n\r\n---\r\nCommit 0ab137cd8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nBEGIN_PUBLIC\r\nAutomated g4 rollback of changelist 167604306\r\n\r\nPiperOrigin-RevId: 167800256\r\n\r\n* Update ops-related pbtxt files.\r\n\r\nPiperOrigin-RevId: 167802521\r\n\r\n* Go: Update generated wrapper functions for TensorFlow ops.\r\n\r\nPiperOrigin-RevId: 167804076\r\n\r\n* Add sloppy_interleave dataset operator.\r\n\r\nWhen feeding data at high speed into a model from variable-latency data\r\nsources, head-of-line blocking can be a significant concern when using a\r\ndeterministic input pipeline, such as interleave.\r\n\r\nThis change introduces a new non-deterministic dataset operator that avoids\r\nhead-of-line blocking.\r\n\r\nPiperOrigin-RevId: 167810743\r\n\r\n* Update ops-related pbtxt files.\r\n\r\nPiperOrigin-RevId: 167811375\r\n\r\n* tfdbg: Fix python3 breakage in grpc debug tests caused by bytes-type plugin_data content\r\n\r\nPiperOrigin-RevId: 167812508\r\n\r\n* [XLA] Rip CheckFusionNode() out of instruction, and move it into the HLO verifier instead.\r\n\r\nCheckFusionNode() is linear in the size of the fusion node, and was called once per Fuse(), leading to run-time quadratic in the fusion node\'s size.\r\n\r\nPiperOrigin-RevId: 167812735\r\n\r\n* Disable\r\ntensorflow/contrib/data/python/kernel_tests/sloppy_transformation_dataset_op_test.py\r\nin cmake.'"
af41a029c8def570c409167326f59a5222452f40,'tfdbg: Fix python3 breakage in grpc debug tests caused by bytes-type plugin_data content\n\nPiperOrigin-RevId: 167812508'
f8a43f9d63ce90f10852d69e40fbb9fe849fc190,'Fix typo in graph transforms error message\n\nPiperOrigin-RevId: 167796563'
e24ff272716382c42e83ab9b1eaccfe61c64935a,'Fix a path in README.md'
4d24e6759468006d2325c3ec2944f7a4612caee0,"""Make content field of PluginData a bytes field\n\nThe content field had previously been a string field, which had been problematic because\nstring fields can only store UTF-8 strings.\n\nThis problem can manifest in various ways. For instance, take the precision-recall curve plugin. Its summary collects data that scales in size based on the number of thresholds. When the content field is a string, the summary logic serializes the relevant data proto just fine when we only have a few thresholds (about 100). However, for large numbers of thresholds (ie, around 200), the summary logic fails to serialize and throws a cryptic error.\n\nValueError: '\\x10\\xc8\\x01' has type str, but isn't valid UTF-8 encoding. Non-UTF-8 strings must be converted to unicode objects before being added.\n\nChanging the content field to a bytes field fixes this issue because bytes fields are not restricted to UTF-8 strings. I just happened to have needed a long enough string for the string to no longer be a valid UTF-8 one.\n\nPiperOrigin-RevId: 167790594"""
ef71383cf2d8d8241d813ac11695a26c34ae3ceb,"'Support for CUDA 9.0\n\nAdd explicit __syncwarp to bias_op\n - Makes warp-synchronous code safe on Volta\nAdd sync mask to __shfl intrinsics\nAdd libdevice bytecode paths for CUDA 9\n - In CUDA 9, all supported architectures are merged into a single file\nUpdate code gating for CUDA 9\nAdd sm_70 to the lookup table used by XLA\nChange the default sm arch from 20 to 30.\nFix for NVPTX not yet supporting sm_70\nRemove unnecessary cuda decorators from defaulted constructors\nUse updated NCCL for CUDA 9 fp16 support'"
468190c1ea0286842db3f0e598707e4000ab57f3,'Fix minor documentation error in ZlibInputStream.\n\nPiperOrigin-RevId: 167745218'
86b94d8a17783773681b585df474bbda300b62f7,'contrib summaries work in eager-graph mode (with defun)\n\nAs a side effect fix issues related to using eager-defined variables in graph\nmode.\n\nPiperOrigin-RevId: 167744121'
c4cb861fd9b752f2d4ce9205489bc4325b8ead32,'Fix off-by-one documentation error.\n\nsequence_lengths is the actual length of the sequence and therefor should not be used as zero-based indexing.\nThe code is correct but the documentation was misleading.\n\nPiperOrigin-RevId: 167742082'
a1e3ada75c0ad670b7854f935e07c9630abc8794,"'Fix conversion to explicit scalar broadcast\n\nThe dimensions field of a broadcast HLO op is meant to be populated with the\ndimensions that are broadcasted, which in case of a scalar is the empty vector.\nGenerally, the rank of the operand of a broadcast op should always equal the\nsize of the dimensions vector.\n\nPiperOrigin-RevId: 167686946'"
1f38a9c2f86cf1730d7bf782b4f4747106566850,"'Fix tf.sparse_add for SparseTensor with _ref typed values.\n\nExample:\nst = tf.SparseTensor(\n    indices=[[1]], values=tf.Variable([1.0]), dense_shape=[1])\ntf.sparse_add(st, st)\nPiperOrigin-RevId: 167681121'"
536a255eea4f5b982d7b48cf1d4def20d42d71ca,'Fix list formatting\n\nPiperOrigin-RevId: 167660250'
25a461e888b2cccb2fc996fb5b3186f01f62a12b,'Fix a missed variable watch.\n\nPiperOrigin-RevId: 167616202'
f60e54b3df3886095ee2f04190e7c205e81ea38c,"'Fix ""wrong enum"" comparison.\n\nPiperOrigin-RevId: 167611717'"
31ce478e277b4f68ac7e252e5feed853ea768fff,'Update relaxed_onehot_categorical.py\n\nFixed: default dtype in class documentation'
c1558f738fc269db521c9b00379cb4e7228ce0a3,'Fix parsing of SequenceExample for FixedLenSequenceFeature in FeatureColumn.\n\nPiperOrigin-RevId: 167597172'
2306697c8a9ee747ad828f099ffe67ba0fe6b072,'Add SerializeTensor operator (#11992)\n\n* Add SerializeTensor operator\r\n* Remove empty constructor for SerializeTensorOp\r\n* Add test for SerializeTensorOp\r\n* Explicitly test each dtype for SerializeTensorOp\r\n* Fix BUILD file format\r\n* update goldens'
c8981445c58b3022b36941bd9f34683a116c8c9f,'Fix bug on the gradients graph computation caused by an Assign node - C++ API (#12397)\n\n* Fix bug on the gradients graph computation caused by an Assign node.\r\n* Adding a reachable_nodes array to the gradient computation graph.\r\n* Adding test cases when the Var has unreachable nodes.'
5f950816981816d3fb32cbfdc1547c527d89873f,'Fix deprecation warnings of *_global_step functions.'
2f5caa40bff1c3d884723097e331ad0a5c86e32f,'Merge pull request #12819 from shastakr/patch\n\nFix typo & Clarify comment'
519e91ddb028bcd9d7533b2572f71e86c5e3979c,'Add support of int8/uint8/int16/uint16 for tf.subtract\n\nThis fix adds support of int8/uint8/int16/uint16 for tf.subtract\n(on CPU only)\n\nThis fix fixes 12571.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
0cfd119fad0534588ab45386b45d8514bdd3cc00,'fix: profiler bazel build usage'
7bffb80bf3c6100a50ce497b582492888dbc110f,'Fixed typo'
fafb92fb954e6e516872985f58d9219941314fbd,'Fixed style errors manually rather using clang tool'
d8252035169ca6e0290a43ad6e557e099798aac7,'Fixed the filter sizes order in conv fwd'
ca0743d4a4d8b24100a6a14a858d4b859c4e35c0,'Fixed a crash in conv-grad-input with NHWC format'
625caf829f92e172c29c6b0e07f57665aa4f0068,'MklReshapeOp fix for TensorShape int64 support'
07050d5173b1a12b9a491e20f51ff8c72199b2c0,'Install name fix for the libtensorflow.so file.'
043f89e5fcc7758bfa134aacbae89055cf5ebdf1,'FIx typo & clarify argument type in comment'
f6d7e459f9780913b7b0b7be12e856e0999ef99b,"'fix compile_nsync.sh \n\ncompile_nsync.sh is not workable with android x86 arch, here is the fix by replacing arm specific arch option.'"
e44eeab6cf6739cc68783a3ed14c6e41503c6ef3,'Bugfix for fill_lower_triangular.\n\nPiperOrigin-RevId: 167509581'
b4302ee705036e9f7ef156fee6f2a3880909bbc1,"'Fix incorrect error message in TensorArray.scatter\n\nThis fix tries to fix the issue raised in 12403 where the\nerror message in TensorArray.scatter is incorrect. Specifically, in\n```\n      OP_REQUIRES(\n          ctx, max_index < array_size,\n          errors::InvalidArgument(""Max scatter index must be <= array size ("",\n                                  max_index, "" vs. "", array_size, "")""));\n```\n\nThe `<= array size` in error message should be `< array size` as\nthe maximum value of index (0-based) should always be smaller than array size.\n\nThis fix fixes 12403.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
15d233e33095ed5240fd07c63cb3768d5d705fc2,'Fixed compilation with clang.\n\nPiperOrigin-RevId: 167489081'
2aa55cf96e5a89032a13e4aa5d25a2ad0cd13bef,'Fix small typo'
bfdffb2adb9c75aa86ca822075f2d42fcd807f4f,'Bug fix.'
eaa69ba50b915f15ebe5ee76097b9f691a744617,'Fixed a bug.'
5598a3dec75cd9fddf66bdf8889e3b816e492e2c,'Eager execution API bug fix for tensor data types whose TF_Tensor memory layout is not the same at the tensorflow::Tensor memory layout.'
7fe1b529ba01828bb0a7cb0bc84082f3f285df0f,"'Clanged reformated, spelling fix'"
1dab44ca2ca500170f4575202f387b44081f92f0,"'BUG: fix, indices is out of bounds'"
fe8905ed992e29467bcf69053dfce07b77f906d3,'Fix issue where some pooling op gradients on the CPU would fail when strides > ksize.\n\nRELNOTES: Enable support for strides > ksize for pooling operations.\nPiperOrigin-RevId: 167327007'
2e7fdf03319725d3e5c62c20238f49dccb474dc5,'Fix convert_to_tensor problem for list of TensorNodes\n\nCurrent code fail to error out in convert_to_tensor\nwhen multiple TensorNodes are passed in.\n\nPiperOrigin-RevId: 167319274'
b897ae084a9833f88ab5619bdf8940735b7d0de5,'Fixing typo.\n\nPiperOrigin-RevId: 167318502'
12cf8c19575e3043ce99d363b57a313fdaabbd76,'Fix broken link in Estimators.\nMove Estimators to beginning of Prog. Guide.\nChange title of Datasets unit.\n\nPiperOrigin-RevId: 167314186'
a2e1a5e0985d8d2c1ec3a3f246dad214600af21c,'Merge pull request #12738 from jeffcarp/jeffcarp-patch-1\n\nFix step numbering in Linux install docs'
afe327405ea879ee888071660ec78ad0df35534f,'Fix step numbering in Linux install docs'
e92aed2b9b7d461087eda44556435141a8a2abde,'Merge pull request #12664 from meijun/g3doc\n\nFix markdown syntax mistakes'
569af010a7faf0744fd366648a8c4b3bf18e35c3,'Fixing small issues introduced with tf.contrib.receptive_field\n\nPiperOrigin-RevId: 167194226'
7862d3c98aaba44f2811eb4657ff2c174414d7a1,"""Fixed errors in GPU crosstool in cuda_clang mode.\n\nThe source of errors is that 'crosstool_wrapper_driver_is_not_gcc' was not\nincluded in the GPU crosstool, but was still listed in build dependencies.\n\nPiperOrigin-RevId: 167107311"""
114e129d6c31216e5b62ef1e78a77c3ae7afe82e,'Fix TSAN flakes in Keras io_utils test.\n\nPiperOrigin-RevId: 167081436'
4b521d0992fbdd7d9f18a708111e2501689f7994,'Fix dtype for streaming confusion matrix'
f63078d75c06d401edd52f4afd3f9efaf667f72f,'Fixed a bug that the job was calculated based on wrong master for evaluation.\n\nPiperOrigin-RevId: 167053816'
bd64cddd4773708fc95cfab33d16e7785967d1e3,'Fix bias_add size calculation for half.\n\nPiperOrigin-RevId: 167051419'
7453a0fe7e31af6763748458aed21750bc1b4000,'Fix conversion of string constants with nulls to EagerTensors.\nFix testing on GPUs in constant_op_eager_test.\n\nPiperOrigin-RevId: 167050082'
8f25fa964751c56a50a6c9c9d420927b98fadf65,'Fixes eager higher-order gradients for ops whose gradient function uses their outputs.\n\nPiperOrigin-RevId: 167042517'
f22716be4c386c66c38699c76ab99e457dc369f8,'Fix linter error in linalg_grad.py that broke opensource build.\n\nPiperOrigin-RevId: 167041045'
487ad4b071dfb996879519716e34ce82391e447d,'Implemented maxout\n\nRemoved None test from the maxout clas\n\nFixed test units\n\nFixed import and lint the code\n\nMoved entry point to the contrib module\n\npylint the code\n\npylint\n\nOrganizing build\n\nTrying to figure the buildifier issue'
03d310cc61a864600d24977f73138e643659986c,'Java: Fix 8-byte leak when constructing graph operations.\n\nThanks to @riklopfer for reporting in #11948\n\nPiperOrigin-RevId: 167032430'
797ca0d482457185f35d46cbce4c430f55b8b66a,"'[XLA] Teach HloComputation::Reparent to properly handle reparenting into fusion computations.\n\nThis also moves HloInstruction::CheckFusionInstruction() out of ""private"", and adds calls to it in the reduce-precision-insertion test to confirm that the reduce-precision-insertion pass maintains valid fusion computations.  (These checks then fail without the fix to HloComputation::Reparent.)\n\nPiperOrigin-RevId: 167031741'"
e952f2566662fff98b2c34e22b8c8398f9b7d450,"'* Add GPU support for matrix_solve_ls by implement the default fast path a composite Python function that only relies on matmul, cholesky and triangular_solve, which all have GPU implementations.\n* Enable unit test for most linear algebra ops and their gradients on GPU.\n* Temporarily disable GPU test for matrix_solve gradient until a latent bug revealed by this change is fixed.\n* Add a benchmark for matrix_solve_ls.\n\nThe impact on CPU speed is generally positive except for a few regressions on tiny matrices. It is significantly faster (e.g. 50X faster for 1001x1001) for single large matrices, since most of the work is now performed in multi-threaded instead of single-threaded matmul.\n\nShape         Nrhs   Before              After               Speedup\n(4,4)           1    6.60419464111e-05    6.103515625e-05     7.58%\n(4,4)           2    6.29425048828e-05\t  6.5803527832e-05   -4.55%\n(4,4)           4    6.38961791992e-05\t  7.29560852051e-05 -14.18%\n(8,4)           1    6.19888305664e-05\t  6.19888305664e-05   0.00%\n(8,4)           2    6.103515625e-05\t  6.38961791992e-05  -4.69%\n(8,4)           4    5.98430633545e-05\t  6.29425048828e-05  -5.18%\n(4,8)           1    6.00814819336e-05\t  6.00814819336e-05   0.00%\n(4,8)           2    6.29425048828e-05\t  6.19888305664e-05   1.52%\n(4,8)           8    6.07967376709e-05\t  6.29425048828e-05  -3.53%\n(10,10)         1    6.22272491455e-05\t  6.50882720947e-05  -4.60%\n(10,10)         2    6.31809234619e-05\t  6.48498535156e-05  -2.64%\n(10,10)         10   6.19888305664e-05\t  7.29560852051e-05 -17.69%\n(10,8)          1    6.19888305664e-05\t  8.29696655273e-05 -33.85%\n(10,8)          2    7.29560852051e-05\t  6.50882720947e-05  10.78%\n(10,8)          8    6.19888305664e-05\t  7.08103179932e-05 -14.23%\n(8,10)          1    6.103515625e-05\t  6.103515625e-05     0.00%\n(8,10)          2    6.29425048828e-05\t  6.103515625e-05     3.03%\n(8,10)          10   7.41481781006e-05\t  6.19888305664e-05  16.40%\n(16,16)         1    7.48634338379e-05\t  6.29425048828e-05  15.92%\n(16,16)         2    7.5101852417e-05\t  7.60555267334e-05  -1.27%\n(16,16)         16   6.38961791992e-05\t  7.67707824707e-05 -20.15%\n(16,10)         1    8.48770141602e-05\t  6.103515625e-05    28.09%\n(16,10)         2    6.19888305664e-05\t  6.19888305664e-05   0.00%\n(16,10)         10   6.38961791992e-05\t  6.29425048828e-05   1.49%\n(10,16)         1    6.50882720947e-05\t  6.19888305664e-05   4.76%\n(10,16)         2    6.29425048828e-05\t  6.103515625e-05     3.03%\n(10,16)         16   7.60555267334e-05\t  6.50882720947e-05  14.42%\n(101,101)       1    0.000195980072021\t  7.60555267334e-05  61.19%\n(101,101)       2    0.000201940536499\t  9.20295715332e-05  54.43%\n(101,101)       101  0.000378847122192\t  0.00026798248291   29.26%\n(101,31)        1    8.51154327393e-05\t  6.38961791992e-05  24.93%\n(101,31)        2    8.20159912109e-05\t  7.29560852051e-05  11.05%\n(101,31)        31   9.70363616943e-05\t  8.70227813721e-05  10.32%\n(31,101)        1    9.58442687988e-05\t  6.8187713623e-05   28.86%\n(31,101)        2    0.000118017196655\t  7.39097595215e-05  37.37%\n(31,101)        101  0.000128984451294\t  0.000111103057861  13.86%\n(256,256)       1    0.00152015686035\t  0.000142812728882  90.61%\n(256,256)       2    0.00153708457947\t  0.000188112258911  87.76%\n(256,256)       256  0.00419092178345\t  0.00194692611694   53.54%\n(256,200)       1    0.000885009765625\t  0.000108003616333  87.80%\n(256,200)       2    0.000905990600586\t  0.000153064727783  83.11%\n(256,200)       200  0.00238180160522\t  0.00109219551086   54.14%\n(200,256)       1    0.000879049301147\t  0.000108957290649  87.61%\n(200,256)       2    0.000900030136108\t  0.000159025192261  82.33%\n(200,256)       256  0.00287699699402\t  0.00136303901672   52.62%\n(1001,1001)     1    0.0573220252991\t  0.00101280212402   98.23%\n(1001,1001)     2    0.0591979026794\t  0.00128102302551   97.84%\n(1001,1001)     1001 0.205045938492\t  0.0915141105652    55.37%\n(1001,501)      1    0.0129158496857\t  0.000411987304688  96.81%\n(1001,501)      2    0.0133857727051\t  0.000498056411743  96.28%\n(1001,501)      501  0.0418498516083\t  0.0139379501343    66.70%\n(501,1001)      1    0.012974023819\t  0.000403165817261  96.89%\n(501,1001)      2    0.0131361484528\t  0.000482082366943  96.33%\n(501,1001)      1001 0.0733780860901\t  0.0280270576477    61.80%\n(1024,1024)     1    0.0646319389343\t  0.00120306015015   98.14%\n(1024,1024)     2    0.0661849975586\t  0.00151205062866   97.72%\n(1024,1024)     1024 0.227252960205\t  0.0971050262451    57.27%\n(1024,128)      1    0.00104093551636\t  9.60826873779e-05  90.77%\n(1024,128)      2    0.00108408927917\t  0.000156879425049  85.53%\n(1024,128)      128  0.00251793861389\t  0.000633955001831  74.82%\n(128,1024)      1    0.00103306770325\t  9.41753387451e-05  90.88%\n(128,1024)      2    0.00111484527588\t  0.000247955322266  77.76%\n(128,1024)      1024 0.0141911506653\t  0.00415301322937   70.74%\n(2048,2048)     1    0.47181892395\t  0.00541090965271   98.85%\n(2048,2048)     2    0.477843999863\t  0.00651216506958   98.64%\n(2048,2048)     2048 1.75637602806\t  0.759104013443     56.78%\n(2048,64)       1    0.000587940216064\t  9.08374786377e-05  84.55%\n(2048,64)       2    0.000652074813843\t  0.000128030776978  80.37%\n(2048,64)       64   0.00130105018616\t  0.000342130661011  73.70%\n(64,2048)       1    0.000602006912231\t  8.60691070557e-05  85.70%\n(64,2048)       2    0.000680923461914\t  0.000250816345215  63.17%\n(64,2048)       2048 0.027850151062\t  0.00638389587402   77.08%\n(513,4,4)      1    0.000416040420532\t  0.000288963317871  30.54%\n(513,4,4)      2    0.000466823577881\t  0.000313997268677  32.74%\n(513,4,4)      4    0.000488996505737\t  0.000338077545166  30.86%\n(513,4,2)      1    0.000366926193237\t  0.0002760887146    24.76%\n(513,4,2)      2    0.000352144241333\t  0.000269889831543  23.36%\n(513,4,2)      2    0.000343084335327\t  0.000263929367065  23.07%\n(513,2,4)      1    0.000388145446777\t  0.000275850296021  28.93%\n(513,2,4)      2    0.000396013259888\t  0.000270128250122  31.79%\n(513,2,4)      4    0.00041389465332\t  0.000282049179077  31.85%\n(513,16,16)    1    0.000340938568115\t  0.000346899032593  -1.75%\n(513,16,16)    2    0.0003821849823\t  0.000375986099243   1.62%\n(513,16,16)    16   0.000468015670776\t  0.000473022460938  -1.07%\n(513,16,10)    1    0.000268936157227\t  0.000272989273071  -1.51%\n(513,16,10)    2    0.000308990478516\t  0.000308036804199   0.31%\n(513,16,10)    10   0.000367164611816\t  0.000363111495972   1.10%\n(513,10,16)    1    0.0002601146698\t  0.000262975692749  -1.10%\n(513,10,16)    2    0.000304937362671\t  0.000303983688354   0.31%\n(513,10,16)    16   0.00036883354187\t  0.000371932983398  -0.84%\n(513,256,256)  1    0.109347105026\t  0.11101102829\t     -1.52%\n(513,256,256)  2    0.114288806915\t  0.114917993546     -0.55%\n(513,256,256)  256  0.353310108185\t  0.348378896713      1.40%\n(513,256,128)  1    0.0285301208496\t  0.0287981033325    -0.94%\n(513,256,128)  2    0.0313191413879\t  0.0301601886749     3.70%\n(513,256,128)  128  0.0773530006409\t  0.0720520019531     6.85%\n(513,128,256)  1    0.0281269550323\t  0.0283789634705    -0.90%\n(513,128,256)  2    0.0297160148621\t  0.0298500061035    -0.45%\n(513,128,256)  256  0.140498876572\t  0.126143932343     10.22%\n\nPiperOrigin-RevId: 167026381'"
f157c8fa7029ccf731f764f71e5f9dd8aaa67ac8,"""Added new queue and table to the RdmaTensorBuffer, where a semi-replica of the send_recv_ops waiter table is stored.\nValues are added to the local table when remote is not ready for receiving our tensor.\nWhen we get an BUFFER_RESPONSE, we use ReSendNextItem instead of sendNextItem.\n\nSplitted SendNextItem And ReSend to two functions, move callback to new function for code reuse\n\nClanged formatted\n\nFixed according to shamoya's review, Fixed send->resend flow\n\nsquached, rebased on origin/master"""
c82d70d383a97045293a59a77e5280c2d3cebaab,"'Add support for saving/restoring states of iterators.\nAll iterators that need state saving will have to implement SaveState and RestoreState methods.\nAdd SaveIterator and RestoreIterator ops.\nAdd implementations for RangeDataset, RepeatDataset and FixedLengthRecordDataset and related tests. More to follow in future CLs.\n\nPiperOrigin-RevId: 166959426'"
943d606a7475d61f6453c503b39a4316c84e8b20,"'Fixes stray isinstance(_, Tensor) check in math_ops.\n\nPiperOrigin-RevId: 166928826'"
5201a821ec501f9a030b80042e10903d3b4596bc,"'Fixes to quantile ops in TFT.\n1. Use to_int64 in TFT to generate int64 output. Earlier change to output type\nin BucketizeWithInputBoundariesOp causes failure in ExpandDims during infra\nvalidation in TFX pipeline.\n2. By default use a non-zero epsilon in boundary calculation, since exact\nboundary computation with epsilong=0 uses too much memory.\n\nPiperOrigin-RevId: 166928699'"
f64fd417124899df84fab9a852b2c12b9082a368,'Use size_t for string size\n\nThis fixes a broken build\n\nPiperOrigin-RevId: 166924279'
f282bb142f8d170549f6708f334bed7f40dd029e,'Fix bug with second derivatives in eager mode.\n\nImproper wrapping and unwrapping of tensors lead to tracing being dropped.\n\nPiperOrigin-RevId: 166910119'
a650fd99b40c1d6e7b67833377db98e0c336d192,'fixed the output case while neither of inputs is in mkl format'
a7aa47fd9f23e91ab84eb0f75ff6a8d5b6b95930,'Add tfdbg support to slim.learning.train\n\nFixes: #12385\nPiperOrigin-RevId: 166873806'
bc4c840cced84665d4e02abaa66f2c767785e36c,'Merge pull request #12678 from bkiers/patch-1\n\nFixed code formatting'
f8caee4ac4d1212483063f25aae28e6c135e137c,'Fix TensorFlow Windows build (#12603)'
1ccd885712fc1779f55099238f795e9278b235b8,'Updating docs to show support for Python 3.6 in Windows. (#12687)\n\n* Updating docs to show support for Python 3.6 in Windows.\r\n\r\n* Nit: Fix typo.'
3c6a603d8ae9035830626df0e261442a59f2b990,"""Disable the 'output size too large' check for the CPU path of depthwise convolution and fix error message for the GPU and NEON path.\n\nPiperOrigin-RevId: 166845550"""
2f5035640cf0fe60facb40dec30803a7bd17f7d5,'Fixed code formatting'
fe933eaf5bd5ad6d061b88d08c706c6489baa2d4,'Fixing typo in default_name argument for name_scope'
51eb71cd3b8353ba65ca3539539f4b69fda029dc,'fix markdown syntax mistakes'
796313e74b089458b55450293bf5f652399915b7,'Code review fixes - optimization for breaking out of loop early and comment fix'
2546f7930e4488dd7fa6f482ed1fb389d2d32774,"'Added MKL element-wise ops that utilize eigen ops as their back-end. Also added an input-conversion op that ensures that shapes of both input tensors are compatible (same or broadcastable). Added SquaredDifference to layout pass, and fixed the test for layout pass (it assumed Add/Mul/Sub would not be substituted with Mkl ops) Fixed missing edge deletion for 2 edges Fixing condition for checking broadcast Added more sanity checks Changed check for incoming control edges to code that moves control edges from the elementwise node to the inputconversion node. Fixed bug in CHECK for input types, which did not consider output number of source while checking datatype Fixed unit test bugs and added SquaredDifference elementwise op for CycleGAN Fixed merge issue (code duplication) Ran buildifier and clang-format on changed code Fixed a couple of merge issues and clang-format changes outside the modified code'"
db1e43e3335e190db1a27e0e74f104d7bc5471dd,'Java: Support multi-dimensional STRING tensors.\n\nFixes #8531\n\nPiperOrigin-RevId: 166749470'
e705629ea7bcdc257f567f55100e3f793f3d1372,"'Fix device for ResourceVariables, and add tape.watch on reading them.\nPrint status for errors in resource variable lookups.\n\nPiperOrigin-RevId: 166744927'"
789fb5f46dc2d46261f65a09b768cef9bc7f4ae9,"'Fixes device assignment when local task type is not ""worker""\n\nPiperOrigin-RevId: 166743522'"
95d240c5fbecec9fdbef55dc1154c4f454752633,'Fix Adam in Eager mode and test adam/momentum\n\nPiperOrigin-RevId: 166733547'
86f5b7776e9e22efcd400ecff0d1d28f13c679e3,'Fix ios_tensorflow_lib build failure on Mac.\n\nPiperOrigin-RevId: 166731436'
11698cc8e157eefe71a60931f1e721ad327e08af,"'Verify the output shape of HLO instructions in the HloVerifier. This change adds verification for some but not all instruction types. To support this verification, add HLO-level methods to ShapeInference. These methods will also be useful to automatically infer shape in the HloInstruction::Create* methods.\n\nThis CL also fixes some tests and transformations with malformed instructions found by the verifier.\n\nPiperOrigin-RevId: 166718979'"
f938347aeba95afa55d5dd0d3f911689eff31821,"'Minor bugfix to HloInstruction::MergeFusionInstruction, and allow InstructionFusion::Fuse to be overridden by derived classes.\n\nPiperOrigin-RevId: 166631382'"
9e1c4a942fe11bf5233df0b424de1a5f2f6b0e49,'Add a check to the HLO verifier for badly formatted Broadcasts.\n\nAlso fix up the two cases where the code was creating invalid\nbroadcasts.'
17f26f81bfaf8ee03e330b98f4297cb754676c35,"""Minor refactor of BatchNormalization's build, where we create gamma before beta.\nThis fixes a major compatibility issue between tf.keras and multi-backend keras,\nin which the BN weights saved by one version would be incorrectly loaded by\nthe other version.\nThis change will not have side effects outside of Keras.\n\nPiperOrigin-RevId: 166552455"""
4a0decf95f4b48429424cf824c686a5b9fdff84b,'Enables eager mode for a few outstanding tests for ResourceVariable now that the requisite fixes are in.\n\nPiperOrigin-RevId: 166539119'
f6fea18a630cf80d3e78bad4d98533a599936e25,"'Merge changes from github.\nEND_PUBLIC\n\n---\nCommit b30ce4714 authored by James Qin<jamesqin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRevamp CudnnRNN Saveables\n\n1. Use a lossy way to save/restore cudnn biases during checkpointing.\nCudnn uses 2 biases each gate for all RNNs while tf uses one. To allow cudnn checkpoints\nto be compatible with both Cudnn and platform-independent impls, previously both\nindividual bias and summed biases each gate were stored.\nThe new way only stores the bias sum for each gate, and split it half-half when\nrestoring from a cudnn graph. Doing this does not cause problems since RNNs do not use\nweight-decay to regularize.\n\n2. Use inheritance instead of branching\n* Split RNNParamsSaveable to 1 base class and 4 subclasses.\n* Extract common routines and only overwrite rnn-type-specific pieces in subclasses.\n\nPiperOrigin-RevId: 166413989\n\n---\nCommit ebc421daf authored by Alan Yee<alyee@ucsd.edu>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nUpdate documentation for contrib (#12424)\n\n* Update __init__.py\n\nRemove ## for standardization of api docs\n\n* Create README.md\n\nAdd README to define this directory\'s purpose\n\n* Update __init.py\n\nMarkdown styling does not show up well in api docs\n\n* Update README.md\n\nAdd short mention of describing what to deprecate\n\n* Update README.md\n\nCapitalize title\n\n* Update README.md\n\nRevert README change\n\n* Delete README.md\n\n---\nCommit fd295394d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse latest version of nsync library, which now allows use of cmake on MacOS.\n\nPiperOrigin-RevId: 166411437\n\n---\nCommit 587d728e0 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Refactor reduce-precision-insertion filters, add several more options.\n\nIn particular, this adds the ability to add reduce-precision operations after fusion nodes based on the contents of those fusion nodes, and the ability to filter operations based on the ""op_name"" metadata.\n\nPiperOrigin-RevId: 166408392\n\n---\nCommit 3142f8ef5 authored by Ali Yahya<alive@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSteps toward making ResourceVariables compatible with Eager.\n\nThis change forces the value of the reuse flag in variable scopes to be tf.AUTO_REUSE when in Eager mode.\n\nThis change also adds comprehensive Eager tests for ResourceVariable.\n\nPiperOrigin-RevId: 166408161\n\n---\nCommit b2ce45150 authored by Igor Ganichev<iga@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake Graph::IsValidNode public\n\nIt can be reimplemented with existing public APIs, but instead of doing so,\nmaking this one public seems better.\n\nPiperOrigin-RevId: 166407897\n\n---\nCommit 0a2f40e92 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA::CPU] Fix HLO profiling in parallel CPU backend.\n\nPiperOrigin-RevId: 166400211\n\n---\nCommit c4a58e3fd authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIdentify frame ids for all nodes in a graph.\n\nPiperOrigin-RevId: 166397615\n\n---\nCommit 989713f26 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 166294015\n\nPiperOrigin-RevId: 166521502'"
008910f1122d115a6d7430bfcc63cf4296c7467d,"'Merge changes from github.\nEND_PUBLIC\n\n---\nCommit b30ce4714 authored by James Qin<jamesqin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRevamp CudnnRNN Saveables\n\n1. Use a lossy way to save/restore cudnn biases during checkpointing.\nCudnn uses 2 biases each gate for all RNNs while tf uses one. To allow cudnn checkpoints\nto be compatible with both Cudnn and platform-independent impls, previously both\nindividual bias and summed biases each gate were stored.\nThe new way only stores the bias sum for each gate, and split it half-half when\nrestoring from a cudnn graph. Doing this does not cause problems since RNNs do not use\nweight-decay to regularize.\n\n2. Use inheritance instead of branching\n* Split RNNParamsSaveable to 1 base class and 4 subclasses.\n* Extract common routines and only overwrite rnn-type-specific pieces in subclasses.\n\nPiperOrigin-RevId: 166413989\n\n---\nCommit ebc421daf authored by Alan Yee<alyee@ucsd.edu>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nUpdate documentation for contrib (#12424)\n\n* Update __init__.py\n\nRemove ## for standardization of api docs\n\n* Create README.md\n\nAdd README to define this directory\'s purpose\n\n* Update __init.py\n\nMarkdown styling does not show up well in api docs\n\n* Update README.md\n\nAdd short mention of describing what to deprecate\n\n* Update README.md\n\nCapitalize title\n\n* Update README.md\n\nRevert README change\n\n* Delete README.md\n\n---\nCommit fd295394d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse latest version of nsync library, which now allows use of cmake on MacOS.\n\nPiperOrigin-RevId: 166411437\n\n---\nCommit 587d728e0 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Refactor reduce-precision-insertion filters, add several more options.\n\nIn particular, this adds the ability to add reduce-precision operations after fusion nodes based on the contents of those fusion nodes, and the ability to filter operations based on the ""op_name"" metadata.\n\nPiperOrigin-RevId: 166408392\n\n---\nCommit 3142f8ef5 authored by Ali Yahya<alive@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSteps toward making ResourceVariables compatible with Eager.\n\nThis change forces the value of the reuse flag in variable scopes to be tf.AUTO_REUSE when in Eager mode.\n\nThis change also adds comprehensive Eager tests for ResourceVariable.\n\nPiperOrigin-RevId: 166408161\n\n---\nCommit b2ce45150 authored by Igor Ganichev<iga@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake Graph::IsValidNode public\n\nIt can be reimplemented with existing public APIs, but instead of doing so,\nmaking this one public seems better.\n\nPiperOrigin-RevId: 166407897\n\n---\nCommit 0a2f40e92 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA::CPU] Fix HLO profiling in parallel CPU backend.\n\nPiperOrigin-RevId: 166400211\n\n---\nCommit c4a58e3fd authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIdentify frame ids for all nodes in a graph.\n\nPiperOrigin-RevId: 166397615\n\n---\nCommit 989713f26 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 166294015\n\nPiperOrigin-RevId: 166521502'"
a2c6d91846173d97b33de066795da56a1664ef76,'Fix documentation for setting __ANDROID_TYPES_FULL__\n\nThe previous command using --define does not cause the c++ macro\n__ANDROID_TYPES_FULL__ to get defined.\n\nPiperOrigin-RevId: 166502743'
6fc52fb724892e34197a29cb7c4d974fd81cb55b,'fix gdr compiling error (#12462)'
739b760d5e2e718f31cdd023f015d62e4da9aabc,'Fix bug in DataFeeder constructor (#12562)\n\nThis fix fixes #12525\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
888855a0558535a1224a643ddd341ba586048b17,'Partially fixes #10838 (#12564)'
9ca053d6d6664ee98bcc12fba544a41333591715,'Fixing some wording and specifying a clean env'
fb67defefce4751ca695aaa9cb4ef07f8c58a36a,'Shrink the tensor sizes to fix the timeout issue for transpose benchmark.\n\nPiperOrigin-RevId: 166487979'
15dbf6b8e4be3b842108129433e20e51f8ba395b,'BUG: fix -1 index'
24c5f7784889a5ecf1b3fe42ebb08709590abafd,"""Fixed the ExtractExtraProperties function: 1) skip control input 2) log when input properties don't match the graph.\n\nPiperOrigin-RevId: 166414766"""
0a2f40e92d7f9a81b482027fd38c1bc429369abd,'[XLA::CPU] Fix HLO profiling in parallel CPU backend.\n\nPiperOrigin-RevId: 166400211'
105dd2aa22c7aaac401d2d8ed3131b5d81fdc227,"'Implement Variant changes suggested by Manjunath Kudlur; simplify API.\n\n1. Remove the self-mutating MaybeDecodeAndGet<>() in favor of the simple,\n   original get<>().\n2. Remove mutexes and locks from everything.\n\nTo allow tensorflow RPC to continue working transparently:\n\n3. Add a registration mechanism for Variant decoding -- used by\n   variant_coding within TensorFlow.\n4. Add a MaybeDecodeAndCopy<>() const; for use by callers of Session::Run\n   that get Tensors back which may contain encoded Variants.\n5. Small bugfixes to Variant Encode impls and tensor FromProtoField and\n   variant_coding.\n\nPiperOrigin-RevId: 166383211'"
f286c78b619b81ca95ba9f738cc0de4e14440e44,'Fix the XLA build (#12565)\n\n* Fix the XLA build\r\n\r\n* Fix the GPU build'
38140bac36600377717f238135a68e0a49176c63,'Merge pull request #12561 from av8ramit/11784_fix\n\nUpdating the Windows install documents in master'
ebbb80cb7a8252e31a9702066d64310568785248,'Fixing one last 5.1 reference.'
410fe2c31009a5ae341241afc76257cc19615f10,'Include <numeric> for iota to fix build on MSVC.\n\nPiperOrigin-RevId: 166309987'
ab2ee557c4d8584fefeeda620dfbec2e4c72c227,'Change required cuDNN from v5.1 to v6.0 for Linux in the docs (#12463)\n\nThis fix changes the required cuDNN from v5.1 to v6.0 for Linux in\r\n`tensorflow/docs_src/install/install_linux.md` as the build is\r\nlinked against libcudnn.so.6 (not libcudnn.so.5)\r\n\r\nThis fix fixed 12416.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
2f531b54ce51fdb9fc2b055548e534a13624ea93,'Fix the wrong format of some exception strings.\n\nPiperOrigin-RevId: 166300900'
e650dcfb462a9efc9236e33cae87ac5bbf55d9f7,"'Verbs hang fix (#12361)\n\n* Replaces the call to the verbs_utils sync wrappers for device-to-device operations, with a call to the async function with a callback function.\r\nThis is done in order to fix a bug that occurs while using verbs, and causes the program to hang.\r\n\r\n* Removed unused functions of verbs_utils\r\n\r\n* Removed 3rd sync wrapper, replaced with async function'"
1d346424afbdf190afbcf59c9a28a96041082ced,'Docs typo fix (#12529)\n\n* Update io_ops.py\r\n\r\n* Update io_ops.py'
e64993b5d0075cdc7162d51c37a8a5ae0f5fb007,'Enable int16 and uint16 for reverse op (#12531)\n\n* Enable int16 and uint16 for reverse op\r\n\r\nThis fix tries to address the issue in 12528 where\r\nit was not possible to run uint16 on rot90 (reverse) op\r\n\r\nThe int16 and uint16 has been implemented in CPU though\r\nthey were not enabled yet.\r\n\r\nThis fix enables int16 and uint16.\r\n\r\nThis fix fixes 12528.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for int16 and uint16 for reverse op.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
fe082eef1e8f225dca8a6aae6a57f87e3347793c,"'remove duplicated code for find master session by handle (#12317)\n\n* remove duplicated code for find master session by handle\r\n\r\n* fix compile failed, and add more comment'"
044a063d7d593a05d212aa03f21805797093a2a8,'Fix wrappers.go'
84138ef8bbb258ba5822808e19c54865f345cbef,'Fix crashes caused by loading boosted_trees shared libraries.\n\nPiperOrigin-RevId: 166238007'
9b6e8d76c8d44cce0d5036b5d8715fbbfed9b21d,'Fix function redefinition lint error'
0bfcea4b70d8bd2117ef4ee3b0241b62501bd5ca,'Fixed logit_fns_test.\n\nPiperOrigin-RevId: 166229572'
03154ba82ca8978fa7c6ed1d3c3e385573fe77c6,"""tfdbg: fix bug wherein --.*_filter doesn't work with -f for command 'run'\n\nFor example, the following command didn't work previously:\ntfdbg> run -f has_inf_or_nan --node_name_filter v.*\n\nThe --node_name_filter was simply ignored, leading to the dumping of all tensors as if the flag didn't exist.\n\nNow it works.\n\nPiperOrigin-RevId: 166114698"""
de0bf4c315337190b1ef7d054ca8c7efbb975d0d,'Small fix to avoid None returned from name scope.\n\nPiperOrigin-RevId: 166110191'
593dc8e5d65f4db93e8f5fced772abb3531a9752,'Merge pull request #12493 from bryant1410/patch-1\n\nFix code highlight language in profiler README'
ba995556ec8b155362e313e5666366d81437c908,'Fix code highlight language in profiler README'
cb3314159fe102419289d394246d7ac9c2a422c1,"'Bugfix to DropoutWrapper: never drop out the ""c"" (memory) of an LSTMStateTuple.\n\nThis is not exactly a backwards compatible change, in that it modifies the\nbehavior of DropoutWrapper in its most typical use case; but it is a bugfix:\nDropout and variational dropout should now correctly train with LSTM.\n\nFixes #11650\n\nPiperOrigin-RevId: 166085514'"
570a922d2b7e8dd33f2ffb4988ea3f306d34a192,'Fix example in comments for CancellationManager::RegisterCallback\n\nPiperOrigin-RevId: 166083596'
3153d92552c430dfe02d70d85acbdc0c27fcfc85,'Merge pull request #12494 from bryant1410/patch-2\n\nFix images not showing in profiler README'
0cbde3eac16b28a78584dd31806cd14ac67f86b8,'Merge pull request #12483 from tizhou86/master\n\nFix serveral typos in docs.'
237a1156e6f84ef193b736f37087be7ebd41b844,'Fix images not showing in profiler README'
15905c57724aa918b82f0333831f3c291406d05b,'Fixed serveral typos in docs.\n\nSigned-off-by: Ti Zhou <tizhou1986@gmail.com>'
40aa153c8321b2fd054e540e7f5373be9f32d070,"'tfdbg CLI: fix issue of two columns having no space in between\n\nAlso add unit to the Size column, so the title reads ""Size (B)"".\n\nPiperOrigin-RevId: 166014030'"
61c0b39011671628ee85c2b49bc8845520018aa2,'fix bugs in `stack_bidirectional_rnn` when constraining the initial_states (#12297)'
5b1139cea959e885dca3ec1a9dc60a3a5a1e1018,"""Clean up 'shell=True' in using subprocess module (#12347)\n\n* Set default shell=False in configure.py\r\n\r\n* Fix wrong paths when building for other python\r\n\r\n* Clean up 'shell=True' in using subprocess module\r\n\r\n* Fix a regexp in configure.py\r\n\r\n* Check existence before executing\r\n\r\nFor platform specific commands, use python functions instead if possible\r\n\r\n* Fix typo in input prompt\r\n\r\n* Fix a ldconfig mistake made in 3b6db82"""
2ee43d075bc0175991b5f130597ec38e0358ca13,'Fix reduce_slice_ops_test.\n\nPiperOrigin-RevId: 165996984'
f4117af68fa2d29aedde562d3ac7832534ba78b5,"'Feature add provide Java Graph class getter for all operations (#12243)\n\n* . c_api code and tests to support exposing the cardinality of operations within a graph, and populating a parameter of TF_Operations** with all operations within a graph.\r\n. JNI code to take advantage of this new functionality.\r\n. Java code and tests to expose the JNI layer in the Graph class\r\n\r\n* . Changes in response to @asimshanka feedback.\r\n\r\n* . Protect against the case in which the iteration is actually stuck returning the same operator from the graph.\r\n\r\n* Style tweaks\r\n\r\n- Tweak comment to make for a shorter summary fragment (https://google.github.io/styleguide/javaguide.html#s7.2-summary-fragment)\r\n- Apply the formatter: https://github.com/google/google-java-format\r\n\r\n* graph_jni.h: Formatting fix\r\n\r\n* Graph.java: Formatting change\r\n\r\n* . Better treatment of the pos variable; line re-organization per suggestions from @asimshankar'"
f47c3ad964f42121cbab02afed52e2df367ea9ef,'BUG: Estimator.eval() runs feature_engineering_fn more than once. (#12206)\n\n* TST: add test case\r\n\r\n* BUG: fix TypeError when using same name in fn\r\n\r\n* CLN: remove blankline\r\n\r\n* TST: refine test case\r\n\r\n* BUG: forget metrics\r\n\r\n* BUG: label -> labels'
ea53262ee056f89a340a758308cb609212afa1e7,"'Add unit tests and fix broken gradient calculation for tf.self_adjoint_eigvals.\nUpdate documentation to warn the user that there is no advantage to using\ntf.self_adjoint_eigvals over tf.self_adjoint_eig (the opposite, in fact) if\nbackpropagating through it.\n\nFixes: #11821\nPiperOrigin-RevId: 165988064'"
71aa4e65ef65e74e16034f95bcd66a98332adc97,'Eager API inclusion to the dynamic library build target (#12399)\n\n* Exposed and included the eager tensor execution C API to the TensorFlow dynamic library.\r\n\r\n* Updated BUILD to fix the sorting issue.'
6e3e7d18f42cb4237ce6dbe2ffd0f9f158c36daf,"'Merge changes from github.\nEND_PUBLIC\n\n---\nCommit 575bd01d4 authored by Vijay Vasudevan<vrv@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove /replica:0 declaration in device functions and allow them\nto be freely bound based on cluster names present.\n\nWhen more than one value matches, it will choose the first\nlexicographically available device that matches the specification,\nwhich in practice will do pretty much the same thing as hardcoding\n/replica:0.\n\nPiperOrigin-RevId: 165766815\n\n---\nCommit d685bbc54 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBenchmarks with backprop enabled (and removes overhead).\n\nBefore:\nnp.array([[3]])                          took 1.50us (30000 iterations)\nTensor([[3]])                            took 16.30us (30000 iterations)\nMatMul [2, 2]: np.dot                         took 0.61us (30000 iterations)\nMatMul [2, 2]: tf.matmul                      took 60.53us (30000 iterations)\nMatMul [2, 2]: gen_math_ops.mat_mul           took 25.72us (30000 iterations)\nMatMul [2, 2]: TFE_Py_Execute                 took 2.82us (30000 iterations)\nMatMul [2, 2]: defun(tf.matmul)               took 45.70us (30000 iterations)\nMatMul [100, 784]: np.dot                         took 383.32us (1000 iterations)\nMatMul [100, 784]: tf.matmul                      took 350.35us (1000 iterations)\nMatMul [100, 784]: gen_math_ops.mat_mul           took 315.97us (1000 iterations)\nMatMul [100, 784]: TFE_Py_Execute                 took 249.42us (1000 iterations)\nMatMul [100, 784]: defun(tf.matmul)               took 280.95us (1000 iterations)\n\nIf backprop is enabled:\nnp.array([[3]])                          took 0.83us (30000 iterations)\nTensor([[3]])                            took 15.21us (30000 iterations)\nMatMul [2, 2]: np.dot                         took 0.63us (30000 iterations)\nMatMul [2, 2]: tf.matmul                      took 76.31us (30000 iterations)\nMatMul [2, 2]: gen_math_ops.mat_mul           took 38.66us (30000 iterations)\nMatMul [2, 2]: TFE_Py_Execute                 took 2.31us (30000 iterations)\nMatMul [2, 2]: defun(tf.matmul)               took 51.96us (30000 iterations)\nMatMul [100, 784]: np.dot                         took 378.34us (1000 iterations)\nMatMul [100, 784]: tf.matmul                      took 352.09us (1000 iterations)\nMatMul [100, 784]: gen_math_ops.mat_mul           took 364.28us (1000 iterations)\nMatMul [100, 784]: TFE_Py_Execute                 took 350.68us (1000 iterations)\nMatMul [100, 784]: defun(tf.matmul)               took 377.19us (1000 iterations)\n\nAfter:\nnp.array([[3]])                          took 0.86us (30000 iterations)\nTensor([[3]])                            took 15.19us (30000 iterations)\nMatMul [2, 2]: np.dot                         took 0.60us (30000 iterations)\nMatMul [2, 2]: tf.matmul                      took 64.51us (30000 iterations)\nMatMul [2, 2]: gen_math_ops.mat_mul           took 28.34us (30000 iterations)\nMatMul [2, 2]: TFE_Py_Execute                 took 2.38us (30000 iterations)\nMatMul [2, 2]: defun(tf.matmul)               took 48.50us (30000 iterations)\nMatMul [100, 784]: np.dot                         took 475.27us (1000 iterations)\nMatMul [100, 784]: tf.matmul                      took 399.50us (1000 iterations)\nMatMul [100, 784]: gen_math_ops.mat_mul           took 307.80us (1000 iterations)\nMatMul [100, 784]: TFE_Py_Execute                 took 272.83us (1000 iterations)\nMatMul [100, 784]: defun(tf.matmul)               took 350.06us (1000 iterations)\nPiperOrigin-RevId: 165765641\n\n---\nCommit d902babbd authored by David Majnemer<majnemer@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Algebraic simplifier incorrectly transformed convolutions into bitcasts\n\nPiperOrigin-RevId: 165765575\n\n---\nCommit 8e78e10ef authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ndisable test temporarily\n\nPiperOrigin-RevId: 165763204\n\n---\nCommit a271c37db authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSmall improvements to the arithmetic optimizer\n\nPiperOrigin-RevId: 165760972\n\n---\nCommit b6409594d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nConvert some tests to cover both eager and graph.\n\nPiperOrigin-RevId: 165760364\n\n---\nCommit 5ead76420 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nReduce XLA compile time by ~7% for a convolutional image model:\n\n* Added CompactPointerSet<T>, which is optimized for set size <= 1.\n* Changed expensive CHECKs to DCHECKS in buffer_assignment.cc\n* Reserve space in DFS state array before starting DFS.\n* Use unsigned arithmetic in DFS state maintenance.\n* HloInstruction:\n  - Moved frequently used fields to start for better cache locality.\n  - Use InlinedVector instead of vector for operand array.\n  - Use InlinedVector instead of vector for DFS stack.\n* Pre-compute ""is array"" and ""is tuple"" for LogicalBuffer.\n* PointsToSet:\n  - Combine two ShapeTrees into one.\n  - Use CompactPointerSet instead of std::set to hold sources.\n  - Use CompactPointerSet instead of std::set to hold flattened buffers.\n* ShapeTree: use unique_ptr instead of optional for shape storage\n  (reduces size and destruction overhead).\n* Add proper const qualifiers to some FlatSet iterator methods.\n\nCo-author=jeff\nPiperOrigin-RevId: 165759117\n\n---\nCommit a0544b0b8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake TPU symbols more easily accessible from contrib.\n\nPiperOrigin-RevId: 165753322\n\n---\nCommit cdc08afbb authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSlightly relax numeric tolerance for sinlge precision tests of matrix_solve_ls (and tighten it for double precision).\n\nPiperOrigin-RevId: 165750936\n\n---\nCommit eebcc861a authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixed the race condition between multi eval step increments.\n\nPiperOrigin-RevId: 165750595\n\n---\nCommit bbc0b8471 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 165748384\n\n---\nCommit 65f87c967 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nChange device string in RecvNodeDescriptor in VirtualScheduler from const\nreference to const as the RecvNodeDescriptor (and cached_recv_nodes map)\noutlives device string from the NodeDef.\n\nPiperOrigin-RevId: 165748244\n\n---\nCommit 57b0276cf authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 165747467\n\n---\nCommit 64e54423b authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf.contrib.data] Fix nested dictionary handling in dataset elements.\n\nBackports recent changes to the core version of the nest.py library.\n\nFixes #12372.\n\nPiperOrigin-RevId: 165746517\n\n---\nCommit 378463ae8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake tf.eye accept Python integer shapes and avoid generating unnecessary shape handling ops.\nClean up test and add tests with placeholders.\n\nPiperOrigin-RevId: 165746090\n\n---\nCommit 109ecf823 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd support for complex in matrix_solve_ls_op.\nSplit into separate files for each data type to speed up build.\n\nPiperOrigin-RevId: 165744539\n\n---\nCommit 51441302d authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal change.\n\nPiperOrigin-RevId: 165737455\n\n---\nCommit d0cb32c2a authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDocstring for ResourceVariable.\n\nPiperOrigin-RevId: 165735441\n\n---\nCommit 32f4c5b6e authored by Chris Leary<leary@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add IsFinite op in tf2xla.\n\nPiperOrigin-RevId: 165734702\n\n---\nCommit 5f5c3eb0a authored by Mark Daoust<markdaoust@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMove ""supervisor.md"" from programmer\'s guide to api_guides.\n\nPiperOrigin-RevId: 165732026\n\n---\nCommit d001b58de authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf.contrib.data] Fix handling of multi-output tf.py_func() in Dataset.map().\n\nIf the `map_func` returns a list of tensors, the current code will\nattempt to stack it into a single tensor and raise an unintuitive\nerror. Some multi-output ops (such as `tf.py_func()`) return lists of\ntypically-not-stackable tensors. This change treats lists returned\nfrom `map_func` as tuples; users who were relying on this\nauto-stacking behavior should manually call `tf.stack()` (or\n`tf.convert_to_tensor()`) on the list being returned.\n\nFixes #12396.\n\nPiperOrigin-RevId: 165731970\n\n---\nCommit e6c60fb36 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix flakyness, sometimes the op takes ms to run.\n\nPiperOrigin-RevId: 165728705\n\n---\nCommit 360bff8ae authored by Ali Yahya<alive@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMakes tape.watch() work with ResourceVariables.\nTo this end, also adds a property, `device`, to TensorNode.\n\nPiperOrigin-RevId: 165726368\n\n---\nCommit 80bd004cd authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nImplements SVDF model for keyword spotting tutorial.\n\nPiperOrigin-RevId: 165725938\n\n---\nCommit aaabf6b90 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix bug: Using a ComputationDataHandle from the wrong ComputationBuilder.\n\nPiperOrigin-RevId: 165724017\n\n---\nCommit 107d165d9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse 2-arg TraceMe constructor to prevent unnecessary StrCat computation when\ntracing is disabled.\n\nPiperOrigin-RevId: 165722280\n\n---\nCommit 7d01f89cc authored by Pete Warden<petewarden@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAndroid demo app for speech recognition\n\nPiperOrigin-RevId: 165714459\n\n---\nCommit a6729325a authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDeletes convert_n_to_eager_tensor. Moves convert_to_eager_tensor to constant_op.\n\nPiperOrigin-RevId: 165704074\n\n---\nCommit 573b303ac authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBUILD cleanup in tensorflow/core/kernels\n\nPiperOrigin-RevId: 165688864\n\n---\nCommit 711be6adc authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n`Dataset.from_generator()` constructs a dataset from a Python generator.\n\nWith this change, it becomes possible to use a Python generator as the source\ndataset for a `tf.contrib.data` input pipeline. This enables easier integration\nwith non-TensorFlow data sources. The generator can yield a nested structure of\nNumPy arrays, or values convertible to NumPy arrays.\n\nThis addresses a concern raised in issue #7951.\n\nPiperOrigin-RevId: 165663857\n\n---\nCommit 00594ecdd authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nNew landing page and leftnav for Programmer\'s Guide.\n\nPiperOrigin-RevId: 165660897\n\n---\nCommit 7359fec79 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nImplement Batchnorm Inference by expanding them into smaller ops.\n\n1. Add batch norm inference support in batchnorm_rewriter\n2. Connect xla\'s batchnorm inference to tf\'s FusedBatchNorm\n\nRELNOTES: n/a\nPiperOrigin-RevId: 165655351\n\n---\nCommit f0da8bf56 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[Rematerialization] Reconsider to remat operations with control dependencies\n\nWe added a conservartive logic to not rematerialize operations with control dependencies since the rematerialized operations could result in undesired ordering. However, we now realize that when we remat an operation, we also copy the dependencies of them, which guarantees the rematerialized operation has the same constraint as the original operation.\n\nPiperOrigin-RevId: 165654629\n\n---\nCommit a1225879c authored by Chris Leary<leary@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Propagate error code in computation replay tool.\n\nPiperOrigin-RevId: 165654497\n\n---\nCommit 513def0bb authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixed BuildOpInfoWithoutDevice\n\nPiperOrigin-RevId: 165653933\n\n---\nCommit d7e425f0b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix linear algebra benchmarks.\n\nPiperOrigin-RevId: 165653891\n\n---\nCommit 465c40819 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix the shape information propagation for Enter op.\n\nPiperOrigin-RevId: 165653579\n\n---\nCommit c0198fd8d authored by Derek Murray<derek.murray@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[CMake] Add missing dependencies on boosted_trees protos and other fixes (#12315)\n\n* [CMake] Add missing dependencies\n\n* Avoid rebuilding boosted_trees protos for Python.\n\n* Add GPU implementation ZeroInitializerOp to the CMake build.\n\n---\nCommit 641943fd7 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 165652758\n\n---\nCommit e31346452 authored by Jonathan Hseu<jhseu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nTPUEstimator: Fix the outfeed thread join.\n\nPiperOrigin-RevId: 165651781\n\n---\nCommit 565a9d350 authored by Vijay Vasudevan<vrv@google.com>\nCommitted by Andrew Harp<andrewharp@users.noreply.github.com>:\nAdd missing \'type\' keyword to ArgumentParser add_argument (#12275)\n\nFixes #12210\n---\nCommit 19a55725a authored by Rohan Jain<rohanj@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAllowing functions to run across devices. This change expands the ProcessFunctionLibraryRuntime library to Instantiate and Run functions on different devices. When a FunctionLibraryRuntime encounters a function with a target that is another device, it delegates Instantiate() and Run() calls to the ProcessFunctionLibraryRuntime.\n\nThis change also moves the table_ containing all function instantiations to the PFLR instead of the FunctionLibraryRuntime.\n\nPiperOrigin-RevId: 165651194\n\n---\nCommit 8c0853db7 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a test for negative and zero pow() input.\n\nPiperOrigin-RevId: 165650096\n\n---\nCommit a3c4e980e authored by Pete Warden<petewarden@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixed input shape for freezing audio graphs\n\nPiperOrigin-RevId: 165649546\n\n---\nCommit 9b9e5989d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a call_logit_fn utility for logit_fn\'s, similar to Estimator\'s _call_model_fn.\n\nPiperOrigin-RevId: 165649388\n\n---\nCommit 4ff1f4442 authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nRemove the script as well if building tf_nightly.\n\n---\nCommit 373d78987 authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nAdding the break.\n\n---\nCommit 0139ac983 authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nRemove tensorboard as a required package if we are building tf_nightly.\n\n---\nCommit a92bd5d5c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 165630063\n\nPiperOrigin-RevId: 165957821'"
dc1b93aedc4ffd6e545226f7861bb64c2eb880ff,'Fix issue in `variable` docs (#12452)\n\nA couple of doc error in `programmers_guide/variables.md`\r\n\r\nThis fix fixes 12444.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
2ba7ec1680f6462122a11f1748f04e1747d8d2e0,'Fix link time bug caused by missing header include.\n\nPiperOrigin-RevId: 165952248'
1a21b876b15f641c787c597d0051be41fd509542,"'Fix quantize_and_dequantize_op_test benchmark, by passing scalars instead of\nvectors for the inputs that require it.\n\nPiperOrigin-RevId: 165950380'"
77b5f6a956c61e6ada9d4a6c61892f9bd2464fdb,'Add ability for constant_op to accept encoded Variant tensors.\n\nAlso added DebugString() to Variant types and Tensor.DebugString() support for\ntensors containing Variants.\n\nAlso fixed a mutex bug in Variant is_empty().\n\nPiperOrigin-RevId: 165937782'
badd5456977e2b981a08cd5d6e41a292ea6eafda,"""Add a dependency to yet another build independent tensorflow build system.\n\nAs well as bazel, make, cmake and gradle builds, plus Google's internal version\nof bazel, tensorflow/tools/ci_build/builds/test_user_ops.sh is a shell script\nthat also builds parts of tensorflow.\n\nThis change fixes the dependencies it uses.\n\nPiperOrigin-RevId: 165880592"""
15b953a5d8254a89bcd7e0f3dc9843c101846cb2,"""Fix applicationId to 'org.tensorflow.demo' (#12432)\n\nFor nativeBuildSystem == 'cmake' change `applicationId = 'com.tensorflow.demo'` to `applicationId = 'org.tensorflow.demo'`\r\nOtherwise Android system treat bult app (com.tensorflow.demo) as separate one and install it alonside to org.tensorflow.demo"""
b315df8e5cc3b6e3bb78ff108250f537e1096c2d,'Fixes comment in lookup_ops.py referencing previous contrib location.\n\nPiperOrigin-RevId: 165861950'
da3aa93758508a37741dad1d8b28e62782330171,'CPU backend: support NEON intrinsics.\n\nThis adds log and exp for NEON.\n\n(tanh is already supported on all platforms via\nthe LLVM IR runtime)\n\nThis change also fixes tf_library() to link in the\nintrinsics to the binary.\n\nPiperOrigin-RevId: 165782270'
e9953f59971872a7bb86064342918ca841ce9567,'Bugfix: import `vector_diffeomixture` lib in\ntf.contrib.distributions.__init__.py\n\nPiperOrigin-RevId: 165770880'
eebcc861ac0e720bfccf728a98036cceaae60841,'Fixed the race condition between multi eval step increments.\n\nPiperOrigin-RevId: 165750595'
64e54423bbffa4161ba2d85dc913e1973ae52cc6,'[tf.contrib.data] Fix nested dictionary handling in dataset elements.\n\nBackports recent changes to the core version of the nest.py library.\n\nFixes #12372.\n\nPiperOrigin-RevId: 165746517'
d001b58de9d0d99ef34637b9a9bed5763875f655,"'[tf.contrib.data] Fix handling of multi-output tf.py_func() in Dataset.map().\n\nIf the `map_func` returns a list of tensors, the current code will\nattempt to stack it into a single tensor and raise an unintuitive\nerror. Some multi-output ops (such as `tf.py_func()`) return lists of\ntypically-not-stackable tensors. This change treats lists returned\nfrom `map_func` as tuples; users who were relying on this\nauto-stacking behavior should manually call `tf.stack()` (or\n`tf.convert_to_tensor()`) on the list being returned.\n\nFixes #12396.\n\nPiperOrigin-RevId: 165731970'"
e6c60fb368aa1261663cef1204e515179c36db8d,"'Fix flakyness, sometimes the op takes ms to run.\n\nPiperOrigin-RevId: 165728705'"
aaabf6b9026963e8808d500751c26f9429c9c42f,'Fix bug: Using a ComputationDataHandle from the wrong ComputationBuilder.\n\nPiperOrigin-RevId: 165724017'
513def0bb27e4a7c29f6ff533d8ca150b2ab78b4,'Fixed BuildOpInfoWithoutDevice\n\nPiperOrigin-RevId: 165653933'
d7e425f0bd61676aa347a93a81d8e89bb5c1a1a1,'Fix linear algebra benchmarks.\n\nPiperOrigin-RevId: 165653891'
465c408196210efcdeb792b72801fdec7b7db868,'Fix the shape information propagation for Enter op.\n\nPiperOrigin-RevId: 165653579'
c0198fd8d491a83576b75d1bc9becaa5910a19fe,'[CMake] Add missing dependencies on boosted_trees protos and other fixes (#12315)\n\n* [CMake] Add missing dependencies\r\n\r\n* Avoid rebuilding boosted_trees protos for Python.\r\n\r\n* Add GPU implementation ZeroInitializerOp to the CMake build.'
e31346452d91c48fa9b3deff8df575ccbd7f877a,'TPUEstimator: Fix the outfeed thread join.\n\nPiperOrigin-RevId: 165651781'
565a9d3509299383ef7ae6815760fc42237e4cb6,"""Add missing 'type' keyword to ArgumentParser add_argument (#12275)\n\nFixes #12210"""
a3c4e980e00e9c332a4e9f8c232fb2a1cc2f5694,'Fixed input shape for freezing audio graphs\n\nPiperOrigin-RevId: 165649546'
f3bb510d0febaae80eb66af4970bfa974726023d,'Fixing merge conflicts'
0fab1a5d397d3d44eb4df84b1a81b30677873e8f,'Adding a head name that will prefix metrics and loss summaries.\n\nPiperOrigin-RevId: 165642839'
756e7cd7a53960224f3a6ecfe0985f10f4e2acad,"""Fix a typo in the Saver's doc.\n\nPiperOrigin-RevId: 165641759"""
2133b83376a3439924a0bb9bac7b4a8b716a6fc0,'Check cuda compute capability >= 3.0 in configure (#12364)\n\n* Check cuda compute capability >= 3.0 in configure\r\n\r\nFix #12181'
8a898a481828885b68bc41f481f40fb2b83a8bd2,"'Fix dequantize_op benchmark. The requirement is that the ranges come in as\nscalars, not single-element vectors, but this was not enforced until shape\ninference was enabled recently for this code path.\n\nPiperOrigin-RevId: 165606693'"
09c93e391caa33b75827bdc7d41ce140c937ec81,'TFE: pip cleanup + fix BUILD dependency of benchmarks_test\n\nPiperOrigin-RevId: 165604871'
c1f69be22e151e2d051f41fccf436767eee4a26a,'tfdbg core: fix data race\n\nPiperOrigin-RevId: 165591428'
53aef8a3a5920e53f7da3ea2140374546d1bf708,"'Use python_bin_path to check for site packages (#12238)\n\n* Use python_bin_path to check for site packages\r\n\r\nThis fix tries to fix the issue raised in #12232 where\r\nthe python invoked the configure.py was used to\r\ncheck the site packages.\r\n\r\nHowever, the site packages should be checked by the provided\r\npython_bin_path.\r\n\r\nThis fix fixes the issue. Below is the output after fix:\r\n```\r\nubuntu@ubuntu:~/tmp/tensorflow$ ./configure\r\nYou have bazel 0.5.3 installed.\r\nPlease specify the location of python. [Default is /usr/bin/python]: python\r\nInvalid python path: python cannot be found.\r\nPlease specify the location of python. [Default is /usr/bin/python]: /usr/bin/python3\r\nFound possible Python library paths:\r\n/usr/local/lib/python3.5/dist-packages\r\n/usr/lib/python3/dist-packages\r\nPlease input the desired Python library path to use.  Default is /usr/local/lib/python3.5/dist-packages\r\nDo you wish to build TensorFlow with jemalloc as malloc support? [Y/n]:\r\n\r\n...\r\nubuntu@ubuntu:~/tmp/tensorflow$ ./configure\r\nYou have bazel 0.5.3 installed.\r\nPlease specify the location of python. [Default is /usr/bin/python]:\r\nFound possible Python library paths:\r\n/usr/local/lib/python2.7/dist-packages\r\n/usr/lib/python2.7/dist-packages\r\nPlease input the desired Python library path to use.  Default is /usr/local/lib/python2.7/dist-packages\r\nDo you wish to build TensorFlow with jemalloc as malloc support? [Y/n]:\r\n```\r\n\r\nThis fix fixes #112232.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Also checks major version through python_bin_path\r\n\r\nand use decode for python 3.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
a9bcc1b57690299c580b4aa49ae02e9db606e878,'Fixes audio processor init not received all required parameters.\n\nPiperOrigin-RevId: 165540040'
0e8da986fbfd041c6669b8a3a91da464cc5b57cf,'Fix for spectogram shape calculation\n\nPiperOrigin-RevId: 165539491'
97afb4325aedf0fac9128ec562e3b093d8159099,'Fix a typo in ir_array.h\n\nPiperOrigin-RevId: 165525749'
3292c1a7369abbed73249b43432abbb0f86b4bec,"'Variant objects can now be used inside the TensorFlow execution graph.\n\nIncludes modifications and bugfixes to Variant and Tensor objects.\n\nThe most significant change is that a Variant storing a\nVariantTensorDataProto acts like the data type inside the stored proto.\n\nThis means that its TypeName() is the typename of the pre-serialized data\nobject, and .get<> has been renamed to MaybeDecodeAndGet<>.  Calling\nMaybeDecodeAndGet<OriginalType> performs a Decode under the hood.\nCalling MaybeDecodeAndGet<OriginalType> on a **const** Variant of\nVariantTensorDataProto causes a CHECK failure.\n\nAlso added proper TypeName() for unboxed primitive types (int, ...).\n\nPiperOrigin-RevId: 165510197'"
4a343043dbc6ce229b4dcf2258f7b6352db32b64,'Fix hasattr check in saved_model_cli\n\nPiperOrigin-RevId: 165509083'
f5486654113e34995daa5c582e30770b46acf393,"'Padding queue support for tf.estimator generator input pipeline (#10732)\n\n* add padding queues support for tf.estimator generator input pipeline\r\n\r\n* simplified version\r\n\r\n* now with six zip\r\n\r\n* add first docs and test\r\n\r\n* typos and code style fix\r\n\r\n* updated test: bug found\r\n\r\n* now with specified padding value\r\n\r\n* non numberic tests added\r\n\r\n* pylint\r\n\r\n* typo&!\r\n\r\n* still hate typos\r\n\r\n* additional exceptions\r\n\r\n* indentation fix\r\n\r\n* generator io updated for new feeding functions\r\n\r\n* test updated, numpy corrected\r\n\r\n* numpy error fix 2'"
cf2961dda3f6f82d258ef6ad9f3502a018dda5a6,'Fix note formatting\n\nPiperOrigin-RevId: 165461843'
320e64bcd4cfcfb8622c1194dddeb6ec640aec19,'Fix parameter naming in docstring and quote it.\n\nPiperOrigin-RevId: 165454545'
955a05231a92f3a382affc4e9a7d7e9b9ae8e07d,"""  Fix the bug where ExternalOptimizerInterface pops out 'method' option. Make a copy of optimizer_kwargs before 'pop'.\n\nPiperOrigin-RevId: 165451145"""
751687fd4d8867ec7dfac3e1d65f4c53e5301bd5,'Make small fixes to workspace.bzl\n\nPiperOrigin-RevId: 165397425'
477d49c9eaafc5e1e1667d454ce5883956180713,"'C++ API: run shape inference as nodes are constructed\n\nHere\'s an example of the new generated code:\n\nAddN::AddN(const ::tensorflow::Scope& scope, ::tensorflow::InputList inputs) {\n  if (!scope.ok()) return;\n  auto _inputs = ::tensorflow::ops::AsNodeOutList(scope, inputs);\n  if (!scope.ok()) return;\n  ::tensorflow::Node* ret;\n  const auto unique_name = scope.GetUniqueNameForOp(""AddN"");\n  auto builder = ::tensorflow::NodeBuilder(unique_name, ""AddN"")\n                     .Input(_inputs)\n  ;\n  scope.UpdateBuilder(&builder);\n  scope.UpdateStatus(builder.Finalize(scope.graph(), &ret));\n  if (!scope.ok()) return;\n  scope.UpdateStatus(scope.DoShapeInference(ret));\n  this->sum = Output(ret, 0);\n}\n\nEnabling shape inference unfortunately broke many tests. I fixed some of them, but for others I introduced a Scope::DisabledShapeInferenceScope() static method that returns a scope that doesn\'t perform shape inference. Eventually we should fix the tests that use this and remove it.\n\nPiperOrigin-RevId: 165378429'"
d90eba5a7429cbac9244fb00489d595ae73df7a1,'Fix include in gdr_server_lib.cc broken by missing copybara rule.\nFix >80 char in array_ops.py comment.'
f1b0f01275b9cbab8d28dad2c45c37a22b125993,'Fixed python 3 issue with string attr values.\n\nPiperOrigin-RevId: 165340781'
28ce1d163eeffe618a6972c5245be0e660d94e85,"'Merge changes from github.\nEND_PUBLIC\n\n---\nCommit 9f81374c3 authored by raymondxyang<zihao.yang@microsoft.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nAdd option for build more python tests in Cmake (#11853)\n\n* Ignore Windows built project\n\n* Fix deprecated methods in tf.contrib.python\n\n* Fix regex match for Windows build in contrib.keras\n\n* Fix Regex match for Windows build in session_bundle\n\n* * Fix deprecated methods\n* Fix regex match for Windows\n* Fix compatibility issue with Python 3.x\n\n* Add missing ops into Windows build for test\n\n* Enabled more testcases for Windows build\n\n* Clean code and fix typo\n\n* Add conditional cmake mode for enabling more unit testcase\n\n* Add Cmake mode for major Contrib packages\n\n* Add supplementary info in RAEDME for new cmake option\n\n* * Update tf_tests after testing with TF 1.3\n* Clean code and resolve conflicts\n\n* Fix unsafe regex matches and format code\n\n* Update exclude list after testing with latest master branch\n\n* Fix missing module\n\n---\nCommit 98f0e1efe authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nDynamic ksize and strides with MaxPool (#11875)\n\n* Dynamic ksize with max_pool\n\nThis fix tries to fix the issue raised in 4746 where ksize\nis static (attr) with max_pool.\nThis fix changes ksize to input tensor so that it is dynamic now.\n\nThis fix fixes 4746.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Add dynamic ksize to MaxPoolGrad and MaxPoolGradGrad\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Add test cases for max_pool_v2\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Fix GPU Jenkins issue.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Enable MaxPoolV2 in GPU\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n* Hide MaxPoolV2 and other fixes.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 02d6bc185 authored by Bairen Yi<byronyi@users.noreply.github.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nremove useless variable (#12212)\n\n---\nCommit ed6b0d905 authored by namrata-ibm<bhavenamrata@gmail.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nAdding support for s390x in calculation of cpu_frequency (#12201)\n\n---\nCommit 627dfc9dd authored by Taehoon Lee<taehoonlee@snu.ac.kr>\nCommitted by Taehoon Lee<taehoonlee@snu.ac.kr>:\nFix typos\n\n---\nCommit c0f9b0a91 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn fast-math mode emit a tanh that has a faster min/max.\n\nPiperOrigin-RevId: 164943597\n\n---\nCommit 87605f3d6 authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Use HloEvaluator for ComputeConstant, remove the need of a dedicated\ncompute constant backend.\n\nPiperOrigin-RevId: 164940970\n\n---\nCommit 881de45c2 authored by Taehoon Lee<me@taehoonlee.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nAdd bool type supports for GPU kernels (#11927)\n\n* Add bool type supports for GPU kernels\n\n* Add bool type test codes for GPU kernels\n\n---\nCommit eeacdcdb1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd missing ""CPU"" suffix in registrations.\n\nPiperOrigin-RevId: 164939527\n\n---\nCommit de01be952 authored by namrata-ibm<bhavenamrata@gmail.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nAdding support for Big Endian in graph_constructor_test and wav_io (#12179)\n\n---\nCommit 26719d29f authored by QingYing Chen<pkudysj@126.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nImplement CRF decode (Viterbi decode) for tensor (#12056)\n\n* Implement CRF decoding for tensors\n\n* add test code for tensor version\'s CRF decoding\n\n* made modifications according to pylint\n\n* add some comments for crf decode\n\n* remove useless code\n\n* add comments at the top comment of crf module and add more comments in crf_test\n\n* capitalize first char of first word in comments\n\n* replace crf_decode test code with a deterministic example\n\n---\nCommit f9a81ca2f authored by Pete Warden<pete@petewarden.com>\nCommitted by gunan<gunan@google.com>:\nCreate CI build script for Raspberry Pi (#12190)\n\n* Create CI build script for Raspberry Pi\n\n* Moved location of Pi build script\n\n---\nCommit e2a163a90 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMerge code from PR #11940 with internal changes from cl/164796436, and update Python tests to also run on GPU.\n\nPiperOrigin-RevId: 164929133\n\n---\nCommit 08bbfa187 authored by Taehoon Lee<me@taehoonlee.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nFix typos (#12195)\n\n---\nCommit ab96f41fb authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\n[OpenCL] Extends matmul_benchmark.py to cover SYCL (#11697)\n\n* [OpenCL] Extends matmul_benchmark.py to cover SYCL\n\n* Fixed typo\n\n* /gpu:0 -> /device:GPU:0\n\n* Fixes control_flow_ops_py_test\n\n* /gpu: -> /device:GPU:\n\n* Fixes //tensorflow/python/profiler/internal:run_metadata_test\n\n* gpu: -> GPU:\n\n* Fixes tfprof_node\n\n* [OpenCL] Fixes device path to name with many colons (#123)\n\nThe device path is constructed from a device name by replacing all\ncolons with underscores. Some device names contain more than one colon,\nfor example \'device:SYCL:0\' which gives a path \'device_SYCL_0\'. The\nprevious code would not convert this back to the original device name,\nbut rather to \'device:SYCL_0\'.\n\nAn alternative fix would be to convert all underscores to colons in the\ndevice name (i.e. remove the restriction inside `replace(""_"", "":"", 1)`),\nhowever I\'m not sure if there are any device names which contain\nunderscores.\n\n* If no gpu device aviable fake one\n\n* gpu: -> device:GPU\n\n* Fixes profiler test\n\n* /gpu:x -> /device:GPU:x\n\n* Fixes debug_io_utils_test.cc test\n\n* Fixes device_name_utils_test.cc\n\n---\nCommit 35e7a3665 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nRemove unneeded casting of int64 for reverse_sequence (#12192)\n\nThis fix remove unneeded cast of int64 for reverse_sequence:\n```\nlengths = math_ops.to_int64(lengths)\n```\nas int32 has already been enabled for reverse_sequence.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n---\nCommit 9fba8c185 authored by Anna R<annarev@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd benchmark dashboard link to benchmarks doc. Also, I added a link and\ndescription for Benchmarks page to Community index page.\n\nPiperOrigin-RevId: 164924906\n\n---\nCommit bb6f32fa7 authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake HloAliasAnalysis updatable after changes to the HLO graph.\nAs part of this change make HloAliasAnalysis a thinner layer which\nbasically only holds a map from HloValue to HloBuffer and vice versa.\n\nPiperOrigin-RevId: 164923041\n\n---\nCommit 9103096c1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by Thomas K?ppe<tkoeppe@google.com>:\nMerged commit includes the following changes:\n164923041  by meheff:\n\n    Make HloAliasAnalysis updatable after changes to the HLO graph.\n    As part of this change make HloAliasAnalysis a thinner layer which\n    basically only holds a map from HloValue to HloBuffer and vice versa.\n\n--\n\nPiperOrigin-RevId: 164923041\n\n---\nCommit 822603aed authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMerging sibling fusion instruction using multi_output_fusion\n\nPiperOrigin-RevId: 164920220\n\n---\nCommit c035aa2a8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 164917891\n\n---\nCommit e1e81d9ba authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\n[OpenCL] Fixes double memcpy bug (#151) (#12173)\n\n* [OpenCL] Fixes double memcpy bug (#151)\n\nAs the debg CopyOp is called on a Tensor without type, we need to use\nthe DataType enum to get type information, and use this to pass the type\non to Eigen. This is a workaround Eigen\'s need to have a type when\ncalling memcpy. If the Eigen memcpy can be provided without a type\nrequirement, then the memcpy in sycl_util is unnecessary.\n\n* Acts on feedback from: #12173/files/32cb12a9001b672425867b5a3110fd98e737a20b#r132496277\n\n---\nCommit d9ca2d86d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal change\n\nPiperOrigin-RevId: 164916465\n\n---\nCommit b8d13d218 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove more parts of DCASGD missed in the first pass. (47949b)\n\nPiperOrigin-RevId: 164914552\n\n---\nCommit 73b3d52c7 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ncmake fix\n\nPiperOrigin-RevId: 164911656\n\n---\nCommit 2173b5b0a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAllow TFE_TensorHandleCopyToDevice to have the same device as src and\ndestination. It will reuse the same underlying buffer in those cases.\n\nPiperOrigin-RevId: 164909906\n\n---\nCommit 13eb3b90e authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExperimental C and Python APIs to invoke TensorFlow kernels on concrete values.\n\nPiperOrigin-RevId: 164902588\n\n---\nCommit 7dfabcc01 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInitialize ExecutionOptions in ComputeConstant to default values.\n\nPiperOrigin-RevId: 164894867\n\n---\nCommit c8897e9bc authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nStatic required time computation\n\nPiperOrigin-RevId: 164894645\n\n---\nCommit 076158f9b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nEnable implicit->explicit conversion by default.\n\nPiperOrigin-RevId: 164890915\n\n---\nCommit 58c4a4cb1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBugfix: number of input channels is not necessarily in the last dimension, after introduction of data_format param.\n\nPiperOrigin-RevId: 164889729\n\n---\nCommit 8f9b1af8a authored by Igor Saprykin<isaprykin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRecover MonitoredSession when the Coordinator is requested to stop with one of the _PREEMPTION_ERRORS.\n\nWhen SyncReplicasOptimizer is used, a preemption in the Coordinator may result in two cases:\nCase 1) the session gets silently marked as complete\nCase 2) the session gets stuck\n\nThis CL aims to solve and verify solutions for both of these problems. Fix 1 changes the should_stop logic. Fix 2 changes the CoordinatedSession.run() logic.\n\nSyncReplicasOptimizer runs a separate set of threads using a Coordinator instance. Those threads do FIFOQueue.enqueue; the main thread does a blocking FIFOQueue.dequeue.\n\n`sync_token_q` FIFOQueue is on parameter-servers. When one of the PS instances gets preempted, an AbortedError causes the Coordinator to stop via request_stop(ex). That by itself changes the state of MonitoredSession.should_stop() to True (Fix 1).\n\nResults of the blocking Dequeue operation are sent to the chief worker via Recv. What happens next depends on the amount of tokens in `sync_token_q`. If there are enough for the next call to Dequeue to return, then the low-level ""tf session run() call"" returns. The next iteration of the `while not MonitoredSession.should_stop()` loop decides that the training is complete (Case 1).\n\nIf there are not enough tokens in `sync_token_q`, then the blocking Dequeue is going to keep waiting for them. This results in the graph execution getting stuck and the whole session getting garbage collected after 10 minutes (Case 2).\n\nWe decided to fix that by re-creating a session after it gets garbage collected (Fix 2). An alternative was to try to cancel the pending Dequeue operation, but it\'s not clear that it is the right thing to do and it is also not easy.\n\nPiperOrigin-RevId: 164888390\n\n---\nCommit 46e4de6e5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUndo loop fusion changes for now as they seem to be altering a few results.\nEND_PUBLIC\nRELNOTES: n/a\n\nBEGIN_PUBLIC\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 164825735\n\nPiperOrigin-RevId: 165340331'"
9e6183e4acbb1b795069947faf778a47709d2029,"'Fix error caused in MonitoredSession.close() (#12229)\n\n* Fix error caused in MonitoredSession.close()\r\n\r\nThis fix tries to address the error raised in 12224:\r\n```\r\n>>> import tensorflow as tf\r\n>>> with tf.train.MonitoredTrainingSession() as sess:\r\n...   sess.close()\r\n...\r\nTraceback (most recent call last):\r\n  File ""<stdin>"", line 2, in <module>\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py"", line 534, in __exit__\r\n    self._close_internal(exception_type)\r\n  File ""/usr/local/lib/python2.7/dist-packages/tensorflow/python/training/monitored_session.py"", line 569, in _close_internal\r\n    self._sess.close()\r\nAttributeError: \'NoneType\' object has no attribute \'close\'\r\n```\r\n\r\nThe error was caused by double call on `_internal_close()`.\r\n\r\nThis fix fixes the issue.\r\n\r\nThis fix fixes 12224\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add a test case for in MonitoredSession.close() and with statement\r\n\r\nThis test case covers 12224.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
d480ac587a0040acfc21bc2f63faa12cfd3194cc,'Add `skip_empty` option to `tf.string_split` (#12125)\n\n* Add `skip_empty` option to `tf.string_split`\r\n\r\nThis fix add `skip_empty` to `tf.string_split` so that\r\nit is possible to have `tf.string_split` behaving similiarly\r\nwith python.\r\n\r\nThis fix fixes 12108.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update goldens\r\n\r\nRun through:\r\n```\r\nbazel-bin/tensorflow/tools/api/tests/api_compatibility_test           --update_goldens True\r\n```\r\nto pass //tensorflow/tools/api/tests:api_compatibility_test\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
9ec70f309c6b87455a946b8a1620042acd28a54a,'Minor grammatical fix in comment\n\nPiperOrigin-RevId: 165217993'
8b75375e0c256bf173442ff2bddecb572692b78e,"'Update requirement for numpy.\n\nAutograd requires numpy >= 1.12.1. If numpy 1.11.0 is already installed on the system, pip will not upgrade numpy when installing tensorflow. Fix #12185'"
030ddd98c4d0a5bb654e52fd0c54ba2a0bd51060,"'Several updates and fixes for fused batchnorm in xla.\n\n1. There is a bug in in deriving the formulas for batch norm gradient calculation. This commit corrects the formula and\nupdates the implementation.\n\n2. Learning from mistake, this commit uses gradient_checker to test batch_norm_grad in a more generic way -- this method calculates the ""real"" gradients by evaluating the graph twice, and then compare it with the gradient.\n\nRELNOTES: Update formula for fused batch norm in xla\nPiperOrigin-RevId: 165190486'"
b93fd37e143bcdd6339f8e6081c948384a262e0b,'Update tensor_util.py and fix metric_ops.py (#12240)\n\n* Update tensor_util.py\r\n\r\nAdded deprecated note\r\n\r\n* Update tensor_util.py\r\n\r\nAdd more details to deprecated note\r\n\r\n* Fix metric_ops\r\n\r\nCorrected ordering of returned tuple'
88f9cfc831553a01e22d53991306f34a2a31e333,'Merge pull request #12226 from caisq/autograd-fix\n\nFix issues due to old numpy versions in dist_test and gcs_test'
22c56f0fdb02349df5717ae9b5c163aebddb6026,'Fix bug where a string constant with a space can get word\nwrapped in the generated code.\n\nPiperOrigin-RevId: 165078237'
ca1f9846a1fa6056c28b6512e3dd1037132ef7af,'Add regression tests  and fix some minor bugs (#12196)\n\n* Added regression tests and fixed minor bugs in existing tests.\r\n\r\n* Fix pylint errors.'
094f3337011022079aed68cc303741c881e94ee2,'Fix open-source build errors in examples/speech_command\n\nPiperOrigin-RevId: 165053647'
2307a867671c0ea5b8a1af8e72efb59c33cfbf57,"'Fix issues due to old numpy versions in dist_test and gcs_test\n\nPreviously numpy was installed with apt-get, leading to a version too\nold to be compatible with the recently-added autograd dependency of\ntensorflow. This change set fixes that.'"
fe762ceaf7e5e0ad82fb7a3a05f114c8f5b8d429,'Fix unicode error in device_setter_test.\n\nPiperOrigin-RevId: 165035012'
49f5fd91a47ce0578b19cb5a36865f3890dddb68,'TFE: Fix for bug in graph_only_ops.py.\n\nPiperOrigin-RevId: 165034457'
bcf47bd5ed73e500f9d16d503023665d9921133b,'Fix to SeparableConv2D that did not work when a stride >1 was\nused with the channels_first data_format.\n\nPiperOrigin-RevId: 165028212'
1dfe6e380dadceb0859c6bdd52de39a212ed624b,'Fix flaky test by re-introducing a dependency that may be short-cut via static shape inference.\n\nPiperOrigin-RevId: 165026308'
311ba0fe920f3264d0718cb381fb260be06f8322,'Bring back the stable sort property for topk on CPU.  Fixes #10003.\n\nAdd unit tests for stability of the sorts.\n\nPiperOrigin-RevId: 165015637'
9f81374c303293d1563085d6300b60c157a1eb95,'Add option for build more python tests in Cmake (#11853)\n\n* Ignore Windows built project\r\n\r\n* Fix deprecated methods in tf.contrib.python\r\n\r\n* Fix regex match for Windows build in contrib.keras\r\n\r\n* Fix Regex match for Windows build in session_bundle\r\n\r\n* * Fix deprecated methods\r\n* Fix regex match for Windows\r\n* Fix compatibility issue with Python 3.x\r\n\r\n* Add missing ops into Windows build for test\r\n\r\n* Enabled more testcases for Windows build\r\n\r\n* Clean code and fix typo\r\n\r\n* Add conditional cmake mode for enabling more unit testcase\r\n\r\n* Add Cmake mode for major Contrib packages\r\n\r\n* Add supplementary info in RAEDME for new cmake option\r\n\r\n* * Update tf_tests after testing with TF 1.3\r\n* Clean code and resolve conflicts\r\n\r\n* Fix unsafe regex matches and format code\r\n\r\n* Update exclude list after testing with latest master branch\r\n\r\n* Fix missing module'
98f0e1efec45ed56ef9045f6f1443998bc0d2da1,'Dynamic ksize and strides with MaxPool (#11875)\n\n* Dynamic ksize with max_pool\r\n\r\nThis fix tries to fix the issue raised in 4746 where ksize\r\nis static (attr) with max_pool.\r\nThis fix changes ksize to input tensor so that it is dynamic now.\r\n\r\nThis fix fixes 4746.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add dynamic ksize to MaxPoolGrad and MaxPoolGradGrad\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for max_pool_v2\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix GPU Jenkins issue.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Enable MaxPoolV2 in GPU\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Hide MaxPoolV2 and other fixes.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
7a144ad7fa7619f9c34a0108d92779146e37f18c,'Merge pull request #12207 from taehoonlee/fix_typos\n\nFix typos'
627dfc9dda02f9efe36ee86128b3b84b2f7fd009,'Fix typos'
eeacdcdb14bdd175665a902e02c99e4435d0484f,"'Add missing ""CPU"" suffix in registrations.\n\nPiperOrigin-RevId: 164939527'"
08bbfa187fcbd78c8f8067d4baebc4d3d9149003,'Fix typos (#12195)'
ab96f41fb4c4f17e96fd6177aa589c19df580456,"'[OpenCL] Extends matmul_benchmark.py to cover SYCL (#11697)\n\n* [OpenCL] Extends matmul_benchmark.py to cover SYCL\r\n\r\n* Fixed typo\r\n\r\n* /gpu:0 -> /device:GPU:0\r\n\r\n* Fixes control_flow_ops_py_test\r\n\r\n* /gpu: -> /device:GPU:\r\n\r\n* Fixes //tensorflow/python/profiler/internal:run_metadata_test\r\n\r\n* gpu: -> GPU:\r\n\r\n* Fixes tfprof_node\r\n\r\n* [OpenCL] Fixes device path to name with many colons (#123)\r\n\r\nThe device path is constructed from a device name by replacing all\r\ncolons with underscores. Some device names contain more than one colon,\r\nfor example \'device:SYCL:0\' which gives a path \'device_SYCL_0\'. The\r\nprevious code would not convert this back to the original device name,\r\nbut rather to \'device:SYCL_0\'.\r\n\r\nAn alternative fix would be to convert all underscores to colons in the\r\ndevice name (i.e. remove the restriction inside `replace(""_"", "":"", 1)`),\r\nhowever I\'m not sure if there are any device names which contain\r\nunderscores.\r\n\r\n* If no gpu device aviable fake one\r\n\r\n* gpu: -> device:GPU\r\n\r\n* Fixes profiler test\r\n\r\n* /gpu:x -> /device:GPU:x\r\n\r\n* Fixes debug_io_utils_test.cc test\r\n\r\n* Fixes device_name_utils_test.cc'"
35e7a36658102f25c9e51b435c7a53cf21a2000a,'Remove unneeded casting of int64 for reverse_sequence (#12192)\n\nThis fix remove unneeded cast of int64 for reverse_sequence:\r\n```\r\nlengths = math_ops.to_int64(lengths)\r\n```\r\nas int32 has already been enabled for reverse_sequence.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
e1e81d9ba9bdc094efc053a420a7332767140d2c,"""[OpenCL] Fixes double memcpy bug (#151) (#12173)\n\n* [OpenCL] Fixes double memcpy bug (#151)\r\n\r\nAs the debg CopyOp is called on a Tensor without type, we need to use\r\nthe DataType enum to get type information, and use this to pass the type\r\non to Eigen. This is a workaround Eigen's need to have a type when\r\ncalling memcpy. If the Eigen memcpy can be provided without a type\r\nrequirement, then the memcpy in sycl_util is unnecessary.\r\n\r\n* Acts on feedback from: https://github.com/tensorflow/tensorflow/pull/12173/files/32cb12a9001b672425867b5a3110fd98e737a20b#r132496277"""
73b3d52c7bc4d56af5bf87ed75a6fd43f3f6f01b,'cmake fix\n\nPiperOrigin-RevId: 164911656'
58c4a4cb1bfbf122c88552e19067a4e937900e04,"'Bugfix: number of input channels is not necessarily in the last dimension, after introduction of data_format param.\n\nPiperOrigin-RevId: 164889729'"
8f9b1af8ae3b3e0f0b2e252e004ed9179be66529,"'Recover MonitoredSession when the Coordinator is requested to stop with one of the _PREEMPTION_ERRORS.\n\nWhen SyncReplicasOptimizer is used, a preemption in the Coordinator may result in two cases:\nCase 1) the session gets silently marked as complete\nCase 2) the session gets stuck\n\nThis CL aims to solve and verify solutions for both of these problems. Fix 1 changes the should_stop logic. Fix 2 changes the CoordinatedSession.run() logic.\n\nSyncReplicasOptimizer runs a separate set of threads using a Coordinator instance. Those threads do FIFOQueue.enqueue; the main thread does a blocking FIFOQueue.dequeue.\n\n`sync_token_q` FIFOQueue is on parameter-servers. When one of the PS instances gets preempted, an AbortedError causes the Coordinator to stop via request_stop(ex). That by itself changes the state of MonitoredSession.should_stop() to True (Fix 1).\n\nResults of the blocking Dequeue operation are sent to the chief worker via Recv. What happens next depends on the amount of tokens in `sync_token_q`. If there are enough for the next call to Dequeue to return, then the low-level ""tf session run() call"" returns. The next iteration of the `while not MonitoredSession.should_stop()` loop decides that the training is complete (Case 1).\n\nIf there are not enough tokens in `sync_token_q`, then the blocking Dequeue is going to keep waiting for them. This results in the graph execution getting stuck and the whole session getting garbage collected after 10 minutes (Case 2).\n\nWe decided to fix that by re-creating a session after it gets garbage collected (Fix 2). An alternative was to try to cancel the pending Dequeue operation, but it\'s not clear that it is the right thing to do and it is also not easy.\n\nPiperOrigin-RevId: 164888390'"
92111fdd1a9baa113264149413105f700f9ee310,"""Enable int32 on GPU for tf.tile (#12183)\n\n* Enable int32 on GPU for tf.tile.\r\n\r\nThis fix enabled int32 on GPU for tf.tile, to fix the following error:\r\n```\r\nimport tensorflow as tf\r\n\r\nwith tf.device('/gpu:0'):\r\n    tt = tf.tile(tf.range(4), [3])\r\n\r\nwith tf.Session() as sess:\r\n    print(sess.run(tt))\r\n```\r\n\r\nThis fix fixes 12169.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Enable int32 for TileGradOp\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
ed7d08eaf92cb9dbc96a09ec6e08d0a93b70a61b,'Merge pull request #12152 from av8ramit/testing_sanity_precheck\n\nFixing an issue with merge back with rc2.'
703fd44bf0ae16574eecc04117391ed8111b7b86,'fix unnecessary sync_memops cuda pointer attr in gdr (#12170)'
963e564d91f6544c7a49ac80a618729eb7b6a36e,"'Ops and kernels for reduce_slice_ops (#9063)\n\n* init impl done\r\n\r\n* improve doc, shape inference\r\n\r\n* add and pass shape inference\r\n\r\n* check bound\r\n\r\n* small fix\r\n\r\n* add all types of reduction\r\n\r\n* add cpu kernels\r\n\r\n* write python tests\r\n\r\n* make it able to build independent on GPU\r\n\r\n* fix problems and pass all tests\r\n\r\n* add to py\r\n\r\n* remove redundant code\r\n\r\n* improve doc\r\n\r\n* change ops signature\r\n\r\n* add Cuda{2D,3D}LaunchConfig that max occupancy\r\n\r\n* support axis\r\n\r\n* remove default val, check input<=0\r\n\r\n* modify tests to net api\r\n\r\n* fix some compilation err\r\n\r\n* fix Const in flat_inner_outer_dims\r\n\r\n* pass build\r\n\r\n* fix shape test\r\n\r\n* fix names in macros\r\n\r\n* fix test\r\n\r\n* specify reduceop by macro\r\n\r\n* clean code\r\n\r\n* further simplify code\r\n\r\n* misc fixes\r\n\r\n* add max size check\r\n\r\n* fix typo\r\n\r\n* fix typo\r\n\r\n* tests, docs, and related changes\r\n\r\n* build the test\r\n\r\n* buildify\r\n\r\n* partially support vec indices\r\n\r\n* vec indices finish, not tested\r\n\r\n* pass cpu tests\r\n\r\n* fix gpu functor\r\n\r\n* fix code style\r\n\r\n* update doc\r\n\r\n* fix code style\r\n\r\n* fix code style\r\n\r\n* sync cuda_kernel_config change\r\n\r\n* buildify\r\n\r\n* typename->class in template template\r\n\r\ntypename in template template (See N4051: http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4051.html)\r\nis supported in gcc starting at 5(See: https://gcc.gnu.org/projects/cxx-status.html). So using typename instead\r\nof class will cause the compilation fails at gcc-4.\r\n\r\n* move to contrib\r\n\r\n* some fixes\r\n\r\n* some fixes\r\n\r\n* some fixes\r\n\r\n* buildify\r\n\r\n* build cleanup\r\n\r\n* add cmake'"
34ff4822c40f97cdb1b8dfc9f149c28e39fb0087,'Fix Windows Linking error (#12151)\n\nFix https://github.com/tensorflow/tensorflow/issues/12117'
77261d976c0b22c4159974cbb81fd65aa72021f3,"""Fixes an issue when 'CG' is used as an optimization method. For example, the CG method does not return the `nit` and `nfev` fields which leads to an error during logging. Test cases were also extended to cover additional optimization methods offered through SciPy.\n\nPiperOrigin-RevId: 164849933"""
c93245260cca14e8c9e1bca3712db8a54fae9314,'Merge pull request #12155 from yongtang/link\n\nFix broken link in `tensorflow/go/README.md`'
9038d627e206a22218b83a09b1f8ce5fdd5ce9e7,'Fixing typos.\n\nPiperOrigin-RevId: 164805620'
7483a659271621e79ca13867a6268aedac0e87f9,'[XLA] Fix Broadcast implementation in HloEvaluator to handle the special case of scalar broadcast to be consistent with other backends. Also add a test for scalar broadcast.\n\nPiperOrigin-RevId: 164781786'
9da3e4a802b3862aee997751b85731abd301f20d,"""Make HloDataFlowAnalysis updatable after transforming the HLO graph.\nUpdating is possible if operands/uses or computation roots change in\nthe graph. Updating is not possible if instructions are deleted or if\nnew instructions are added.\n\nSpecific changes:\n* Add verification methods for asserting invariants and checking the\n  analysis after updating.\n* Always add phi values at while instructions. Previously these were\n  added only if the phi had different inputs. The advantage of using\n  phi's unconditionally is that the set of values is fixed for a\n  module. Updates due to changing operands/uses in the graph do not\n  create new values.\n* Store values in a vector rather than a map. With unconditional phi\n  values, the number of HloValues is fixed so the values can be held\n  in a vector with stable references to elements.\n\nPiperOrigin-RevId: 164778750"""
b61ba301b69fffa49523a2c6e129e8681dbedce6,'FIx device colocation for kmeans.\n\nPiperOrigin-RevId: 164775849'
ebfbdaa7d0f6fc55fd406983ea67c99037d6c052,'Merge pull request #11261 from byronyi/tensor2bytebuffer\n\nFix TODO avoiding serialization in gRPC/GPU path'
9d9eec6019b7e628be77da90113ec7853e11e660,'Merge pull request #12144 from lukeiwanski/hotfix/linking\n\n[OpenCL] Fixes linking issue'
c57c551b3490a64de7f8ea5b2a14091b6c2318c7,'Merge pull request #12138 from vaibhavsood/master\n\nFix sparse_matmul_op_test on Power LE'
9ed2b66967996b54066004af3352193061127ce5,'[XLA] Fix Broadcast implementation in HloEvaluator to handle the special case of scalar broadcast to be consistent with other backends. Also add a test for scalar broadcast.\n\nPiperOrigin-RevId: 164781786'
56633fe0cecba03929738df0a0788216f57cf8e9,"""Make HloDataFlowAnalysis updatable after transforming the HLO graph.\nUpdating is possible if operands/uses or computation roots change in\nthe graph. Updating is not possible if instructions are deleted or if\nnew instructions are added.\n\nSpecific changes:\n* Add verification methods for asserting invariants and checking the\n  analysis after updating.\n* Always add phi values at while instructions. Previously these were\n  added only if the phi had different inputs. The advantage of using\n  phi's unconditionally is that the set of values is fixed for a\n  module. Updates due to changing operands/uses in the graph do not\n  create new values.\n* Store values in a vector rather than a map. With unconditional phi\n  values, the number of HloValues is fixed so the values can be held\n  in a vector with stable references to elements.\n\nPiperOrigin-RevId: 164778750"""
ac34ad082f8757224518b84cb5ac0ead3fd808ec,'FIx device colocation for kmeans.\n\nPiperOrigin-RevId: 164775849'
df236b584035b83ecd3f2ddff40d2fae2c715fc4,"""Fix broken link in `tensorflow/go/README.md`\n\nFix broken link in `tensorflow/go/README.md`. This is\nrelated to #12145 (`tensorflow/java/README.md`) but is\nin go's README.md\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
1e25406381d0d8276b503c058a4c0f82ded569f9,'Fixing an issue with merge back with rc2.'
5e5453099ad4a720172b352e8436e961d9d4235e,"""[OpenCL] Fix allocator destruction race condition (#136) (#11968)\n\n* [OpenCL] Fix allocator destruction race condition (#136)\r\n\r\n* [OpenCL] Changes SYCL Interface construction\r\n\r\nUses C++11 static initialisation to provide singleton instance, rather\r\nthan a mutex and pointer.\r\n\r\n* [OpenCL] Adds const to SYCL Interface methods\r\n\r\n* [OpenCL] Fix allocator destruction race condition\r\n\r\nA Tensor's allocator must outlive it, however there is no easy way to\r\ndetermine whether an Allocator has any Tensors still alive, and so we\r\ncannot know when it is safe to destroy an allocator. The CPU allocator\r\ngets round this by being deleted, so we adopt this convention here.\r\n\r\n* [OpenCL] Reformats SYCL code\r\n\r\n* [OpenCL] Fixes SYCL comments\r\n\r\n* [OpenCL] Tidies SYCL device description\r\n\r\nAdds check for whether the QueueInterface pointer is valid, as this\r\nmay not always be the case.\r\n\r\n* [OpenCL] Adds nullptr checking to SYCL allocator\r\n\r\n* [OpenCL] Adds const specifier to SYCL Interface\r\n\r\n* Acts on feedback from: https://github.com/tensorflow/tensorflow/pull/11968/files#r131717967\r\n\r\n* Acts on feedback from https://github.com/tensorflow/tensorflow/pull/11968/files#r131783432"""
e24d60f045ba67a67306712d4797cf36fdf661a6,'Update to monitors and tutorial (#11920)\n\n* Update wide.md\r\n\r\nRemoving unnecessary slash\r\n\r\n* Update monitors.py\r\n\r\nRemoved tf.learn.SessionRunHook in favor of tf.train.SessionRunHook.\r\n\r\n* Update wide.md\r\n\r\nRemove bad practice of sudo pip\r\n\r\n* Update wide.md\r\n\r\nReplace OS X with macOS\r\n\r\n* Update bigquery_reader_ops.py\r\n\r\nFixed error in example code\r\n\r\n* Update tensor_util.py\r\n\r\nSpaced import statements according to PEP 8\r\n\r\n* Update tensor_util_test.py\r\n\r\nSpaced the import statements according to PEP 8'
43007fb900a52381c6cd93660519e39c97bbf353,'Fix invalid audience tags cloud_tpu_profiler pip_package.\n\nAlso make version name alpha instead of RC.\n\nPiperOrigin-RevId: 164735457'
ca061bd29f46fc4017123dd81addf49214842b45,"'SGDR Learning Rate Decay Algorithm (#11749)\n\n* SGDR Learning Rate Decay Algorithm\r\n\r\n* Add license header\r\n\r\n* Fix issues, update doc, use global_step placeholder for testing\r\n\r\n* Documentation fixes.'"
0ffefe178f71ddb595471ddfc43edb8d702155ca,"'Add ""name"" variable support for tf.einsum (#11510)\n\n* Add ""name"" variable support for tf.einsum\r\n\r\nThis fix adds ""name"" variable support for tf.einsum\r\n\r\nThis fix fixes #11501\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* reflow\r\n\r\n* Match indentation\r\n\r\n* Update API Golden for api_compatibility_test\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Change the test case to better cover the scenario.\r\n\r\nThis commit changes the test case from\r\n```\r\ninvalid1=""invalid1"", invalid2=""invalid2""\r\n```\r\nto\r\n```\r\ninvalid1=""value1"", invalid2=""value2""\r\n```\r\nto make sure that the error message will show the keyward arguments,\r\nnot the value of the argument.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix the expected error message in the tests.\r\n\r\nThis fix sorts the list so that error message is repeatable.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
11e2aef14f7f2d862363c350ca1d67b87ea6a57b,"'[WIP] GPU Direct RDMA Out-of-Band Tensor Transport (#11392)\n\n* GPU Direct RDMA Out-of-Band Tensor Transport\r\n\r\n* [WIP] GPU Direct with customized allocator\r\n\r\n* [WIP] Data race problem\r\n\r\n* [WIP] Refactor and add checksum for GDR\r\n\r\n* [WIP] Add debug string to checksum check\r\n\r\n* Final piece of host memory fallback\r\n\r\n* Bugfix on memory region management\r\n\r\n* Add RDMA library headers as third party dependency\r\n\r\n* Revert ""Add RDMA library headers as third party dependency""\r\n\r\nThis reverts commit 5993e37f7f64a5c1e0d0645c59401f14e52ce3aa.\r\n\r\n* make buildifier happy\r\n\r\n* fix errors for non-RDMA target\r\n\r\n* fix good path\r\n\r\n* fix dangling pointer\r\n\r\n* add compile switch for GDR\r\n\r\n* make buildifier happy\r\n\r\n* tidy source format using clang-format --style=google\r\n\r\n* using buildifier to auto format\r\n\r\n* fix macro\r\n\r\n* fix build config\r\n\r\n* Fix a performance bug (and #11411 hopefully)\r\n\r\n* fix kUnknownNumaNode\r\n\r\n* prepare for a cleaned up refactoring\r\n\r\n* remove unnecessary changes\r\n\r\n* finishing moving to contrib\r\n\r\n* several quick fixes\r\n\r\n* fix tests\r\n\r\n* remove wrong stop() call in server join\r\n\r\n* fix a init race condition for gdr w.r.t. cuda\r\n\r\n* better reporting of errors via errno\r\n\r\n* add check for wildcard and loopback address\r\n\r\n* do not visit gpu allocators if no gpu is active\r\n\r\n* Revert ""do not visit gpu allocators if no gpu is active""\r\n\r\nThis reverts commit 3c54f86d24a0a2bbfc9339ccdf5bc6eff192344b.\r\n\r\n* fix for latest gcc and cpu-only build\r\n\r\n* complain louder on server side\r\n\r\n* reduce CPU overhead using event mode\r\n\r\n* leave platform-neutral gdr to future work\r\n\r\n* add docs\r\n\r\n* fix interference with MKL CPU allocator\r\n\r\n* fix testing if a tensor is on host\r\n\r\n* add several TODOs and checks\r\n\r\n* add a readme\r\n\r\n* Update README.md\r\n\r\n* update readme.md\r\n\r\n* fix several issues under VLOG\r\n\r\n* fix typo in readme\r\n\r\n* fix a race condition of GDR\r\n\r\n* remove unintended changes'"
ed2473c776e04eca3019561a57c3447a3b062321,'Add name field for tf.contrib.data.Iterator.make_initializer operation (#12122)\n\n* Add name field for tf.contrib.data.Iterator.make_initializer operation\r\n\r\nThis fix adds name fields for tf.contrib.data.Iterator.make_initializer operation\r\n\r\nThis fix fixes 12083.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Remove unneeded parameter in `with ops.name_scope`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
ea91e71b2af527ba829c0c3f7d2018977d7e6f4b,'Alpha Dropout (#11357)\n\n* alpha_dropout op in tf.contrib.nn\r\n\r\n* fix BUILD file'
3c59ffbf8e0e0aa3a5929d1c752efd4aea8b07fe,'NHWC  optimizations (MKL) (#11917)\n\n* Removed NHWC workarounds.\r\n\r\n* Updated link to latest MKL distribution and retained NHWC/NHWC conversion functions\r\n\r\n* Fixed missing comma\r\n\r\n* Added back delete\r\n\r\n* Correct checksum.'
e3034efc21424b8205625d3b3893bf0b3ba28da4,'Relax tolerance to fix OSS test failure on MacOS.\n\nPiperOrigin-RevId: 164728247'
1918d628107076264f47dbba1b53cc6457e3a086,'Merge pull request #12145 from yongtang/url\n\nFix broken URL in `tensorflow/java/README.md`'
021d3e476e47971bda2ad39699dc7d69f3a79eb9,"'Fix broken URL in `tensorflow/java/README.md`\n\nFixes broken URL in `tensorflow/java/README.md`, this fix fixes 12141.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
9ef81037f9b298aac2766696e4fd2ce90d808789,"""[OpenCL] Fixes linking issue\n\nc13cb2e5777852c6a498410669b24ac346114eba introduced linking issue that caused\n\nlogging.cc:(.text+0xa64): undefined reference to\n`tensorflow::StringPiece::Hasher::operator()(tensorflow::StringPiece) const'"""
921329b4a9b2fbf4c6904121aef3d09398febe45,'Fix sparse_matmul_op_test on Power LE'
606f83c239e61b3d5e80a801a719abeaec0a06e6,'fix styling'
e6e7ee49a9a2263b7bd4b2848ef41785a8f8778d,'slot_creator: fix bugs handling dynamic-shaped var/tensor\n\nPiperOrigin-RevId: 164686075'
af47270e4722596d67c04e480bbf6149e8a7cd38,"'Add int64 support for out_idx of tf.unique\n\nThis fix tries to address the issue raised in 12113 where\ntf.unique does not support int64 for out_idx. The support\nof int64 was specified by the docs, though.\n\nThe int64 support was enabled and additional tests were\nadded.\n\nThis fix fixes 12113.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
92f3efac3b79762bc11e377442f94a399501b217,'Fix MPI and Verbs compilation errors (#11935)\n\n* Fix MPI and Verbs compilation errors\r\n\r\n* Fix MPI and Verbs compilation errors'
88919c2bc12d85281124f2ba14c78916ac9b42cc,'fix link for installing page (#11869)'
865b92da01582081576728504bedf932b367b26c,"'[tf.contrib.data] Enable using step-local resources in Dataset.map()/filter().\n\nThis change ensures that the mapper/predicate function used\nrespectively in these transformations has its own ScopedStepContainer,\nthereby allowing the use of TensorArray resources (and operations that\nuse them, such as control-flow ops) inside these functions.\n\nFixes #11715.\n\nPiperOrigin-RevId: 164648309'"
d74f65bac566d78a781116789f7262d94f929830,"'Make Windows Bazel GPU build work again (#11901)\n\nThis change mainly fixed the Windows GPU build.\r\n\r\nBesides it also has some other fixes and improvments.\r\n\r\n1. print installed Bazel version in configure.py\r\n\r\n2. add test filters -no_gpu, -no_pip_gpu\r\n\r\n3. Mark some failing GPU tests as no_windows_gpu\r\n\r\n4. Add /DNOGDI flag for some targets to fix GPU build\r\n\r\n5. Update TF_CUDNN_VERSION to 6.0\r\n\r\n6. Update TF_CUDA_COMPUTE_CAPABILITIES to 3.7'"
30c13a450841b213d72dea93d9447a25169be0a7,'Fix tf.reduce_logsumexp to accept `-inf` (#11757)\n\n* fix tf.reduce_logsumexp to accept `-inf`\r\n\r\n* add tests of tf.reduce_logsumexp to accept `-inf`'
99bab71926d8b67fb1056b390445253a4a388070,"""[FIX]show proper error message when run `saved_model_cli` without arguments instead of an error said `AttributeError: 'Namespace' object has no attribute 'func'` (#12105)"""
3f0bb2d81da930a6070412bea412677edd79005c,"'https://github.com/tensorflow/tensorflow/issues/9481 (#11562)\n\n* https://github.com/tensorflow/tensorflow/issues/9481\r\nDescrition:\r\nFix the bug that Tensorflow on Windows running into issues when there\'s UTF8 encoded characters in the file path.\r\nSolution:\r\nSwitch to use WideChar API calls for Windows, like the CreateFileW,FindFirstFileW,FindNextFileW, LoadLibraryExW.\r\nTest:\r\nInstall Tensorflow on Windows with path have Chinese characers in it. No issue.\r\nRun command ""from tensorflow.contrib.rnn.python.ops.gru_ops import *"" No issue.\r\n\r\n* specify the utf-8 encoding in the python file\r\n\r\n* make Utf8ToWideChar, WideCharToUtf8 to static\r\n\r\n* Update some Windows file related API call to handle UTF-8 string\r\n\r\n* wrap #include ""tensorflow/core/platform/windows/windows_file_system.h"" into #if defined(PLATFORM_WINDOWS)'"
e31af224ea82ed2706ec38c099cf806f9c92c8ce,"""Enable passing scope to variable lookups (#11622)\n\n* Minor documentation fixup.\r\n\r\n* Allow passing optional scope into variable lookup helper functions.\r\n\r\nDon't alter the current behaviour of eg. `tf.trainable_variables()`, but\r\nmake it prettier to get classes of variables by scope.\r\n\r\n* Add documentation to variable lookup helper options.\r\n\r\nDocs match those for `tf.Graph.get_collection()`.\r\n\r\n* Allow passing scope to `_all_saveable_objects()`.\r\n\r\nAdded to currently private method similarly to `tf.*_variables()` helpers.\r\n\r\n* Fixup indentation in variables_test.py\r\n\r\n* Update golden file for API change."""
c2097ee941e89bdffd44e1adfbc8e76b3dcfacec,'Fix build issue in c++14 for condition_variable (#12027)\n\n* Fix build issue in c++14 for condition_variable\r\n\r\nThis fix fixes the issue raised in 12017 where condition_variable_any\r\nhas to be used in c++14.\r\n\r\nThis fix defines ConditionVariableForMutex as std::condition_variable_any\r\nin c++14 and std::condition_variable otherwise.\r\n\r\nThe fix is verified with\r\n```\r\nbazel build -s --config=opt --cxxopt=-std=c++14 ...\r\n```\r\n\r\nThis fix fixes 12017.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix additional usage of condition_variable in c++14\r\n\r\nThis commit fixes additional usage of condition_variable\r\nto condition_variable_any for c++14\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
793fa4e91d3cae77565f753c2b8d769e1a3928f8,'Fix numerical overflow issue in Csiszar-VIMCO.\n\nPiperOrigin-RevId: 164612059'
e1539e928c3ba43afd021a750c93427bbbf04b4f,"'MultivariateNormalFullCovariance BUGFIX:  ""name"" was not being passed to super\nconstructor, resulting in the init param ""name"" not being used everywhere, in\nparticular not as the property.\n\nPiperOrigin-RevId: 164596942'"
c67e2c911c9a76942c25a76d37f0568a755010e6,'Fix warnings about non-primary contexts.\n\nThe old code reports false warnings when CUDADriver::CreateContext gets called\nwith the current context being the primary context of another device. This CL\nfixes the issue by checking the device of the current context before report\nwarnings.\n\nPiperOrigin-RevId: 164534152'
d3aee0accdfbd787c8e5a62548d0ed07d36f3dc6,'[XLA] Support strided slice in HloEvaluator.\n\nTwo additional fixes:\n- Change DynamicSlice to calculate slice indices with modulo input dimensions to be consistent with existing backend behavior.\n- Add Preprocess and Postprocess to instruction Evaluation so that VLOG are triggered in these calls as well.\n\nPiperOrigin-RevId: 164523739'
76bd2bcc639bbe85f9121894f2639324a004cc2c,"""Fix tensordot with list of ints as axes (#11959)\n\n* Fix tensordot with list of ints as axes\r\n\r\nThis fix tries to fix the tensordot issue raised in 11950 where\r\n```\r\nTypeError: object of type 'int' has no len()\r\n```\r\nis thrown out when the axes is a list of ints:\r\n```\r\nwith tf.Session() as sess:\r\n    sess.run(\r\n         tf.tensordot(tf.ones((3,3), dtype=tf.float32), tf.constant([2, 3, 1], dtype=tf.float32)[None, None], axes=[1, 2])\r\n    )\r\n```\r\n\r\nIn numpy it is possible to specify `np.tensordot(np.ones((3,3)), np.array([2, 3, 1])[None, None], axes=[1, 2])`\r\n\r\nThis fix fixes #11950.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases for tensordot with axes of list of ints\r\n\r\nThis commit adds test cases for tensordot with axes of list of ints\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
9c30ed2a7a424e8c05edc0e76224efe913a47077,'Fix segfault when recording raw allocation returns nullptr (#12074)\n\n* fix segfault when recording raw allocation returns nullptr\r\n\r\n* undo the unintended changes'
af5e87dedad1a88e0a4d962dbc5c9c18f79480ec,'[OpenCL] Fix for //tensorflow/python/kernel_tests:image_ops_test (#111) (#12041)\n\n* [OpenCL] Fix for //tensorflow/python/kernel_tests:image_ops_test\r\n\r\n* Conforming to Google style comments\r\n\r\n* [OpenCL] Fixed RGBToHSVTest'
4ff71909c5dc9b892927fdb8c4663c5cdaa4e500,"'Removing visited_node hash table - fixing multinode shape mismatch issue (#12044)\n\nThis PR fixes an issue that arises in multinode setup. MklLayoutRewritePass\r\nmaintains a hash table for visited nodes, and the hash table is part of the\r\npass and used for every graph being rewritten. But it looks like in multinode\r\nsetup, multiple graphs may be processed simulteneously leading to incorrect\r\nmodifications to the hash table. So removing the hash table as we do not\r\nreally need it.'"
32e5652fe9f0054be0f888f8ec4ca12830de903b,'[OpenCL] Fixes core_rnn_cell_tests (#12076)\n\nSYCL uses the same implementation as the CPU one for BiasAdd'
e9682dd903c9d5209afbc4395cf800a6ca74995d,"'Added Convolutional LSTM (#8891)\n\n* Added Convolutional LSTM\r\n\r\n* fixed problems\r\n\r\n* refactored ConvLSTM to include 1,2,3d convs\r\n\r\n* kernel tests for 1d and 3d lstmconv\r\n\r\n* fixed merge issue\r\n\r\n* added spaces between commas\r\n\r\n* added spaces between commas\r\n\r\n* merge and better documentation/spacing\r\n\r\n* spacing correction\r\n\r\n* added variable size batch and img size\r\n\r\n* fix indent level'"
598ede2e4d72781f293cc293a582b1784712919d,"'fix a typo in tf.nn.separable_conv2d\'s doc (#12067)\n\nIt\'s obvious that the right bracket in ""sum_{di, dj, q, r]"" should\r\nbe a right brace.'"
33c331d5ff9721bf24384ba72b407187d9a4dc64,'Fix cmake builds: (#12048)\n\nhttps://github.com/tensorflow/tensorflow/commit/8bf3f88f72a3671f888ca463deeabdf2e6658fc2\r\nremoved tpu_sendrecv_ops.cc ... reflect this in cmake.'
d1addc9e52ab485b9ef490d37983ea537070d593,'Fix typo in RELEASE.md (#12064)'
8ff324fb990c58f8947ea86a4f13a2a49c92a66b,'Fix typo (#12069)\n\n`values` is not defined.'
a4fb91c6091272235ab53315eae5a99041ec1b46,'Fix typo in datasets docstring\n\nPiperOrigin-RevId: 164468012'
ecb544ae124ab6c62941d0b1906f3e8b1a073108,'tfdbg: fix a bug in string representation of SparseTensors\n\nFixes: #12059\nPiperOrigin-RevId: 164462827'
9b6295d7b31e5a9f33492c9a5fc59a4521aa5626,'BUILD dependency cleanups.\nRename RecvTensorAsync method to GrpcRecvTensorAsync to fix shadowing of method in Worker with a different signature.\n\nPiperOrigin-RevId: 164454701'
5d52208e6e320d91c00154f1e394b9f0ee4b404e,"'[TF:XLA] Fixes to the ""evaluator"" plugin.\n* Mark the evaluator plugin as alwayslink so it doesn\'t get stripped out by the linker.\n* Add a generic LayoutAssignment pass to the pass pipeline; otherwise the entry computation has no layout and Service::Execute CHECK-fails in the AllocationTracker.\n* Register the default computation placer for the evaluator backend.\n* Add an replay_computation_hlo_evaluator binary that can replay computation snapshots via the HLO evaluator.\n\nPiperOrigin-RevId: 164364780'"
0815de21239955e346b562e899640649c8d2b9cb,"'Merge changes from github.\nEND_PUBLIC\n\n---\nCommit cf375f067 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nAdds cudnn_rnn_ops_op_lib and cudnn_rnn_kernels to contrib_ops_op_lib and\ncontrib_kernels respectively.\n\nPiperOrigin-RevId: 164170971\n\n---\nCommit 95ec58e27 authored by Asim Shankar<ashankar@google.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nC API: Make TF_TensorFromTensor return an error instead of just logging it.\n\nPiperOrigin-RevId: 164167582\n\n---\nCommit 15175c870 authored by Jonathan Hseu<jhseu@google.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nBuild fixes.\n\n- Allow var_list as a positional argument in CrossShardOptimizer.\n- Set the number of shards to 1 when not running on TPU, to allow evaluate() and predict() on CPU/GPU to work.\n\nPiperOrigin-RevId: 164161640\n\n---\nCommit bd3e894f7 authored by Yao Zhang<yaozhang@google.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nSupport freeze mode for fused batch norm.\n\nPiperOrigin-RevId: 164149032\n\n---\nCommit e6b6b84c0 authored by Asim Shankar<ashankar@google.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nC API: TF_Tensors will always be in host memory.\n\nThis change undoes some experimentation in\ncommit 22651083406ca01ac9d481e3367a3510d25f88cd\nand restores TF_Tensor behavior to what is was prior to that change.\n\nPiperOrigin-RevId: 164146670\n\n---\nCommit 8bf3f88f7 authored by Peter Hawkins<phawkins@google.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[TF:XLA] Add _XLASend and _XLARecv TF ops that wrap the XLA Send/Recv HLO ops.\n\nPiperOrigin-RevId: 164124764\n\n---\nCommit 626d3200f authored by Peter Hawkins<phawkins@google.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[XLA] Add test blacklist mechanism for XLA C++ unit tests.\n\nPiperOrigin-RevId: 164124423\n\n---\nCommit 359cc5f5e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nDocument dict ordering in nest and make it consistent with sonnet.\n\nPiperOrigin-RevId: 164114335\n\n---\nCommit 05813b531 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 164089206\n\n---\nCommit c451f465d authored by Anna R<annarev@google.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 164078808\n\nPiperOrigin-RevId: 164318935'"
aca4647e4d470e02a11cc822f7d93da70c10b02a,"'Fix generated documentation for arguments that default to ""unknown shape"".\n\nPiperOrigin-RevId: 164301697'"
0542739b9a88bebb2f74b8e9a6db15c5a845d480,'Merge pull request #12031 from taehoonlee/fix_typos\n\nFix typos'
f3cd80f1f84fedbd2b9ccc064c2c5c28eb9711b8,"""Fix const_iterator in ShapeTree. The existing implementation didn't work\nbecause const Foo<T>* and Foo<const T>* are not convertible in C++ which broke\nthe internal machinery of the iterator in the const case.\n\nPiperOrigin-RevId: 164276236"""
35c193c551718e15cfbcefad9a0944380d704496,'Fix typos'
15175c870834cd173c6e01f03c5b53d75cd3b106,"'Build fixes.\n\n- Allow var_list as a positional argument in CrossShardOptimizer.\n- Set the number of shards to 1 when not running on TPU, to allow evaluate() and predict() on CPU/GPU to work.\n\nPiperOrigin-RevId: 164161640'"
b493fc6a9124ed585110eac2921ae8bd7c72d2bd,'Fix dumping of non-fusion subgraphs.\n\nRegressed as part of recent changes.\n\nPiperOrigin-RevId: 164061267'
4a37abdf9d47960f1131973d67ac514de9896ee3,'Fix some typos and try to make it clear the exact command to type by removing a bash command prompt.  This should make copy and paste easier.\n\nPiperOrigin-RevId: 164055131'
048c47a06e87faa58769423d3190f8620af76850,"""Fix a bug in seek_next due to which seeks were performed 2^(num_epochs - 1)\ntimes instead of num_epochs times.\n\nexpanded_list and string_list were copies by reference which mean the list was\nbeing doubled with each call to extend().\n\nAlso don't add the variables created to the TRAINABLE variables collection.\n\nPiperOrigin-RevId: 164020330"""
6750c38beda9eb42c81143771645e238dfa0ab22,"""Fixed typo in documentation for streaming_precision_at_thresholds to change 'auc' to 'precision'\n\nPiperOrigin-RevId: 164010488"""
268bb07e3d0330bb781216036ff02586a84f7111,'Android multibox detector: fix int to float RGB conversion to the correct order\n\nPiperOrigin-RevId: 164209391'
51e8bbd091c4c0425a31ed60122032d6249d31a8,"'Enable running initializer nodes for MetaGraph loading in freeze_graph. Also,\nfix support for running multiple comma separated initializers.\n\nPiperOrigin-RevId: 164208684'"
e770caaebcd66e673d52cc92e7df33c2ff7bf51b,"'Bug fix: Define shape() instead of get_shape() in ResourceVariable.\n\nUnder the hood, ResourceVariable inherits from Variable, so it already\nincludes an implementation of get_shape() which just returns self.shape.\n\nPiperOrigin-RevId: 164205313'"
9e7dc91722f4313a731bc5ebdcc59ec6de3d1f91,"'Bug fix: Fix MasterSession refcounting in DoPartialRun & DoRunWithLocalExecution\n\nWhen passing a MasterSession to a closure that will be invoked asycnhronously,\nthe reference count must be incremented before closure creation, and\ndecremented at the end of the closure.\n\nPiperOrigin-RevId: 164200269'"
d906c963269dd1522c7693c8f944e6a846b86221,'Fix signed integer overflows detected with -fsanitize=signed-integer-overflow\n\nPiperOrigin-RevId: 164193035'
6503c937b2b0ec85212ad22a07aa2330ba94f94b,'Minor formatting fix\n\nPiperOrigin-RevId: 164190885'
f76adbce274e75c119ff0791581f2b71351fe429,'Fix formatting problems. (#11980)'
17923f49872910fb57d085cd4d8441d8818fe773,"'Merge pull request #11949 from allenlavoie/fixgpu\n\nFix ""depsets cannot contain mutable items"" error when using Bazel 0.5.3'"
d4a21196ac06e49f2581e27af62efc4efd5387c4,"""Update tf.nn.max_pool docs for ksize/strides == 4 (#11925)\n\nksize/strides == 4, instead of previous '>= 4'\r\n\r\nThis fix fixes 10729.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
18de3057e281551c952eedbb49b1eff9133eb5cf,"'Build fixes.\n\n- Allow var_list as a positional argument in CrossShardOptimizer.\n- Set the number of shards to 1 when not running on TPU, to allow evaluate() and predict() on CPU/GPU to work.\n\nPiperOrigin-RevId: 164161640'"
8e16d674575e9defae488a53ded2764ff4d05518,'Fix dumping of non-fusion subgraphs.\n\nRegressed as part of recent changes.\n\nPiperOrigin-RevId: 164061267'
c90494d740321ade59e20ee0110f534a49a0c6bf,'Fix some typos and try to make it clear the exact command to type by removing a bash command prompt.  This should make copy and paste easier.\n\nPiperOrigin-RevId: 164055131'
2ab9cb209babf905091dcff2f7cdce38da616cfe,'Merge pull request #11555 from lukeiwanski/opencl/profiler\n\n[OpenCL] Fixes SYCL profiler tests (#141)'
c9de294d0a0980b1636f76757c175afbf4f58ea8,'Merge pull request #11934 from taehoonlee/fix_spaces\n\nFix white spaces'
b12f1df7c53500316e1d26674cf2cacf89df9c70,"""Fix a bug in seek_next due to which seeks were performed 2^(num_epochs - 1)\ntimes instead of num_epochs times.\n\nexpanded_list and string_list were copies by reference which mean the list was\nbeing doubled with each call to extend().\n\nAlso don't add the variables created to the TRAINABLE variables collection.\n\nPiperOrigin-RevId: 164020330"""
bf02164c0c2ce20b46d7fb57234d937af9f827f4,"""Fixed typo in documentation for streaming_precision_at_thresholds to change 'auc' to 'precision'\n\nPiperOrigin-RevId: 164010488"""
b9ac2d7eb17022a677597a1f88a65d8d26278088,"'Fix code view to ignore account_displayed_op_only\n\nBecause all stats are from the leaf, if we trim\nthe leaf, the parents by themselves have no\nstats.\n\nPiperOrigin-RevId: 163929193'"
16d6cd9a542d3e118217c4d3dfe0c3cf01255a83,'[TF:XLA] Randomized test improvements.\nFix missing const-analysis annotation for AvgPool3DGrad found by randomized tests.\n\nPiperOrigin-RevId: 163922076'
4a4b6f7b3e43a176e26ac586340f6af798df5447,"'Merged commit includes the following changes:\n163914294  by annarev:\n\n    Refactors build target for gradients_impl to allow code to depend on the gradient generation but not the gradients themselves.\n\n--\n163913011  by A. Unique TensorFlower:\n\n    Use an LLVM-IR version of vector hyperbolic tangent.\n\n    This lets us:\n\n     - Inline routine where it is called, eliminated call overhead.\n     - Use AVX instructions in JITed code even if Tensorflow was not built with -mavx.\n\n--\n163909534  by A. Unique TensorFlower:\n\n    Add tensorflow-android to standard TF maven artifacts.\n\n--\n163908704  by A. Unique TensorFlower:\n\n    Go: Update generated wrapper functions for TensorFlow ops.\n\n--\n163907709  by A. Unique TensorFlower:\n\n    Update ops-related pbtxt files.\n\n--\n163907497  by A. Unique TensorFlower:\n\n    Remove old TensorFlow Serving landing page in prepartion for new TF\n    Serving landing page.  Fix bad leftnav.\n\n--\n163906225  by alive:\n\n    Refactors build target for gradients_impl to allow code to depend on the gradient generation but not the gradients themselves.\n\n--\n\nPiperOrigin-RevId: 163914294'"
05c491d30888088873fedfbe81bca378c8c3fc87,"'Merge changes from github.\nEND_PUBLIC\n\n---\nCommit e62de3f78 authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Handle Reverse in HloEvaluator.\n\nAlso move HandleCopy to outer visitor instead, since it can be implemented\nas a type-agnostic copy instead.\n\nPiperOrigin-RevId: 163866499\n\n---\nCommit 96675956e authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nC API: Avoid converting uninitialized tensorflow::Tensor to TF_Tensor*\n\nAnd return error messages instead of CHECK failing when the conversion\nfails.\n\nPiperOrigin-RevId: 163863981\n\n---\nCommit 9593704b2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix framework import function dependency.\n\nPiperOrigin-RevId: 163863883\n\n---\nCommit 66f148542 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nImprove performance of compilation by ~8% by speeding up the\nhlo rematerialization pass.\n\nChanges:\n. Wrap each HloInstruction* inside an Item structure that keeps\n  associated data.  This allows us to get rid of a bunch of\n  hash tables indexed by HloInstruction*.\n* Switch to an intrusive linked list (instead of std::list) so\n  that we can avoid a hash table that maps to std::list::iterator.\n* Use inlined vector in a few places.\nPiperOrigin-RevId: 163848365\n\n---\nCommit 6d77a0129 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nHide NonMaxSuppression and NonMaxSuppressionV2 ops and add a python wrapper that sets a backwards compatible default value for iou_threshold.\n\nPiperOrigin-RevId: 163844703\n\n---\nCommit 1a4499607 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix: add GDN to __init__. Also put it in alphabetical order.\n\nPiperOrigin-RevId: 163842410\n\n---\nCommit db0e1c6c8 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDon\'t force inlining of functions marked no-inline\n\nPiperOrigin-RevId: 163842238\n\n---\nCommit 18718b6f7 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMisc grappler improvements:\n * Avoid copying optimized graphs since that takes time.\n * Avoid optimizing a pruned graph, since it\'s already been pruned there isn\'t much to gain\n\nPiperOrigin-RevId: 163842122\n\n---\nCommit 90abbf684 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse OP_REQUIRES instead of an assertion to validate op arguments\n\nPiperOrigin-RevId: 163841759\n\n---\nCommit 203c3f5fd authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInfer unknown shapes for functions in C++\n\nAs we are implementing function support through C API, the new code path\nruns shape inference of Operations representing functions, but we don\'t\nyet support shape inference for functions.\n\nBefore this change, adding a function NodeDef would result in error.\nThis change pairs all functions with a shape inference function that\nsets all output shapes to unknown.\n\nPiperOrigin-RevId: 163830793\n\n---\nCommit 3cc5fc088 authored by Chris Leary<leary@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Implement MirrorPad op.\n\nAddresses #11890\n\n* Improves the shape inference error message for concatenate.\n* Adds a helper to Literal that gets an integral value converted to int64.\n\nPiperOrigin-RevId: 163829437\n\n---\nCommit c7b674fa2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nflatten_up_to should return values, not keys\n\nPiperOrigin-RevId: 163809688\n\n---\nCommit 6209b4b52 authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMinor refactoring the TF_Tensor <-> PyArray conversion functions.\n\nPiperOrigin-RevId: 163802822\n\n---\nCommit 618f913bb authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSpeed up topological sort by avoiding copies. The speedup is about 10-20%.\n\nPiperOrigin-RevId: 163800134\n\n---\nCommit 6446895aa authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove and replace broken giflib download link\n\nPiperOrigin-RevId: 163796393\n\n---\nCommit 9d5613088 authored by Chris Leary<leary@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA:CPU] Atomically enqueue tuple buffers for outfeed.\n\nPreviously it was possible that a distinct thread could hop in between the\nbuffer enqueues done by a tuple-outfeeding thread. This changes the sequence to\nenqueue all the tuple buffers as an atomic unit.\n\nPiperOrigin-RevId: 163781804\n\n---\nCommit b882d686f authored by Bjarke Hammersholt Roune<broune@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAllow cost estimates to differ per backend and include the estimates into the HLO profile. Add a summary table for what categories have the most opportunity for optimization left in them.\n\nPiperOrigin-RevId: 163780413\n\n---\nCommit 14b736761 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPass stats_collector when using SymbolicGradientOp.\n\nPiperOrigin-RevId: 163773897\n\n---\nCommit 5202a5b6c authored by RJ Ryan<rjryan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix some typos in StreamExecutor\'s cuFFT support.\n\nPiperOrigin-RevId: 163771825\n\n---\nCommit edac90c7c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd support to generate pprof results to tf.profiler\n\nA fun thing is, it can not only profile time,memory\nbut also parameters, etc.\n\nPiperOrigin-RevId: 163767517\n\n---\nCommit 78a90370e authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Refactor CreateModuleConfig to share code between multiple call-sites.\n\nPreviously Service, LocalService and CompileOnlyService had their own code to\ncreate a new HloModuleConfig, with much repetition (and some ommissions);\ncollect all these uses in a single method.\n\nPiperOrigin-RevId: 163766869\n\n---\nCommit 6150611ae authored by Anna R<annarev@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal change.\n\nPiperOrigin-RevId: 163765028\n\n---\nCommit 9e7875437 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd the option of including Shape, ShapeN, Size and Rank in the standard TensorFlow constant propagation pass, when the inputs to those Ops have sufficiently known static shape.\n\nPiperOrigin-RevId: 163762750\n\n---\nCommit 8b1365bb4 authored by Yuefeng Zhou<yuefengz@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInfer output shape for restore op.\n\nPiperOrigin-RevId: 163762216\n\n---\nCommit 2e2a8536d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate WorkerCacheLogger::RecordDataTransfer to not modify the details if provided.\n\nPiperOrigin-RevId: 163761089\n\n---\nCommit d03ba54f7 authored by Yangzihao Wang<yangzihao@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse BlasGemv() when autotune is not set.\n\nPiperOrigin-RevId: 163754092\n\n---\nCommit 724884f1c authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nShow layouts in HLO graph dump.\n\nLayouts are displayed as e.g. ""f32[100,200]{0,1}"".  But constants used\nto be displayed as e.g. ""f32[]{42}"".  To avoid ambiguity, constants are\nnow displayed as e.g. ""42 (f32[])"".\n\nAlso gets rid of the xla_hlo_graph_layout flag, which is no longer\nnecessary since we\'re now showing layouts unconditionally.\n\nPiperOrigin-RevId: 163753637\n\n---\nCommit 84c2757a6 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMove Grappler test GraphDefs to separate files\n\nPiperOrigin-RevId: 163751948\n\n---\nCommit 0b3a25d68 authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake TF_RESOURCE memory handling consistent with other types.\n\nTF_Tensor\'s are backed by a contiguous memory region for all\nbut TF_RESOURCE tensors. The memory management of TF_RESOURCE\ntensors required keeping a backing tensorflow::ResourceHandle*\nobject alive for the lifetime of the TF_Tensor object.\n\nThis change removes that discrepancy, making the memory backing\nTF_RESOURCE tensors self-contained. This simplifies use of TF_RESOURCE\ntensors in the C API (as users of the C API do not need to worry about\na tensorflow::ResourceHandle object and its lifetime). In doing so, this\nmoves a string memory copy from the TF_Tensor <-> Numpy conversion\nto the C API from the Python session helper.\n\nUnfortunately, I couldn\'t figure out how to add a simple unittest in\nc_api_test.cc. The more comprehensive tensorflow/python/kernel_tests/session_ops_test.py\ndoes cover the changed lines though.\n\nAdditionally, avoid an unnecessary copy when creating TF_STRING or TF_RESOURCE\ntensors (as eigen alignment is not a requirement for them).\n\nPiperOrigin-RevId: 163751880\n\n---\nCommit 1333e7745 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAllow one tensor to be the input to the estimator.\n\nPiperOrigin-RevId: 163747076\n\n---\nCommit 104f349e9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate Conv2DShape function to handle filters that have data NCHW_VECT_C layout.\n\nPiperOrigin-RevId: 163746769\n\n---\nCommit efb7fb8e5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse XLA_VLOG_LINES() in literal_test_util to avoid truncation of large tensors.\n\nPiperOrigin-RevId: 163745522\n\n---\nCommit 043505a09 authored by Suharsh Sivakumar<suharshs@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMasterSession should throw error if use_per_session_threads or session_inter_op_thread_pool is set.\n\nPiperOrigin-RevId: 163743936\n\n---\nCommit 6ba02f0e9 authored by Artem Belevich<tra@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Added HasAllocationAt() helper function.\n\nPiperOrigin-RevId: 163742985\n\n---\nCommit 18304683e authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPin tensorflow to tensorflow-tensorboard 0.1.x\n\nThis change will be cherry-picked into the 1.3.0 release.\n\nPiperOrigin-RevId: 163742463\n\n---\nCommit 3445dd0ed authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake \'import tensorflow\' go faster\n\nIt now takes about 400ms rather than 800ms, if the file system cache is warm.\n\nMost of the latency was due to parsing text_format OpList protocol buffers in\nour generated sources. We now use a binary representation, while preserving the\ntext proto as a comment for readability.\n\nNote: This change does not improve the latency of dereferencing tf.contrib,\nwhich takes about 340ms.\nPiperOrigin-RevId: 163739355\n\n---\nCommit c215c55d5 authored by Neal Wu<wun@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd missing py_binary for mnist_deep.py\n\nPiperOrigin-RevId: 163737503\n\n---\nCommit b663c9899 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake non-iterable input to `stratified_sample` produce better error message.\n\nPiperOrigin-RevId: 163735979\n\n---\nCommit 122750a87 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[SE] Make ExecutorCache thread-safe, change ExecutorCache::Insert to ExecutorCache::GetOrCreate. Add support for creating Executors for different device ordinals in parallel.\n[XLA] Create Executors in parallel.\n\nPiperOrigin-RevId: 163734988\n\n---\nCommit 7ebed6678 authored by Frank Chen<frankchn@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd __init__.py to the contrib/cluster_resolver directory so that the Cluster Resolver classes within this are visible to open source TensorFlow users.\n\nPiperOrigin-RevId: 163733781\n\n---\nCommit 21faf19d0 authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpgrade pip version to 9.0.1; Prettier format of log text\n\n* Upgrade pip version used in virtualenv created by the test-on-install to latest (9.0.1).\n* Highlight step titles of pip builds with bold font.\n\nPiperOrigin-RevId: 163732825\n\n---\nCommit 5887cc10e authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] In LiteralUtil::StridedConfig: choose the larger dimension between the\nsource and destination shapes\' minor-most dimension index.\n\nPiperOrigin-RevId: 163732014\n\n---\nCommit f9c644693 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Disable sanitizers for depthwise conv test to fix test flakiness.\n\nPiperOrigin-RevId: 163727765\n\n---\nCommit 6263539a1 authored by Allen Lavoie<allenl@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGrappler memory optimization: allow inputs to gradients with non-standard names to be recomputed\n\nIncludes Python tests for name-scoped gradients.\n\nPiperOrigin-RevId: 163720208\n\n---\nCommit 4ac195669 authored by Benoit Steiner<benoitsteiner@users.noreply.github.com>\nCommitted by GitHub<noreply@github.com>:\nBranch 163695881 (#11913)\n\n* Prevent ctc_loss op from segfaulting when given empty batch.\n\nPiperOrigin-RevId: 163663460\n\n* New ""SavedModel: Practical Uses"" and ""SavedModel: Architecture"" documents.\n\nPiperOrigin-RevId: 163669809\n\n* Minor cleanup\n\nPiperOrigin-RevId: 163685423\n\n* Add regression variance over individual trees to TensorForest inference.\n\nPiperOrigin-RevId: 163695881\n\n---\nCommit b876065af authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ngraph_to_function_def gets its own file\n\nPiperOrigin-RevId: 163709410\n\n---\nCommit 29550762b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixes unit tests for inverse hyperbolic functions that were failing because numeric gradients were computed too close to a branch cut (for complex arguments) or singularity (for real arguments) where the function is not differentiable (See, e.g., http://mathworld.wolfram.com/BranchCut.html). This change moves the test points away from the branch cut/singularity.\n\nImproves precision of double precision numerical gradients by using a smaller step size delta (the optimal for symmetric difference approximation with functions computed with O(epsilon) error is epsilon^(1/3), so for double64 it is ~1e-5).\n\nPiperOrigin-RevId: 163706297\n\n---\nCommit 99b190a1f authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Add implementation of depthwise convolution.\n\nThis implementation expands the depthwise convolution kernels into a regular convolution kernel, which may not scale to large feature depths.\n\nPiperOrigin-RevId: 163705408\n\n---\nCommit f6f07b027 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAllow kernel unit tests to run on GPU\n\nPiperOrigin-RevId: 163705027\n\n---\nCommit 4ec29c5d9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAvoid direct access to Node::def() where some other method works.\n\nPiperOrigin-RevId: 163704839\n\n---\nCommit 153be4d26 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Stats tracking (#11523)\n\n* Adds stat tracking to the SYCL allocator\n\nThe SYCLAllocator will now find the max allocation size on construction,\nand keep track of the allocation stats, as given in AllocationStats.\n\n* [OpenCL] Adds buffer size tracking to SYCL allocator (#114)\n\nThe SYCL buffers underlying tensors already keep track of their sizes,\nso we can easily provide this tracking information for debugging\npurposes.\n\n---\nCommit 8d642672f authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nDisabling gmm_test.py on Windows builds as it\'s flaky on GPU nightly builds.\n\n---\nCommit 1560c55d2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd regression variance over individual trees to TensorForest inference.\n\nPiperOrigin-RevId: 163695881\n\n---\nCommit 15e928d51 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMinor cleanup\n\nPiperOrigin-RevId: 163685423\n\n---\nCommit f9c758719 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nNew ""SavedModel: Practical Uses"" and ""SavedModel: Architecture"" documents.\n\nPiperOrigin-RevId: 163669809\n\n---\nCommit f19bb3beb authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPrevent ctc_loss op from segfaulting when given empty batch.\n\nPiperOrigin-RevId: 163663460\n\n---\nCommit 454fe936c authored by Taehoon Lee<taehoonlee@snu.ac.kr>\nCommitted by Taehoon Lee<taehoonlee@snu.ac.kr>:\nFix typos\n\n---\nCommit e17650b69 authored by Frank Chen<frankchn@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nThis adds the cluster_resolver module to contrib/__init__.py so that it is actually visible to open source TensorFlow users.\n\nPiperOrigin-RevId: 163636676\n\n---\nCommit 926c0f6ee authored by ??<awsomekde@gmail.com>\nCommitted by GitHub<noreply@github.com>:\nfix minor typo\n---\nCommit 00d3126a3 authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nChange const nodes to variables in the test, so that they are not optimized\naway by the grappler constant folding pass.\n\nPiperOrigin-RevId: 163602405\n\n---\nCommit 1c7c9c716 authored by Aditya Dhulipala<aditya.d@hotmail.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nMinor typo correction (#11874)\n\n---\nCommit f91a3546e authored by Sergii Khomenko<x-sam@brainscode.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nFix a minor typo (#11873)\n\n---\nCommit adf5d1bc0 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 163510186\n\nPiperOrigin-RevId: 163902859'"
7c2717594e1720dc616655dcafd46910bc81471a,'Merge pull request #11945 from laket/gpu_event_flush\n\nFix #11803: Force CUPTI to flush GPU activity buffers when stopping tracing.'
c5d311eaf8cc6471643b5c43810a1feb19662d6c,"'Fix ""depsets cannot contain mutable items"" error with CUDA builds in Bazel 0.5.3'"
9593704b28e43b1a10a9c16317e1ba3cef2e1921,'Fix framework import function dependency.\n\nPiperOrigin-RevId: 163863883'
1a449960723700edc0cda8dfbf57c6144fd7c0ad,'Fix: add GDN to __init__. Also put it in alphabetical order.\n\nPiperOrigin-RevId: 163842410'
6e78c383147c9b0a851e79fd2d57c59e53662650,'Fix white spaces'
602355ec1c521f6c27f89a5c104d0e0c0a637e6b,'Update bigquery_reader_ops.py\n\nFix example code in comments by replacing tf.training.string_input_producer with tf.train.string_input_producer'
5202a5b6cf48ed2e0ee14a35d4278a319c635dae,"""Fix some typos in StreamExecutor's cuFFT support.\n\nPiperOrigin-RevId: 163771825"""
f9c644693ecda687207f6684c145b74f6f71547b,'[TF:XLA] Disable sanitizers for depthwise conv test to fix test flakiness.\n\nPiperOrigin-RevId: 163727765'
29550762bd205269a25546455923d32ad1f645ad,"'Fixes unit tests for inverse hyperbolic functions that were failing because numeric gradients were computed too close to a branch cut (for complex arguments) or singularity (for real arguments) where the function is not differentiable (See, e.g., http://mathworld.wolfram.com/BranchCut.html). This change moves the test points away from the branch cut/singularity.\n\nImproves precision of double precision numerical gradients by using a smaller step size delta (the optimal for symmetric difference approximation with functions computed with O(epsilon) error is epsilon^(1/3), so for double64 it is ~1e-5).\n\nPiperOrigin-RevId: 163706297'"
8e0e8d41a3a8f2d4a6100c2ea1dc9d6c6c4ad382,'Merge pull request #11895 from taehoonlee/fix_typos\n\nFix typos'
454fe936cae03d47ecf72026fd374d80f1b29b5e,'Fix typos'
91d0f2eaa8e8bf340c48a36f32140ef0cdbda0a8,'Merge pull request #11880 from callofdutyops/patch-1\n\nfix minor typo'
926c0f6eed5e3c429cf090029fa5b7cc4f474a6a,'fix minor typo'
f91a3546e984f9923b991553e321cd9a7ac2debc,'Fix a minor typo (#11873)'
4b50313b30903a39e37419e3c0851a8360feeea7,'Fixed issue: Conv_ops python unit test fails (#11860)'
c3664d1d0b0f05249f28f206e1468816ba7d59ca,'Fix the constructor parameter in InstructionList to be pass-by-reference.\n\nPiperOrigin-RevId: 163535344'
21faaa9172a1c308d4d03bded759c15e06515799,'Fix windows bazel build (#11842)'
acd224a8abe7d9e2555a177131ae6373122e063b,"""Ensure that TensorBoard is still available when pip installed. (#11835)\n\nContext:\r\n\r\nAfter r1.2, TensorBoard moved out of the TensorFlow repository, into its own\r\nrepository and its own pip package (presently tensorflow-tensorboard, will later\r\nswitch to just tensorboard). The new pip package specifies the `tensorboard`\r\ncommand, so I removed it from the list of console scripts forTensorFlow. I also\r\nadded tensorflow-tensorboard as a pip dependency.\r\n\r\nHowever, it turns out that the pip order of operations is:\r\n- install pip dependencies (thus getting tensorflow-tensorboard and the new\r\n  tensorboard command)\r\n- remove deprecated console scripts (thus erroneously removing the new pointer\r\n  to tensorboard)\r\n\r\nTo fix this, I returned the `tensorboard` console script to tensorflow's\r\nsetup.py, except it now references the tensorboard package rather than the\r\ntensorflow package. Thus, the console script declaration in tensorflow and\r\ntensorboard are identical. We can be confident that the tensorboard package is\r\navailable, because it is specified by the pip dependency.\r\n\r\nTest Plan:\r\n\r\n- Create a clean virtualenv.\r\n- pip install tensorflow < 1.3.\r\n- verify that the tensorboard command works properly\r\n- pip install tensorflow 1.3 using a pip package generated with this change\r\n- verify that the tensorboard command still works"""
aaf7adc17aafd8f78a56414e8f6d251a1b70e4aa,"'[Issue 11241] Add checkpoint_convert.py script to package and make _RNN_NAME_REPLACEMENTS public. (#11691)\n\n* Added script to package and made _RNN_NAME_REPLACEMENTS public.\r\n\r\n* Moved test back to ""tools"" dir per review comments.\r\n\r\n* Fixed typo.\r\n\r\n* fix buildifier error'"
8849be91e31e4f6a6d5fa6c04f6cb1f4bd7adf07,"'Add more coverage of file_io methods in gcs_smoke tests. (#11827)\n\n* Add more coverage of file_io methods in gcs_smoke tests.\r\n\r\nAlso adds some missing assertions in existing test cases.\r\n\r\n* Typo in gcs_smoke.py\r\n\r\n* gcs_smoke: Adding ""ms"" suffix to startime/elapsed + comment cleanup'"
a1fba7f5ac3de39b106af36c3737ea854f09e9ac,"'Merge changes from github.\nEND_PUBLIC\n\nI dropped the following commit because it doesn\'t compile.\nI will follow up with Andrew to fix it or revert it.\nCommit 003deb88b authored by osdamv<osdamv@gmail.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nRefactor and implementation of the camera API 1, it fixes #8736 (#10771)\n\nList of commits in this CL:\n---\nCommit 446450369 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse identity of param variable in cudnn_rnn.RNNParamsSaveable instead of parameter\nvariable directly. The RNNParamsSaveable is usually used in a graph which also\nhas a saver for the cudnn param variable itself, if the same op is used for\nboth, fails with a two savers for same op error.\n\nPiperOrigin-RevId: 163431826\n\n---\nCommit d629a8316 authored by RJ Ryan<rjryan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIncrease bound on tf.contrib.signal.inverse_stft gradient error to avoid flakiness on macOS.\n\nPiperOrigin-RevId: 163426631\n\n---\nCommit 253bcbb71 authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Use HloEvaluator for convolution in reference_util.\n\nAlso Speed up HloEvaluator\'s HandleConvolution in non-opt build, by moving calls\nto HloInstruction::shape() out of the inner loop.\n\nPiperOrigin-RevId: 163416183\n\n---\nCommit 569a00e68 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate API to traffic in unique_ptrs rather than owning raw pointers\n\nPiperOrigin-RevId: 163414320\n\n---\nCommit 31a77bc77 authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nJava: Update release to 1.3.0-rc1\n\nPiperOrigin-RevId: 163413736\n\n---\nCommit 1ebbf4325 authored by Jonathan Hseu<vomjom@vomjom.net>\nCommitted by GitHub<noreply@github.com>:\nAdd missing grpc dependency (#11828)\n\n---\nCommit 905abb1f9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nTest asserts should have `expected` first.\n\nPiperOrigin-RevId: 163409348\n\n---\nCommit d5cc143e2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIncrease timeout to deflake the test.\n\nPiperOrigin-RevId: 163407824\n\n---\nCommit ce1c7f02a authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nProperly include logging header in xla_internal_test_main\n\nPiperOrigin-RevId: 163405986\n\n---\nCommit 22241cd42 authored by joetoth<joetoth@gmail.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nExternal leveldb link changed (#11833)\n\ntable_format.txt was renamed to table_format.md\n---\nCommit 6b7314de4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nConsolidating the code to fill the partition\'s function library\ninto one place. Previously, Partition() and MasterSession::RegisterPartition()\nboth fills in the partitioned graph\'s function library.\n\nPiperOrigin-RevId: 163400992\n\n---\nCommit 28373cfe7 authored by Frank Chen<frankchn@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds preliminary support for Cloud TPUs with Cluster Resolvers. This aims to allow users to have a better experienec when specifying one or multiple Cloud TPUs for their training jobs by allowing users to use names rather than IP addresses.\n\nPiperOrigin-RevId: 163393443\n\n---\nCommit e5353c941 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDon\'t prune nodes that have reference inputs.\n\nPiperOrigin-RevId: 163390862\n\n---\nCommit 226510834 authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nC API: Groundwork for experimenting with TF_Tensor in device memory.\n\nTF_Tensor objects are always backed by host memory. This commit lays\nthe groundwork for allowing TF_Tensor objects to refer to tensor data\non device (e.g., GPU) memory.\n\nPiperOrigin-RevId: 163388079\n\n---\nCommit 613bf1c7c authored by Yuefeng Zhou<yuefengz@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nfix asan test failure in SingleMachineTest::ReleaseMemoryAfterDestruction.\n\nPiperOrigin-RevId: 163386941\n\n---\nCommit 4653d37a3 authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Change type to appease GPU builds.\n\nPiperOrigin-RevId: 163384927\n\n---\nCommit 9f131bd15 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal change\n\nPiperOrigin-RevId: 163378484\n\n---\nCommit 8bc0236c8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPiperOrigin-RevId: 163366493\n\n---\nCommit 3b97f1f9b authored by Yangzihao Wang<yangzihao@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nChange to only run one round of matmul benchmark.\n\nPiperOrigin-RevId: 163364341\n\n---\nCommit a4a3a3335 authored by Yun Peng<pcloudy@google.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nFix ./configure on Windows (#11775)\n\n* Fix ./configure on Windows\n\n* Disable bitwise_ops_test on Windows\n\n---\nCommit ae3119d16 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSmall changes to op framework.\n\nPiperOrigin-RevId: 163361071\n\n---\nCommit f40189d26 authored by qjivy<ji.qiu@spreadtrum.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nPR again: Enable building label_image with jpeg/gif/png decoder for Android.  (#11475)\n\n* Enable building label_image with jpeg/gif/png decoder for Android.\nAdd dependency ""android_tesnorflow_image_op"" to label_image, which\nis not overlapped with android_tensorflow_kernels.\n\n* Running buildifier to reformat the BUILD files for\nsanity check.\n\n---\nCommit 599165861 authored by KB Sriram<kbsriram@gmail.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nAdd the Constant operator class (#11559)\n\nCreate a custom operator class to create constants in the Graph,\nand introduce the Operator marker annotation to identify\noperator classes.\n\nPlease see #7149 for the master tracking issue.\n---\nCommit 86ca3506f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFurther BUILD cleanup\n\nPiperOrigin-RevId: 163360750\n\n---\nCommit 376bb063b authored by Pete Warden<petewarden@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nLook inside functions to see which node types are used.\n\nPiperOrigin-RevId: 163360375\n\n---\nCommit 2139e7d8b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf.contrib.data] map expects a nested structure.\n\nFixes #11786\n\nPiperOrigin-RevId: 163359134\n\n---\nCommit d09304fca authored by Jonathan Hseu<vomjom@vomjom.net>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nUpgrade gRPC (#11768)\n\n* BUILD rule modifications\n\n* More build fixes\n\n* Code changes\n\n* More code fixes\n\n* Working tests\n\n* CMake build\n\n* Fix pprof\n\n* Fix header includes\n\n* CMake fix test\n\n* Bazel clean\n\n* Fix verbs\n\n* More verbs fixes\n\n* bazel clean for XLA\n\n* Windows build fix test\n\n* Add openssl/rand.h\n\n* New cmake build command\n\n* --config Release\n\n---\nCommit 3cd828474 authored by David Norman<DavidNorman@users.noreply.github.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nFix error with default python path selection (#11814)\n\n* Fix error with default python path selection\n\n* Move setting of environment var outside if / else\n\n---\nCommit ddd8e21b7 authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Consolidate all similar main()s in tests into a single target.\n\nPiperOrigin-RevId: 163354724\n\n---\nCommit a36bca25b authored by Tayo Oguntebi<tayo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove ShapeWithoutPadding() utility function, as it is no longer needed.\n\nPiperOrigin-RevId: 163353430\n\n---\nCommit b26f9cd44 authored by David Norman<DavidNorman@users.noreply.github.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nEnsure that the multi-instruction fuse can take shared inputs (#11748)\n\n* Ensure that the multi-instruction fuse can take shared inputs\n\nNote that the fuse action only works when the shared input / constant\nappears after all of its consumers in the list of instructions.\n\n* Add a comment describing the test\n\n---\nCommit 34cbf161d authored by Jiri Simsa<jsimsa@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate Dataset API documentation.\n\nPiperOrigin-RevId: 163349457\n\n---\nCommit 2381ce5c3 authored by Abdullah Alrasheed<a.rasheed@tc-sa.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nDOC: Fix typo. (#11813)\n\nyou could could be I/O bottlenecked.\nTO:\nyou could be I/O bottlenecked.\n---\nCommit e4a5c5356 authored by Toby Boyd<tobyboyd@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[""Variable"", ""VariableV2"", ""VarHandleOp""] is the default for ps_ops=None\n\nPiperOrigin-RevId: 163344629\n\n---\nCommit 722f6f361 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix TensorForest\'s saveable object names so loading a savedmodel works.\n\nPiperOrigin-RevId: 163332598\n\n---\nCommit cda80a785 authored by Eric Liu<ioeric@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tpu profiler] Dump HLO graphs in profile responses to the log directory.\n\nPiperOrigin-RevId: 163318992\n\n---\nCommit cea9ef6f5 authored by horance<horance-liu@users.noreply.github.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nRefactoring device name utils (#11797)\n\n* remove duplicated code for full_name and legacy_name for DeviceNameUtils\n\n* replace tabs\n\n* Real->Device\n\n---\nCommit 1f7c0f917 authored by Kongsea<kongsea@gmail.com>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nRefine docstrings (#11800)\n\n---\nCommit dd1f0cddd authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSupports lookup devices by fullname either in the canonical form or the\nlegacy form. This makes DeviceSet behaves the same as DeviceMgr\'s\nFindDevice method.\n\nPiperOrigin-RevId: 163300346\n\n---\nCommit 631a364cd authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add Reduce, DynamicSlice and DynamicSliceUpdate to HloEvaluator.\n\n- Reduce is disabled explicitly for constant folding, as not all types of\nembedded computation can be currently supported by the evaluator.\n\n- Added support to evaluate HloModule to HloEvaluator.\n\n- Minor signature change to Evaluate().\n\nPiperOrigin-RevId: 163299238\n\n---\nCommit a52470172 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSets the incarnation number even when the attribute is set.\n\nPiperOrigin-RevId: 163299121\n\n---\nCommit a49fe0366 authored by Suharsh Sivakumar<suharshs@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove platform bridge for grpc_response_reader.\n\nPiperOrigin-RevId: 163295986\n\n---\nCommit 4404aa7cb authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add TODO comment explaining why the IsScalar check exists.\n\nPiperOrigin-RevId: 163292777\n\n---\nCommit 43036ac16 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unnecessary break statements.\n\nPiperOrigin-RevId: 163291947\n\n---\nCommit fd5de4690 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add regression test for a corner case using Reduce that currently fails with the GPU backend.\n\nPiperOrigin-RevId: 163287986\n\n---\nCommit 32e198f2d authored by Chris Leary<leary@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Add tf.cross support.\n\nSee #11788\n\nPiperOrigin-RevId: 163287731\n\n---\nCommit 88abddbc3 authored by Alan Yee<alyee@ucsd.edu>\nCommitted by Vijay Vasudevan<vrv@google.com>:\nUpdate README.md (#11793)\n\nRemove bad practices of sudo pip and install use safer pip install commands\n---\nCommit 9b30dc3a8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove final mentions of `get_shape` in docstring.\n\nPiperOrigin-RevId: 163282839\n\n---\nCommit 423c1eea0 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBREAKING CHANGE: Fix semantic error in how maybe_batch* handles sparse tensors.\n\nPiperOrigin-RevId: 163276613\n\n---\nCommit 6028c071b authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nHighlight incoming/outgoing edges on hover in HLO graphviz dumps, and other improvements.\n\nOther improvements:\n\n - Don\'t show tooltips for nodes and clusters.  Previously we\'d show a\n   tooltip containing a pointer value expressed as decimal.  Not so\n   useful.\n\n - Show tooltips on edges with the to/from node names.\n\n - Fix bug wherein if we had\n\n   - a node at the ""edge"" of the graph (so its operands aren\'t included\n     unless they\'re referenced by another node),\n   - with all of its operands included in the graph save one or more\n     constants, and\n   - those constants weren\'t referenced by any nodes not at the edge of\n     the graph,\n\n   we would incorrectly draw the node as ""grayed out"", indicating that\n   one of its operands (namely, its constant operand) wasn\'t present in\n   the graph.\n\n   This is wrong because constants are inlined into their users, so they\n   should always count as ""displayed"" for the purposes of determining\n   whether a node is grayed out.\n\nPiperOrigin-RevId: 163276108\n\n---\nCommit ce7a355bd authored by Joshua V. Dillon<jvdillon@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate contrib/distributions/estimator_test build dependency.\n\nPiperOrigin-RevId: 163272464\n\n---\nCommit 1b8458a1c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nShorten docstring line.\n\nPiperOrigin-RevId: 163269709\n\n---\nCommit 69e323cc6 authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix comment ypo\n\nPiperOrigin-RevId: 163266376\n\n---\nCommit 08790e73d authored by Chris Leary<leary@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Fix a bug in cloning outfeeds, carried the wrong shape.\n\nPiperOrigin-RevId: 163265592\n\n---\nCommit 1bad826d6 authored by Yangzihao Wang<yangzihao@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRollback of GPU kernel implementation of transpose for tensors with one small dimension.\nEND_PUBLIC\n\nBEGIN_PUBLIC\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 162525519\n\nPiperOrigin-RevId: 163490703'"
9a2e4a7558297098e16fa9d5b5c32fbe1eab05be,'Merge pull request #11850 from dkristoffersson/patch-1\n\nFixed two typos'
9c95ea0a8c6eed105792b794e5398b929fd95c5c,'Fixing another HEAD tag.'
ed366b015ca5a61b464dd6ecdc465163940dc0c4,'Fixed two typos'
42fb4382b9ef7b7b64e97ed85c51a1dfdb4071ec,'[TF:XLA] Fix flakiness of segment_reduction_ops_test by raising test timeout.\n\nPiperOrigin-RevId: 163461573'
613bf1c7c1f8dfceed34fc85f2c71dd00432651e,'fix asan test failure in SingleMachineTest::ReleaseMemoryAfterDestruction.\n\nPiperOrigin-RevId: 163386941'
a4a3a3335bd273e6224d16a934b59531ef239893,'Fix ./configure on Windows (#11775)\n\n* Fix ./configure on Windows\r\n\r\n* Disable bitwise_ops_test on Windows'
2139e7d8b10764f2245f34548f6fbfc25d29bff8,'[tf.contrib.data] map expects a nested structure.\n\nFixes #11786\n\nPiperOrigin-RevId: 163359134'
d09304fca478b8db5c651eec6fb2559844a73373,'Upgrade gRPC (#11768)\n\n* BUILD rule modifications\r\n\r\n* More build fixes\r\n\r\n* Code changes\r\n\r\n* More code fixes\r\n\r\n* Working tests\r\n\r\n* CMake build\r\n\r\n* Fix pprof\r\n\r\n* Fix header includes\r\n\r\n* CMake fix test\r\n\r\n* Bazel clean\r\n\r\n* Fix verbs\r\n\r\n* More verbs fixes\r\n\r\n* bazel clean for XLA\r\n\r\n* Windows build fix test\r\n\r\n* Add openssl/rand.h\r\n\r\n* New cmake build command\r\n\r\n* --config Release'
3cd828474f50b7a067115e0a38a1d078ff7432c1,'Fix error with default python path selection (#11814)\n\n* Fix error with default python path selection\r\n\r\n* Move setting of environment var outside if / else'
2381ce5c3368ac1c0d4aec41c6a42ec2e32bbbcf,'DOC: Fix typo. (#11813)\n\nyou could could be I/O bottlenecked.\r\nTO:\r\nyou could be I/O bottlenecked.'
722f6f3611eb4d11e5eb3c8bb6e6df376c659700,"""Fix TensorForest's saveable object names so loading a savedmodel works.\n\nPiperOrigin-RevId: 163332598"""
d488745f3c13ed64a2982b50253ee9a74bb5ceb7,'Support with statement for summary.FileWriter\n\nThis fix adds support of `with` for `summary.FileWriter`\n\nThis fix fixes 11750.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
423c1eea0e47eb71d3bf3ec7e99e7a4a63c3e433,'BREAKING CHANGE: Fix semantic error in how maybe_batch* handles sparse tensors.\n\nPiperOrigin-RevId: 163276613'
6028c071b592330fabf107df08d880ec443d6844,"'Highlight incoming/outgoing edges on hover in HLO graphviz dumps, and other improvements.\n\nOther improvements:\n\n - Don\'t show tooltips for nodes and clusters.  Previously we\'d show a\n   tooltip containing a pointer value expressed as decimal.  Not so\n   useful.\n\n - Show tooltips on edges with the to/from node names.\n\n - Fix bug wherein if we had\n\n   - a node at the ""edge"" of the graph (so its operands aren\'t included\n     unless they\'re referenced by another node),\n   - with all of its operands included in the graph save one or more\n     constants, and\n   - those constants weren\'t referenced by any nodes not at the edge of\n     the graph,\n\n   we would incorrectly draw the node as ""grayed out"", indicating that\n   one of its operands (namely, its constant operand) wasn\'t present in\n   the graph.\n\n   This is wrong because constants are inlined into their users, so they\n   should always count as ""displayed"" for the purposes of determining\n   whether a node is grayed out.\n\nPiperOrigin-RevId: 163276108'"
69e323cc627600dd71959815d8440c9bae569832,'Fix comment ypo\n\nPiperOrigin-RevId: 163266376'
08790e73d1d83bbb48d73d6f358466a9c75b06a9,"'[XLA] Fix a bug in cloning outfeeds, carried the wrong shape.\n\nPiperOrigin-RevId: 163265592'"
1f2cc7ccac64c14676776c23e8313a034cd66e74,'Build fix for Android nightly build\n\nPiperOrigin-RevId: 163249287'
b873d8085e6bb05a69e4043fa74468f6014766af,'Fix arg lists for args and kwargs in docs.\n\nPiperOrigin-RevId: 163246117'
b244912b2f6c19985d6830f751e7ed1e36605adc,"""Add Raspberry PI build (#11675)\n\n* Add support for Raspberry PI (ARM) builds.\r\n\r\nTo build:\r\n\r\n./configure\r\n\r\nbazel build --sandbox_debug -c opt --copt=-march=armv6 --copt=-mfpu=vfp \\\r\n  --copt=-funsafe-math-optimizations --copt=-ftree-vectorize \\\r\n  --copt=-fomit-frame-pointer --cpu=armeabi \\\r\n  --crosstool_top=@local_config_arm_compiler//:toolchain \\\r\n  --verbose_failures --build_python_zip ...targets...\r\n\r\n* Additional changes to get raspberry pi build working.\r\n\r\nupdate platform.h and crosstool template for define RASPBERRY_PI.\r\n\r\n* Add build_raspberry_pi.sh with some documentation.\r\n\r\n* Cleanups for build_raspberry_pi.sh\r\n\r\n* contrib/makefile/Makefile in PI mode: add -DRASPBERRY_PI.\r\n\r\n* Recommend using aptitude instead of apt-get in build_raspberry_pi.sh.\r\n\r\n* More comments to build_raspberry_pi.sh\r\n\r\n* Switched to tar file for ARM tool chain\r\n\r\n* More fixes to arm build scripts; move tools/arm_compiler -> third_party/toolchains/cpus/arm.\r\n\r\n* Update comments in build_raspberry_pi: get ubuntu ports for your lsb codename.\r\n\r\n* Hacked around cxx_builtin_include_directory problem in CROSSTOOL\r\n\r\n* Added an extra system include\r\n\r\n* Added Pi Two/Three NEON support, with fix for Eigen version\r\n\r\n* Undo pete's Eigen change - it breaks OS X build.  Will be fixed later."""
16d39e94e3724417fcaed87035434e098e892842,"""Fix quantization tutorial (#11285)\n\n* Remove outdated dependencies in quantization tutorial\r\n\r\n* Fix quantization tutorial's example"""
c2ce4f68c744e6d328746b144ff1fcf98ac99e6c,'Implemented selu activation #10612 (#10818)\n\n* Implemented selu activation #10612\r\n\r\n* fix the error in _SeluGradGrad\r\n\r\n* update golden file for api change\r\n\r\n* add XLA kernels for Selu and SeluGrad'
62de0b94797a179ec7851354015e99e9a7ae57e6,"'Branch 163121296 (#11767)\n\n* Update ops-related pbtxt files.\r\n\r\nPiperOrigin-RevId: 163014080\r\n\r\n* Go: Update generated wrapper functions for TensorFlow ops.\r\n\r\nPiperOrigin-RevId: 163014834\r\n\r\n* Removing session reset since destroying the session object would delete its variables as well. Resetting session might unintentionally close other sessions in the same process.\r\n\r\nPiperOrigin-RevId: 163019166\r\n\r\n* [XLA] Teach CPU and GPU compilers to optionally invoke the HLO insert-reduce-precision-operations pass.\r\n\r\nThis also required a few additions and fixups.  We add pieces to ReducePrecisionInsertion to translate between the protocol-buffer representation of the pass options and the predicate-function actually used in the pass.  To facilitate this translation, we also add a function to HloOpcode to return the number of opcodes so that we can iterate over the whole set easily.\r\n\r\nPiperOrigin-RevId: 163037250\r\n\r\n* Refactor HLO graph dumping.\r\n\r\nThis also makes a few minor cosmetic changes, like moving the fusion\r\ntype out of the fusion node and into the out-of-line computation and\r\nadjusting the arrow labels that we use to indicate operand numbers.\r\n\r\nPiperOrigin-RevId: 163038795\r\n\r\n* Use correct order of arguments in call of valid_bitcast_callback_.\r\n\r\nThere are platforms where bitcasts are not symmetric. I.e. there are shapes A and B so that A->B is a bitcast, but B->A not. So we have to consider the correct order when calling valid_bitcast_callback_.\r\n\r\nPiperOrigin-RevId: 163058665\r\n\r\n* Two improvements to pip.sh\r\n\r\n1. Distinguish between passed and skipped tests.\r\n2. Allow skipping the smoke test of tensorflow install in clean virtualenv with NO_TEST_ON_INSTALL=1\r\n\r\nPiperOrigin-RevId: 163065599\r\n\r\n* [XLA] Update StatusOr implementation to use more nuanced type traits.\r\n\r\nPreviously we would evaluate the is_copy_constructible trait before template\r\nparameters were fully defined; e.g. StatusOr<ThingIAmDefiningRightNow>,\r\nwhich could lead to surprising effects.\r\n\r\nAlso, previously it was not possible to provide an error status to a\r\nStatusOr<T> where T was not default-constructible.\r\n\r\nPiperOrigin-RevId: 163073057\r\n\r\n* [TF:XLA] Register a no-op kernel for ControlTrigger, but forbid the JIT marking pass from compiling ControlTrigger nodes.\r\n\r\nCL in preparation for compiling dynamic RNN gradients via XLA.\r\n\r\nPiperOrigin-RevId: 163073212\r\n\r\n* Improve the HLO graph dumper\'s output.\r\n\r\n - Truncate long shapes.  It\'s not uncommon to have giant tuples, and\r\n   displaying the whole thing makes the graph unreadable.\r\n\r\n - Don\'t traverse into the users of a node with < 16 users.  These are\r\n   probably not interesting, and traversing into them can quickly blow\r\n   up the graph, making it un-renderable.\r\n\r\n - Allow nodes which have multiple trivial subcomputations (e.g.\r\n   select-and-scatter) to have those computations inlined.\r\n\r\n - Match additional patterns in MatchTrivialComputation\r\n\r\nPiperOrigin-RevId: 163079329\r\n\r\n* If the value to be forwarded from a loop to its gradient is a constant, clone the constant instead of repeatedly pushing it onto a stack on each iteration. This should never consume more memory than the stack approach (notwithstanding swapping), and frequently should be much better.\r\n\r\nThis change is in preparation for enabling XLA compilation of RNN gradients.\r\n\r\nPiperOrigin-RevId: 163082165\r\n\r\n* [TF:XLA] Make the shape of a TensorArray flow value a scalar.\r\n\r\nPreviously we used an f32[0] value, since the exact flow value does not matter, however this causes problems when a TensorArray computation is placed in a loop since the shape of the flow value is no longer loop invariant.\r\n\r\nPiperOrigin-RevId: 163082452\r\n\r\n* Automated g4 rollback of changelist 163019166\r\n\r\nPiperOrigin-RevId: 163083436\r\n\r\n* Automated g4 rollback of changelist 162769374\r\n\r\nPiperOrigin-RevId: 163086518\r\n\r\n* internal change\r\n\r\nPiperOrigin-RevId: 163088509\r\n\r\n* Clarify docstring for tf.rank.\r\n\r\nPiperOrigin-RevId: 163089480\r\n\r\n* Reduce gather_op_test timeouts by reducing the size of testHigherRank.\r\n\r\nPiperOrigin-RevId: 163090428\r\n\r\n* Add PopulationCount op (popcnt): element-wise counts the number of ""on"" bits.\r\n\r\nPiperOrigin-RevId: 163090921\r\n\r\n* Show fusion nodes inline in HLO graph dumper.\r\n\r\nTo make this work sanely I had to change NodeFilter so that it says to\r\ndump all nodes inside subcomputations.  Previously, we passed an\r\nexplicit NodeFilter down to DumpSubcomputation, and used that to control\r\nwhether or not we dumped nodes in there.  But this becomes unwieldy with\r\ninline fusion nodes, as sometimes you want to look at \'filter\', and\r\nother times you want to look at \'filter_\', and there\'s no good way to\r\ntell why.\r\n\r\nI also had to remove the heuristic whereby we\'d pull in operands of\r\nnodes with just some operands shown.  With the much bigger nodes that\r\nare generated by this change, the graph was becoming illegible.  I think\r\nmost of the confusion that heuristic was attempting to avoid is\r\naddressed by the fact that we ""gray out"" incomplete nodes.\r\n\r\nPiperOrigin-RevId: 163091423\r\n\r\n* errors: Avoid stripping error details when convering POSIX errors to Status\r\n\r\nThis change is made out of a desire to have additional information be reported\r\nwhen there are filesystem errors (for e.g. see\r\n#11628)\r\n\r\nPiperOrigin-RevId: 163091773\r\n\r\n* C API: Fix a bug with TF_OperationGetAttrTensor when TF_STRING tensors are\r\ninvolved.\r\n\r\nThe TensorBuffer owned by a TF_Tensor object has a different memory layout than\r\nthe TensorBuffer owned by the corresponding tensorflow::Tensor object.\r\nThis change consolidates conversions between the runtime\'s tensorflow::Tensor\r\nand the C API\'s TF_Tensor objects into a pair helper functions.\r\n\r\nThe added test: CApiAttributesTest.StringTensor fails without corresponding\r\nchanges to c_api.cc\r\n\r\nPiperOrigin-RevId: 163091789\r\n\r\n* Speed up tf.contrib.signal spectral_ops_test.py by reducing the size of the gradient test.\r\n\r\nPiperOrigin-RevId: 163092423\r\n\r\n* Add new CompareAndBitpackOp.\r\n\r\nPiperOrigin-RevId: 163093146\r\n\r\n* Update ops-related pbtxt files.\r\n\r\nPiperOrigin-RevId: 163094455\r\n\r\n* Minor tweaks to avoid unnecessary copies\r\n\r\nPiperOrigin-RevId: 163101160\r\n\r\n* [BatchNormGrad] Add end-to-end test for BatchNormGrad\r\n\r\nRELNOTES: n/a\r\nPiperOrigin-RevId: 163101568\r\n\r\n* Go: Update generated wrapper functions for TensorFlow ops.\r\n\r\nPiperOrigin-RevId: 163102070\r\n\r\n* [XLA] Add more unit tests for DynamicSlice and DynamicUpdateSlice.\r\n\r\nPiperOrigin-RevId: 163102445\r\n\r\n* Adding missing deps to targets in llvm.BUILD. This was only working in non-sandboxed builds.\r\n\r\nPiperOrigin-RevId: 163103908\r\n\r\n* Pass batch_size in params when use_tpu=False.\r\n\r\nPiperOrigin-RevId: 163105673\r\n\r\n* Remove duplicate import.\r\n\r\nPiperOrigin-RevId: 163108237\r\n\r\n* Implementation of UnsortedSegmentSum in tf2xla bridge.\r\n\r\nPiperOrigin-RevId: 163109769\r\n\r\n* Add gradient checking tests for nn.moments().\r\n\r\nPiperOrigin-RevId: 163110994\r\n\r\n* Improved the speed of constant folding\r\n\r\nPiperOrigin-RevId: 163113085\r\n\r\n* Convert configure to python.\r\n\r\nPiperOrigin-RevId: 163114551\r\n\r\n* [TF:XLA] Ignore control edges from Enter nodes to the graph sink during loop functionalization.\r\n\r\nPiperOrigin-RevId: 163115904\r\n\r\n* Support customized residual function in the residual wrapper.\r\n\r\nPiperOrigin-RevId: 163121296'"
672c96cefcd1bc490f86cb81ff0e335ffcd1886b,'[tf.contrib.data] Fix unbatch scalar vs. tuple handling.\n\nFixes #11666.\n\nPiperOrigin-RevId: 162776187'
52a6a1e284a14713d580bcb8bb04bde77e17a1f3,"'Fix a bug where Dataset.map() will throw the following error when num_threads\nis specified but output_buffer_size is not:\n\nValueError: Tensor conversion requested dtype int64 for Tensor with dtype\nint32: \'Tensor(""num_threads:0"", shape=(), dtype=int32)\'\nPiperOrigin-RevId: 162766317'"
476913967a5d951cff79e0f2c1dc8d51f7ce1348,"'Bugfix: Never use env_->device_mgr\n\nThe base_rendezvous_mgr handles transferring a tensor using DMAs to non-""host""\ndevices such as GPUs in the SameWorkerRecvDone function. This function would\nuse the worker_env\'s device_mgr to obtain a pointer to the relevant Device\n(using the LookupDevice call). In the ClusterSpec-propagation world, using the\nenvironment\'s device_set means that the devices are not renamed, often\nresulting in devices not being found.\n\nThis change updates BaseRemoteRendezvous to use the WorkerSession stored when\nthe BaseRemoteRendezvous is initialized. The WorkerSession has a pointer to a\nDeviceMgr that contains the appropriately renamed devices for the given\nsession the Rendezvous is associated with.\n\nNote: because we have a fast-path host-device-only copy, the original bug does\nnot show up when using 2 CPU devices. I have added a test to ensure that\ntransferring between 2 CPU devices works in a ClusterSpec propagation session,\nbut note that this test does not actually reproduce the motivating bug.\n\nIn the process of writing a test for the original bug, I discovered another\nlatent bug in ClusterSpec propagation where if there were 2 CPU devices\n(i.e. due to explicit server configuration to have 2 CPU devices), a DCHECK\ncould be triggered. The Master::CreateSession would call\n`device_set->set_client_device` multiple times (once for each CPU device).\n\nPiperOrigin-RevId: 162680163'"
6c3fc841656ff32c54aaf4bfa3cafc3940aed84f,"""fix leftnav files for programmer's guide\n\nPiperOrigin-RevId: 162418535"""
4c9e344bf1b6582620b26c0a62a886d3c80e3c19,"""C API: Fix a bug with TF_OperationGetAttrTensor when TF_STRING tensors are\ninvolved.\n\nThe TensorBuffer owned by a TF_Tensor object has a different memory layout than\nthe TensorBuffer owned by the corresponding tensorflow::Tensor object.\nThis change consolidates conversions between the runtime's tensorflow::Tensor\nand the C API's TF_Tensor objects into a pair helper functions.\n\nThe added test: CApiAttributesTest.StringTensor fails without corresponding\nchanges to c_api.cc\n\nPiperOrigin-RevId: 163091789"""
53d08ff5671e8ee0c84635a0f1a074298653288a,'Fix wrong template type name in QuantizedAddUsingEigen (#11731)'
47fa0527c1f681d026249d4893411962e64c3bd6,"'Merge pull request #11732 from caisq/debug-gradients-1\n\nCherry-pick GradientsDebugger from master to r1.3, with fixes to GPU build issues'"
0793ddd92a0d1d75c5e1d421561dca9327fef3d4,'Merge pull request #11741 from resec/patch-5\n\nFix web link to tool_developers guide'
4e92e1e7cec431279e0d9b159ac5f7165d17e325,'Fix web link to tool_developers guide'
d1a9ea61ef8271b3d2fe273a68ff5940fcba7ccd,"'[XLA] Teach CPU and GPU compilers to optionally invoke the HLO insert-reduce-precision-operations pass.\n\nThis also required a few additions and fixups.  We add pieces to ReducePrecisionInsertion to translate between the protocol-buffer representation of the pass options and the predicate-function actually used in the pass.  To facilitate this translation, we also add a function to HloOpcode to return the number of opcodes so that we can iterate over the whole set easily.\n\nPiperOrigin-RevId: 163037250'"
5064df6cfec6573d6814d92acb4bf58171880859,"'Update BUILD (#11705)\n\nfix issues/421\r\nthe problem reason is single_image_random_dot_stereograms.cc<<kernels>> be dependent on TensorShapeProto\r\nit define on protobuf, use class LogMessage. but no deps protobuf on BUILD rule python/ops/_single_image_random_dot_stereograms.so .\r\nso Symbol not found: __ZN6google8protobuf8internal10LogMessageC1ENS0_8LogLevelEPKci(google::protobuf::internal::LogMessage::LogMessage)'"
f973a381f5b5c0e1a1f418177f929882c9dae0cc,"""Update fft2d.cmake (#11671)\n\nThe cmake fft2d library was installing to '(fft2d_INDTALL)' instead of the appropriate variable set by CMake. I suspect this was unintentional. \r\n\r\nChanging the parentheses to curly brackets fixes this."""
d7527567bbacd45b73c032a5661ab726343ef0c4,'Update sample_distorted_bounding_box to use v2 kernel (#11668)\n\n* Update sample_distorted_bounding_box to use v2 kernel\r\n\r\nThis fix is a follow up of #10840 so that\r\nsample_distorted_bounding_box uses _v2 kernel to follow the\r\nAPI compatibility workflow (3 weeks).\r\n\r\nThis fix fixes #10715.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update tests for sample_distorted_bounding_box to use v2 kernel\r\n\r\nThis fix is a follow up of #10840.\r\n\r\nThis fix updates related tests so that redudant tests could\r\nbe removed.\r\n\r\nThis fix fixes #10715.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
eac302a3e688e94819a64669575674ddd842f46a,'Fix build doc README (#11643)\n\n- `src_dir` must be absolute path\r\n- docs_src was moved to `tensorflow/docs_src`'
1b578268f5407b4f40c4226b7d00b08e948a4b09,'Fix _Recv op caching for multi-output port ops in VirtualScheduler.\n\nPiperOrigin-RevId: 162970793'
003deb88b7fb015db86089c2a87b3044cad2c714,"'Refactor and implementation of the camera API 1, it fixes #8736 (#10771)\n\n* Fallback to legacy camera API for problematic devices\r\n\r\n* Refactor and implementation of the camera API 1\r\n\r\n* Refactor and implementation of the camera API 1, it fixes #8736\r\n\r\n* Fix some corrections of @andrewharp\r\n\r\n* Some fixes for @andrewharp\r\n\r\n* fix a missing line\r\n\r\n* Some more sanity fixes\r\n\r\n* Optimization for the calculation of the preview size,\r\nAlso, add validation to check if we already choose the preview size\r\n\r\n* Fixed some lines that were over 100 characters\r\n\r\n* Update CameraActivity.java\r\n\r\nfixed indentations\r\n\r\n* Update ClassifierActivity.java\r\n\r\nFixed indentations\r\n\r\n* Update StylizeActivity.java\r\n\r\nFixed indentations.\r\n\r\n* Update StylizeActivity.java\r\n\r\nfix spaces\r\n\r\n* Update StylizeActivity.java\r\n\r\nFix indentation.'"
9c3114bac00a294c839520178bf0b8aeb3653248,'Fix missing spaces for several errors (#11703)'
17f9320b33069ecda689bc71a917f5df5911666f,'Fix #11708\n\nPiperOrigin-RevId: 162955528'
62aa5eb5b30ff591f428bc46eac2d9819fa1e6a8,'Fix typos (#11627)'
d30efdbaa2b80bf4eb8db9e0b94501fdbd4107d8,'Fix 404 of model file example which was moved to tensorboard repository.'
a41cd215434bd2cc52485be96bdf3be000c39a8a,'Merge pull request #11686 from Lewuathe/fix-stackoverflow-link\n\nFix stackoverflow link to avoid redirect warning'
d481e5425499e076f59d8d67751836be25ac642e,'Fix stackoverflow link to avoid redirect warning'
eaa7a8ed93ccac595eab412dc7e021202c155f5d,'grappler swap_to_host bug fix (#11283)'
4895cec77fac920a77a79e9e6f79951503483303,'fix lint issues in *stage_op_test\n\nPiperOrigin-RevId: 162804579'
56c4856f61dd9b42181803722b40ffe80c1297a8,'Fix _Recv op caching for multi-output port ops in VirtualScheduler.\n\nPiperOrigin-RevId: 162782896'
b65d9ec2b78c7c23e368ed4eec7b4deb89dcd712,"'Fix value error generated on is_scalar check (#10391)\n\n* Fix value error generated on is_scalar check\r\n\r\n`is_scalar = shape is not None and not shape` raises a value error when shape is a scalar, ""ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()""\r\n\r\n* Update variable_scope.py\r\n\r\n* Fix'"
307a2fc2adc2c6b717bb9713f81289f6bbb91b07,'[tf.contrib.data] Fix unbatch scalar vs. tuple handling.\n\nFixes #11666.\n\nPiperOrigin-RevId: 162776187'
10632be3bedb5b8e196d98429795ca9108cace5a,'fix buf address for tuples (#11625)'
ef5cbc42f19c026de62e63c92f3b085422aa35cb,"'Fix a bug where Dataset.map() will throw the following error when num_threads\nis specified but output_buffer_size is not:\n\nValueError: Tensor conversion requested dtype int64 for Tensor with dtype\nint32: \'Tensor(""num_threads:0"", shape=(), dtype=int32)\'\nPiperOrigin-RevId: 162766317'"
4729180d24af3126d736a7045c43fcbf031b5bef,'Fix various mac flakes.\n\nPiperOrigin-RevId: 162748291'
d3edb8c60ed4fd831d62833ed22f5c23486c561c,'fix gpu build (#11647)'
78e7cffa71df4d5057b8a87f78f2d91e421a36f7,'Fix open-source build breakage related to std::deque\n\nPiperOrigin-RevId: 162701622'
d2f8e98650f553009b53d814814fb2d9ead66711,"'Bugfix: Never use env_->device_mgr\n\nThe base_rendezvous_mgr handles transferring a tensor using DMAs to non-""host""\ndevices such as GPUs in the SameWorkerRecvDone function. This function would\nuse the worker_env\'s device_mgr to obtain a pointer to the relevant Device\n(using the LookupDevice call). In the ClusterSpec-propagation world, using the\nenvironment\'s device_set means that the devices are not renamed, often\nresulting in devices not being found.\n\nThis change updates BaseRemoteRendezvous to use the WorkerSession stored when\nthe BaseRemoteRendezvous is initialized. The WorkerSession has a pointer to a\nDeviceMgr that contains the appropriately renamed devices for the given\nsession the Rendezvous is associated with.\n\nNote: because we have a fast-path host-device-only copy, the original bug does\nnot show up when using 2 CPU devices. I have added a test to ensure that\ntransferring between 2 CPU devices works in a ClusterSpec propagation session,\nbut note that this test does not actually reproduce the motivating bug.\n\nIn the process of writing a test for the original bug, I discovered another\nlatent bug in ClusterSpec propagation where if there were 2 CPU devices\n(i.e. due to explicit server configuration to have 2 CPU devices), a DCHECK\ncould be triggered. The Master::CreateSession would call\n`device_set->set_client_device` multiple times (once for each CPU device).\n\nPiperOrigin-RevId: 162680163'"
387bf2d7ccb2ec98f3346b9d7b187395b742e277,'fix link\n\nPiperOrigin-RevId: 162671439'
97cf16bb937e0cea7c024b2e689b198795682101,'Documentation fixes and polishing for tf.contrib.signal.\n\nPiperOrigin-RevId: 162658696'
a2ad9123aad76329cadb35bc6a816e53700eebe4,"""Fix bug in C++ gradient computation where multi-output nodes may not have been processed.\n\nIf a subset of the outputs of a multi-output node were included in the\n'inputs' argument to AddSymbolicGradients(), they would not be\npopulated in 'grad_outputs'. This is because the pending count of the\nmulti-output node would never go to zero (unless the backprop\ntraversal happened to visit all the output edges, even though not all\nwere explicitly requested).\n\nThis change fixes the bug by processing any remaining requested edges\nafter finishing the traversal.\n\nPiperOrigin-RevId: 162653892"""
e925629edb5b72247c9105d8eac941c9c2aad565,'fix map_func in `read_batch_features`.\n\nPiperOrigin-RevId: 162632092'
f783f5c193a2216619af5b41c6503e52c0796db5,'Fix missing spaces for several errors.\n\nPiperOrigin-RevId: 162567926'
8a121b1eaa61be7f25e6484e2d633e652707eb08,'Disable a test temporarily while we fix it to account for fastmath-caused floating point imprecision.\n\nPiperOrigin-RevId: 162560345'
f7877726a5d9404bc75c5c48f1fd9c43657595dd,'Fix comment: OperatorPDCholesky -> LinearOperatorTriL\n\nPiperOrigin-RevId: 162544918'
08d79310f971677bd4bfe50da023a45465ecf10f,"""Fixes 'window_size' may be used uninitialized (#11560)"""
ad46b6f9de15d8b4755f9a558a271e254c71924b,"'Adding documentation about contrib.losses (#11600)\n\n* Update contrib.lossses.md\r\n\r\nAdding note that this module is deprecated\r\n\r\n* Update __init__.py\r\n\r\nAdd spaces so that this shows up well on the website\r\n\r\n* Update __init__.py\r\n\r\nAlignment does not comply with PEP8, minor cleanup of comments\r\n\r\n* Update README.md\r\n\r\nNotify readers that this module is deprecated\r\n\r\n* Update losses_op.py\r\n\r\n-Clarify deprecated information\r\n-Correct minor error\r\n-Minor grammar fixes\r\n\r\n* Grammar fix'"
4d5ff2ee958d789b45535ba5dad0ae837b730d13,"'Support placeholder for parameter k in tf.nn.in_top_k (#11197)\n\n* Support placeholder for parameter k in tf.nn.in_top_k\r\n\r\nThis fix tries to address the issue raised in #9717 where\r\nit was not possible to have tensor for k in nn.in_top_k.\r\n\r\nThis fix adds the implementation of InTopKV2Op, adds addition test\r\ncases, and following similiar workflow in #10840:\r\n1. Register new kennel InTopKV2Op\r\n2. Hide InTopK and InTopKV2 in python (tensorflow/python/ops/hidden_ops.txt)\r\n3. Add a wrapper in_top_k (in tensorflow/python/ops/nn_ops.py) pointing to gen_nn_ops._in_top_k\r\n\r\nAnother PR will be created after 3 weeks once this PR is merged:\r\n1. Change the implementation of the wrapper in_top_k (in tensorflow/python/ops/nn_ops.py)\r\npointing to gen_nn_ops._in_top_kv2\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address review comments\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add HostMemory to InTopK kernel\r\n\r\nAdd HostMemory to InTopK kernel based on the review feedback\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
fbe004f9f7b462668f1650eb070205f539e85c9c,'Fixing a grammar error.'
28832c2f63774b77e15690bebef5ea47992f420f,"'Fix is_floating for tf.qint*, tf.quint*.\n\nis_floating fails for tf.qint* because issubclass is called on tf.qint*, which is not a class.  Use numpy.issubdtype to perform the check instead.\n\nPiperOrigin-RevId: 162441672'"
53d4c4b80f465e4d7ab267f4d48c6c29bbbd24f3,"'fix broken links, add links check to sanity (#11394)\n\n* fix broken links, add links check to sanity\r\n\r\n* fix broken link in export.md'"
f6a2bcbeed43744aede1d312dacfa252ce63eaf2,"'Fixes ArgMax deprecation warnings in test (#11551)\n\nThe recent commit cbe1ef0 marks the `dimension` argument of argmax and\r\nargmin as deprecated, which are used in the corresponding tests and so\r\nthis brings up warnings when the tests are run. The tests should be\r\nusing the `axis` argument instead.'"
ec76799118faffd8d04f4084db2bcabc6f18e102,"""fix leftnav files for programmer's guide\n\nPiperOrigin-RevId: 162418535"""
afe603348babf6f055d635e230e1494dd138df21,'Fix crash when OOM error occurs with verbose logging enabled\n\nPiperOrigin-RevId: 162414962'
d8672f1839df67f765baaa34a4c806ee1d433842,'Fix image to be Max\n\nPiperOrigin-RevId: 162410385'
f0923262ed4d89f2a201f6e7ca02e5d118c1b4d3,"'Update get_started.md (#11539)\n\n* Support tensors as dropout rates again, by removing the min(max(..)..) clipping\r\nthat throws TypeError for tensors.\r\n\r\nPiperOrigin-RevId: 157000504\r\n\r\n* Patch release PR. Updating versions to 1.2.1. Updating the release notes. Updating markdown version. Patching Github issue 11005.\r\n\r\n* Fix for contrib.layers test that was raising an IndexError (#11069)\r\n\r\n* variable name change and documentation clarification\r\n\r\n* Updated a test to eliminate an error it raises\r\n\r\n* Updating release.md.\r\n\r\n* Allowing the PIP_TEST_ROOT variable to be set.\r\n\r\nPiperOrigin-RevId: 161087696\r\n\r\n* Update get_started.md\r\n\r\nFix various errors in print out statements and unnecessary lines of code'"
44894caad3a10e4c67e241ea26cc4ce8b71e887e,"'BUGFIX:  Affine bijector was putting non-tensor value into graph parents, which\ncaused issues downstream, e.g. when transformed distribution tried to init with\nthese.\n\nPiperOrigin-RevId: 162369143'"
d8df2487b19be54b06b62b631a5545e77a00df3a,'Merge pull request #11576 from delftrobotics-forks/typo\n\nFix typo in exception.'
b13373f40be11b04ea38daf0a2cf9b7f4f11dd7f,'Merge pull request #11566 from taehoonlee/fix_typos\n\nFix typos'
bdb2967a298236e24011405907cd19737386934e,'Fix metagemm calls in quantized ops. Only use metagemm multiplication for\nk <= 2048.\n\nPiperOrigin-RevId: 162356878'
3d91dc4b3af462207fe357f2f5ac271327998855,'Fix typo in exception.'
2fd237c164a2f2133dbba6a93671a9de633ab7fe,'Fix sample usage of learn.utils.gc: re.escape() the base_dir before matching.\n\nPiperOrigin-RevId: 162327608'
8a90e8487d39cedc8fdd2cbab5a6c237c2f3a1cb,'Fixes in control_flow_ops.\n\nPiperOrigin-RevId: 162325768'
7d37fe01e54bedeff5e0943ec6bfec07c8841f04,'Fix typos'
139a866a82fd232993cb12bb9d054ba5f9ade5ac,'Fix style issue in tfdbg documentation.\n\nPiperOrigin-RevId: 162244864'
d1cde76080ee52e3b2fb99966d44b4af515a9846,"'[OpenCL] Fixes SYCL profiler tests (#141)\n\nThe profiler relies heavily on the canonical device being listed in the\r\nTFProf nodes, which is only set for those devices which return True from\r\nCountAsCPUTime, so we need this to return True for SYCL device nodes\r\ntoo. The check for whether the node will run on an Accelerator comes\r\nfrom IsPlacedOnAccelerator.'"
85d4102862c781af2346b4aa568054522e8946ea,"""Adding generics to the Java API - Phase 1 (#11251)\n\n* Phase 1 of the proposed generic Java API.\r\n\r\nThis adds new classes to represent each of the possible tensor types,\r\nand some scripting support for generating those classes. There is\r\nessentially no effect on existing classes, except that DataType is\r\nmade slightly more efficient.\r\n\r\nAll tests pass.\r\n\r\n* Addressed Asim's review.\r\n\r\n* Hoisted copyright into a separate declaration. Maybe it should go\r\nin a separate file?\r\n\r\n* Added private constructors to TF types and shortened their javadoc to be\r\nmore standard.\r\n\r\n* Added more explanation about the enum relationship.\r\n\r\n* Used more-idiomatic import statement.\r\n\r\n* Rename zero column.\r\n\r\n* Removed the datatype code from tftypes.csv\r\n\r\n* Fix the default value for Double, add one for UInt8.\r\n\r\n* Got rid of 'boxed type' column in CSV file\r\n\r\n* Somehow I did not notice that TFType.java was not checked in."""
8fec01948f55453a25d6457d7f97dd60b172f6ff,"""Fixes 'batch_size' may be used uninitialized (#11522)\n\nclang++-3.6: warning: 'batch_size' may be used uninitialized in this function"""
f3d5e7e4479eb0d875f61aa13274c86ddca70f86,'Fixing a typo (#11518)'
94c42d27c49c764254fd07e37d1170facb7040ad,'Merge pull request #11507 from MyHumbleSelf/patch-1\n\nFix syntax error in sample code'
ee8d9f353a29c3b0df8447e94c11f1a61ee75583,"""In colocation op device checking, canonicalize the names so\n/device:GPU:0 compares to /gpu:0 as one would expect.\n\nAdds a test to ensure that the warning message isn't printed\nby checking the resulting device name.  No behavior change\nis expected here; all this does is change to share\nthe canonical name and remove the warning.\n\nFixes #11484.\n\nPiperOrigin-RevId: 162024152"""
a55f2481ac4e657b73acd606dbc7f85545ef3b2f,'Fix race in record_yielder.\n\nPiperOrigin-RevId: 162022981'
d7fa7ae8ac15118393b6a549eb98ec9ca23497c0,'Fix syntax error in sample code\n\nThis would have otherwise caused a non-keyword arg after keyword arg'
da3112ada44c47a12cdace6df7db04cc03c0f43d,'Adding a link and fixing up two titles (#11491)\n\nThis should make it easier to find the newest documentation.'
cc741b48e8bba90670fe9db3811d50f283ea8b1b,'Fix vector/scalar typos in sequence example parser error messages.  Old code erroneously claimed that scalar arguments should be vectors.\n\nPiperOrigin-RevId: 162009915'
cf397513c88bd5001d1180f81380523e1cc7d46b,"'slice_test: Add a few tests for strided slices and\nconsolidate R1 tests.\n\n* Fix SliceUnaligned1024In4096Values, which was using\nunitialized data.\n* Also fix SliceR2Test to respect the layout parameter.\n\nPiperOrigin-RevId: 161991313'"
65e4860155c34d8a017fa474bf7db90994061cc1,"""Fix on 'Use mcpu instead of march for ppc64le' (#11481)\n\n* Fix on 'Use mcpu instead of march for ppc64le'\r\n\r\nUse of [] around 'if is_ppc64le; then' makes it always\r\nreturn true, causing deprecated warnings on every other arch.\r\nThis fixes commit 9f57dc8\r\n\r\n* Remove CPU variable and inline uname in configure script"""
060b61ced1e81f8393ff0f5a66794114abcfd3b9,"'Fix ""Converting to Python 3"" error for check_load_py_test.\n\nPiperOrigin-RevId: 161896415'"
0355763a32660b2112f155c752f6bf244fcf7007,"'Change ReferenceUtil::Slice{2,3,4}D to accept a strides parameter.\n\nThis also fixes their ordering in xla/reference_util.h\n\nThis also adds a few stride tests to reference_util_test and\nadds LiteralTestUtil::ExpectR4Near().\n\nPiperOrigin-RevId: 161876759'"
a24f96a3f70e0cc0792410673f55c4a898dea604,"""Throw a ValueError if the user doesn't pass in a dictionary of Tensors for\nfeatures to canned Estimators. The current situation confuses users\ntransitioning from the contrib Estimators because those support passing Tensor\nas features.\n\nFixes #11252\n\nPiperOrigin-RevId: 161876642"""
cbf4cd3b7409e3ec0135b7a675527117e3bb2ea1,'datset.md - Fix minor typo in code (#11488)\n\nChange tf.contrib.data.Dataset.TextLineDataset(filename) to tf.contrib.data.TextLineDataset(filename)'
a0ffaf3caa0234653035a692858606c7bdacd63b,"""Merge changes from github.\nEND_PUBLIC\n\n---\nCommit fe5338177 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 161727345\n\n---\nCommit c65f69119 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFactor out DenseUpdate ops into dense_update_functor build dep.\n\nAlso add support for complex types.\n\nPiperOrigin-RevId: 161726749\n\n---\nCommit 9a172989e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 161726324\n\n---\nCommit fd5530d6e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nadding bazel-toolchains repo to workspace. This repo will be necessary for remote execution (specifically for cross OS compilation)\n\nPiperOrigin-RevId: 161719899\n\n---\nCommit 71c4ec8ed authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a mechanism for switching between multiple iterators by feeding a handle.\n\nWith this change, you can do the following:\n\n1. Fetch a string handle for any iterator, by evaluating the result of\n   `Iterator.string_handle()`.\n2. Define an `Iterator` object based on a `tf.string` placeholder handle.\n3. Feed the placeholder using an evaluated string handle to use a particular\n   iterator in a particular step.\n\nConcretely, this allows you to define two iterators for a training dataset and\na test dataset, and choose which one to use on a per-run basis:\n\n```python\ntrain_iterator = tf.contrib.data.Dataset(...).make_one_shot_iterator()\ntrain_iterator_handle = sess.run(train_iterator.string_handle())\n\ntest_iterator = tf.contrib.data.Dataset(...).make_one_shot_iterator()\ntest_iterator_handle = sess.run(test_iterator.string_handle())\n\nhandle = tf.placeholder(tf.string, shape=[])\niterator = tf.contrib.data.Iterator.from_string_handle(\n    handle, train_iterator.output_types)\n\nnext_element = iterator.get_next()\nloss = f(next_element)\n\ntrain_loss = sess.run(loss, feed_dict={handle: train_iterator_handle})\ntest_loss = sess.run(loss, feed_dict={handle: test_iterator_handle})\n```\nPiperOrigin-RevId: 161719836\n\n---\nCommit 6d6dda807 authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Fix an issue where plugin/Executor backend is used by default when TF\nis built from source with XLA support. See Github issue #11122.\n\nThe priority of the executor backend is set to be higher than the default (50)\nand CPUs (<100), and is therefore selected as the default when tf.device is not\nexplicitly specified.\n\nPiperOrigin-RevId: 161717173\n\n---\nCommit 6b28eb084 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRename HloLocation to HloPosition, to avoid ambiguity with MemoryLocation.\n\nPiperOrigin-RevId: 161716528\n\n---\nCommit 8e7f57371 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExpose tf.contrib.nn.rank_sampled_softmax_loss.\n\nPiperOrigin-RevId: 161716450\n\n---\nCommit e424d209a authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Use a more numerically accurate formulation of ResourceApplyRMSProp.\n\nPiperOrigin-RevId: 161706120\n\n---\nCommit 45a58d378 authored by Skye Wanderman-Milne<skyewm@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIntroduce Python-only extensions to the C API\n\nImplements an incomplete version of Operation._add_control_input()\nusing a new extension to make sure the plumbing works.\n\nThis also adds header guards to c_api_internal.h, which were missing. For some reason the missing guards caused problems in the cmake build even though there doesn't appear to be any #include cycles.\n\nPiperOrigin-RevId: 161705859\n\n---\nCommit 4f5433634 authored by Jonathan Hseu<jhseu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRename TpuEstimator to TPUEstimator and TpuConfig to TPUConfig to follow PEP8\nnaming conventions.\n\nPiperOrigin-RevId: 161704561\n\n---\nCommit 38180d7bb authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nDisable nn_test on Windows (#11445)\n\n---\nCommit e1de7a1b0 authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nWindows Bazel Build: Build TensorFlow with wrapper-less CROSSTOOL (#11454)\n\n---\nCommit c9d03a568 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd tf.contrib.nn.rank_sampled_softmax_loss, a variant of tf.nn.sampled_softmax_loss that has been shown to improve rank loss. Paper: https://arxiv.org/abs/1707.03073\n\nPiperOrigin-RevId: 161702455\n\n---\nCommit 9aa0dcbf2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd shape check for MakeQuantileSummariesOp.\n\nPiperOrigin-RevId: 161698801\n\n---\nCommit 9c4da4a24 authored by vhasanov<KyotoSunshine@users.noreply.github.com>\nCommitted by Frank Chen<frankchn@gmail.com>:\nDeleted unnecessary repetition of the same text. (#11459)\n\nThe same text was repeated two times. I deleted the repetition.\n---\nCommit d1e3cadda authored by DimanNe<dimanne@gmail.com>\nCommitted by drpngx<drpngx@users.noreply.github.com>:\nFix linking options issued by bazel in oorder to make gradients register (#11449)\n\n---\nCommit 8605f7ab8 authored by Taehoon Lee<me@taehoonlee.com>\nCommitted by Frank Chen<frankchn@gmail.com>:\nFix typos (#11444)\n\n---\nCommit 7c1fe9068 authored by Karl Lessard<karllessard@users.noreply.github.com>\nCommitted by Frank Chen<frankchn@gmail.com>:\n[Java] Add base classes and utilities for operation wrappers. (#11188)\n\n* Add base classes and utilities for operation wrappers.\n\n* Rename Input interface to Operand\n\n* Introduce changes after code review\n\n---\nCommit 2195db6d8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused flag: xla_hlo_graph_for_compute_constant\n\nPiperOrigin-RevId: 161686867\n\n---\nCommit a72fc31bc authored by Martin Wicke<martin.wicke@gmail.com>\nCommitted by Martin Wicke<martin.wicke@gmail.com>:\nRemove tabs. Unassign contrib/framework.\n---\nCommit 6e74bd65a authored by Martin Wicke<martin.wicke@gmail.com>\nCommitted by Martin Wicke<martin.wicke@gmail.com>:\nAdd CODEOWNERS\n\nAdded what we know about contrib mainly, and some well-separated components.\n---\nCommit de546d066 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBUILD cleanup in tensorflow/compiler/...\n\nPiperOrigin-RevId: 161679855\n\n---\nCommit 576c7b1ec authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 161218103\n\nPiperOrigin-RevId: 161868747"""
0db5e75881a43de504b0a9e79ec4f4e36be36a10,'Print default when CUDA and CuDNN versions are not specified (#11460)\n\n\r\n* Print default when CUDA and CuDNN versions are not specified.\r\nFix #10456.'
7d5c426692ba03ebfd67afc03c967c594f036932,'update word2vec_basic.py (#11483)\n\nFix TSNE invocation in tutorials word2vec assignment'
d6082e09668a655ef6e4404fdbcad1224f29c2fb,"""Fix TSNE invocation in Udacity word2vec assignment (#11482)\n\nDefault TSNE method recently changed to the approximate `method='barnes_hut'` which fails to converge per https://github.com/tensorflow/tensorflow/pull/11455"""
8f2de3847fdab53926b940fee99d7b95e7dfc6c7,'TFTS: Re-enable pip GPU tests\n\nI believe these were fixed with cl/161157061\n\ntensorflow-cl-gpu-pip passing: https://ci.tensorflow.org/job/tensorflow-cl-presubmit-multijob/14043/\n\nPiperOrigin-RevId: 161729658'
6d6dda807c539efd59f074ef02d52e0140480c1c,"'[TF:XLA] Fix an issue where plugin/Executor backend is used by default when TF\nis built from source with XLA support. See Github issue #11122.\n\nThe priority of the executor backend is set to be higher than the default (50)\nand CPUs (<100), and is therefore selected as the default when tf.device is not\nexplicitly specified.\n\nPiperOrigin-RevId: 161717173'"
d1e3cadda53f7e3eab4785f6b47257ff044e9afd,'Fix linking options issued by bazel in oorder to make gradients register (#11449)'
8605f7ab8e0b0907c881096fad5d6622a4014df7,'Fix typos (#11444)'
14f7d7f275ad4c3ae015b97b35340826860d980f,'Fix lint errors in ops.py and ops_test.py\n\nPiperOrigin-RevId: 161598138'
8e82134acd68c313f0ecadb168a66916006b17a6,"""Use C API to implement Operation._input_types\n\nThis change first converts _input_types into a property and renames the\nmember to _input_types_val. We keep _input_dtypes as an alias for\n_input_types as it was before this change.\n\nSimilarly to _output_types, we can't enable normal tests yet. Instead,\nwe add a simple temporary test for _input_types.\n\nAlso, fix two minor typos in doc strings of function.py\n\nPiperOrigin-RevId: 161597185"""
cbe1ef05fff2d4fbd0ecc8f3a2c3a3a0f0dc312d,'Add missing deprecation warnings.\n\nFixes #11422\n\nPiperOrigin-RevId: 161581508'
cec2d2206ab050de0aa660af14ba237660f10075,"""Fix unpickling/copying tf.app.flags.FLAGS (#11437)\n\npickle.load() and copy.copy() check for the presence of  __setstate__().\r\nThe problem is that this check is made in the freshly allocated instance which\r\nhas not been __init__()-ed. Thus it's __dict__ is completely empty and\r\n__getattr__() fail with KeyError.\r\n\r\nThe fix is to check if __parsed is in the __dict__ and raise\r\nAttributeError if it isn't."""
1de8cce6643bb75edd1441fa01ffb6a0e5258c5f,"'fix #11372, #11396\n\nPiperOrigin-RevId: 161569039'"
9508b252b6b9508a6ff42856f562067f7d6c0802,'Fix secure urls and typos (#11423)\n\n* Fix secure urls\r\n\r\n* Fix typos\r\n\r\nCorrect Python code to conform to Google Python Style Guide\r\nRemove extra period in sentence'
b1f9e2c89eb007cb4b9483d08dcace1e45e84164,"'Add an axis parameter to tf.gather. Fixes GitHub issue #11223.\n\nThis brings tf.gather closer to compatibility with numpy.take.\n\nTo emulate gathering over an axis generally requires inefficient workarounds, e.g. transpose/gather/transpose. This technique is gaining popularity (hundreds of uses inside and outside of Google), so it is worth supporting efficiently.\n\nFor an `[a_0, ..., a_i, ..., a_n]` tensor, gathering `N` elements from axis `i` requires `(a_0*...*a_i-1) * N` copies of `(a_i+1 * ... * a_n)` elements each. The CPU kernel does this with memcpy which is far more efficient than transpose/gather/transpose since it requires no intermediate allocations and copies. The GPU kernel does the same number of copies but in parallel across multiple hardware threads.\n\nSince this is a backwards incompatible change, this adds a ""GatherV2"" op with an axis input, and simultaneously supports backwards compatibility with ""Gather"" ops by defaulting to axis 0 if a 3rd input is not present.\n\nPiperOrigin-RevId: 161541416'"
ba45775be000f0923ae620fff6760f15ca56dc53,'[TF:XLA] Fix copy-and-paste bug in CHECK statement.\n\nPiperOrigin-RevId: 161527685'
7f008453ca1c7b11f23eaa2324b8efefa5cc4849,'Merge pull request #11153 from yongtang/6749-sparse_placedholer\n\nFix sparse_placeholder error when int is passed in shape argument'
d0244ba94ceb2b1f1d41d17d82cf23d0bed08898,'Merge commit for internal changes\n\nFixed conflicts:\n\ttensorflow/core/BUILD\n\ttensorflow/core/kernels/fixed_length_record_reader_op.cc\n\ttensorflow/core/ops/ops.pbtxt\n\ttensorflow/docs_src/programmers_guide/version_semantics.md\n\ttensorflow/python/kernel_tests/cwise_ops_test.py\n\ttensorflow/tools/dist_test/python/mnist_replica.py\n\tthird_party/lmdb.BUILD\n\tthird_party/snappy.BUILD\n\tthird_party/zlib.BUILD'
90d6421c5e0898fb840197d9533c2f8ba1a7c651,"""Merge changes from github.\nEND_PUBLIC\n\n---\nCommit d0f53f77f authored by Penghao Cen<scorpiocph@gmail.com>\nCommitted by Shanqing Cai<cais@google.com>:\nMinor fix typo (#11323)\n\n---\nCommit 02fcf564e authored by Chris Song<sjhshy@gmail.com>\nCommitted by Chris Song<sjhshy@gmail.com>:\nFix misspells.\n\n---\nCommit 764c9b6b4 authored by Louis Tiao<ltiao@users.noreply.github.com>\nCommitted by GitHub<noreply@github.com>:\nFixed typo in docstring\n---\nCommit f8cd1283e authored by Shanqing Cai<cais@google.com>\nCommitted by Shanqing Cai<cais@google.com>:\nChaser\n\n---\nCommit 01383b946 authored by Shanqing Cai<cais@google.com>\nCommitted by Shanqing Cai<cais@google.com>:\nAdapt TensorFlowTestCase.setUp() to new reset_default_graph() semantics\n\nAvoid calling reset_default_graph() directly to prevent exceptions in\ncases where test methods error out from within nested graph contexts,\nwhich can leave _default_graph_stack non-empty in certain Python\nversions.\n\n---\nCommit 0ffc37890 authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nRemoving second declaration of functions.\n\n---\nCommit f9c9cacb0 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRefactor ElementalIrEmitter's slice index finding code into\nIrArray::Index::SourceIndexOfSlice().\n\nPiperOrigin-RevId: 161140653\n\n---\nCommit ba297aec9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 161138258\n\n---\nCommit 68d666737 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixes a reentrant lock issue with tensors using ndarray memory which uses tensor memory.\n\nPiperOrigin-RevId: 161137788\n\n---\nCommit a2ee8bca3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd support for int8 x int8 -> int32 matrix multiplication via cublasGemmEx to stream_executor.\n\nPiperOrigin-RevId: 161137741\n\n---\nCommit 755fa7b50 authored by Mark Daoust<markdaoust@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBlock generate_test, and docs generating from running in python3.\n\n- Doc generation is currently unsupported in python3\n\n- These both end in errors in python 3.5.1+\n\nPiperOrigin-RevId: 161137467\n\n---\nCommit 97cbcac45 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Fix failure in functionalize_control_flow rewrite for Enter nodes that are unused. Make sure we ignore such nodes without producing an error.\n\nPiperOrigin-RevId: 161136545\n\n---\nCommit dabcb60bc authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add reasonable error messages to Builder::Build for bad parameter numbers.\n\nPiperOrigin-RevId: 161136262\n\n---\nCommit 0cbd249e8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd complex tensors support to `matrix_determinant`.\n\nPiperOrigin-RevId: 161132422\n\n---\nCommit 335f1f14d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtend static shape inference for SparseTensors with dense_shapes constructed using slicing.\n\nPiperOrigin-RevId: 161132391\n\n---\nCommit 53604916e authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixed the missing labels test in TPUEstimator.\n\nPiperOrigin-RevId: 161131282\n\n---\nCommit 9f57dc8dd authored by Bruno Rosa<bruno.rosa@eldorado.org.br>\nCommitted by Bruno Rosa<bruno.rosa@eldorado.org.br>:\nUse mcpu instead of march for ppc64le\n\nmarch is not support by gcc on ppc64le\n\n---\nCommit 7d5c74a9c authored by Skye Wanderman-Milne<skyewm@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMove duplicate detection logic from Graph to FunctionLibraryDefinition\n\nTurns out this is more useful, since there are many function libraries\nthat don't belong to a graph. This will be used in a future\nchange. Note that this maintains the current behavior of Graph.\n\nIn addition, updates FunctionDefsEqual() to handle unset attr entries\n(I ran into this when using this in said future change).\n\nPiperOrigin-RevId: 161126628\n\n---\nCommit 2caec3af1 authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDisable more timeseries py tests failing in OSS PIP GPU builds\n\nPiperOrigin-RevId: 161124799\n\n---\nCommit 0b5cce367 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGet TopK op working on GPU again.  Extend using cub's radix sort.\n\n1. Undo rollback of Andreas Kirsch's initial implementation.\n2. Use cub segmented radix sort if Andreas' heap-based impl\n   for large k and small num_cols (thresholds of k=100, n=1000\n   determined empirically).\n3. Use cub segmented radix sort if k == num_cols (this case is always faster).\n4. Added benchmarks.\n\nBenchmarks show that the GPU implementation is up to 3x slower for small k but\ncan be 10x faster for large num_cols and k.\n\nBenchmarks:\n\nBenchmark: m_128_n_10_k_5_use_gpu_False          wall_time: 0.000166 s   Throughput: 0.0077 GB/s\nBenchmark: m_128_n_10_k_5_use_gpu_True   wall_time: 0.000796 s   Throughput: 0.00161 GB/s\nBenchmark: m_128_n_10_k_9_use_gpu_False          wall_time: 0.00017 s    Throughput: 0.00751 GB/s\nBenchmark: m_128_n_10_k_9_use_gpu_True   wall_time: 0.000796 s   Throughput: 0.00161 GB/s\nBenchmark: m_128_n_10_k_10_use_gpu_False         wall_time: 0.00017 s    Throughput: 0.00753 GB/s\nBenchmark: m_128_n_10_k_10_use_gpu_True          wall_time: 0.000775 s   Throughput: 0.00165 GB/s\nBenchmark: m_128_n_100_k_1_use_gpu_False         wall_time: 0.000155 s   Throughput: 0.0826 GB/s\nBenchmark: m_128_n_100_k_1_use_gpu_True          wall_time: 0.000796 s   Throughput: 0.0161 GB/s\nBenchmark: m_128_n_100_k_50_use_gpu_False        wall_time: 0.000247 s   Throughput: 0.0519 GB/s\nBenchmark: m_128_n_100_k_50_use_gpu_True         wall_time: 0.0008 s     Throughput: 0.016 GB/s\nBenchmark: m_128_n_100_k_99_use_gpu_False        wall_time: 0.000261 s   Throughput: 0.049 GB/s\nBenchmark: m_128_n_100_k_99_use_gpu_True         wall_time: 0.000794 s   Throughput: 0.0161 GB/s\nBenchmark: m_128_n_100_k_100_use_gpu_False       wall_time: 0.000239 s   Throughput: 0.0536 GB/s\nBenchmark: m_128_n_100_k_100_use_gpu_True        wall_time: 0.000777 s   Throughput: 0.0165 GB/s\nBenchmark: m_128_n_1000_k_1_use_gpu_False        wall_time: 0.000324 s   Throughput: 0.395 GB/s\nBenchmark: m_128_n_1000_k_1_use_gpu_True         wall_time: 0.000916 s   Throughput: 0.14 GB/s\nBenchmark: m_128_n_1000_k_10_use_gpu_False       wall_time: 0.00042 s    Throughput: 0.305 GB/s\nBenchmark: m_128_n_1000_k_10_use_gpu_True        wall_time: 0.000902 s   Throughput: 0.142 GB/s\nBenchmark: m_128_n_1000_k_500_use_gpu_False      wall_time: 0.0011 s     Throughput: 0.116 GB/s\nBenchmark: m_128_n_1000_k_500_use_gpu_True       wall_time: 0.00097 s    Throughput: 0.132 GB/s\nBenchmark: m_128_n_1000_k_990_use_gpu_False      wall_time: 0.00133 s    Throughput: 0.0962 GB/s\nBenchmark: m_128_n_1000_k_990_use_gpu_True       wall_time: 0.000993 s   Throughput: 0.129 GB/s\nBenchmark: m_128_n_1000_k_1000_use_gpu_False     wall_time: 0.00102 s    Throughput: 0.126 GB/s\nBenchmark: m_128_n_1000_k_1000_use_gpu_True      wall_time: 0.000964 s   Throughput: 0.133 GB/s\nBenchmark: m_128_n_10000_k_10_use_gpu_False      wall_time: 0.002 s      Throughput: 0.64 GB/s\nBenchmark: m_128_n_10000_k_10_use_gpu_True       wall_time: 0.00288 s    Throughput: 0.445 GB/s\nBenchmark: m_128_n_10000_k_100_use_gpu_False     wall_time: 0.00233 s    Throughput: 0.549 GB/s\nBenchmark: m_128_n_10000_k_100_use_gpu_True      wall_time: 0.00325 s    Throughput: 0.394 GB/s\nBenchmark: m_128_n_10000_k_5000_use_gpu_False    wall_time: 0.0127 s     Throughput: 0.101 GB/s\nBenchmark: m_128_n_10000_k_5000_use_gpu_True     wall_time: 0.00381 s    Throughput: 0.336 GB/s\nBenchmark: m_128_n_10000_k_9900_use_gpu_False    wall_time: 0.015 s      Throughput: 0.0853 GB/s\nBenchmark: m_128_n_10000_k_9900_use_gpu_True     wall_time: 0.00438 s    Throughput: 0.292 GB/s\nBenchmark: m_128_n_10000_k_10000_use_gpu_False   wall_time: 0.0104 s     Throughput: 0.123 GB/s\nBenchmark: m_128_n_10000_k_10000_use_gpu_True    wall_time: 0.00427 s    Throughput: 0.3 GB/s\nBenchmark: m_128_n_100000_k_100_use_gpu_False    wall_time: 0.0148 s     Throughput: 0.865 GB/s\nBenchmark: m_128_n_100000_k_100_use_gpu_True     wall_time: 0.0262 s     Throughput: 0.488 GB/s\nBenchmark: m_128_n_100000_k_1000_use_gpu_False   wall_time: 0.0201 s     Throughput: 0.636 GB/s\nBenchmark: m_128_n_100000_k_1000_use_gpu_True    wall_time: 0.0263 s     Throughput: 0.486 GB/s\nBenchmark: m_128_n_100000_k_50000_use_gpu_False          wall_time: 0.214 s      Throughput: 0.0599 GB/s\nBenchmark: m_128_n_100000_k_50000_use_gpu_True   wall_time: 0.0322 s     Throughput: 0.398 GB/s\nBenchmark: m_128_n_100000_k_99000_use_gpu_False          wall_time: 0.262 s      Throughput: 0.0489 GB/s\nBenchmark: m_128_n_100000_k_99000_use_gpu_True   wall_time: 0.0377 s     Throughput: 0.34 GB/s\nBenchmark: m_128_n_100000_k_100000_use_gpu_False         wall_time: 0.118 s      Throughput: 0.108 GB/s\nBenchmark: m_128_n_100000_k_100000_use_gpu_True          wall_time: 0.0365 s     Throughput: 0.351 GB/s\n\nEND_PUBLIC\n\nBEGIN_PUBLIC\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 157169178\n\nPiperOrigin-RevId: 161476569"""
aa239529c47c09599d1085791fc849f03efbddfe,"'[XLA] Fix bugs and incomplete comment in reduce_precision_test.cc.\n\nWe want a bitwise or, not bitwise and, to add in the sign bit.  This was previously just creating zeros instead of negative test values.\n\nPiperOrigin-RevId: 161473273'"
8905db7881d9118b0267ac948092e56a63cd680e,'Fixed crash in graph summarization tool\n\nPiperOrigin-RevId: 161452440'
5397130e5fdff8e783cf677a0fdaf2c8f4b5b142,'Fix bug with graph_replace on graphs with gradients. Added a test to verify the fix.\n\nPiperOrigin-RevId: 161452438'
e3d1bdb330819fba07923e6c5ae639e0b5efb28d,'Merge pull request #11412 from andykernahan/wav-fixes\n\nWAV encoding/decoding fixes.'
e121535a7d04cfc7c7dbb09d8694c01eb29da26f,'Correct elu grad grad.\n\nFixes issue #11091\n\nPiperOrigin-RevId: 161427084'
30293f75348ec7df83197d1c9743a44dfc21c75a,'Merge pull request #11409 from jbedorf/mpiFix\n\nMPI path updates'
26afdf7c3110a1a81a0b53f2db4f7de09b1af0b8,'Merge pull request #11400 from brettkoonce/folder_fix\n\nupdate folder link in docs'
13e4b3420f347421021a2e148aeaf936bd169184,'Merge pull request #11410 from guillaumekln/patch-1\n\nFix minor docstring formatting issue'
894aac266b7d3825f32a2cfc49b0cb994d2238ec,"""Fix SliceHelper _baseslice case to use the same dtype for begin and strides.\n\nUsing '1' automatically gets converted to int32, but when the user explicitly\nuses an int64 for the 'begin' argument, we want to make sure that 'strides'\nis of the same dtype, so we make sure we use a 1 of the proper dtype.\n\nAdds a test that failed before and passes with this change.  Also\ntested the indexing case in addition to the _baseslice case, and added\ntests for both 'begin' as a Tensor as well as a non-Tensor.\n\nFixes #11380.\n\nRELNOTES: Fixes 'strides' and 'begin' dtype mismatch when slicing using int64 Tensor index in python. See #11380.\nPiperOrigin-RevId: 161411479"""
59595ff9a88e2f0a826d988d7336bd6c158add23,'[XLA] Ensure that the 2 data types chosen by the test are both valid for the device (#11172)\n\n* Ensure that the 2 data types chosen by the test are both valid for the device\r\n\r\n* Include a comment about the test\r\n\r\n* Fix punctuation in comments throughout.\r\n\r\n* Relax the regular expression matching for the exception'
792685e91054301931131d6246ea2b31ea6cba9e,'Fix output type of IOUGreaterThanThreshold to be bool.\n\nPiperOrigin-RevId: 161404589'
b8e6bc701240ac76acf7fe35a1487564cc8689d5,'Debugger.md: Fix missing line breaks\n\nPiperOrigin-RevId: 161401043'
d63e799a75db89b7cabadbd3f82bfb9a4ea20a61,"'Fixes default value handling of the desired_{samples,channels} attributes.'"
48986f20fb27e04e0925ae44615729a9472704a9,'Fixes WAV encoding/decoding for multi-channel data.'
b6becb44dd1a4494aa7c3acbb6961d23900f614b,'Fix tensorforest for using sparse-only data.\n\nPiperOrigin-RevId: 161396592'
3d4708dad0a3ef52775a4f0e0de8ccbfc16434e0,'Fix minor docstring formatting issue'
d1b931faca4dcf99ec655feb7497e327b188cb65,"""Merge branch 'master' into mpiFix"""
9fec6009f114eba319355dd07489900e5baed6dc,'- Fix the mixup of replica and task-IDs\n- Clean-up and simplified received tensor selection call-map'
a5066f62b8743555c9f5bf634120a936b509c03b,'Merge pull request #11402 from taehoonlee/fix_typos\n\nFix typos'
bdabccd483a3ec5db66107239066ffea6faa085b,'Fix typos'
d22c433216254d2e6ab33a849f922b4545d1f7dd,'Fix typos in comments.\n\nPiperOrigin-RevId: 161305803'
75f56f0bd68f36c3bf388e61a9b774364b1b11ba,'Merge pull request #11378 from caisq/tfts-fix\n\nDisable more timeseries py tests failing under GPU PIP'
dc07426d5c25e7bf87f53b6536e74d8ee01ca2e8,"""Fix FunctionDefsEqual to handle multiple attributes.\n\nThe fix is to change StringPiece to string in our temporary maps, since the\nbacking memory for the StringPiece was actually dead by the time we used the\ntemporary maps.\n\nNote that FunctionDef::attr() is a proto2::Map, which has a value_type that\nbehaves similarly to std::pair.  Here's a re-written snippet of the original\nGetSetAttrs code, which makes the bug more apparent:\n\n  std::map<StringPiece, AttrValue> GetSetAttrs(const FunctionDef& fdef) {\n    std::map<StringPiece, AttrValue> attrs;\n\t  for (std::pair<string, AttrValue> pair : fdef.attr()) {\n\t\t  attrs[pair.first] = pair.second;\n\t  }\n\t\treturn attrs;\n\t}\n\nThe problem is that the `pair` that captures each entry of fdef.attr() creates a\ncopy of the underlying string, and we're converting that into a StringPiece.\nThe underlying memory for the string is dead on each iteration of the loop.\n\nI've also added a test that fails with the old implementation, and passes with\nthe new implementation.\n\nPiperOrigin-RevId: 161265130"""
305712c02e70bc860812e7c151a3842f028cacb1,"'More WhereOp/TopK GPU bugfixes: use the direct cuda stream for CUB GPU kernel.\n\nTurns out using the StreamInterface objects leads to ""invalid resource handle""\nerrors, so we have to use the cudaStream_t directly.  This change is based on\nsimilar code in cuda_solvers.cc.\n\nPiperOrigin-RevId: 161261085'"
204c367ab1a38cee71dac2a64164e96abaeffbf2,"""Fix KeyError when looking for 'softmax_tensor' in the layers tutorial.\n\nPiperOrigin-RevId: 161247019"""
07adc2ea910de715d31e16a019fcbcccb575e931,"'Fixed initialization of variables: when a variable w is initialized with the\nvalue of another variable v, make sure that the initializer of v is run first.\n\nPiperOrigin-RevId: 161226052'"
b82b18ee5e532151cd65f7e5aea74ca73c0ccb18,'add h5py to dockerfile (#11360)\n\n* add h5py to dockerfile\r\n\r\n* alphabetical ordering of list\r\n\r\n* Further alphabetical order fix\r\n\r\n* Further alphabetical order fix.'
bef67104a0da34b6cac0d801168f2e42a1ab7921,'Merge pull request #11340 from caisq/reset-graph-fix\n\nAdapt TensorFlowTestCase.setUp() to new reset_default_graph() semantics'
81e81b796dd40a8294d166eb457e609aaedb4540,'Fix dependencies and import statements for predictor module.\n\nPiperOrigin-RevId: 161203536'
aee58d07201e6cd247cd367ca34973c6d8611564,'Delete merged docs\n\n`versioning_semantics` and `data_versioning` have been into `version_compat`\n\nAlso fix all links to the old docs.\n\nPiperOrigin-RevId: 161203112'
d0f53f77fbed8506dd3a3fe23ea8e9ac0028a577,'Minor fix typo (#11323)'
37d00efb0a9b70c3aced4f4e6ae3dbbe38a9e0d8,'Merge pull request #11349 from chris-chris/patch/170707-misspell\n\nFix misspells :)'
d223e0105a0fb0eaf8c4f5da4dda659a5dc8848e,'Merge pull request #11342 from ltiao/patch-1\n\nFixed typo in docstring'
638aa8d7b7aa8fa15f745bf786b873408e416a54,'fix path to saved model constant in docs.\n\nPiperOrigin-RevId: 161195442'
4e0f4e462f80e2dc84aa38da3fbc39cb15da3482,'[TF:XLA] Fix crash in graph_to_functiondef.cc if there was a control dependency onto a _Retval node.\n\nMove graph_to_functiondef_test into its own BUILD target.\n\nPiperOrigin-RevId: 161193674'
02fcf564eaaab9597281db579847b4c053c9f9a7,'Fix misspells.'
764c9b6b44c82ef7cf9bf2da20a4bd859b676ca9,'Fixed typo in docstring'
b51d27575abccff83e540059ff0e9c5eb1773584,'Merge pull request #11211 from yongtang/07012017-link\n\nFix broken link for reader_base.proto'
ba05c8602ffd7011ef75eab99a965192aae4030f,'Merge pull request #11319 from yorkie/master\n\nc: fix a possible segmentfault'
5ff65ca53d37bf7fbc25e559a3b164796e9e7d05,'Bugfix for https://github.com/tensorflow/models/issues/1050\n\nWhen a layer undergoes a deep copy; any internal object that contains tensors\ngets moved over shallowly.  Fixes a bug where trained layers whose attributes\ncontain Tensors break in legacy_seq2seq code.\n\nPiperOrigin-RevId: 161158127'
3926a3aca125c42987adc602a5cb006d97b0261e,'TFTS: Fix race conditions in adaptive statistics.\n\nSwitches variables to ResourceVariables. Existing control dependencies are then\nsufficient for preventing single-machine race conditions.\n\nPiperOrigin-RevId: 161157061'
eb8bebd6709374dc6961e350d9988b8c15b42d31,"'Fix ValueError(""None values not supported."") in the Abalone tutorial.\n\nPiperOrigin-RevId: 161143481'"
68d666737012dc35cbfc9b7e4bdfac7f027ebf35,'Fixes a reentrant lock issue with tensors using ndarray memory which uses tensor memory.\n\nPiperOrigin-RevId: 161137788'
97cbcac4535de361d0f04d5b30e9653e3b229c94,'[TF:XLA] Fix failure in functionalize_control_flow rewrite for Enter nodes that are unused. Make sure we ignore such nodes without producing an error.\n\nPiperOrigin-RevId: 161136545'
53604916ed2acbe931d7773a6f6edcfc191956e5,'Fixed the missing labels test in TPUEstimator.\n\nPiperOrigin-RevId: 161131282'
43a122beb6a7e8ad4f9e6985e2c87309bf881ea6,"'[XLA] Add scaffolding to allow XLA unit tests to run for other devices (#11262)\n\n* Add scaffolding to allow XLA unit tests to run for other devices\r\n\r\n* Remove poplar, and add as an example\r\n\r\n* Change the example to be less poplar specific\r\n\r\n* Fix indent.'"
87d86dbbf4eadf1f7be414d1192cd5ef72db6026,'[XLA] Fix crash in algebraic simplifier when sinking a reshape-to-scalar after an elementwise operation.\n\nThe test case in the change previously failed with:\nalgebraic_simplifier.cc:1091] Check failed: user->operand(reshape_or_broadcast_operand_index) == reshape_or_broadcast\n\nPiperOrigin-RevId: 161121259'
b87774c9d8f0eae067bd65793f52f90f0b2d8228,"'[TF:XLA] Remove flag --xla_enable_buffer_reuse.\n\nThe corresponding issues have been fixed, so this should not be needed anymore.\n\nPiperOrigin-RevId: 161120874'"
e7bcc0cdbe437937530a8072ce3fab264de44551,'Merge pull request #11161 from Kongsea/master\n\nFix an error'
583497f167d2811eacaa390938c2a059139c0057,"'Fix ongoing breakages in pip builds\n\n1. CL/161014271 added timeseries to tensorflow, but did not add the files to the TensorFlow pip package, resulting in Jenkins test errors: e.g., http://ci.tensorflow.org/job/tensorflow-cl-cpu-python3-pip/9269/console\n\n2. Fix numpy issues related to using float as size args, which is illegal in some recent versions of numpy.\n\n3. The tensorflow/contrib/boosted_trees py_tests are not working in the pip (specifically bazel_pip) builds. Disable them in pip builds for now after filing b/63386583.\n\nPiperOrigin-RevId: 161097246'"
958812c60d90974b54fa37015215e65d82822964,'Merge pull request #11276 from drasmuss/layer_leak\n\nFix memory leak when using `tf.layers`'
3bcc9b634835140d749f5e2a89c3944b882d41c5,'Merge pull request #11322 from lukeiwanski/opencl/MapStageOp\n\n[OpenCL] Fixes SYCL registration for MapStageOp (#117)'
4de7361c43adc65c442359104a17c449a02eee7a,'Fix some internal tests.\n\nPiperOrigin-RevId: 161093488'
9cf44446550b6d2c3141074013509875649b0fd5,"""Bugfixes for GPU WhereOp.\n\n1. Set the cuda context properly within ComputeAsync.\n   Also set the cuda context properly in the WhereOp GPU callback.\n2. Ensure report_uninitialized_variables runs on CPU.  This avoids intermediate\n   copying of data to GPU after getting the variables' state and before\n   returning it.\n\nPiperOrigin-RevId: 161092040"""
a75496f74cad8c6bd25ee4c6c17d3f52199b2fe8,"""BUGFIX:  Affine bijector didn't work in 64bit because some constants needed to be cast to correct dtype.\n\nPiperOrigin-RevId: 161089149"""
de2a2df5310880607017b461b40a43f418de0ba6,'Fix the broken image in the tf/extend/estimators tutorial.\n\nPiperOrigin-RevId: 161086959'
c0f475b03eeca19b217527f7946da837e8438e27,'[XLA] Add support for tuple constants via a rewrite that replaces constant tuples with tuples of non-tuple constants.\n\nFix crash in HloInstruction::ToString() for tuple constants.\n\nPiperOrigin-RevId: 161085252'
32de8d33177d6f46c7ecd06363bd492194341731,'[XLA] Propagate debug_options in ComputationStatsRequest\n\nAnd fix graph dumping tools to add graph dumping options automatically.\n\nPiperOrigin-RevId: 161082718'
14101a8ba173b44179b2a9317781f140eb61b0a1,'Fix TensorForest for 32-bit platforms.\n\nPiperOrigin-RevId: 161077247'
c7ddd7b1ddb944442d39b02930bd71ea27d0161a,'Fix regexp so that it matches the tensor name.\nFix typo.\n\nPiperOrigin-RevId: 161077098'
f3a391e7adadfce686505a19bb8da262d86769cb,'Update documentation for tf.gather_nd and fix links to tf.scatter_nd.\n\nPiperOrigin-RevId: 161077059'
875d85a113db182777c8b51d8a0589b3d6b52e00,'Fix formatting of codeblocks in supervisor documentation\n\nPiperOrigin-RevId: 161063715'
bc45f6930e49432aa29ca2ba53dc23e7d338b57d,"""[OpenCL] Fixes SYCL registration for MapStageOp (#117)\n\n* [OpenCL] Fixes SYCL registration for MapStageOp\r\n\r\nAs the MapStageOp is actually run on the host, we need to ensure that\r\nboth the 'key' and 'indices' tensors are in host memory. This now\r\nmirrors what CUDA is doing.\r\n\r\n* [OpenCL] Fixes device name comparison map_stage_op_test\r\n\r\nChanges the expected device name string, as the device name could be\r\n'/device:SYCL:0' or '/device:GPU:0'.\r\n\r\nThe CUDA device name reported by test_util is in the form '/gpu:0',\r\nwhile the device name used in the nodes looks like '/device:GPU:0'. When\r\nrunning on CUDA we need to change the expected device name accordingly,\r\nhowever this isn't a problem on SYCL."""
8dd5441b18b63e12d7b049e1e5eabb946c9c4d0a,'c: fix a possible segmentfault'
66604b0355b32961f9a532792be2e008cc22221f,"'Allow repeated specification of a node to be fetched in Session::Run\nimplementations (DirectSession, GrpcSession).\nMy understanding is that the spec of Session::Run (as defined by comments\nin tensorflow/core/public/session.h) does not disallow repeated output node\nnames.\n\nAdded tests fail with uninitialized or empty Tensors without the\ncorresponding changes to the .cc files.\n\nThis fixes #11132.\n\nPiperOrigin-RevId: 161041177'"
41bc76d28b8b301c546cc5624abd37fd8b97b64c,"'Allow callables from Session.make_callable() to take RunOptions and RunMetadata\n\ntfdbg: support Session.make_callable()\n\nexcept invoke_stepper, which is left unimplemented in this CL.\n\nTo this end, a new kwarg `accept_options` is added to Session.make_callable(). The kwarg is a boolean that defaults to False. If set to True, it will return a callable that accepts the kwargs `options` and `run_metadata` that have the same semantics as `tf.Sessoin.run`.\n\nFixes #11017\n\nPiperOrigin-RevId: 161031380'"
ee4259a271f56a32f046cb840215f1370acaf186,'Fixes to the getting started documentation (#11154)\n\n* Update get_started.md\r\n\r\n-Streamlined python code\r\n-Corrected outputs for example python code\r\n-Corrected nonworking python example code\r\n\r\n* Update get_started.md\r\n\r\nMinor grammare fix\r\n\r\n* Update beginner.md\r\n\r\nMade explicit https calls\r\n\r\n* Update get_started.md\r\n\r\nFixed something that might have failed the macOS test\r\n\r\n* Keep the `dtypes`\r\n\r\nThis way it stays in sync with the upper part of the file.'
64b628bfbef9bf8be983aef35aa59bc35d703be6,'fix link to SessionRunHook\n\nPiperOrigin-RevId: 161026529'
3f099e7d7f1c8b8d3f4121357fc7c40391f9eafe,'tfdbg: send large Tensor Event protos through gRPC stream in chunks\n\nAlso fixes flakiness in session_debug_grpc_test\n\nPiperOrigin-RevId: 161025848'
eccd162119675d0bf5bc6f8e6a93dcda7ab6db4a,'Fix moments calculation to never result in negative variance and avoid\ndoing extra work when shift = None.  With the current calculation shift is\nignored.\n\nPiperOrigin-RevId: 161003939'
8ddd4687e40edc01971349aa3ae7ccca7cd70030,'Fix multioutput fusion test case.\n\nPiperOrigin-RevId: 160971944'
3a64879a86e46908ad90a387efe56ad32be61e94,'fix beam search for windows and enable seq2seq unit tests (#11298)'
46b3fc62de853c3fff658b3b6d9ef472bac0c16a,'Fix typos (#11288)'
129b39e916cf6e3076f8a03b1d6277f5f7ecd166,'Fix #11152: Adding import for pythons threading library (#11226)'
ad20e176e0c5fb36f142b739c823a00cb89225c3,"""Fix memory leak when using `tf.layers`\n\nUses `weakref` so that PER_GRAPH_LAYER_NAME_UIDS doesn't prevent Graphs from being garbage collected.\n\nFixes #11273"""
7c5dacf33e9bb139fd01fe0c8795ca0048adf84e,'Fix TODO avoiding serialization in gRPC/GPU path'
1e48740b8793feda7cc67db3ba26299ba868b867,"'[OpenCL] Fixes warning caused by half type (#11177)\n\n* [OpenCL] Fixes warning caused by half type\r\n\r\n  - half requires opencl extension that might not be avaiable on all platforms\r\n  - extends cast operation to cover int8, int16, uint8, uint16\r\n\r\n* Fixed typo\r\n\r\n* Fixes formatting'"
31b439dca7b8fcab600daac8923963967734dced,'[OpenCL] Fixes transpose operation (#11176)'
5142213e88b8c04e02c5f940e2840b959ff9b142,'install cub under external/cub_archive to fix windows gpu build (#11246)'
65cc717f14d91da5cdd79b461eacda75b3c7ecf0,'Merge pull request #11191 from skaarthik/mnistdistfix\n\nfix incorrect usage of num_gpus & num_workers (#7312)'
afa03e2fd91a2d4a7dc960c5ec4ee448c808d026,'Fix typos (#11166)'
fad6cc605436451dad498e54c9718b4d3d096f89,"""[OpenCL] Fixes device name comparison stage_op_test  (#10760)\n\n* [OpenCL] Fixes device name comparison stage_op_test\r\n\r\nChanges the fixed '/device:GPU:0' expected device name string to the\r\nname returned by 'test/gpu_device_name()', as the device name could be\r\n'/device:SYCL:0' or '/device:GPU:0'.\r\n\r\n* [OpenCL] Fixes testing of CUDA device name\r\n\r\nThe CUDA device name reported by test_util is in the form '/gpu:0',\r\nwhile the device name used in the nodes looks like '/device:GPU:0'. When\r\nrunning on CUDA we need to change the expected device name accordingly,\r\nhowever this isn't a problem on SYCL."""
a204938b931ccf9b8ea6bfed7c9e7c8fceac4798,'Fix broken link for reader_base.proto\n\nThis fix fixes broken links for reader_base.proto in version_compat.md and version_semantics.md:\n`tensorflow/core/kernels/reader_base.proto -> tensorflow/core/framework/reader_base.proto`\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
5467b44c6144c5cc97a85f4ff0bdc1d8c0c5fb31,'fix_typo of map_structure doc (#11206)'
0261a4f1c95260446d82bd011c9e97bb6b233bce,'Merge pull request #11204 from lakshayg/fix_typo\n\nfix typo: SYC -> SYCL'
8051221686e2942f32740355deea84fd8e39322c,'fix typo: SYC -> SYCL'
c805dc197f8a7ef9ca43e1140a713f0905d87dc3,'[TF:XLA] Fix open source build.\n\nPiperOrigin-RevId: 160714466'
9c887941d52fe9a3e5d7da3efb30639e89228f0c,'Fix tf.extract_image_patches documentation.\n\nFixes #5770\n\nPiperOrigin-RevId: 160696796'
679bb02274de245c3ce00d2229081010c656dc3c,"'Fixed 404 page in the docs (install_c.md) (#11173)\n\nWhen following the current link to `c_api.h` the link will results in a 404 page, see: https://github.com/tensorflow/tensorflow/tree/master/c/c_api.h'"
f8fc078a4ec357abbe5cb8c6bc4b4c2f546e31e6,'CPU Infeed: Tuple support\nGPU Infeed: Cleanups and fix TransferBufferToInfeed\n\nPiperOrigin-RevId: 160612256'
62041cb51a30826153ac0f20f63cf48e32d96c6b,'Fix an error\n\nFix an error or the condition will never be true.'
4404efb7fecbb4a68f273c5a66705e20dc90ba93,'Fix comment on squared hellinger / triangular divergences.\n\nPiperOrigin-RevId: 160598523'
1c27162649359e5fabade5f806ef851401ec2f1e,"'Clean up cuda configuration:\n- Remove experimental attributes (remote_config_repo). Use of experimental remote repo can only be enabled now via env variable (preferred to change to workspace file)\n- Fixes minor issues with template: adds spaces to srcs in genrule, remove extra space after genrules.\n- Fix ordering of attributes in build template\n\nPiperOrigin-RevId: 160595014'"
ef7d78ff3d80c1e6e4332c75c4b89d177e861932,'Fix typos (#11125)'
7ccfbdffde54d11bc8fad4b49fde53cf2b550434,"""Clean up python configuration:\n- Remove experimental attributes (local_checks, python_include, numpy_include, remote_config_repo). Use of experimental remote repo can only be enabled now via env variable (preferred to change to workspace file)\n- Fix hardcoded fallback value for python bin. New fallback is to use 'which python' and fail if python not set in path (solves tensorflow/tensorflow#9436 / works around bazelbuild/bazel#3057).\n- Fixes minor issues with template: adds spaces to srcs in genrule, remove extra space after genrules.\n- Some dead code clean up (use of empty configuration)\n\nPiperOrigin-RevId: 160594421"""
fa867b0e3fe5f6c36405a7019ec6b8b0e001bed5,"'Fix sparse_placeholder error when int is passed in shape argument\n\nThis fix tries to address the issue raised in #6749 where and error\n```\nValueError: Tensor conversion requested dtype int64 for Tensor with dtype int32: \'Tensor(""Const:0"", shape=(2,), dtype=int32)\'\n```\nis thrown out in case int is passed in the shape argument.\n\nThis fix fixes the issue and adds test cases for it.\n\nThis fix fixes #6749.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
030054d6ef50d5ba4b1efdcc8309c187b31b07a1,'Load py_test in tensorflow/contrib/boosted_trees/BUILD\nto fix pip test visibility failures.\n\n(Bad manual merge)'
7baf12b174467cf5dded8a2703a9ca3c9615006e,'Fix manual merge error.'
9b11f458196f6f0528c9974238497a6c8b6da547,"""[tf.contrib.data] Fix the handling of dict-typed elements in functions.\n\nPreviously, we were treating a `dict` as a sequence, which led to\nincorrect behavior like passing all of the dict's keys rather than\nvalues as the arguments to a map or filter function. This change\nchanges the behavior so that the dict is passed as a single argument\nto these functions. It additionally fixes the ported version of\n`nest.flatten_up_to()` so that `Dataset.padded_batch()` works with\ndict-typed elements.\n\nFixes #11016.\n\nPiperOrigin-RevId: 160548475"""
7049f8c87291fc43d93e7a4fa72dbb192f79c815,'Fix typos (#11129)'
0c9b8974b49c147942af5888e73e325d42574db8,"'Fix shape error when a Placeholder operator with a partial shape is executed and not fed. The PlaceholderOp constructor was attempting to convert its shape attribute to a TensorShape, which requires that the shape is fully defined. This failed with a misleading error message for a partial shape. Instead, use a PartialTensorShape.\n\nPiperOrigin-RevId: 160526882'"
56d54aa44b81bf9c51eec2ffa0a460e597aced16,'tfdbg: Fix wrong URL in README.md\n\nPiperOrigin-RevId: 160520466'
cf18c6d384a96a53b448bd51a90c117af0ed7c96,'Implements inverse hyperbolic operations (fix for #7531) (#10598)\n\n* Implemented asinh op\r\n\r\n* Implemented acosh op\r\n\r\n* Fixed test functions for acosh and asinh\r\n\r\n* Implemented atanh op\r\n\r\n* Fixed test cases for atanh'
7d3572c615901bb867af66f7142fca4b8fdef1f0,'[Java] Add support for list(string) attributes in OperationBuilder (#11107)\n\n* Feature: implement setAttrStringList method in Operation Builder with java api\r\n\r\n* make sure methodss more explicit\r\n\r\n* fix'
481a4b4c8c773196943aa04cb19a3ccbeb8c8c38,'Update sample_distorted_bounding_box to use Tensor Input for min_object_covered (#10840)\n\n* Update sample_distorted_bounding_box to use Tensor Input for min_object_covered\r\n\r\nThis fix tries to address the issue raised in #10715 where it was not possible\r\nto use dynamic values for min_object_covered in sample_distorted_bounding_box.\r\n\r\nThis fix created an Op of SampleDistortedBoundingBoxV2 so that min_object_covered\r\ntakes input. SampleDistortedBoundingBox remains the same (min_object_covered as attr).\r\n\r\nAdditional test cases have been added.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update API golden to pass api_compatibility_test\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
79e65acb81f750ffa88b366c566646d48d16c574,'[OpenCL] Cleans cwise ops (#10320)\n\n* [OpenCL] Cleans cwise ops\r\n\r\n* [OpenCL] Reduces noise in the pull request\r\n\r\n* [OpenCL] Uncomment SqrtGrad registration for SYCL\r\n\r\n* [OpenCL] Registers RsqrtGrad (#94)\r\n\r\n* [OpenCL] Registers RsqrtGrad\r\n\r\n* fixed typo'
4bba002fb572f45f58dfcf2d0674cb452b4ae9de,'fixing a single typo (#11108)'
f2e2f5149cf0ad3ae8bcc4174ce7d4243885c673,'Merge pull request #11120 from chunjy92/patch-1\n\nfix link in README.md in Using TensorFlow via Docker'
175661d6869e83471d8a4b8b0f3998470249654b,"'fix link in README.md\n\ncorrectly link parameterized_docker_build.sh to its actual location, instead of README.md'"
9a4a736ae45a1cc88db472354c5129853ec9fb50,'minor fix to slim README (#11119)'
c1184705b1f5d2662f02b13700062a3a3d828e19,"'Fix #10823 moving vlog to higher level (#11083)\n\n* Fix #10823 moving vlog to higher level\r\n\r\n* Put everything under VLOG(3)\r\n\r\nOtherwise, under VLOG(1/2), the ""header"" All Register Ops message would have been orphaned.'"
9e569794987e7f38cb5720e438de228b20be1e2f,'Fix broken link in programmers_guide/embedding.md (#11105)\n\nThis fix fixes broken link in programmers_guide/embedding.md:\r\n\r\n`tensorflow/tensorboard -> tensorflow/contrib/tensorboard`\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
b112ae95082321416dcde17991c1a13b397ec421,'Add support of Sparse Tensor Slice (#9540)\n\n* Add support of Sparse Tensor Slice\r\n\r\nThis fix tries to address the issue raised in 1588\r\nto support slice of sparse tensors.\r\n\r\nThis fix fixes 1588.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add backtick\r\n\r\n* Fix build errors caused by rebase\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\nUpdate golden API for compatibility\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
a4f18c32ceb24d243f2c084317cef843b99e7d4f,'Add is_closed() method to Queue (#10175)\n\n* add QueueBase.is_closed(). Fixes #7355\r\n\r\n* Make closed() const\r\n\r\n* Remove unecessary documentation\r\n\r\n* Make closed() const pure virtual method\r\n\r\n* Rename closed to is_closed\r\n\r\n* Change all Queue to queue in documentation\r\n\r\n* Update API to include Queue_Base.is_closed\r\n\r\n* Recall change on goldens\r\n\r\n* Update API goldens for Queuebase is_closed'
cf7c008ab150ac8e5edb3ed053d38b2919699796,"'Branch 160346151 (#11094)\n\n* Properly handle ops that don\'t have a CPU kernel\r\n\r\nPiperOrigin-RevId: 159655906\r\n\r\n* Selected BUILD cleanup in tensorflow/contrib/...\r\n\r\nPiperOrigin-RevId: 159673079\r\n\r\n* Remove redundant `get` calls on smart pointers\r\n\r\nPiperOrigin-RevId: 159675809\r\n\r\n* PiperOrigin-RevId: 159698321\r\n\r\n* Migrate kernels to boosted_trees.\r\n\r\nPiperOrigin-RevId: 159698656\r\n\r\n* Fix a bug in the memory optimizer when two inputs to a node are both recomputed\r\n\r\nPiperOrigin-RevId: 159700457\r\n\r\n* Fixed memory leak that can be triggered by a failed node evaluation\r\n\r\nPiperOrigin-RevId: 159707380\r\n\r\n* Updates get_started tutorial.\r\n\r\nPiperOrigin-RevId: 159709158\r\n\r\n* [XLA] Remove unused factory in local_service\r\n\r\nPiperOrigin-RevId: 159712806\r\n\r\n* Fix typo in docstring\r\n\r\nPiperOrigin-RevId: 159714414\r\n\r\n* Migrate ops for new version of TensorForest.\r\n\r\nPiperOrigin-RevId: 159718610\r\n\r\n* Added parameterized tests to reduce window tests.\r\n\r\nPiperOrigin-RevId: 159721784\r\n\r\n* Use C API to implement Operation.device property\r\n\r\nPiperOrigin-RevId: 159723490\r\n\r\n* Several Estimator changes:\r\n- support configurable input_fn calling in Estimator subclasses.\r\n- pass params and config to the input_fn.\r\n- allow callables for model_fn and input_fn.\r\n\r\nPiperOrigin-RevId: 159725554\r\n\r\n* Fixed the scalar output for shard api when outputs_from_all_shards=True.\r\n\r\nPiperOrigin-RevId: 159726444\r\n\r\n* Automated g4 rollback of changelist 159718610\r\n\r\nPiperOrigin-RevId: 159728380\r\n\r\n* Adding missing deps to targets in llvm.BUILD. This was only working in non-sandboxed builds.\r\n\r\nPiperOrigin-RevId: 159729295\r\n\r\n* [XLA:HLO] Move sequence functions from hlo_ordering.h to hlo_scheduling.h.\r\n\r\nThis is required for upcoming changes to convert the sequence creation functions\r\n(and HeapSimulator and BufferAssignment) over to using the new\r\nHlo{Dataflow,Alias}Analysis.\r\n\r\nIt\'s required because otherwise there\'s a dependency cycle:\r\n\r\nHlo{Dataflow,Alias}Analysis depends on HloOrdering\r\nCreateMemoryMinimizingSequence will depend on Hlo{Dataflow,Alias}Analysis\r\n\r\nThere\'s already a cycle here, if both HloOrdering and\r\nCreateMemoryMinimizingSequence are in the same file.  Also note that:\r\n\r\nMinimumMemoryForSequence depends on HeapSimulator\r\nHeapSimulator will depend on Hlo{Dataflow,Alias}Analysis\r\nHlo{Dataflow,Alias}Analysis depends on HloOrdering\r\n\r\nSplitting out the sequence functions resolves the cycle.\r\n\r\nRefactoring only; no functional changes.\r\n\r\nPiperOrigin-RevId: 159731836\r\n\r\n* [XLA:HLO] Split Hlo{Value,Buffer} out of Hlo{Dataflow,Alias}Analysis.\r\n\r\nThis will make dependencies cleaner for upcoming CLs that will convert\r\nHeapSimulator and HloOrdering to use the new analyses.\r\n\r\nNo change in functionality.\r\n\r\nPiperOrigin-RevId: 159737265\r\n\r\n* Internal change\r\n\r\nPiperOrigin-RevId: 159738215\r\n\r\n* Suggest people need to do some build environment ./configur\'ing.\r\n\r\nFixes #4279\r\n\r\nPiperOrigin-RevId: 159738412\r\n\r\n* Rewrite SameDefinedShape function in ShapeRefiner\r\n\r\nPiperOrigin-RevId: 159745894\r\n\r\n* [XLA] Remove xla_cpu_*_eigen flags from CPU backends.\r\n\r\nThese flags are currently de-facto unused; parallelism should be controlled\r\nthrough the cpu_parallel backend. For configuring Eigen, if needed, the options\r\nshould be piped more directly to the code.\r\n\r\nPiperOrigin-RevId: 159746509\r\n\r\n* Updates layers tutorial and corresponding example.\r\n\r\nPiperOrigin-RevId: 159749528\r\n\r\n* Further BUILD cleanup\r\n\r\nPiperOrigin-RevId: 159749869\r\n\r\n* Use more efficient squared_difference\r\n\r\nPiperOrigin-RevId: 159751209\r\n\r\n* Add log_step_count_steps to RunConfig and allow it to flow to the MonitoredSession.\r\n\r\nPiperOrigin-RevId: 159753935\r\n\r\n* [XLA] Remove xla_hlo_test_generate_hlo_graph, which is now redundant.\r\n\r\nPiperOrigin-RevId: 159755688\r\n\r\n* Do not use SSE4.1 instructions on Android builds.\r\n\r\nPiperOrigin-RevId: 159756104\r\n\r\n* Add nonpublic helper `tf.distributions.util.tridiag` op.\r\n\r\nPiperOrigin-RevId: 159757904\r\n\r\n* [XLA] Remove dead ""in-client"" code.\r\nRemove Service::runs_in_client_process_ field and it\'s dead user. This was\r\npreviously used by the ""InProcess"" methods which have been replaced with\r\nthe LocalClient API.\r\n\r\nPiperOrigin-RevId: 159759455\r\n\r\n* [tf contrib seq2seq] Add monotonic attention mechanisms\r\n\r\n* Add monotonic_attention and safe_cumprod helper functions.\r\n* Add _BaseMonotonicAttentionMechanism base class.\r\n* Add BahdanauMonotonicAttention and LuongMonotonicAttention classes.\r\n\r\nThese attention mechanisms are proposed in\r\nColin Raffel, Minh-Thang Luong, Peter J. Liu, Ron J. Weiss, Douglas Eck,\r\n""Online and Linear-Time Attention by Enforcing Monotonic Alignments.""\r\nICML 2017.  https://arxiv.org/abs/1704.00784\r\n\r\nPiperOrigin-RevId: 159760073\r\n\r\n* Add ability for argmax to output int32 indices.  Default remains int64.\r\n\r\nChange is made in a backwards and forward compatible manner, since\r\nwe add a new attribute with a default that remains the same, and\r\nsimply register a few new kernels.\r\n\r\nPiperOrigin-RevId: 159761347\r\n\r\n* Automated g4 rollback of changelist 159746509\r\n\r\nPiperOrigin-RevId: 159763112\r\n\r\n* Raise ValueError if invalid dtype for random_uniform.\r\n\r\nPiperOrigin-RevId: 159764956\r\n\r\n* Internal change.\r\n\r\nPiperOrigin-RevId: 159769520\r\n\r\n* Support zero shapes for random_poisson. This matches random_uniform.\r\n\r\nPiperOrigin-RevId: 159771215\r\n\r\n* Blacklist the quantized ops since they have too many issues (incorrect shape\r\nfunctions, memory corruptions, ...)\r\n\r\nPiperOrigin-RevId: 159772801\r\n\r\n* Fixed the shape functions of the QuantizedAdd and QuantizedMul ops\r\n\r\nPiperOrigin-RevId: 159772841\r\n\r\n* Switch from assigning namedtuple.__new__.__defaults__ to overwriting __new__.\r\n\r\nAssigning __defaults__ relies on an implementation detail of CPython, confuses\r\ntype checkers (and developers :)), and is error-prone since it doesn\'t make the\r\nrelationship between parameter names and default values explicit.\r\nThis CL switches to overloading __new__ instead.\r\n\r\nPiperOrigin-RevId: 159773922\r\n\r\n* Made sure that we can call the constant folding code twice safely.\r\n\r\nPiperOrigin-RevId: 159781607\r\n\r\n* Added batch_matmul op dependence to android_extended_ops\r\n\r\nPiperOrigin-RevId: 159787178\r\n\r\n* Fixes a TODO in head_test.\r\n\r\nPiperOrigin-RevId: 159789178\r\n\r\n* When configuring per-session thread pools, allow\r\na pool to be a global pool. This allows a division\r\nbetween large and small pools, without needing to make\r\nnew pool for each session.\r\n\r\nPiperOrigin-RevId: 159789678\r\n\r\n* Add a multi-head TensorForest estimator.\r\n\r\nPiperOrigin-RevId: 159820487\r\n\r\n* Have RestoreV2\'s shape fn set all outputs to unknown shape.\r\n\r\nPiperOrigin-RevId: 159835723\r\n\r\n* VectorExponential added to distributions.\r\n\r\nPiperOrigin-RevId: 159840822\r\n\r\n* Fold as many nodes as possible instead of giving up if there is any error.\r\n\r\nPiperOrigin-RevId: 159841935\r\n\r\n* Removed deprecated summary usage from estimators.\r\nMade name_space usage consistent.\r\n\r\nPiperOrigin-RevId: 159846928\r\n\r\n* Adding missing license notice to toolchain build files\r\n\r\nPiperOrigin-RevId: 159847551\r\n\r\n* [XLA] Remove unused flags and move debugging flag to debug options.\r\n\r\nPiperOrigin-RevId: 159849759\r\n\r\n* Fixes some docstrings in feature_column.\r\n\r\nPiperOrigin-RevId: 159850619\r\n\r\n* TpuEstimator: Replicate the input_fn to the worker CPU for each shard.\r\n\r\nThe batch size is configured as follows:\r\nThe user may specify a global batch size in their hyperparameters. If the \'batch_size\' field is set, then we convert the global batch size into a per-shard batch size by dividing by num_shards before running their input_fn.\r\n\r\nPiperOrigin-RevId: 159851773\r\n\r\n* Modify beam search decoder to use symbolic shape for vocab size if the static shape is not present.\r\n\r\nPiperOrigin-RevId: 159852297\r\n\r\n* Generalize cluster initialization to span multiple mini-batches if necessary.\r\n\r\nPiperOrigin-RevId: 159852557\r\n\r\n* Use a single threaded session for SDCALinearRegressorTest to\r\navoid incorrect threading test failures (tsan).\r\n\r\nPiperOrigin-RevId: 159852818\r\n\r\n* Migrate ops for new version of TensorForest.\r\n\r\nPiperOrigin-RevId: 159852889\r\n\r\n* Replaced constant inputs with variables to ensure most of the graph doesn\'t get\r\noptimized away\r\n\r\nPiperOrigin-RevId: 159853171\r\n\r\n* For candidate sampling, add facility to colocate the logit computation with the sharded embeddings.\r\n\r\nPiperOrigin-RevId: 159854706\r\n\r\n* Added a utility to create parsing spec for regressors (canned estimator)\r\n\r\nPiperOrigin-RevId: 159855254\r\n\r\n* Fix cuda_kernel_helper_test. std::numeric_limits<int32>::max() doesn\'t pass, so\r\nI didn\'t use that.\r\n\r\nPiperOrigin-RevId: 159869169\r\n\r\n* In tfcompile, prune nodes that are not reachable from the fetches before\r\nbuilding the Graph. This allows loading a graph that contains ops not\r\nneeded for the compiled binary.\r\n\r\nPiperOrigin-RevId: 159869692\r\n\r\n* Fix bugs related to distributions over integers.\r\n\r\n- Ensure that the max number of categories does not exceed largest integer-form float.\r\n- Make dtype inference consistent between Categorical and Multinomial\r\ndistributions.\r\n- Improve documentation to better reflect that the Categorical\r\ndistribution is analogous to `argmax{OneHotCategorical}` (itself being\r\nidentical to `argmax{Multinomial(p,n=1)}` but not Multinomial.\r\n- Fix validation_args Heisenberg uncertainty: only validation logic should live under self.validate_args. E.g., validate_args=True would sometimes imply `x=floor(x)` which changes behavior thus making debugging impossible because enabling validation *changes* values.\r\n- Corrected `Geometric` swapping of validate_args` and `allow_nan_stats` default-values.\r\n\r\nFixes #10149\r\n\r\nPiperOrigin-RevId: 159872532\r\n\r\n* Make HloModule clonable\r\n\r\nThis CL makes HloModule clonable, which is necessary when we want to run the same compilation twice with the same input.\r\n\r\nPiperOrigin-RevId: 159874256\r\n\r\n* Internal change.\r\n\r\nPiperOrigin-RevId: 159876942\r\n\r\n* Implement alternative `monte_carlo.expectation_v2`. This function implements\r\nthe reparameterization and score-gradient tricks and does not depend on\r\ntf.Distribution like inputs.\r\n\r\nPiperOrigin-RevId: 159877923\r\n\r\n* In SE_ASSIGN_OR_RETURN change ConsumeValueOrDie to the preferred std::move ValueOrDie.\r\n\r\nPiperOrigin-RevId: 159879754\r\n\r\n* If rank is unknown, do not add output shapes to transpose nodes.\r\n\r\nPiperOrigin-RevId: 159879840\r\n\r\n* Move sparse_fill_empty_rows to new, *significantly* faster, C++ kernel for everyone.\r\n\r\nAlso fix a bug in the C++ op when the input ST has 0 elements.\r\n\r\nPiperOrigin-RevId: 159880044\r\n\r\n* Add support of label_keys to DebugClassifier\r\n\r\nPiperOrigin-RevId: 159883986\r\n\r\n* Register devices under their legacy names\r\n\r\nBecause some higher level APIs continue to use the legacy name format,\r\nwhen using ClusterSpec propagation, we need to ensure that we register\r\nthe devices under their legacy names as well as their canonical names.\r\n\r\nPiperOrigin-RevId: 159885777\r\n\r\n* [BatchNorm] Minor fixes to TF doc\r\n\r\nPiperOrigin-RevId: 159886125\r\n\r\n* Generating TBAA metadata causes the LLVM to miscompile after\r\nhttps://reviews.llvm.org/rL305938).  Disable TBAA (to stop the miscompiles)\r\nwhile we fix the root issue.\r\n\r\nPiperOrigin-RevId: 159895736\r\n\r\n* Improve score-trick to be a valid Csiszar f-Divergence yet numerically stable.\r\n\r\nPiperOrigin-RevId: 159896013\r\n\r\n* Support advisor in all places (Command line, APIs)\r\nAdd expensive operation checker\r\n\r\nPiperOrigin-RevId: 159897279\r\n\r\n* Added canned estimators to Tensorflow library. List of added estimators:\r\n* DNNClassifier\r\n* DNNRegressor\r\n* LinearClassifer\r\n* LinearRegressor\r\n* DNNLinearCombinedClassifier\r\n* DNNLinearCombinedRegressor\r\n\r\nPiperOrigin-RevId: 159898954\r\n\r\n* Alligned how model-fns handled params among linear/dnn/combined estimators.\r\n\r\nPiperOrigin-RevId: 159899925\r\n\r\n* Fixed cmake tests.\r\n\r\nPiperOrigin-RevId: 159901417\r\n\r\n* [XLA:CPU] Add VLOGs to cpu_compiler.cc\r\n\r\nPiperOrigin-RevId: 159902919\r\n\r\n* Make occurence (op run times and op definition) selectable\r\nin all views to address the loop problem.\r\n\r\nWhen a node is in loop, its execution times are accumulated, its run times\r\nwill increase.\r\n\r\nPiperOrigin-RevId: 159912429\r\n\r\n* [XLA] Small error message improvement in binop shape inference.\r\n\r\nPiperOrigin-RevId: 159920109\r\n\r\n* Follow upstream API change from r306058.\r\n\r\nPiperOrigin-RevId: 159938416\r\n\r\n* [TF:XLA] Update LLVM to upstream revision r306085.\r\n\r\nPiperOrigin-RevId: 159946562\r\n\r\n* [XLA] Remove unused xla_cpu flag and move another to DebugOptions.\r\n\r\nPiperOrigin-RevId: 159952124\r\n\r\n* Updates linear.md tutorial\r\n\r\nPiperOrigin-RevId: 159956867\r\n\r\n* Add TraceMe instrumentation of RunStep in GRPC distributed runtime.\r\nA unique ID is added to each RunStep call that allows the client and server\r\nevents to be correlated.\r\n\r\nPiperOrigin-RevId: 159956950\r\n\r\n* [XLA] Add general F32 implementation for ReducePrecision operation.\r\n\r\nThis only tests with parameter inputs (which is needed to ensure we actually test on GPUs as well as CPUs); there\'s no point in separately testing with constants.\r\n\r\nPiperOrigin-RevId: 159961430\r\n\r\n* Java: NativeLibrary: Fix URL in error message.\r\n\r\nAnd add some detail.\r\nInspired by #11015\r\n\r\nPiperOrigin-RevId: 159962478\r\n\r\n* Increase rtol for util_test.\r\n\r\nPiperOrigin-RevId: 159971136\r\n\r\n* Re-enable IR dumping for the sequential CPU backend.\r\n\r\nPiperOrigin-RevId: 159974126\r\n\r\n* tfdbg: a few minor fixes and improvements\r\n\r\n* Let DumpingDebugWrapperSession and DumpingDebugHook create session_root if it doesn\'t exist\r\n* Add README.md to tensorflow/python/debug\r\n* Add section ""Debugging Keras Models with TFDBG"" in debugger.md\r\n\r\nPiperOrigin-RevId: 159976070\r\n\r\n* Add None check for save_path when restoring checkpoints as if something is wrong in tf.train.latest_checkpoint, it will often return None and it\'s nice to have a common sense check in restore for this. This way log.error says what has happened.\r\n\r\nPiperOrigin-RevId: 159979481\r\n\r\n* Don\'t crash if a metagraph fails to load.\r\n\r\nPiperOrigin-RevId: 159981628\r\n\r\n* Prepare to not include node_def.proto.h in node_def_util.h\r\n\r\nThe goal is to make kernels mostly independent of proto headers, which will let\r\nus lock down our .so imports.  This CL makes a bunch of .cc files\r\neither include node_def.proto.h themselves or not need the definition of\r\nNodeDef; a second CL will make node_def_util.h not include node_def.proto.h.\r\n\r\nRELNOTES: n/a\r\nPiperOrigin-RevId: 159982117\r\n\r\n* Add a few diagnostic flags to help narrow down issues with the LLVM\r\nbackends.\r\n\r\nPiperOrigin-RevId: 159982441\r\n\r\n* Updated wide-n-deep tutorial code to use core version of estimators and feature-columns.\r\n\r\nPiperOrigin-RevId: 159984663\r\n\r\n* Modify ControlFlowContext to also respect import_scope in \'values_\' and keys of \'external_values_\'\r\n\r\nPiperOrigin-RevId: 159985290\r\n\r\n* Add item\'s graph to partition_graphs in virtual cluster\'s run method.\r\nPut node op name in timeline_label instead of node_name.\r\n\r\nPiperOrigin-RevId: 159986583\r\n\r\n* Use short-proto for logging purposes.\r\n\r\nA short proto will be output on a single log line, making it\r\neasier for certain automated tools to handle.\r\n\r\nPiperOrigin-RevId: 159994005\r\n\r\n* Sinh, ArcSinh, Cosh, LogCosh functions added to distributions/python/ops/trig.\r\nCare is taken to ensure a fair bit of stability.\r\n\r\nPiperOrigin-RevId: 159995514\r\n\r\n* Updates some examples in examples/learn.\r\n\r\nPiperOrigin-RevId: 159996397\r\n\r\n* Add kernel tests for boosted_trees.\r\n\r\nPiperOrigin-RevId: 160002696\r\n\r\n* Avoid doing unecessary work in the OptimizeGraph() function whenever possible\r\n\r\nPiperOrigin-RevId: 160003173\r\n\r\n* Use std::shared_ptr instead of core::RefCounted for Node::Properties\r\n\r\nAlso changes Node::Properties to a struct and removes underscores from public member variables. This change should make it easier to work with Properties moving forward as the refcount will be automatically updated.\r\n\r\nPiperOrigin-RevId: 160003281\r\n\r\n* Make the CPU compiler dump optimized IR along with the unoptimized IR.\r\n\r\nPiperOrigin-RevId: 160005257\r\n\r\n* Disable flaky run_metadata_test.\r\n\r\nPiperOrigin-RevId: 160015399\r\n\r\n* BUILD cleanup in tensorflow/tools/...\r\n\r\nPiperOrigin-RevId: 160018623\r\n\r\n* SinhArcSinh bijector added.\r\n\r\nThis two-parameter diffeomorphism from R --> R allows for skewness and fatter\r\nor thinner tails.  See docstring and also\r\nhttp://oro.open.ac.uk/22510/1/sinhasinh.pdf\r\n\r\nPiperOrigin-RevId: 160019380\r\n\r\n* Avoid hardcoded names for temporary files in tests.\r\n\r\nThese tests (and examples that are run as tests) were using hardcoded names for\r\ntemporary files.  This failed when multiple copies of these tests were run in\r\nparallel, or even successively by different users, where the second run could\r\nnot overwrite files left by the first.\r\n\r\nThis change uses the TEST_TMPDIR environment variable used by bazel\'s test\r\nrunner to choose a temporary directory.   If that directory is not set,\r\n/tmp is used, as before.\r\n\r\nPiperOrigin-RevId: 160026924\r\n\r\n* Fix multinomial doc-string, input arg logits expects to log-probabilities and not log-odds.\r\n\r\nPiperOrigin-RevId: 160036709\r\n\r\n* Made TensorFlow documentation on LSTMs slightly more accurate.\r\n\r\nPiperOrigin-RevId: 160047054\r\n\r\n* Follow LLVM/ORC upstream API change in r306166.\r\n\r\nPiperOrigin-RevId: 160108102\r\n\r\n* Move resampler from sonnet to contrib.\r\n\r\nPiperOrigin-RevId: 160134565\r\n\r\n* [TPUEstimator] Make input_fn invoked properly with eval on CPU.\r\n\r\nPiperOrigin-RevId: 160151890\r\n\r\n* Deletes iris_val_based_early_stopping example, which uses deprecated ValidationMonitor.\r\n\r\nPiperOrigin-RevId: 160154863\r\n\r\n* [XLA] Move HLO dumping flags from service_flags to debug_options_flags\r\n\r\nThis also removes the duplication in the xla_generate_hlo_graph flag.\r\n\r\nThis CL also moves the actual dumping logic from Executable to the\r\nhlo_graph_dumper namespace, where it belongs; this is in preparation for\r\nremoving the hlo_dumper callback altogether, since it isn\'t serving any role\r\nbeyond what a direct call to hlo_graph_dumper would have (b/62872831 has more\r\ndetails).\r\n\r\nPiperOrigin-RevId: 160154869\r\n\r\n* Fix missing variable unref\r\n\r\nDirect leak of 56 byte(s) in 1 object(s) allocated from:\r\n    #0 0xf5ee272 in operator new(unsigned long) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0xf5ee272)\r\n    #1 0x1b51394c in tensorflow::AssignVariableOp<Eigen::ThreadPoolDevice, float>::Compute(tensorflow::OpKernelContext*)::\'lambda\'(tensorflow::Var**)::operator()(tensorflow::Var**) const (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b51394c)\r\n    #2 0x1b5136c0 in std::_Function_handler<tensorflow::Status (tensorflow::Var**), tensorflow::AssignVariableOp<Eigen::ThreadPoolDevice, float>::Compute(tensorflow::OpKernelContext*)::\'lambda\'(tensorflow::Var**)>::_M_invoke(std::_Any_data const&, tensorflow::Var**) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b5136c0)\r\n    #3 0x1b50b289 in std::function<tensorflow::Status (tensorflow::Var**)>::operator()(tensorflow::Var**) const (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b50b289)\r\n    #4 0x1b50af88 in tensorflow::Status tensorflow::ResourceMgr::LookupOrCreate<tensorflow::Var>(basic_string<char, std::char_traits<char>, std::allocator<char> > const&, basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Var**, std::function<tensorflow::Status (tensorflow::Var**)>) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b50af88)\r\n    #5 0x1b50ac10 in tensorflow::Status tensorflow::LookupOrCreateResource<tensorflow::Var>(tensorflow::OpKernelContext*, tensorflow::ResourceHandle const&, tensorflow::Var**, std::function<tensorflow::Status (tensorflow::Var**)>) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b50ac10)\r\n    #6 0x1b512f1e in tensorflow::AssignVariableOp<Eigen::ThreadPoolDevice, float>::Compute(tensorflow::OpKernelContext*) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b512f1e)\r\n    #7 0x1d1881c7 in tensorflow::ThreadPoolDevice::Compute(tensorflow::OpKernel*, tensorflow::OpKernelContext*) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1d1881c7)\r\n    #8 0xf96e0fe in tensorflow::KernelAndDevice::Run(std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0xf96e0fe)\r\n    #9 0xf94f9c8 in TFE_Execute (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0xf94f9c8)\r\n    #10 0xf94356d in TFE_Py_Execute(TFE_Context*, int, char const*, tensorflow::gtl::InlinedVector<TFE_TensorHandle*, 4>*, _object*, tensorflow::gtl::InlinedVector<TFE_TensorHandle*, 2>*, TF_Status*) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0xf94356d)\r\n\r\nPiperOrigin-RevId: 160160101\r\n\r\n* Simplify strided_slice\'s shape handling\r\n\r\nNow that TensorShape and PartialTensorShape share memory representations, there\'s no need for an abstract class that makes TensorShape and TensorShapeProto look the same.\r\n\r\nRELNOTES: n/a\r\nPiperOrigin-RevId: 160161618\r\n\r\n* Added a tool to report the static information that can be extracted from a TF model.\r\n\r\nPiperOrigin-RevId: 160162256\r\n\r\n* Properly handle RefEnter, RefExit and RefNextIteration nodes.\r\n\r\nPiperOrigin-RevId: 160162338\r\n\r\n* Switch tfprof to use proto3\r\n\r\nPiperOrigin-RevId: 160163483\r\n\r\n* Fixes to cuda_config.h.\r\n\r\nPiperOrigin-RevId: 160168545\r\n\r\n* Update ops-related pbtxt files.\r\n\r\nPiperOrigin-RevId: 160171187\r\n\r\n* Adds notes to prevent overfitting for Experiment continous_train_and_eval.\r\n\r\nPiperOrigin-RevId: 160172692\r\n\r\n* Go: Update generated wrapper functions for TensorFlow ops.\r\n\r\nPiperOrigin-RevId: 160172985\r\n\r\n* Merge changes from github.\r\nEND_PUBLIC\r\n\r\nNote: this CL will break builds.  cl/159887762 to follow to fix all the breakages.\r\n\r\n---\r\nCommit 2336cdf7f authored by Maxwell Paul Brickner<mbrickn@users.noreply.github.com>\r\nCommitted by gunan<gunan@google.com>:\r\nUpdated link to use HTTPS (#10998)\r\n\r\nHowdy!\r\n\r\nI just updated a link to use https instead of http.\r\n\r\nThanks!\r\n---\r\nCommit ad0892df1 authored by Luke Iwanski<luke@codeplay.com>\r\nCommitted by Luke Iwanski<luke@codeplay.com>:\r\n[OpenCL] Fixes run_metadata_test for SYCL\r\n\r\n This test is designed to test CUDA specific behavior\r\n\r\n---\r\nCommit 6b37a0725 authored by Todd Wang<toddwang@gmail.com>\r\nCommitted by GitHub<noreply@github.com>:\r\nUpdate comments\r\n---\r\nCommit 1699d904a authored by John Lawson<john@codeplay.com>\r\nCommitted by Luke Iwanski<luke@codeplay.com>:\r\n[OpenCL] Fixes CUDA specific test run on SYCL (#56)\r\n\r\nThe testBadParentValuesOnGPU should only be run on CUDA devices, as the\r\ntest checks for particular CUDA behaviour. We don\'t actually provide a\r\nSYCL kernel for GatherTree and so it\'s not a problem that the tests\r\ndon\'t target SYCL.\r\n---\r\nCommit 3c1946230 authored by myPrecious<Moriadry@users.noreply.github.com>\r\nCommitted by Shanqing Cai<cais@google.com>:\r\nJava API to get the size of specified input list of operations. (#10865)\r\n\r\n* Java API to get the size of specified input list of operations\r\n\r\n* remove unnecessary explain to avoid bring a new term to users.\r\n\r\n---\r\nCommit e911c7480 authored by Luke Iwanski<luke@codeplay.com>\r\nCommitted by Luke Iwanski<luke@codeplay.com>:\r\n[OpenCL] REGISTER -> REGISTER6\r\n\r\n---\r\nCommit fbf6c4cec authored by superryanguo<superryanguo@gmail.com>\r\nCommitted by superryanguo<superryanguo@gmail.com>:\r\nSimplify the Quickstart section with the weblink is better\r\n\r\n---\r\nCommit 72e2918cc authored by Taehoon Lee<taehoonlee@snu.ac.kr>\r\nCommitted by Taehoon Lee<taehoonlee@snu.ac.kr>:\r\nFix typos\r\n\r\n---\r\nCommit 90c4406b7 authored by Rishabh Patel<patelrishabh@users.noreply.github.com>\r\nCommitted by GitHub<noreply@github.com>:\r\nCorrect the learning rate as per the code snippet\r\n---\r\nCommit 03da61134 authored by Todd Wang<toddwang@gmail.com>\r\nCommitted by GitHub<noreply@github.com>:\r\nUpdate ir_array.cc\r\n---\r\nCommit 2df6cd3ac authored by Todd Wang<toddwang@gmail.com>\r\nCommitted by GitHub<noreply@github.com>:\r\nAnother try\r\n---\r\nCommit af0cbace1 authored by Luke Iwanski<luke@codeplay.com>\r\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\r\n[OpenCL] Transpose to go through Eigen (#10321)\r\n\r\n---\r\nCommit fc7361081 authored by Luke Iwanski<luke@codeplay.com>\r\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\r\n[OpenCL] Registers RGBToHSV and HSVToRGB (#91) (#10848)\r\n\r\n* [OpenCL] Added RGBToHSV and HSVToRGB\r\n\r\n* Aligning \'\\\'\r\n---\r\nCommit 832894ef8 authored by Luke Iwanski<luke@codeplay.com>\r\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\r\n[OpenCL] Registers AdjustContrastv2 (#10949)\r\n\r\n* [OpenCL] Registers AdjustContrastv2 (#93)\r\n\r\n* [OpenCL] Extended adjust_contrast_op_benchmark_test for OpenCL (#96)\r\n\r\n* [OpenCL] Extended adjust_contrast_op_benchmark_test for OpenCL\r\n\r\n* simplified to #ifndef\r\n\r\n* Changed to ""#if GOOGLE_CUDA""\r\n\r\n* Update adjust_contrast_op_benchmark_test.cc\r\n\r\n* Added comments\r\n\r\n---\r\nCommit cb4c2f8d1 authored by Yifei Feng<yifeif@google.com>\r\nCommitted by Yifei Feng<yifeif@google.com>:\r\nMake TransferBufferToInFeed not virual so it compiles.\r\n\r\n---\r\nCommit e89f04d80 authored by Yifei Feng<yifeif@google.com>\r\nCommitted by Yifei Feng<yifeif@google.com>:\r\nFix calling Literal member functions.\r\n\r\n---\r\nCommit 15a8df724 authored by Yifei Feng<yifeif@google.com>\r\nCommitted by Yifei Feng<yifeif@google.com>:\r\nFix mac build\r\nclone from meheff\'s change:\r\n[XLA] Change return type of DeviceAssignment::Deserialize to fix build\r\nbreakage on mac.\r\nThe mac build had the following error:\r\n\r\nerror: incomplete type \'xla::DeviceAssignment\' used in type trait\r\nexpression\r\n\r\nThis was due to a static method returning a StatusOr<DeviceAssignment>\r\ninside of the definition of DeviceAssignment.\r\n\r\n---\r\nCommit a54d43fa4 authored by Yifei Feng<yifeif@google.com>\r\nCommitted by Yifei Feng<yifeif@google.com>:\r\nReplace LiteralUtil to Literal in compiler/plugin/executor\r\n\r\n---\r\nCommit 88a6bb80c authored by Guenther Schmuelling<guschmue@microsoft.com>\r\nCommitted by Guenther Schmuelling<guschmue@microsoft.com>:\r\nexpand inline for debug builds to limit number of symbols\r\n\r\n---\r\nCommit 62fb49d31 authored by Yifei Feng<yifeif@google.com>\r\nCommitted by Yifei Feng<yifeif@google.com>:\r\nFix visibility error for contrib/remote_fused_graph/pylib/BUILD.\r\n\r\n---\r\nCommit 4c75252f2 authored by Mark Neumann<markn@allenai.org>\r\nCommitted by Mark Neumann<markn@allenai.org>:\r\nfix initial test values to avoid numerical instability\r\n\r\n---\r\nCommit b58d98353 authored by sj6077<epik03sj@gmail.com>\r\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\r\nFixes of AutoParallel bug (#10368)\r\n\r\n* Fix the bug that auto_parallel could replicate variable snapshot name\r\n\r\n* Use NodeName in grappler:utils instead of substr, convert variables->variable_def of grappler item\r\n\r\n* remove variable_def from grappler item, exclude snapshot nodes from dont_replicate_nodes in auto_parallel\r\n\r\n---\r\nCommit a286b7db8 authored by Yifei Feng<yifeif@google.com>\r\nCommitted by Yifei Feng<yifeif@google.com>:\r\nMake debug_test slice integer.\r\n\r\n---\r\nCommit 97fcfdfa6 authored by Toby Boyd<tobyboyd@google.com>\r\nCommitted by GitHub<noreply@github.com>:\r\nFixed path to seq2seq.py and minor formatting\r\n---\r\nCommit 63c1befb8 authored by Anish Shah<shah.anish07@gmail.com>\r\nCommitted by Anish Shah<shah.anish07@gmail.com>:\r\nImprove docs for tf.nn.depthwise_conv2d_native\r\n\r\n---\r\nCommit 8d42202b2 authored by Yong Tang<yong.tang.github@outlook.com>\r\nCommitted by Yong Tang<yong.tang.github@outlook.com>:\r\nFix mismatched delete in mkl_tfconv_op.cc\r\n\r\nThis fix fixes mismatched new[]-delete in mkl_tfconv_op.cc\r\n\r\n(the file went through clang-format so there are some additional\r\nchanges)\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n---\r\nCommit 26301bd55 authored by Danny Goodman<goodman.danny@gmail.com>\r\nCommitted by Danny Goodman<goodman.danny@gmail.com>:\r\nfix error format\r\n\r\n---\r\nCommit b3f33ad46 authored by Yao Zhang<yaozhang@google.com>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nMake changes to prepare for the fused option of batch norm to be set to None (None means using fused batch norm if possible).\r\n\r\nPiperOrigin-RevId: 159649743\r\n\r\n---\r\nCommit a4a469832 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\n[XLA] Add tests for select ops and while loops that produce tuples that contain predicates.\r\n\r\nPiperOrigin-RevId: 159645900\r\n\r\n---\r\nCommit 980d3f2be authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nUse C API to implement Operation.name property\r\n\r\nThis name property is used in many existing tests including those that\r\nalready run with C API enabled (math_ops_test, framework_ops_test,\r\nsession_test, session_partial_run_test, math_ops_test_gpu, etc).\r\n\r\nPiperOrigin-RevId: 159645767\r\n\r\n---\r\nCommit 26239c706 authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nPreviously we didn\'t have an implementation of BatchNormInference and BatchNormTraining, which gives a linker error if anyone ever tries to call that. A dummy implementation is friendlier than a linker error.\r\n\r\nPiperOrigin-RevId: 159645612\r\n\r\n---\r\nCommit f671c5caa authored by A. Unique TensorFlower<gardener@tensorflow.org>\r\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\r\nBEGIN_PUBLIC\r\nAutomated g4 rollback of changelist 159570549\r\n\r\nPiperOrigin-RevId: 160182040\r\n\r\n* Update ops-related pbtxt files.\r\n\r\nPiperOrigin-RevId: 160183349\r\n\r\n* Merge changes from github followup.\r\n\r\nPiperOrigin-RevId: 160183498\r\n\r\n* Automated g4 rollback of changelist 160183498\r\n\r\nPiperOrigin-RevId: 160189134\r\n\r\n* Automated g4 rollback of changelist 160182040\r\n\r\nPiperOrigin-RevId: 160190881\r\n\r\n* [XLA] Disallow fuse X into Y if there are paths from X to Y which don\'t fuse\r\n\r\nJust because X can fuse into all of its consumers does not mean that those\r\nconsumers can fuse into anything. Depending on the structure of the graph, this\r\ncan either result in no performance win at all or, in the case of recurrent\r\nnetworks, a big performance deficit.\r\n\r\nPiperOrigin-RevId: 160194058\r\n\r\n* First draft of Tensors segment of the programmer\'s guide.\r\n\r\nPiperOrigin-RevId: 160196550\r\n\r\n* First draft of variables unit of programmer\'s guide.\r\n\r\nPiperOrigin-RevId: 160196566\r\n\r\n* Make xla::Literal moveable.\r\n\r\nPiperOrigin-RevId: 160197273\r\n\r\n* Automated g4 rollback of changelist 159897279\r\n\r\nPiperOrigin-RevId: 160198598\r\n\r\n* Updates text_classification example.\r\n\r\nPiperOrigin-RevId: 160200457\r\n\r\n* Fix backward compatibility test broken by rollback.\r\n\r\nPiperOrigin-RevId: 160222187\r\n\r\n* Support advisor in all places (Command line, APIs)\r\nAdd expensive operation checker\r\n\r\nPiperOrigin-RevId: 160222348\r\n\r\n* [XLA] Simplify the fusion heuristic\r\n\r\nWe had two different aspects of the fusion heuristic:\r\n- Don\'t fuse a producer into a consumer if there exists a path from the\r\n  producer to the consumer which cannot be fused.\r\n- Don\'t fuse a producer into a consumer if any consumer of the producer cannot\r\n  fuse.\r\n\r\nThese can be combined into one, simpler, heuristic.\r\n\r\nPiperOrigin-RevId: 160222771\r\n\r\n* Automated g4 rollback of changelist 160196566\r\n\r\nPiperOrigin-RevId: 160222930\r\n\r\n* Automated g4 rollback of changelist 160196550\r\n\r\nPiperOrigin-RevId: 160222942\r\n\r\n* Lets the HParam parser also accept True and False as inputs, since that\'s how python prints booleans.\r\n\r\nPiperOrigin-RevId: 160234658\r\n\r\n* Automated g4 rollback of changelist 155070869\r\n\r\nPiperOrigin-RevId: 160249526\r\n\r\n* [TF:XLA] Inline the sigmoid operation instead of mapping it elementwise.\r\n\r\nPiperOrigin-RevId: 160274436\r\n\r\n* Make sure all convolution tests are testing non-trivial cases, i.e. where not all inputs are 0, leading to an all-0 output, which masks most possible bugs.\r\nWe do not check-fail on 0-sized dimensions as tests for these special cases\r\nexist.\r\n\r\nPiperOrigin-RevId: 160274593\r\n\r\n* Explicitly use ""dns"" URI scheme when using DNS names or literal IP\r\naddresses with gRPC.  This avoids problems in environments in which the\r\ndefault URI scheme is something other than ""dns"".\r\n\r\nPiperOrigin-RevId: 160276862\r\n\r\n* Add RWSE (root weighted squared error) to the WALS estimator.\r\n\r\nPiperOrigin-RevId: 160276937\r\n\r\n* Don\'t include node_def.proto.h in node_def_util.h\r\n\r\nThe goal is to make kernels mostly independent of proto headers, which will let us lock down our .so imports.\r\n\r\nRELNOTES: n/a\r\nPiperOrigin-RevId: 160278032\r\n\r\n* [XLA] Add tuple support to Literal::CreateFromShape.\r\n\r\nPiperOrigin-RevId: 160278561\r\n\r\n* Updates some more examples in examples/learn.\r\n\r\nPiperOrigin-RevId: 160278757\r\n\r\n* Automated g4 rollback of changelist 160278032\r\n\r\nPiperOrigin-RevId: 160280961\r\n\r\n* Fixed the bug that Estimator does not make deepcopy of params in constructor\r\n\r\nPiperOrigin-RevId: 160281247\r\n\r\n* Clean out the config and params in TPUEstimator.\r\n\r\nPiperOrigin-RevId: 160281507\r\n\r\n* [XLA] Remove the ""hlo dumper"" parameter of xla::Compiler and its piping.\r\n\r\nThis dumper is no longer necessary since the restructuring of HLO dumping and\r\nthe addition of MaybeDumpHloModule which heeds to the right flags. The\r\nremaining bits didn\'t have additional functionality, but constituted a lot of\r\nboilerplate that has to be propagated throughout the backends.\r\n\r\nPiperOrigin-RevId: 160281798\r\n\r\n* [TF:XLA] Refactor the sigmoid op as a rescaled tanh.\r\n\r\nPiperOrigin-RevId: 160282472\r\n\r\n* Fix uninitialized values in TensorForest code.\r\n\r\nPiperOrigin-RevId: 160284420\r\n\r\n* [TF:XLA] Update Tensorflow LLVM release to upstream r306370.\r\n\r\nFix broken XLA build.\r\n\r\nPiperOrigin-RevId: 160284588\r\n\r\n* tfdbg example: fix --tensor_size issue in debug_fibonacci\r\n\r\nPiperOrigin-RevId: 160290541\r\n\r\n* [SE] ThenConvolveWithAlgorithm vlogs algorithm configs.\r\n\r\nPiperOrigin-RevId: 160292762\r\n\r\n* Fix documentation of Estimator class (invalid quotes).\r\n\r\nPiperOrigin-RevId: 160292803\r\n\r\n* Shrink the test size to avoid OOM error on old GPUs.\r\n\r\nPiperOrigin-RevId: 160292834\r\n\r\n* [TF:XLA] Reject operators with resource outputs on CPU and GPU devices.\r\n\r\nWe were checking for resource inputs but not resource outputs, which led to accidental fusion of some TensorArray ops on CPU and GPU.\r\n\r\nPiperOrigin-RevId: 160294302\r\n\r\n* Add a functionality of remote fused graph transformation to fuse graphs by op type\r\n\r\nPiperOrigin-RevId: 160300039\r\n\r\n* Cudnn compatible LSTMCell and LSTMBlockCell\r\n\r\nPiperOrigin-RevId: 160300668\r\n\r\n* [XLA] Remove ""operand"" argument from HandleReducePrecision.\r\n\r\nPiperOrigin-RevId: 160301461\r\n\r\n* Added more reduce window tests.\r\n\r\nPiperOrigin-RevId: 160301509\r\n\r\n* Updates more text classification examples in examples/learn.\r\n\r\nPiperOrigin-RevId: 160305131\r\n\r\n* Use C API to implement Operation._output_types\r\n\r\nThis change first converts the _output_types member to a property and\r\nthen implements it using C API if it is enabled.\r\n\r\nPiperOrigin-RevId: 160306227\r\n\r\n* Add more tests for BatchNormTraining.\r\nRELNOTES: n/a\r\n\r\nPiperOrigin-RevId: 160307959\r\n\r\n* Update path to print_selective_registration_header.py in comment\r\n\r\nPiperOrigin-RevId: 160308173\r\n\r\n* Migrate TensorForest v4 python to contrib.\r\n\r\nPiperOrigin-RevId: 160308805\r\n\r\n* Automated g4 rollback of changelist 159454657\r\n\r\nPiperOrigin-RevId: 160314706\r\n\r\n* TESTFIX:  distributions:trig_test wasn\'t passing in ASAN mode.\r\n\r\nPiperOrigin-RevId: 160315597\r\n\r\n* tfdbg doc: fixes and improvements\r\n\r\nPiperOrigin-RevId: 160318411\r\n\r\n* Add a time estimation to HloCostAnalysis and represent properties as a map so that adding more properties will be easier, e.g. in a sub-class.\r\n\r\nPiperOrigin-RevId: 160318494\r\n\r\n* tfdbg: revert dns:/// prefix in gRPC mode\r\n\r\nPiperOrigin-RevId: 160319348\r\n\r\n* Moves TensorCApi from c_api.cc to c_api_internal.h, where it can be used\r\nby other code that require access to the underlying TensorBuffers.\r\n\r\nPiperOrigin-RevId: 160323362\r\n\r\n* Readd the new tensors and variables documents, with tests passing.\r\n\r\nPiperOrigin-RevId: 160324191\r\n\r\n* Make ResourceHandle not be a proto\r\n\r\nI\'m trying to make core/kernels independent of protos.  Currently the dtype ResourceHandle is itself a proto.  After this CL, ResourceHandle is a normal C++ type which gets converted to/from ResourceHandleProto at (de)serialization time.\r\n\r\nRELNOTES: n/a\r\nPiperOrigin-RevId: 160329002\r\n\r\n* Minor cleanup: remove unused dependencies and inclusions\r\n\r\nPiperOrigin-RevId: 160334030\r\n\r\n* Add name_scopes to mnist_deep.py for a cleaner graph layout.\r\n\r\nPiperOrigin-RevId: 160338775\r\n\r\n* Add note about `tf.test.mock` to docs for `tf.test`\r\n\r\nPiperOrigin-RevId: 160338811\r\n\r\n* Internal change.\r\n\r\nPiperOrigin-RevId: 160339087\r\n\r\n* Fix bugs in ScatterNd and add ScatterNdNonAliasingAdd.\r\n\r\ntf.scatter_nd_non_aliasing_add acts similarly to tf.scatter_nd_add but\r\nworks on non-ref objects (i.e., Tensors -- not Variables).  This means\r\nit has a gradient with respect to the primary input as well as the\r\nupdates.  It does its best to avoid making extra copies of the input.\r\n\r\nPiperOrigin-RevId: 160339328\r\n\r\n* Update ops-related pbtxt files.\r\n\r\nPiperOrigin-RevId: 160340888\r\n\r\n* Add checkpoint conversion for models that use the attention mechanism implemented in tensorflow/contrib/legacy_seq2seq/python/ops/seq2seq.py.\r\n\r\nPiperOrigin-RevId: 160340994\r\n\r\n* Go: Update generated wrapper functions for TensorFlow ops.\r\n\r\nPiperOrigin-RevId: 160341769\r\n\r\n* Merge changes from github.\r\n\r\nPiperOrigin-RevId: 160344052\r\n\r\n* Update ops-related pbtxt files.\r\n\r\nPiperOrigin-RevId: 160346151\r\n\r\n* Load py_test in tensorflow/contrib/boosted_trees/BUILD to fix pip test\r\nvisibility failures.\r\n\r\n* Disable boosted_trees tests on mac while they are being debugged.'"
b183be3b4d62c1033bcb3c0fe2b24ba3eef86da7,'Merge pull request #11100 from taehoonlee/fix_typos\n\nFix typos'
77aa84a857a813d039948f2ad3005ed04d94839f,'Fix some typos in doc strings of Conv3D of keras. (#11079)\n\n* Fix some typos in Conv3D.\r\n\r\n* Fix a typo'
441fb052d7e662565662ab56197b0459638d9398,'Minor changes to tfdbg docs.\n\nUpdate the fix for the `debug_mnist` example to use `tf.nn.sigmoid_cross_entropy_with_logits`.\n\nPiperOrigin-RevId: 160397398'
ab4f01025175f98970e0d391ef1c45e818ac443d,'In `mnist_deep.py` Write out the graph for tensorboard.\n\nAdd a screenshot of the tensorboard diagram to the tutorial page.\n\nFixes: #3044\nPiperOrigin-RevId: 160397248'
0d11e9d5b0dec2d59d481231328656dfd6dbf46e,'[XLA] Fix F16 implementation in Literal class.\n\nPiperOrigin-RevId: 160372343'
5e1576d73bc40bbf103c13b2fda691924638289c,'This change fixes a bug that BaseEstimator.evaluate() ignores a function parameter `name` if SKCompat is used internally.\n\nPiperOrigin-RevId: 160370884'
b7af918c580a17242bb64a721c71ecc968d706a3,'[XLA] Several fixes to HLO reachability analysis.\n(1) Account for control dependencies in reachability.\n(2) Invert sense of reachability. We draw our HLO graphs with arrows from producers to consumers so it makes more sense for reachability to be defined along the direction of these edges.\n(3) Rename ComputeTransitiveOperands to ComputeReachability.\n\nPiperOrigin-RevId: 160366307'
3ada474895ec8de2e7730d29454ceea07b83ec8c,'Fix typos'
b19534951d4e937d7f3d2435c62a969a2fc4e233,'Bugfix to scatter_nd non-aliasing op: properly assign Tensor if forwarding worked.\n\nPiperOrigin-RevId: 160362310'
b352be037ce051bb71837ab1a8e72e3d755241c4,'Fix import in documentation documentation (#11084)\n\n* Fix import in documentation documentation\r\n\r\n* Address review comment'
f449d91935e4531b387872f11c1e74508780c47f,'Merge pull request #11088 from yongtang/10838-warning\n\nFixed some warnings related to signed/unsigned comparison'
63ac86ae19933bc9386233cb899d653f388f1bef,"'Fix bugs in ScatterNd and add ScatterNdNonAliasingAdd.\n\ntf.scatter_nd_non_aliasing_add acts similarly to tf.scatter_nd_add but\nworks on non-ref objects (i.e., Tensors -- not Variables).  This means\nit has a gradient with respect to the primary input as well as the\nupdates.  It does its best to avoid making extra copies of the input.\n\nPiperOrigin-RevId: 160339328'"
2fce8cf869a14e5b7ec417893b0194b98536278b,'Fixed some warnings related to signed/unsigned comparison\n\nThis fix tries to fix some warning related to\n```\nwarning: comparison between signed and unsigned integer expressions\n```\nby address some easy fix in changing `int -> size_t` in case of loop index.\n\nThis fix is related to #10838.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
59ae0c0f9ac654bd668fb633feef3dbe26bae8ee,'tfdbg: revert dns:/// prefix in gRPC mode\n\nPiperOrigin-RevId: 160319348'
febcf3c7b9fddffe9aceaae626f184d5c39b657f,'tfdbg doc: fixes and improvements\n\nPiperOrigin-RevId: 160318411'
5984c11a94c5c914ef88e1081cff667008a95022,"'Add gzip and zlib support for FixedLengthRecordReader (#8901)\n\n* Switch from InputBuffer to BufferedInputStream for FixedLengthRecordReader\r\n\r\nThis commit switch from InputBuffer to BufferedInputStream for\r\nFixedLengthRecordReader, for the purpose of allowing compressed file as\r\nFixedLengthRecordReader.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Remove the need to file the file size before hand for FixedLengthRecordReader\r\n\r\nThis commit updates the implementation of FixedLengthRecordReader so that\r\nit will not try to find the file size before hand.\r\n\r\nThe purpose is to allow FixedLengthRecordReader to take a non-seekable file\r\nas an input. In a non-seekable file (e.g., a compressed file), it may not\r\nbe possible to find the file size (e.g., in a uncompressed file length).\r\n\r\nThis commit is part of the effort to support gzip/zlib compression.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add gzip and zlib support for FixedLengthRecordReader\r\nThis fix adds gzip and zlib support for FixedLengthRecordReader,\r\nas was discussed in 8856.\r\nWhen FixedLengthRecordReader is used, it will check for\r\nencoding flag and use ZlibInputStream as needed.\r\nThe usage of InputBuffer in FixedLengthRecordReader has\r\nalso been changed to BufferedInputStream to match ZlibInputStream.\r\n\r\nThis fix fixes 8856.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add additional test cases where num_records=0 and hop_bytes>record_bytes\r\n\r\nThis commit adds additional test cases where num_records=0 and hop_bytes>record_bytes\r\n\r\nThis commit also updated the API golden so that API compatibility test passes.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
f8b315bfb766448249e4c93065ba42431614ae65,"""TESTFIX:  distributions:trig_test wasn't passing in ASAN mode.\n\nPiperOrigin-RevId: 160315597"""
a6992a1fd7100b48a3a08fe242b13344157fdcd2,'Fix for contrib.layers test that was raising an IndexError (#11069)\n\n* variable name change and documentation clarification\r\n\r\n* Updated a test to eliminate an error it raises'
4114aaebbe68bf37e73204faf7e3392586c3c1fb,'Fix documentation of Estimator class (invalid quotes).\n\nPiperOrigin-RevId: 160292803'
f062ffbbad0f578c81e44e01bb0c4df2e582ad33,'tfdbg example: fix --tensor_size issue in debug_fibonacci\n\nPiperOrigin-RevId: 160290541'
beb291b3c0e95f1150c446e06f8f80675ab3b528,'[TF:XLA] Update Tensorflow LLVM release to upstream r306370.\n\nFix broken XLA build.\n\nPiperOrigin-RevId: 160284588'
08a23d412b7d18a4d8ee41e24b03f4c616e32eb0,'Fix uninitialized values in TensorForest code.\n\nPiperOrigin-RevId: 160284420'
674f56b578b88a0e3f1017b63fa64c3ae1a83b6e,'Fixed the bug that Estimator does not make deepcopy of params in constructor\n\nPiperOrigin-RevId: 160281247'
1d6593e2ecd8fe4e8eea7a3363fa6878cb978460,"'Fixed comment style and changed if condition from ""power"" to ""power && little_endian"" (ppc64le specific)'"
3576c25078090c35658ca0512cbd03697d36e06b,'Fix backward compatibility test broken by rollback.\n\nPiperOrigin-RevId: 160222187'
90b2a38a1f7cd7cde0f012249407574e97583096,'bugfix: summaries variable was undefined. (#11059)'
977bb1a52c90f41a3b3f75b6a5290e28a30e13f4,'Update WorkerCacheLogger::RecordRecvTensor (#10974)\n\n* Update WorkerCacheLogger::RecordRecvTensor\r\n\r\nUpdate WorkerCacheLogger::RecordRecvTensor to let future improvements to tracing tools:\r\n* Add a placeholder for more details about a RecvTensor call.\r\n* Custom title to possibly distinguish between control and data flow RecvTensor calls.\r\n\r\n* Add a new method RecordDataTransfer.\r\n\r\n* Minor fix'
710fd7a65ab4b59183b8aeb5de8716f0712f918e,'Expose TFRecordWriter.Flush() in Python (#10686)\n\n* Expose TFRecordWriter.Flush() in Python\r\n\r\nThis fix tries to address the issue raised in #10644 where\r\nit was not possible to call `TFRecordWriter.Flush()` in Python.\r\nThe C++ interface already has the `Flush()` so this fix exposes\r\nit to python level.\r\n\r\nThis fix is related to #10644.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update the API goldens for APi compatibility\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
8bfbc12e19f7e98ec3525eacf06a2cb75b4fc482,"'a python implmentation of label_image (#9261)\n\n* a python implmentation of label_image\r\n\r\nA quick implementation of tensorflow/examples/label_image/main.cc\r\nin python.\r\n\r\nWith data file described in [1], we can we get reasonable results\r\n\r\n$ python3 ./tensorflow/examples/label_image/label_image.py\r\nmilitary uniform 0.834306\r\nmortarboard 0.0218692\r\nacademic gown 0.0103579\r\npickelhaube 0.00800814\r\nbulletproof vest 0.00535088\r\n\r\n[1] https://www.tensorflow.org/tutorials/image_recognition\r\n\r\n* fix the gif decoding problem and add bmp decoding\r\n\r\n* Add from __future__ as per style guide.'"
f3c89936e97c99dead1ca3310246691c1b221adf,"'Merge changes from github.\nEND_PUBLIC\n\nNote: this CL will break builds.  cl/159887762 to follow to fix all the breakages.\n\n---\nCommit 2336cdf7f authored by Maxwell Paul Brickner<mbrickn@users.noreply.github.com>\nCommitted by gunan<gunan@google.com>:\nUpdated link to use HTTPS (#10998)\n\nHowdy!\n\nI just updated a link to use https instead of http.\n\nThanks!\n---\nCommit ad0892df1 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Luke Iwanski<luke@codeplay.com>:\n[OpenCL] Fixes run_metadata_test for SYCL\n\n This test is designed to test CUDA specific behavior\n\n---\nCommit 6b37a0725 authored by Todd Wang<toddwang@gmail.com>\nCommitted by GitHub<noreply@github.com>:\nUpdate comments\n---\nCommit 1699d904a authored by John Lawson<john@codeplay.com>\nCommitted by Luke Iwanski<luke@codeplay.com>:\n[OpenCL] Fixes CUDA specific test run on SYCL (#56)\n\nThe testBadParentValuesOnGPU should only be run on CUDA devices, as the\ntest checks for particular CUDA behaviour. We don\'t actually provide a\nSYCL kernel for GatherTree and so it\'s not a problem that the tests\ndon\'t target SYCL.\n---\nCommit 3c1946230 authored by myPrecious<Moriadry@users.noreply.github.com>\nCommitted by Shanqing Cai<cais@google.com>:\nJava API to get the size of specified input list of operations. (#10865)\n\n* Java API to get the size of specified input list of operations\n\n* remove unnecessary explain to avoid bring a new term to users.\n\n---\nCommit e911c7480 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Luke Iwanski<luke@codeplay.com>:\n[OpenCL] REGISTER -> REGISTER6\n\n---\nCommit fbf6c4cec authored by superryanguo<superryanguo@gmail.com>\nCommitted by superryanguo<superryanguo@gmail.com>:\nSimplify the Quickstart section with the weblink is better\n\n---\nCommit 72e2918cc authored by Taehoon Lee<taehoonlee@snu.ac.kr>\nCommitted by Taehoon Lee<taehoonlee@snu.ac.kr>:\nFix typos\n\n---\nCommit 90c4406b7 authored by Rishabh Patel<patelrishabh@users.noreply.github.com>\nCommitted by GitHub<noreply@github.com>:\nCorrect the learning rate as per the code snippet\n---\nCommit 03da61134 authored by Todd Wang<toddwang@gmail.com>\nCommitted by GitHub<noreply@github.com>:\nUpdate ir_array.cc\n---\nCommit 2df6cd3ac authored by Todd Wang<toddwang@gmail.com>\nCommitted by GitHub<noreply@github.com>:\nAnother try\n---\nCommit af0cbace1 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Transpose to go through Eigen (#10321)\n\n---\nCommit fc7361081 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Registers RGBToHSV and HSVToRGB (#91) (#10848)\n\n* [OpenCL] Added RGBToHSV and HSVToRGB\n\n* Aligning \'\\\'\n---\nCommit 832894ef8 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Registers AdjustContrastv2 (#10949)\n\n* [OpenCL] Registers AdjustContrastv2 (#93)\n\n* [OpenCL] Extended adjust_contrast_op_benchmark_test for OpenCL (#96)\n\n* [OpenCL] Extended adjust_contrast_op_benchmark_test for OpenCL\n\n* simplified to #ifndef\n\n* Changed to ""#if GOOGLE_CUDA""\n\n* Update adjust_contrast_op_benchmark_test.cc\n\n* Added comments\n\n---\nCommit cb4c2f8d1 authored by Yifei Feng<yifeif@google.com>\nCommitted by Yifei Feng<yifeif@google.com>:\nMake TransferBufferToInFeed not virual so it compiles.\n\n---\nCommit e89f04d80 authored by Yifei Feng<yifeif@google.com>\nCommitted by Yifei Feng<yifeif@google.com>:\nFix calling Literal member functions.\n\n---\nCommit 15a8df724 authored by Yifei Feng<yifeif@google.com>\nCommitted by Yifei Feng<yifeif@google.com>:\nFix mac build\nclone from meheff\'s change:\n[XLA] Change return type of DeviceAssignment::Deserialize to fix build\nbreakage on mac.\nThe mac build had the following error:\n\nerror: incomplete type \'xla::DeviceAssignment\' used in type trait\nexpression\n\nThis was due to a static method returning a StatusOr<DeviceAssignment>\ninside of the definition of DeviceAssignment.\n\n---\nCommit a54d43fa4 authored by Yifei Feng<yifeif@google.com>\nCommitted by Yifei Feng<yifeif@google.com>:\nReplace LiteralUtil to Literal in compiler/plugin/executor\n\n---\nCommit 88a6bb80c authored by Guenther Schmuelling<guschmue@microsoft.com>\nCommitted by Guenther Schmuelling<guschmue@microsoft.com>:\nexpand inline for debug builds to limit number of symbols\n\n---\nCommit 62fb49d31 authored by Yifei Feng<yifeif@google.com>\nCommitted by Yifei Feng<yifeif@google.com>:\nFix visibility error for contrib/remote_fused_graph/pylib/BUILD.\n\n---\nCommit 4c75252f2 authored by Mark Neumann<markn@allenai.org>\nCommitted by Mark Neumann<markn@allenai.org>:\nfix initial test values to avoid numerical instability\n\n---\nCommit b58d98353 authored by sj6077<epik03sj@gmail.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nFixes of AutoParallel bug (#10368)\n\n* Fix the bug that auto_parallel could replicate variable snapshot name\n\n* Use NodeName in grappler:utils instead of substr, convert variables->variable_def of grappler item\n\n* remove variable_def from grappler item, exclude snapshot nodes from dont_replicate_nodes in auto_parallel\n\n---\nCommit a286b7db8 authored by Yifei Feng<yifeif@google.com>\nCommitted by Yifei Feng<yifeif@google.com>:\nMake debug_test slice integer.\n\n---\nCommit 97fcfdfa6 authored by Toby Boyd<tobyboyd@google.com>\nCommitted by GitHub<noreply@github.com>:\nFixed path to seq2seq.py and minor formatting\n---\nCommit 63c1befb8 authored by Anish Shah<shah.anish07@gmail.com>\nCommitted by Anish Shah<shah.anish07@gmail.com>:\nImprove docs for tf.nn.depthwise_conv2d_native\n\n---\nCommit 8d42202b2 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Yong Tang<yong.tang.github@outlook.com>:\nFix mismatched delete in mkl_tfconv_op.cc\n\nThis fix fixes mismatched new[]-delete in mkl_tfconv_op.cc\n\n(the file went through clang-format so there are some additional\nchanges)\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n\n---\nCommit 26301bd55 authored by Danny Goodman<goodman.danny@gmail.com>\nCommitted by Danny Goodman<goodman.danny@gmail.com>:\nfix error format\n\n---\nCommit b3f33ad46 authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake changes to prepare for the fused option of batch norm to be set to None (None means using fused batch norm if possible).\n\nPiperOrigin-RevId: 159649743\n\n---\nCommit a4a469832 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add tests for select ops and while loops that produce tuples that contain predicates.\n\nPiperOrigin-RevId: 159645900\n\n---\nCommit 980d3f2be authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse C API to implement Operation.name property\n\nThis name property is used in many existing tests including those that\nalready run with C API enabled (math_ops_test, framework_ops_test,\nsession_test, session_partial_run_test, math_ops_test_gpu, etc).\n\nPiperOrigin-RevId: 159645767\n\n---\nCommit 26239c706 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPreviously we didn\'t have an implementation of BatchNormInference and BatchNormTraining, which gives a linker error if anyone ever tries to call that. A dummy implementation is friendlier than a linker error.\n\nPiperOrigin-RevId: 159645612\n\n---\nCommit f671c5caa authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 159570549\n\nPiperOrigin-RevId: 160182040'"
d778904d942dcfcda8d21fe990cbb4e20102cfe9,'Fixes to cuda_config.h.\n\nPiperOrigin-RevId: 160168545'
3faa4d2d9672fb6f8ba8f80a0df45dabeb5a3382,"""Fix missing variable unref\n\nDirect leak of 56 byte(s) in 1 object(s) allocated from:\n    #0 0xf5ee272 in operator new(unsigned long) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0xf5ee272)\n    #1 0x1b51394c in tensorflow::AssignVariableOp<Eigen::ThreadPoolDevice, float>::Compute(tensorflow::OpKernelContext*)::'lambda'(tensorflow::Var**)::operator()(tensorflow::Var**) const (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b51394c)\n    #2 0x1b5136c0 in std::_Function_handler<tensorflow::Status (tensorflow::Var**), tensorflow::AssignVariableOp<Eigen::ThreadPoolDevice, float>::Compute(tensorflow::OpKernelContext*)::'lambda'(tensorflow::Var**)>::_M_invoke(std::_Any_data const&, tensorflow::Var**) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b5136c0)\n    #3 0x1b50b289 in std::function<tensorflow::Status (tensorflow::Var**)>::operator()(tensorflow::Var**) const (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b50b289)\n    #4 0x1b50af88 in tensorflow::Status tensorflow::ResourceMgr::LookupOrCreate<tensorflow::Var>(basic_string<char, std::char_traits<char>, std::allocator<char> > const&, basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Var**, std::function<tensorflow::Status (tensorflow::Var**)>) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b50af88)\n    #5 0x1b50ac10 in tensorflow::Status tensorflow::LookupOrCreateResource<tensorflow::Var>(tensorflow::OpKernelContext*, tensorflow::ResourceHandle const&, tensorflow::Var**, std::function<tensorflow::Status (tensorflow::Var**)>) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b50ac10)\n    #6 0x1b512f1e in tensorflow::AssignVariableOp<Eigen::ThreadPoolDevice, float>::Compute(tensorflow::OpKernelContext*) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1b512f1e)\n    #7 0x1d1881c7 in tensorflow::ThreadPoolDevice::Compute(tensorflow::OpKernel*, tensorflow::OpKernelContext*) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0x1d1881c7)\n    #8 0xf96e0fe in tensorflow::KernelAndDevice::Run(std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0xf96e0fe)\n    #9 0xf94f9c8 in TFE_Execute (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0xf94f9c8)\n    #10 0xf94356d in TFE_Py_Execute(TFE_Context*, int, char const*, tensorflow::gtl::InlinedVector<TFE_TensorHandle*, 4>*, _object*, tensorflow::gtl::InlinedVector<TFE_TensorHandle*, 2>*, TF_Status*) (/build/cas/5d2/5d2be3b530580573ff7269adcab7cbac+0xf94356d)\n\nPiperOrigin-RevId: 160160101"""
3af6341edf4fe95f63f8857acfb6e0cbe0797a57,"'Use native compute capabilities as default (#10995)\n\n* use native compute capabilities as default\r\n\r\n* use existing binary, support windows\r\n\r\n* fix when unable to detect native compute cap.\r\n\r\nfix when unable to detect native compute cap.\r\nalso, windows & linux can use the same bin name\r\n\r\n* add comment\r\n\r\n* add some comment'"
838a19df11b53656d081447a74b7fb29aa18b5ac,'Fix typos (#11050)'
26cb8a192914a05d02a078729db6f4b26439ad0c,"'Arbitrary dim for tile (#10793)\n\n* add sketch code\r\n\r\n* add TileSimple on CPU, pass UT\r\n\r\n* add gpu implementation of Tile; add unit test\r\n\r\n* delete unused test\r\n\r\n* fix compile problems of gpu\r\n\r\n* delete unused headers\r\n\r\n* fix linking problem of Tile struct\r\n\r\n* use Tensor:tensor() instead of handcraft\r\n\r\n* merge tile_functor into tile_ops\r\n\r\n* add python unit test and delete c++\r\n\r\n* delete tile_op c++ unit test in BUILD\r\n\r\n* use Tensor::flat<T>() instead of Tensor::tensor_data()\r\n\r\n* remove cast; add high rank tile_op test in shape_ops_test.py\r\n\r\n* remove const cast\r\n\r\n* fix buildifer error\r\n\r\n* reorder BUILD\r\n\r\n* add tile_functor into makefile'"
708cbaf2f6bbbda931e7bf627ce5f840d9c92162,"""Merge pull request #11003 from bryandeng/dataset-readme-fix\n\nTypo fix in Dataset API's README"""
a0b919e00bafad743f128e847c4a994b539a80ac,'Merge pull request #11030 from windo/patch-1\n\ntest_session: fix doc formatting'
bbec8733500f65d2c55b97d1b18f6a6362cdf760,'Update momentum.py\n\nfixed a typo in the documentation'
337b7c8c6262bcc2ef00f5a636d7020e632aa32d,"'Fix multinomial doc-string, input arg logits expects to log-probabilities and not log-odds.\n\nPiperOrigin-RevId: 160036709'"
4a5d20ea257531659ed4ba7419e0d7c7a1cf53d3,'test_session: fix doc formatting'
90740259edb1ff2a858cac71075a8020cb4a18f8,"'[Build] Reduces build time for SYCL target (#10996)\n\n* [Build] Removes tensorboard from skip list since it has been removed\r\n\r\n* Improve SYCL config for Tensorflow (#98)\r\n\r\nOnly libtensorflow attempts to link against libComputeCpp.so now,\r\nother targets should only utilise the headers. Added more if_sycl\r\nstatements to BUILD files.\r\n\r\n* [Build] Fixes typos & linkstatic=1 -> linkstatic=0\r\n\r\n* [Build] Cleans SYCL dependency, linkstatic = 0\r\n\r\n* [Build] No need to link syclrt tensorflow/BUILD\r\n\r\n* sycl_runtime is needed in kernels/BUILD due to inclusion'"
0fbb0c45f9776879abf5620ed9be50ffb1e6626c,"'tfdbg: a few minor fixes and improvements\n\n* Let DumpingDebugWrapperSession and DumpingDebugHook create session_root if it doesn\'t exist\n* Add README.md to tensorflow/python/debug\n* Add section ""Debugging Keras Models with TFDBG"" in debugger.md\n\nPiperOrigin-RevId: 159976070'"
270a3e8886e352ad563a3431963296e3dc6dae06,'Windows: Fix CUDNN_INSTALL_PATH in ./configure (#11014)'
4cc35257f1f3613aae65a42b96e5ea5bba785f66,'Java: NativeLibrary: Fix URL in error message.\n\nAnd add some detail.\nInspired by #11015\n\nPiperOrigin-RevId: 159962478'
9bcc8ea8c476e1649680871ece9d8495e51a4b25,"""Typo fix in Dataset API's README"""
8744f832fe5de8e2e75961e55f8d173348d9f1c9,'Fixed cmake tests.\n\nPiperOrigin-RevId: 159901417'
07678fef5510d4a7c89d28b222ce72df49456a97,'Generating TBAA metadata causes the LLVM to miscompile after\nhttps://reviews.llvm.org/rL305938).  Disable TBAA (to stop the miscompiles)\nwhile we fix the root issue.\n\nPiperOrigin-RevId: 159895736'
338a7ead4475d6b97b420d6d1c56ff66815e3e7b,'[BatchNorm] Minor fixes to TF doc\n\nPiperOrigin-RevId: 159886125'
30db28e416b5b39f72abf78a225817556e38e399,"'Move sparse_fill_empty_rows to new, *significantly* faster, C++ kernel for everyone.\n\nAlso fix a bug in the C++ op when the input ST has 0 elements.\n\nPiperOrigin-RevId: 159880044'"
7a80e267e380dae8cfdafc4dd32ab782608be1f5,"'Fix bugs related to distributions over integers.\n\n- Ensure that the max number of categories does not exceed largest integer-form float.\n- Make dtype inference consistent between Categorical and Multinomial\ndistributions.\n- Improve documentation to better reflect that the Categorical\ndistribution is analogous to `argmax{OneHotCategorical}` (itself being\nidentical to `argmax{Multinomial(p,n=1)}` but not Multinomial.\n- Fix validation_args Heisenberg uncertainty: only validation logic should live under self.validate_args. E.g., validate_args=True would sometimes imply `x=floor(x)` which changes behavior thus making debugging impossible because enabling validation *changes* values.\n- Corrected `Geometric` swapping of validate_args` and `allow_nan_stats` default-values.\n\nFixes #10149\n\nPiperOrigin-RevId: 159872532'"
73d4647db1fc2fbfa6cc84895e783e3d49b1924e,"""Fix cuda_kernel_helper_test. std::numeric_limits<int32>::max() doesn't pass, so\nI didn't use that.\n\nPiperOrigin-RevId: 159869169"""
9c0d48a5352ef52eeb8451910b55ec8baf02433f,'Merge pull request #10981 from lukeiwanski/hotfix/cwise_op_invert\n\n[OpenCL] REGISTER -> REGISTER6'
a4536138a35427ca4928cc81b0e5f0ec8ee62e39,'Merge pull request #10988 from lukeiwanski/opencl/beam_search_ops_test\n\n[OpenCL] Fixes CUDA specific test run on SYCL (#56)'
f019f51fc6c71187ac3d0b6ac092b41609a1f6d5,'Merge pull request #10993 from lukeiwanski/opencl/run_metadata_test\n\n[OpenCL] Fixes run_metadata_test for SYCL'
f302975b58a70b95040062d73a817ff647bc6a79,'Merge pull request #10868 from tatatodd/xla_ir_array_fix\n\n[XLA] Add override of Permute to fix compile errors'
ad0892df1db853972245c5bb88e6952312cf8157,'[OpenCL] Fixes run_metadata_test for SYCL\n\n This test is designed to test CUDA specific behavior'
1076c0caec7f1fd136b4b7ac407109af7bc0e387,'Merge pull request #10962 from guschmue/win-fix-dbg-build\n\nexpand inline for debug builds to limit number of symbols'
bfc1c235bc23ef3909dcbbf4823cf34d209ce523,'Fixes some docstrings in feature_column.\n\nPiperOrigin-RevId: 159850619'
05c1dfa95c6cccc92ac2353834bac453a52310c2,'Merge pull request #10531 from llhe/rdma_fix\n\nImprove RDMA rendezvous speed'
8e59aa6cb0fae975bd7f4120eaa30f5c2f9afefa,'Merge pull request #10967 from taehoonlee/fix_typos\n\nFix typos'
1699d904afa9568db12d4948a330947048b68e96,"""[OpenCL] Fixes CUDA specific test run on SYCL (#56)\n\nThe testBadParentValuesOnGPU should only be run on CUDA devices, as the\r\ntest checks for particular CUDA behaviour. We don't actually provide a\r\nSYCL kernel for GatherTree and so it's not a problem that the tests\r\ndon't target SYCL."""
e525ed179eaa2c3b3d636b2cc80d287bc32bce0e,'Merge pull request #10948 from dgboy2000/master\n\nfix error string format'
df2b6a2ce183492f0fb276800d53608f4f4fd13b,'Fixes a TODO in head_test.\n\nPiperOrigin-RevId: 159789178'
72e2918ccd615691591c70c2200d3c25b8fd7d35,'Fix typos'
605d934665056bd9f30d1b34a91ff4cf0fc5172a,'Fixed the shape functions of the QuantizedAdd and QuantizedMul ops\n\nPiperOrigin-RevId: 159772841'
459cd698b10e0936be05cfda1ab26016302fb626,'Merge pull request #5 from tatatodd/master\n\nAnother try at the Permute fix'
e89f04d8013bd4e972228a74a02ab772370c8168,'Fix calling Literal member functions.'
5a25cba3423060cfff038a4e42606c74d44b6663,"""Suggest people need to do some build environment ./configur'ing.\n\nFixes #4279\n\nPiperOrigin-RevId: 159738412"""
15a8df724a9a426803a8e67d228eca683bd972a6,"""Fix mac build\nclone from meheff's change:\n[XLA] Change return type of DeviceAssignment::Deserialize to fix build\nbreakage on mac.\nThe mac build had the following error:\n\nerror: incomplete type 'xla::DeviceAssignment' used in type trait\nexpression\n\nThis was due to a static method returning a StatusOr<DeviceAssignment>\ninside of the definition of DeviceAssignment."""
bc691ddb09b3a33a462d63ff418e90007159156f,'Merge pull request #10957 from tensorflow/tfboyd-patch-2\n\nFixed path to seq2seq.py and minor formatting'
af7bf3950e745a03ed3c34e13fca0d421c4a6f7e,'Merge pull request #10955 from yongtang/10853-delete\n\nFix mismatched delete in mkl_tfconv_op.cc'
62fb49d314384ae86e974a0bd3bb85c78fbd7980,'Fix visibility error for contrib/remote_fused_graph/pylib/BUILD.'
4c75252f25eec9f787dd009566607fd21d354548,'fix initial test values to avoid numerical instability'
c0ea385ad482ae99ea08bedc20760829a74c9a88,'Fixed the scalar output for shard api when outputs_from_all_shards=True.\n\nPiperOrigin-RevId: 159726444'
b58d9835334758e9977600dedfaafe82119b815a,"'Fixes of AutoParallel bug (#10368)\n\n* Fix the bug that auto_parallel could replicate variable snapshot name\r\n\r\n* Use NodeName in grappler:utils instead of substr, convert variables->variable_def of grappler item\r\n\r\n* remove variable_def from grappler item, exclude snapshot nodes from dont_replicate_nodes in auto_parallel'"
41f3f76970726fe4ec2cd9e485a04e6f072a3bce,'Fix typo in docstring\n\nPiperOrigin-RevId: 159714414'
ed9d8d2d6065e96aebf5551a4f0e46601ff76821,'Fixed memory leak that can be triggered by a failed node evaluation\n\nPiperOrigin-RevId: 159707380'
97fcfdfa6ea86d54e71d76c947a4fd447e3fba12,'Fixed path to seq2seq.py and minor formatting'
8d2d639ef044c75fdd19e1c8bf4d1e91c6625652,'Fix a bug in the memory optimizer when two inputs to a node are both recomputed\n\nPiperOrigin-RevId: 159700457'
8d42202b2a7066fe51da707a304d3ba43f4b6178,'Fix mismatched delete in mkl_tfconv_op.cc\n\nThis fix fixes mismatched new[]-delete in mkl_tfconv_op.cc\n\n(the file went through clang-format so there are some additional\nchanges)\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
26301bd5582d8591797af350ed1734fe7a21c800,'fix error format'
9e4fa8ebbd5e99d1a0b3eda2272c3061febf7fa8,'Merge pull request #10772 from Intel-tensorflow/mkl-biasaddgrad-fix\n\nChanging context search for BiasAddGrad rewrite from BFS to stricter check'
49292d15d22cf685516dc34711f7b0aae6dbb1e1,'Merge pull request #2 from tatatodd/xla_ir_array_fix\n\n[XLA] Explicitly instantiate Permute template func'
eb197c45eda55b1047b00f1136a4fec2b8adb2d5,"""[XLA] Explicitly instantiate Permute template func\n\nThis is an attempted fix for older compilers that can't deduce the template args."""
3b3a582e3e80accc8ee77b85f79f8d9ad1e4cdb0,'Fix typo in comment. NFC.\n\nPiperOrigin-RevId: 159587442'
9cc14c65b282d638c126c06011dec76595da057c,'Merge pull request #10841 from taehoonlee/fix_references\n\nFix references'
e3315f31d63df745d42d3d449e217fb16e43b03b,'Merge pull request #10846 from hbrammer/patch-1\n\nFix Java OperationBuilder documentation example'
e35dc9b5ce3e47d148ae7b13804cbedc2b9115da,'Fix off-by-one error in oov bucket docstring\n\nPiperOrigin-RevId: 159572763'
f580c21053c47a12b3b816cc50c261479f36db5d,'Fix TensorForest feature bagging when using feature-column data.\n\nPiperOrigin-RevId: 159566463'
95d91a3e065d7ddd3a0201af61e5e78330449d37,'Minor docstring formatting fix.\n\nPiperOrigin-RevId: 159558652'
9c88b5ee38e83c9b75bf6785ff99293a87691a79,"'Fix Java OperationBuilder documentation example  \n\n""Constant"" is not a registered Op type, ""Const"" is.'"
73af9bfa58dc1ff9df09fe9495e9658f778f6dc7,'Improve layout assignment for reshape.\n\nCheck if the default layout can be used to reach a bitcast instead of checking if it is a bitcast with MajorToMinor layout.\nAlso avoid propagating padding. This fixes a bug where a copy which is a bitcast (except for padding) is not optimized away.\n\nPiperOrigin-RevId: 159539895'
38615cb8ad4c02dc6050c6b895b781e59e5609f1,'Fix references'
0d0b62f32a0939ac75cebcf0057d295e3a194c8d,"""Fix grappler's layout optimizer when the input to a conv2d doesn't have explicit output dimensions.\n\nPiperOrigin-RevId: 159504189"""
6457f0df532033114adc1768b375a5e168543ad4,'Documentation fix: Referencing correct pip in installation examples (#10831)\n\n* Documentation fix: Referencing correct pip in installation example\r\n\r\n* Documentation fix: Referencing correct binary packages in installation examples'
09d090282667e28ed04547ee0dcf1b6faba75659,'Fix a bug with sharing Keras models that feature internal losses.\n\nPiperOrigin-RevId: 159446295'
448f23bd57de5e94385f2bd01e7fb19e6aec2611,'Fix typo in contrib.image documentation.\n\nPiperOrigin-RevId: 159444685'
affc8b084284125ac366d53b63dda7f57eb2d12a,"'Fix warnings.\n\nFixes #9138.\n* lstm_ops: use_peephole checked twice, merged ""if"" bodies.\n* unpack_path_op: cast to 1LL for shift to operate on full range.\n* sample_input_ops: add CHECK to ensure that sparse_input_start is\ninitialized.\n* function: make sure we deref ""e"" after checking for nullptr\n* master_session: remove unused variable\n* encode_jpeg_op: remove double assignment\n* resize_area_op: use unused variable\n* strcat: remove double parentheses\n\nPiperOrigin-RevId: 159443547'"
7c10b24de3cb2408441dfd98e1a1a1e8f43f3a7d,'Merge pull request #10753 from taehoonlee/fix_typos\n\nFix typos'
8e7c2c180c4b75768c707d66c9080ee06ee72773,'Cleanup and build fix of hexagon controller\n\nPiperOrigin-RevId: 159291812'
085d73e3caef61e11deb88523ba6168d5b87e5eb,'Merge pull request #10778 from av8ramit/mergefix\n\nMerging r1.2 back into master.'
226b193e709bd513400f2d74020b02d90cd3a0a0,'Fix a typo in a comment; NFC\n\nPiperOrigin-RevId: 159289106'
b0cd3cfeec5970e987b0946376148b18948ef95f,"""Fix check for buffer interference with While instructions.\n\nThe attached test case fails because\n`AddWhileSetToColocatedBufferSets` does not take into account the\nenforced aliasing between the input value and the result for the While\ninstruction it wants to add to the co-located set.  It does take care\nof the enforced aliasing for the While instructions already present in\nthe co-located set though, so just do that for the new while\ninstruction we're try to co-locate as well.\n\nPiperOrigin-RevId: 159284279"""
f0ff37b9073f60fae052545796e93fa82dc4604c,'Fix #9392 (#10782)'
940d968347eccd4afded06603b4d63eedc721a16,'fix incorrect usage of num_gpus & num_workers (#7312)'
8181addd149383b2b31f589bb530b676645e5c6e,"""To fix link error\n\nTo fix link error when building //tensorflow/cc:tutorials_example_trainer\r\nThe local environment is centos release 6.8 (Final), gcc 4.9.2, bazel 0.5.0.\r\nError detail: /opt/rh/devtoolset-3/root/usr/bin/ld: bazel-out/local_linux-opt/bin/tensorflow/cc/_objs/tutorials_example_trainer/tensorflow/cc/tutorials/example_trainer.o: undefined reference to symbol 'clock_gettime@@GLIBC_2.2.5'"""
b4e4008ed5e2ee0bb1123c9422361ce189df8e4c,'Fix maven'
c3160293b12b77202be3388da994f6ef9f768051,'Fix install_proto3.sh'
ce717be4a2966a268e9a4831c39254b611f1c9e7,'Fix sanity status reporting.'
e6acff2a05ac633c086e581bda96d0dd91a1e142,'Fix a bug in topk_op.cc'
76a0a15cb90c370e41766d124a7a11b28c18089a,"""Fix shape.go's Size function.\n\nFixes #10741."""
1111e06d9cd691cbdfcb67cf9f234a504f4e0f6d,"""In filter_dataset, if the element doesn't match, clear the output.\n\nPrior to this change, the output tensors list wouldn't be cleared\nif the element didn't match, so output_tensors would be appended to\non the next iteration, violating the number of inputs contract for\nthe filter function.  The new test exhibited this problem.  By\nclearing the output tensors list when the element doesn't match, we\nreset the state back to empty, maintaining the invariant at\nthe start of the loop.\n\nFixes #10725.\n\nPiperOrigin-RevId: 159242269"""
6c4735a07e15cc3a32d82637c33d82c0536bab0c,"""Add fixed-grid ODE integration routines.\n\nI'd like to have lighter-weight ODE integration ops available since doing backprop through integration with adaptive step size control is much more time consuming.\n\nAlso:\n* Ran g4 fix on odes/odes_test.\n* Reordered some of the code in odes.py. (E.g. IMO better to have public functions first.)\nPiperOrigin-RevId: 159225626"""
319c847d9446f6d15675a31abb86b8a9728dcc02,'Merge pull request #10758 from jwlawson/sycl_grpc_test\n\n[OpenCL] Fixes grpc test failure for SYCL devices'
d1630d4d15407aac5fe428e7193f4b4dc5edc191,"""[OpenCL] Fixes grpc test failure for SYCL devices\n\nThe test constructs a graph containing an IdentityOp on strings,\nwhich doesn't exist on CUDA and SYCL devices. The test expects to fail\nfor CUDA devices, so add the same expectation for SYCL devices."""
3ca692ef01038c05b02c87236eaa405159dae6ed,'Fix alloc attributes'
dbde3987ca1f8451cb58dee1b23aee20e60a702a,'Fix typos'
6a6ef4f712d2a33d24597cd3ba5165ccbdb4a83d,'Removes the links to the (non-existent yet) api guide for estimator. This fixes broken tests.\n\nPiperOrigin-RevId: 159161935'
525b0f05839779e40d0ca9cc2967a3886b6a0f4d,'tfdbg: fix race condition in picking graph file names\n\nby adding a hash to the _tfdbg_graph_* files\n\nPiperOrigin-RevId: 159122097'
9fb4589acd0d126e38de1c9066946c6d3075af36,'Fixes len() of unsized object error in DataFeeder due to incorrect object type'
922fe29b37efe127e4a8b4344ed02b3edb0173d4,'Point slice users to Tensor.__getitem__\n\nFixes #4516\n\nPiperOrigin-RevId: 159062204'
9235dcb638617c666cc4d14ea770131c3b767173,'Fix a flaky test in graph_transforms:transforms_test\n\nPiperOrigin-RevId: 159044391'
e16d717e0be08c7d4b9f2455dec356c853cb7225,'Fixed a typo\n\nPiperOrigin-RevId: 159038125'
69bc160235e245171b85017de8ca486a391e54c9,'Fix #10199\n\nPiperOrigin-RevId: 159030457'
fa3884883d0a44c2289a7858734c8dabb979da96,'Fix xla/service tests with new Slice API (includes strides)'
0ba4f7995773c5dd74c13f0ef002c168548f33f4,'Fix up strided slice changes post review.'
51c9b3ab4553acf6f18278e3a66c532e92b95be8,'Fix documentation in _SliceHelper #10494 [WIP]'
a7c36173cabcc1289a836e8143accb5f0914b19a,"""Use a non-recursive DFS in HloInstruction::Accept to avoid stack\noverflow on deep graphs\n\nEven with this fix, we don't finish compiling the exact test case from\nb/38494745 in a reasonable amount of time (we spend a lot of time\ninside HloInstruction::FusionReusesParamElements::ComputeInternal, for\ninstance), so I've used a smaller graph depth for now to avoid timing\nout the test.\n\nPiperOrigin-RevId: 159026595"""
f5fcd1fdcf896f46aed03c7e61525b48b75d1acc,"""[tf.contrib.data] Avoid blocking a thread-pool thread in OneShotIteratorOp.\n\nPreviously, it was possible to cause a deadlock by running multiple instances of\na OneShotIteratorOp concurrently, because each instance would occupy one of the\n(finite) inter-op thread-pool threads, and the initialization function requires\nat least one free inter-op thread-pool thread to complete.\n\nThis change moves the execution of the initialization function off to\na thread-pool thread, and avoids performing any potentially-blocking\ncomputation under the OneShotIteratorOp's mutex.\n\nFixes #10519.\n\nPiperOrigin-RevId: 159022212"""
87f67e4517579a9be8b69a56a566c035935ebd5c,'Restore LMDBReader and fix the tests so that they work on read-only filesystems.\n\nPiperOrigin-RevId: 159006787'
12f033df4c8fa3feb88ce936eb1581eaa92b303e,'Merge pull request #10710 from av8ramit/fix_numpy\n\nAvoid upgrading tensorFlow dependencies when running windows tests. (\xe2\x80\xa6'
2d29a4ebf514f7afb70108b1f5ae84c866740f1a,"'Remove tf.RewriterConfig from the TensorFlow Python API\n\nThis is an API-only change. Rewriter behavior is unaffected.\n\ntf.RewriterConfig has been excluded from the 1.2 release, and was not in previous releases, and so is not subject to semantic versioning. It needs a bit of work before we fix an API.\n\nGraph rewriting is still available, just not as tf.RewriterConfig. Instead add an explicit import:\nfrom tensorflow.core.protobuf import rewriter_config_pb2\n\nThen switch tf.RewriterConfig to rewriter_config_pb2.RewriterConfig (likewise\nfor tf.AutoParallelOptions).\n\nGraph rewriting is subject to change, and has no API stability guarantee.\n\nPiperOrigin-RevId: 158991934'"
98aaa44bff5292f6c3881a2b6489f9f2c9ff9dc2,'Fixes formatting of the example.\n\nPiperOrigin-RevId: 158955376'
5cb84a73356d698ed1ed5f0d2e8ea38075b029ca,'Fixed links in readme.\n\nPiperOrigin-RevId: 158948423'
4c0052dc4b7c49a876166113b49960a57f7db939,'Added uint8 registration for addition operation (Fixes #10447)'
950a38564daf52c085894ba4fb793301b317f4db,"'Modifications per recommended changes.\n\n* Document Scope as not offering thread-safety\n* Remove synchronized sections within Scope\n* Restrict withName() and withSubScope() to only allow names matching\n  [A-Za-z0-9.][A-Za-z0-9_.\\\\-]*\n* Consolidate tensorflow and tensorflow_op into one BUILD target\n* Fix mistake in opname in Javadoc example\n* Change method qualifier in inner test classes to default\n* rename baseName -> opPrefix, baseOpName -> opName'"
833252af72af56661aefb0541163109132f9d4a6,'data_flow_ops.py RecordInput multiple batches for dividing processing among devices.\n(+6 squashed commits)\nSquashed commits:\n[f0a251e] data_flow_ops.py RecordInput python 2 & 3 compatibility\n[efcc547] data_flow_ops.py op namespace fix\n[41e060c] data_flow_ops.py and record_input_test.py style + syntax fix\n[faacef7] data_flow_ops.py typo fix\n[eab2446] record_input_test.py test covers RecordInput split batches\n[ab4d4ba] data_flow_ops.py RecordInput multiple batches for dividing processing among devices.'
3df6e18b59b63ea4f5b68ba8c8ec878940a1ada1,'Fix reset_uids Keras layers utility\n\nPiperOrigin-RevId: 158935673'
0d47cca0f3048903078d2908c69265323d8e2d41,'Fix the f16 implementation of Literal and LiteralUtil'
c346d6f3c2771dcb553277ef6db32870b1cd2916,'Fixed a bug in LRN'
5d8a1af21147f2c1d1bf358d2956a9c391be9ba3,'fixed type in intermediate word'
1d8508bf70e5a1726bfaade8fddb84fde5c6d73b,'Fix typo in bazel command'
f780f4ba36130202c1c33c2039f2c1a108f3530d,'Fixes python doc for tanh (Resolves #10376)'
11e117ad20d2d07fd54ce52131f56d8155e8476f,"'Fix typo, as far as *is*'"
dc6dfa0e911cae66e3ab91b0c2f63b2029db395a,'Minor fix typo'
bdff1828d9e40b6e2d8d989f6e9588af2decc6a7,'Fix typos'
8ae96864e0f187f7a137c769f41950982e747e50,'Fix minor typos in lookup_ops code samples.'
549c223ab71f0066a444ba0f969affbecc28f116,"'Squashed commit of the following:\n\ncommit 825ff55cbfb8b059f3d2b4a5ace9c4bacedba69b\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Sat May 20 18:39:24 2017 +0100\n\n    Merge example backend back from github\n\ncommit 7bea64415c437bda1d90dccadb34a82a22b57bb0\nMerge: da9d00c 0fb5317\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Sat May 20 18:26:35 2017 +0100\n\n    Merge remote-tracking branch \'github/example-evaluator-device\' into poplar-plugin\n\ncommit da9d00c693276e136354c9879fd9715d39927f05\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Sat May 20 18:10:12 2017 +0100\n\n    Fix to match new compiler API\n\ncommit dffec8216851941f1854f08a11fc0cf6b59dcb96\nMerge: 650ca51 2803742\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Sat May 20 17:52:23 2017 +0100\n\n    Merge branch \'poplar\' into poplar-plugin\n\ncommit 650ca5166cfea1b10ce80e859a6ea0a7e01e7d95\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri May 19 13:19:08 2017 +0100\n\n    Remove cases which would cause errors - types not supported in back end\n\ncommit 65d11c99ae681e56f949147728dd5e3a255f2086\nMerge: d43762b 0b52c33\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri May 19 11:04:00 2017 +0100\n\n    Merge branch \'poplar\' into poplar-plugin\n\ncommit d43762bab4a080b20f77f21ca2309b4c2dc71a84\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri May 19 10:56:47 2017 +0100\n\n    Modify example plugin to be hlo executor plugin\n\ncommit 191041a633ffac323a5807ca86c455dce9d31af6\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu May 18 18:38:27 2017 +0100\n\n    Add outliner for convolution and matmul\n\ncommit 016aad4596ebaade307f453938da2cb94c464998\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu May 18 09:04:50 2017 +0100\n\n    Add poplar to the build and test environments\n\ncommit 97ba294bd93d339109284fcbc441b3e989c77dd1\nMerge: 3ef9673 319b6ce\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu May 18 08:54:49 2017 +0100\n\n    Merge branch \'master\' into poplar-plugin\n\ncommit 3ef9673cd9f5f9b134b0bf62f458f490ba0ae02a\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed May 17 16:46:49 2017 +0100\n\n    Use TF style names\n\ncommit 14226054994e5dc5d8215d0f2fdbe2a35b4a8f02\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed May 17 16:45:42 2017 +0100\n\n    Rename the visitors - \'Poplar\' was extraneous. Introduce a ComputationMap\n\ncommit 003b558a2f3992f8cd1fdeff8475bec3fe774b3c\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed May 17 16:23:31 2017 +0100\n\n    Clear the tensor map once the visitor is complete. Save memory.\n\ncommit 3feacafa0ec5f292f5096b83f3fec2f5ee7c42a4\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed May 17 14:09:43 2017 +0100\n\n    Use the explicit poplar IEEE half type\n\ncommit 58c3c663c048b7f241b9f605083598ba3c79bfe2\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed May 17 09:51:32 2017 +0100\n\n    Remove file added by mistake\n\ncommit ed8b1b80655a950d235a691e30674d382d71cd6b\nMerge: f3a2028 513b1e4\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed May 17 08:55:50 2017 +0100\n\n    Merge branch \'poplar\' into poplar-plugin\n\ncommit f3a2028a0d70081119215f439657b8d8bf54e021\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue May 16 16:18:50 2017 +0100\n\n    Change a few more C-style casts to C++ casts\n\ncommit 47c0ba4a97c0b253debd0ee9363efdcf81cd651d\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue May 16 12:54:50 2017 +0100\n\n    Actually increase the report counter during execution\n\ncommit a976886d4d28a47b1815637a03abaa543c612c9c\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue May 16 12:09:22 2017 +0100\n\n    Append a serial number to the report name\n\ncommit 2cecfda4fe2ae6617e882ad511772ed5c57bc63c\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue May 16 11:49:58 2017 +0100\n\n    Ensure non native types pass through the API\n\ncommit 8500cf6a9bebeea41294afa8627f6aaecdb1e553\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue May 16 11:47:35 2017 +0100\n\n    Add back \'map\' line for mapping single tensor entry across a\n    parallel map.\n\ncommit 1abec49a00728662f7a21692a95425409173c8e0\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue May 16 10:08:32 2017 +0100\n\n    Add 2 extra F16 tests\n\ncommit c5a230b063283db72a064f489ecd709ad42d8c4e\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue May 16 10:07:52 2017 +0100\n\n    Prune unnecessary code\n\ncommit 512fb5848ae53d5209c8928153f0952a2e4810b4\nMerge: 1cff3a3 c03d5cc\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue May 16 09:30:37 2017 +0100\n\n    Merge branch \'poplar\' into poplar-plugin\n\ncommit 1cff3a3aa3b6356f3c4a0e315f10795d7b948feb\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 15 15:51:33 2017 +0100\n\n    Use an alternative form of local initialization\n\ncommit e2c8ffdb9ce6d39003ad4b588f27abab76978d12\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 15 15:44:48 2017 +0100\n\n    Changes after code review\n\ncommit a39423081215a237ab480b12b140a289a7069490\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 15 13:18:06 2017 +0100\n\n    Fix up remaining F16 issues\n\ncommit 68468ecbaf72447c2a7233a2cc9815847c3e3856\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 15 12:54:48 2017 +0100\n\n    Merge F16 literals back into working order\n\ncommit 2ede7f56811997e0e9a408954989a74d027c1be5\nMerge: dd14ec7 a8271ea\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 15 11:44:23 2017 +0100\n\n    Merge branch \'poplar\' into poplar-plugin\n\ncommit dd14ec708dde6081d3125fb3c54beb4b5974b7b8\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 15 11:00:57 2017 +0100\n\n    Don\'t run on into the error condition\n\ncommit 26d3d5937933bc2b4398e7d5f2f6b6b99874242c\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 15 10:32:41 2017 +0100\n\n    Add literal support for F16\n\ncommit 1344cbaa6fa967db8f66e507acf5eedcf171d16e\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 15 10:29:57 2017 +0100\n\n    Add support for F16\n\ncommit 886d12fded4e8d93b894f4f0eb8fe95216d8bb58\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri May 12 16:27:21 2017 +0100\n\n    Remove commented out code\n\ncommit b135b8e48db110705fd1664fcc4665eb6a357ec1\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri May 12 14:30:41 2017 +0100\n\n    Don\'t flatten sub-computations\n\ncommit dec6948bc984aa891c2d6c2c8f652cac61ff8c73\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri May 12 13:39:40 2017 +0100\n\n    Revert ""Use the poplibs unary and binary ops""\n\n    This reverts commit b5f0731e4f9f496facf1e49c59ff765adac352ab.\n\n    Do not use popstd until the predicate operations can be used as the\n    predicate in a loop operation.\n\ncommit b5f0731e4f9f496facf1e49c59ff765adac352ab\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri May 12 11:37:40 2017 +0100\n\n    Use the poplibs unary and binary ops\n\ncommit e502f175e020e5d10c800e0cca09c1d57725278d\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri May 12 10:13:19 2017 +0100\n\n    Use a renet18 that matches the poplar example\n\ncommit 3fe1e6603f79ba0544258475db8495f287484aca\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed May 10 12:10:40 2017 +0100\n\n    Implement strides > 1 in strided slice\n\ncommit eb48ef25113f43f5c7efa6cd907aa01db1287dea\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue May 9 17:04:51 2017 +0100\n\n    Correct resnet18 to match poplar one\n\ncommit 5bd02f276f7110a49616935d90c615b570ba2b40\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue May 9 11:47:47 2017 +0100\n\n    Add inference only resnet18\n\ncommit 8b7ec31229c2e64fe86fe517e247dac183597354\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue May 9 10:20:04 2017 +0100\n\n    Use the 2D asym padding interface\n\ncommit c34da4ac61894c6f4dae21e1b89a93b995d30c7e\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue May 9 08:12:06 2017 +0100\n\n    Move poplar to the plugin subdirectory of XLA\n\ncommit 5bed1a6e437e2a6a3932daa077211f89e62222e4\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue May 9 07:13:31 2017 +0100\n\n    Include options for additional tags\n\ncommit 064cc96d84059830c54ee07699fac26ae928669d\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue May 9 06:58:58 2017 +0100\n\n    Allow for multiple  backends\n\ncommit fdbad354d3bd040922bb71ac58d4276ed4364e43\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 8 18:09:11 2017 +0100\n\n    Need to reference the device target\n\ncommit 06be2c080c9f331fc6fbd1c13c81d9c0c251d383\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 8 18:08:56 2017 +0100\n\n    Add example\n\ncommit 63824e015fdba6b532e70923a485042fc2c73a9a\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 8 16:32:36 2017 +0100\n\n    Use a permanent config file scheme for plugin inclusion\n\ncommit 6c494391a461c1b704de3a97ad1c871bc1a57363\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 8 15:50:38 2017 +0100\n\n    Remove poplar device from the config file\n\ncommit b76285ee9a543f0d5311da95c8b12599f2d240fe\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 8 15:49:27 2017 +0100\n\n    Add useful message to unchanging file\n\ncommit 461262231e5a808fdbb1d7d8ee35bf068c3372f7\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 8 15:46:31 2017 +0100\n\n    Remove file in repo from the .gitignore file\n\ncommit 2824a392dedef8c6f3f635abe6af6c3485222155\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 8 15:40:52 2017 +0100\n\n    Try using an alternative form for plugin unit test management\n\ncommit 523f4d86a88fe1ba09bc08546421404aae154d3b\nMerge: b52de99 7fa0cf3\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 8 14:42:23 2017 +0100\n\n    Merge branch \'master\' into poplar-plugin\n\ncommit b52de99eac16d92bec107baf1892ad2b6d04e3a9\nMerge: 89d9f1c b25f77a\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon May 8 14:40:58 2017 +0100\n\n    Merge branch \'poplar-plugin\' of ssh://phabricator.sourcevertex.net/diffusion/TENSORFLOW/tensorflow into poplar-plugin\n\ncommit b25f77ac25231c5d252dddd67a79531668ad3e10\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu May 4 13:58:13 2017 +0100\n\n    Use new interface to popconv\n\ncommit 89d9f1cef59683b9c92dd5a460b6b49dec63c817\nMerge: 9c15cd3 d0042ed\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu May 4 13:45:50 2017 +0100\n\n    Merge branch \'poplar\' into poplar-plugin\n\ncommit 9c15cd34f9063c9f72b4830b2254c29b4cf04c41\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed May 3 13:31:47 2017 +0100\n\n    Use the new interface for constant tensors\n\ncommit afd3515f96b84cdc33e012b3f612500b04ae5e5c\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed May 3 13:11:08 2017 +0100\n\n    Add configurable XLA plugin target\n\ncommit d546c6af20f00ba9a95b556859b807141358006c\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri Apr 28 13:08:53 2017 +0100\n\n    Map the weights and input of the conv op\n\ncommit 63717e54f327a3fe8d46adce01f84c1475b9eefc\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri Apr 28 10:52:19 2017 +0100\n\n    Add some vector/vector ops\n\ncommit 9fd1dab83a21addceed2fd99cd7c996869b3a36c\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri Apr 28 10:11:19 2017 +0100\n\n    Defend against the second argument to Dot having rank=1\n\ncommit dcdbec503ecd6b18f0b67a73cfea2b2151304430\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 27 17:00:43 2017 +0100\n\n    Add the compute time to the execution stats\n\ncommit 9fffb3e4bc24c0ebb2949d20b1ebfa97d95dfa29\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 27 16:33:46 2017 +0100\n\n    Commenting TensorControl, and yak-shaving\n\ncommit c265cf225fd04b037d46bbdda65c03baa25178e2\nMerge: 049a390 6a1825e\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 27 14:20:15 2017 +0100\n\n    Merge branch \'poplar\' into poplar-plugin\n\ncommit 049a390ba39a0bade0a20b11f1005f1f628994b2\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 27 14:10:43 2017 +0100\n\n    Do not map constant tensors\n\ncommit 55026d88393d8e9c7399f500781742b9b0d9e5df\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 27 13:46:01 2017 +0100\n\n    Correct error message\n\ncommit e4c170681a07e696727a39b3a1ec220e4effff07\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 27 13:39:37 2017 +0100\n\n    Switch the cast operator to the poplibs version\n\ncommit 1bf20150b1d374ec65c4a344c131b67d28aa9507\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 27 12:29:07 2017 +0100\n\n    Add TODO comment regarding type support\n\ncommit 3f839f03e75a7f35e824fdcc1c7b454fad68f40c\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 27 12:28:15 2017 +0100\n\n    Remove bool as a type in elementwise predicate comparison inputs\n\ncommit 825e42b568fa11238939f4e51b776851144ce1ad\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 27 12:26:20 2017 +0100\n\n    Use a more general exception catch\n\ncommit 219b1c9a894292a16b1d15e44b1524dca1180262\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 27 12:25:26 2017 +0100\n\n    Remove Dot now that it is supported through poplibs\n\ncommit df45b0ac0ad5c49514206a17429a299ce878bb95\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 27 10:24:56 2017 +0100\n\n    Update to latest poplar convolution interface [WIP]\n\n    There should be a look-forward output tensor generator, but this\n    should wait until popconv has more natural tensor shapes\n\ncommit 794420e3d04912708239bb7ee6c506e065dc8ca8\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Apr 26 13:17:28 2017 +0100\n\n    Remove \'dot\' operator from vertices - now supported by poplin\n\ncommit 71713580f399f1c16b67935d21ee3b7ad5c32280\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Apr 26 10:02:41 2017 +0100\n\n    No need for explicit device now that poplar XLA will consume all relevent\n    ops\n\ncommit 370f3dc689b7b9e9bb9452f2693062a28157ad0a\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Apr 26 09:46:12 2017 +0100\n\n    Ensure that poplar XLA device will consume appropriate operations\n\ncommit 911b4f0ff9d72b83f1c5d29336671c13a34bb54d\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Apr 24 14:52:39 2017 +0100\n\n    Adding resnet18 as an example\n\ncommit c8a62d8c9082f8ed9b5b6b302b86ce0fb97ce53c\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Apr 24 14:35:56 2017 +0100\n\n    Adding a resnet50 example and a reduce test\n\ncommit 09a8ba2a57c33f9bb814e26bb5dbf2665684311e\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Apr 24 09:31:02 2017 +0100\n\n    Add some extra optimization stages to the pre-poplar compilation\n\ncommit ac94c5d5a04b5676d1a372c34e289d7d907a1ed4\nMerge: ec72868 34c738c\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Sun Apr 23 11:57:30 2017 +0100\n\n    Merge branch \'poplar\' into poplar-plugin\n\ncommit ec72868b4a386dae1e4b6cb1db5b98f3fc39d754\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri Apr 21 14:22:26 2017 +0100\n\n    Defend against unequal paddings (not supported by poplar at the moment)\n\ncommit 9501a99c44a2a7da0ff1e395c0e71208a9105da4\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri Apr 21 13:50:00 2017 +0100\n\n    Use a convolution plan cache\n\ncommit 82d5ad61177e7fa019acb985e0957b38ad94a6d9\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri Apr 21 11:37:16 2017 +0100\n\n    Create and use a popconv Planning cache\n\ncommit 4204cd2ed8511999a9c39a7721414b763f57ba76\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri Apr 21 11:31:36 2017 +0100\n\n    Add a \'compiler resources\' struct that can contain per-compile\n    resources for the operations.\n\ncommit 621b5ab030f9cac8e5fece86588fffd8e855f466\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri Apr 21 11:00:48 2017 +0100\n\n    Use the poplin matmul operation - and extend unit tests\n\ncommit eaa794dc5903b9a0857f22e1694b53921e2872ac\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 20 14:52:23 2017 +0100\n\n    Remove unnecessary trace\n\ncommit 02ff849be1ed325dc2453fc8f284ba2261daf326\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 20 14:47:59 2017 +0100\n\n    Separate the main visitor into an elementwise only one, and a full\n    one.  Also separate the call and map visitors so that the map one\n    doesn\'t get to include non-elementwise operations.\n\ncommit 42beb6e5e06f801660b5ed5191f29b3afe63dcf9\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 20 12:22:12 2017 +0100\n\n    Update method signatures to match public HEAD\n\ncommit a852939acb762a38d8093038340605b41d9573aa\nMerge: 7131c8f 0557e8f\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 20 11:59:01 2017 +0100\n\n    Merge branch \'poplar\' into poplar-plugin\n\ncommit 7131c8f56be426a38f944adeb9ef54c1769322b6\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Apr 19 14:10:24 2017 +0100\n\n    Update to use the current popnn convolutions\n\ncommit a434949178c9cda52efb324c905f57b4c67e1c31\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Apr 18 16:41:27 2017 +0100\n\n    Add options to create poplar report, vertex and compute graphs\n\ncommit 7864a4ea1c585f7db4072d0a8413a0803aa1c345\nMerge: 9e573f6 fdbeae6\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Apr 18 16:00:18 2017 +0100\n\n    Merge branch \'master\' into poplar-plugin\n\ncommit 9e573f67a90fbd18d8a2d56ac2f156d9b4a7c506\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Apr 18 14:06:48 2017 +0100\n\n    Add an examples directory and one mnist sized convolution example\n\ncommit e8c2af0db8fea45f8805fada47dcdad80d808430\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Apr 18 14:06:10 2017 +0100\n\n    Remove redundant build script\n\ncommit 755587b79a297ce93fee2a1a52b346ed131535e2\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Sun Apr 16 23:37:04 2017 +0100\n\n    Null engines must be just parameters, or tuples of parameters. Execution\n    of null engines means remapping arguments and nothing more.\n\ncommit 1053f5476d2bdd0fc3295e019be17c665c5af36d\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Sun Apr 16 14:45:39 2017 +0100\n\n    Identify when an engine has outputs that are unchanged inputs\n\ncommit c99a7638d2dace9a25cb06b64b45e2902b15d08a\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 13 13:30:48 2017 +0100\n\n    Do all engine execution in a mutex.  The execute function can be called in\n    multiple threads.\n\ncommit 8b6564ff83aeba8e263f2b61119a85662e7ae481\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 13 12:07:56 2017 +0100\n\n    When a buffer is pre-allocated but is part of a tuple result, ensure\n    that it has the correct reference count\n\ncommit d396b521b7ec28eb3938d723061c44920da908a6\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 13 12:07:25 2017 +0100\n\n    Track buffers from input to output, and reuse them when they remain the same\n\ncommit 064e528958bbed964b4a9688be91d7e1b63d82b5\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Apr 12 14:10:49 2017 +0100\n\n    Add using in place updates for suitable operations\n\ncommit 91dc95013c9563e321eb2ea447cd2c03e4387714\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Apr 10 17:22:39 2017 +0100\n\n    Update to use latest poplar release\n\ncommit c51bd5406f92a3be9b01dc0313efde743eedc24f\nMerge: 3985eb4 901ab86\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Apr 10 15:39:54 2017 +0100\n\n    Merge branch \'master\' into poplar-plugin\n\ncommit 3985eb4a7aebaacbb1ec3ed615bfcc3590a8adac\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Apr 10 15:22:51 2017 +0100\n\n    Fix error where invalid array index was causing data to be left on card\n\n    Data was being overwritten.\n\ncommit f85d00fe2343aebc0eb6a67bdce11cc6cdf30cd8\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Apr 10 15:21:46 2017 +0100\n\n    Adding a multi-run test to the variable ops\n\ncommit 513620259f0a0e08c59c35a436617065186fdda4\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Apr 6 10:37:16 2017 +0100\n\n    Add locking around executor members\n\ncommit f97ce7c3c2f11a8dce72ab1fcbb6b8f04098cfd0\nMerge: 2008f50 b93a88f\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Apr 5 18:29:49 2017 +0100\n\n    Merge branch \'master\' into poplar-plugin\n\ncommit 2008f507dc3b7596b6e424c00811d9bb8a512679\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Apr 5 15:46:07 2017 +0100\n\n    Remove unused constants\n\ncommit 6062d14d6779ceb2347f528144a3399ad688376b\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Apr 5 14:58:14 2017 +0100\n\n    Cache tensors on the device where possible\n\ncommit 85cca2c4b8749f57b794cf58d062736bb1547483\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Apr 5 13:27:37 2017 +0100\n\n    Remove unnecessary logging\n\ncommit 0ecd7caf103a08a89158929f69f6fef0c3df697b\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Apr 5 11:05:51 2017 +0100\n\n    Use VLOG instead of LOG, and add some extra logging for memory management\n\ncommit 7954e4a0f06305b9df685dc07c3eda12a8deb849\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Apr 4 15:59:49 2017 +0100\n\n    Remove redundant test\n\ncommit 739fec7c72a1d4acd71a879465b88719aa3c2be4\nMerge: 04dbae3 8908272\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Apr 4 14:48:36 2017 +0100\n\n    Merge branch \'poplar\' into poplar-plugin\n\ncommit 04dbae3d9a90d509b73ba87355705530b8144eee\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Apr 4 14:21:21 2017 +0100\n\n    Add while op - and support for RandomNormal\n\ncommit 61fd01f9a8c845bafac1b7da12dd30c0eead91cc\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Apr 4 14:20:10 2017 +0100\n\n    Use the new macro for registering the device ops\n\ncommit 6b8d4f91ae02984dc5a9ab3680e4f28469d8bf5d\nMerge: 6caeb7d a6008d5\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Apr 3 13:05:35 2017 +0100\n\n    Merge branch \'master\' into poplar-plugin\n\ncommit 6caeb7d9e4169129907729bbb3fb9218e60d31e5\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Apr 3 12:57:27 2017 +0100\n\n    Use new popnn libraries and headers.\n\ncommit 061b153265fe9bbe14317f8ac338d07fe7ffed0b\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Apr 3 12:56:06 2017 +0100\n\n    Add finders for new popnn libraries, and interface for getting\n    at the full path to the lib directories\n\ncommit 208d29c345b4efef907ec83217e4d546bad34251\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 28 14:22:17 2017 +0100\n\n    Use VLOG(1) for the nodes in the graph\n\ncommit 6f569dcdfd3140823f7aee7bedbfcfdd4deff72c\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 28 13:07:22 2017 +0100\n\n    Remove poplar timer and stream (use host ones). Use synchronous memcpy\n    as the target for the asynchronous memcpy on stream.  Execute the\n    engine on the stream as expected.\n\ncommit 8572c0b56f31145155922a1612ee4491a4cadbbd\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 28 11:15:02 2017 +0100\n\n    Use the new host copy interface, start work on tensor management\n\ncommit de5c7eefc2c1c07fd83f669e517e2014f7b1aade\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 28 10:57:10 2017 +0100\n\n    Adding test that runs simple networks multiple times\n\ncommit 878d6b1dd33565efc48ca6a28a0e207a91903241\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 27 18:13:39 2017 +0100\n\n    Remove plugin loader from Poplar unit tests\n\ncommit 26676aca857dd8a1f3b7be539ca2893a112b47f0\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 27 11:15:08 2017 +0100\n\n    Syncing list of supported ops with CPU\n\ncommit c020a44e1763310d5aa46bf42f649e386e9b103d\nMerge: 75e2441 bbe056e\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 27 10:07:34 2017 +0100\n\n    Merge branch \'master\' into poplar-plugin\n\ncommit 75e2441444739aa8a621a1f872d8464aa1fece0d\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri Mar 24 11:07:53 2017 +0000\n\n    Swap poplar plugin into an internal plugin.\n\ncommit 710ac2f0aef8873ae4ebf1ea6db545825eaf9270\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri Mar 24 10:57:35 2017 +0000\n\n    Remove pip packaging for poplar .so plugin\n\ncommit 9ac6d047c63c3511380b4aa8be5f2489316a995d\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri Mar 24 10:56:41 2017 +0000\n\n    Remove plugin shared object loader part of python test framework\n\ncommit 7bbc4939793616fb9fe7b19375671f4204d33863\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri Mar 24 09:03:33 2017 +0000\n\n    Use lower targets for the XLA headers only build\n\n    The :jit target is the one used by the main body of TF to\n    link in XLA.  If we are to use it to bring in Poplar too,\n    then poplar cannot indirectly depend upon it\n\ncommit 8d31942308cb1a8571a2d43f41a099ec3871f712\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 21 16:06:28 2017 +0000\n\n    Use OS/X and linux independent rule\n\ncommit c8b76e912b76bd7ce12d7a441dbe45207ef20548\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 21 15:58:24 2017 +0000\n\n    Use a cc_binary rule to avoid the need for protobuf in the final .so file\n\ncommit 84cb108bd333ae52956e513c17ba05dea1c9540d\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 21 10:18:18 2017 +0000\n\n    Syncing new ops into the device\n\ncommit 37b1cd5012d8782172c2c1279f308e449ec6da29\nMerge: c7b6b28 1ff3dad\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 21 08:31:24 2017 +0000\n\n    Merge branch \'poplar-plugin\' of phabricator.sourcevertex.net:diffusion/TENSORFLOW/tensorflow into poplar-plugin\n\ncommit 1ff3dadaedbbdcd9c92161cd7dab9ce1ec3684d3\nMerge: 398c879 fbad4e0\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 21 08:27:42 2017 +0000\n\n    Merge branch \'master\' into poplar-plugin\n\ncommit c7b6b283c7acc8d448d9d9eb79c6a8c8fb405082\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 21 08:19:03 2017 +0000\n\n    Adding plugin-neutral system for loading XLA plugins into unit\n    test framework\n\ncommit 398c879126d7be5bde0681c424f3fd7913aed6a2\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 20 10:57:51 2017 +0000\n\n    Remove reference to poplar from main TF stream executor\n\ncommit 7bfc16b3f01793474890605e033b828c60c91546\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 20 10:52:26 2017 +0000\n\n    Move poplar_platform_id to a driver local place\n\ncommit b2472224129aa9baabf485437dae6e7ee78bcf1e\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 20 10:12:10 2017 +0000\n\n    Remove some unnecessary changes\n\ncommit a23bde0b35380d8e8cb1d4c0f70c3edf17c7c917\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Sun Mar 19 16:24:27 2017 +0000\n\n    Use header-only rules from XLA\n\ncommit db2fb685ae3a4fdc6d7f6d7663f8e5dd10cdf580\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Sun Mar 19 16:24:07 2017 +0000\n\n    Adding header-only rules to native XLA\n\ncommit f304c38fb90e7250f4c154074e4b739a10c5c4bc\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Sat Mar 18 09:40:38 2017 +0000\n\n    Remove unnecessary header includes\n\ncommit 5b84dd92fccc229c0c945e94329324c59bcd4af8\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Sat Mar 18 09:39:35 2017 +0000\n\n    Remove debug from packaging script\n\ncommit 615a64857507d2a29958c0a715a6c6f51eb22a26\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri Mar 17 17:41:56 2017 +0000\n\n    Ensure that the loader works from any directory\n\ncommit c38d91fea9fd4f20021f7d200880df13323080eb\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Fri Mar 17 16:53:50 2017 +0000\n\n    Adding pip installer\n\ncommit d012e3ddf479061c35862de96e0b5c8bb524197a\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Mar 16 12:06:37 2017 +0000\n\n    Clean some dependencies\n\ncommit 69cd3bbc899d950cbccdc067c8b58740dc8660e5\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Mar 16 11:33:21 2017 +0000\n\n    Don\'t try calling install_name_tool if not present\n\ncommit 7fd51c2ab7dea21b3af98d34ce82f07d325a8a98\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Mar 16 11:25:56 2017 +0000\n\n    Adding exported symbols to the linux script too\n\ncommit 201cb94dc7c4648432677d4d27ed6408b14673d2\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 14 10:29:40 2017 +0000\n\n    Add extra op support to match current head of XLA\n\ncommit 25a79a3c4d360d00fc4a0de474cc8560b50a55da\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 14 10:16:46 2017 +0000\n\n    Fix interface to match new XLA executable\n\ncommit 34c21edf42eb3b6d0672fa17e2df88b39737f215\nMerge: e233fd5 60ef131\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 13 15:58:24 2017 +0000\n\n    Merge branch \'master\' into poplar-plugin\n\ncommit e233fd5cb30162963b1530e04d2cd503fd2a1909\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 13 14:39:46 2017 +0000\n\n    Reverse order of poplar Copy arguments to match the new interface\n\ncommit fbff48d0b97e52b246227453296a96ae4de625ca\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 13 14:30:47 2017 +0000\n\n    Put the Graph prog file finder into the right namespace\n\ncommit a50742a4442b9861eeb44b2c4799f52b79b3c2bd\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 13 13:37:30 2017 +0000\n\n    Use the new graph program interface\n\ncommit d4f6d9526cf06e4d6c47524b28691d0c8fc7c90a\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Mar 8 09:45:17 2017 +0000\n\n    Add the unsafe variable read op registration\n\ncommit e7fae222a2bc2b6ecc7774b1604d53e71b8b4cfd\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 7 15:23:33 2017 +0000\n\n    Include another protobug symbol\n\ncommit 71a23828b638a8ffab0bf8a46bc4b93f70cfeb5a\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 7 13:53:46 2017 +0000\n\n    Add select and scatter\n\ncommit 6381510024efbf0ac8afd771bbb3efe96be2db68\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 7 13:53:09 2017 +0000\n\n    Move the unary/binary op lookup to the maths_ops file\n\ncommit b96c726055b32428fc2771684c4479f86916d5a1\nMerge: 5e029b2 bb112d3\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Tue Mar 7 08:29:06 2017 +0000\n\n    Merge branch \'poplar-plugin\' of phabricator.sourcevertex.net:diffusion/TENSORFLOW/tensorflow into poplar-plugin\n\ncommit 5e029b25267097d0a74ff920b1150fc63ea0cd7d\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 6 16:02:21 2017 +0000\n\n    Syncing list of supported ops with the XLA CPU list\n\ncommit 2e4cbae45d5229a744a81814f9c1011d137d1f9b\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 6 14:12:26 2017 +0000\n\n    Update to bring API in line with recent XLA base changes\n\ncommit 0446661f2e6c41c93b19deddd5f0d2e075cb2458\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 6 09:47:50 2017 +0000\n\n    Use expanding preprocessor macro for reduction ops\n\ncommit 94db6d1be30f0e2619a5bb4143003c5ca552c285\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Mar 2 10:55:42 2017 +0000\n\n    Fix error in layout of the kernel for convolution\n\ncommit 863ef6c2250aee1c219648ba13e0064b3b3b0322\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Mar 2 09:08:49 2017 +0000\n\n    Restrict protobuf to the minimum set required for loading the plugin\n\ncommit c3f745cb71144ba6bb5ce51babba268f66a30875\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Mar 1 17:49:06 2017 +0000\n\n    Add random op\n\ncommit 2d95cf2f4d20e57a0c6fac42c2f0096c383c8a87\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Mar 1 15:51:36 2017 +0000\n\n    Correct windowed reduce for left side padding\n\ncommit bd3c1e53f309ef75401b58606bc452bf2d2b97b8\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Mar 1 15:25:09 2017 +0000\n\n    Add strided reduce operation\n\ncommit b7bc14f135d66c353680280ae2e78ce5866feff5\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Mar 1 09:41:05 2017 +0000\n\n    Add convolution op (2d only, no dilated conv)\n\ncommit 8d3b4f0ef0babf6460d18f7a01c61a024019cdda\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Feb 27 17:23:27 2017 +0000\n\n    Add int32 support to device, and prevent int64 indices when device doesn\'t support them\n\ncommit 3b66332aa4956f9a89d80085f6fd3f0873d3418c\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Feb 27 16:58:09 2017 +0000\n\n    Add int64 to the list of supported types - internally map it to int32\n\ncommit 7e3f43f315a836d6ca272df517bef294047cac31\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Jan 25 11:01:04 2017 +0000\n\n    Poplar plugin, including support for most binary and unary ops\n\ncommit bb112d3a9d9e3f00951dccdc4c972c6f82232391\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 6 16:02:21 2017 +0000\n\n    Syncing list of supported ops with the XLA CPU list\n\ncommit f76b39202054b63e6ba33137260a5e44a136c420\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 6 14:12:26 2017 +0000\n\n    Update to bring API in line with recent XLA base changes\n\ncommit 3858fb718e1ead27da73c1f89bb107d48ed004cf\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Mar 6 09:47:50 2017 +0000\n\n    Use expanding preprocessor macro for reduction ops\n\ncommit 85addfc67ba482f1e63b08c497c0eabb5570003c\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Mar 2 10:55:42 2017 +0000\n\n    Fix error in layout of the kernel for convolution\n\ncommit a0c18947ebbe5fdccdebd20eeeac505d448ca0fd\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Thu Mar 2 09:08:49 2017 +0000\n\n    Restrict protobuf to the minimum set required for loading the plugin\n\ncommit 7177942c674b3504fd70381eebbdd917054c8c34\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Mar 1 17:49:06 2017 +0000\n\n    Add random op\n\ncommit 7a666ead8f87b8c56c83d4f44a3455f5932ac3e4\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Mar 1 15:51:36 2017 +0000\n\n    Correct windowed reduce for left side padding\n\ncommit 68f5f5e529c8775c2f3720743941da36052a86a0\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Mar 1 15:25:09 2017 +0000\n\n    Add strided reduce operation\n\ncommit 3c47a48334dd296b04eb3106eeedd0b09c177379\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Mar 1 09:41:05 2017 +0000\n\n    Add convolution op (2d only, no dilated conv)\n\ncommit a1887b9fc336b498c584ce7748d8516e4292a1a0\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Feb 27 17:23:27 2017 +0000\n\n    Add int32 support to device, and prevent int64 indices when device doesn\'t support them\n\ncommit c207d8876613eeca89e2a40ba3947fb169a30da2\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Mon Feb 27 16:58:09 2017 +0000\n\n    Add int64 to the list of supported types - internally map it to int32\n\ncommit aeb4f0451e6ca39b83a0bd25438aa88856ecc0c9\nAuthor: DavidNorman <davidn@graphcore.ai>\nDate:   Wed Jan 25 11:01:04 2017 +0000\n\n    Poplar plugin, including support for most binary and unary ops'"
70ade1b64f65d0a2275672d27129627ff116a997,'Fix defect: shuffle_batch gives ZeroDivisionError when computing capacity stat (#10477)\n\n* Fix defect: shuffle_batch gives ZeroDivisionError when computing capacity stat\r\n\r\n* Cover < case in error checking'
8e2116b7fa7d7cbcd3245d7de222476fc427e0b1,"'Fix build errors due to unused declarations introduced in ""Optimize quantized resize bilinear with NEON-acceleration for ARM devices""\n\nPiperOrigin-RevId: 158915490'"
b42b658449f95becd5203fad5a04bf5793414247,"""Bugfix: Don't ignore logical names in single tensor predict signatures. User-supplied names in predict signatures were silently ignored and replaced with constants.\n\nPiperOrigin-RevId: 158481505"""
8eb015561b3a2f2e27f01617fd14d5a4f4b215bd,"'[XLA] Sort vector of HloBuffer::Id values before uniqifying.\nFix a latent bug in HLO dataflow analysis in the method Phi. When uniquifying\na vector of HloBuffer:Id values, first std::sort it before calling std::erase\nand std::unique.\n\nPiperOrigin-RevId: 158888326'"
a37c7fb8a0aed065fa7be99c27a9630e658c5713,'Fix bad link\n\nPiperOrigin-RevId: 158886281'
f58e6cebe484552b733a029916e5a61de42c0e2e,'Note that the cuDNN version must match exactly on Windows (#10653)\n\nFixes #10594.'
4f52ce514bc83c5adbfdcd8a342a0fa0f42e55d0,'Fix incorrect references of `tf.learn` -> `tf.contrib.learn` (#10658)\n\nThis fix fixes the incorrect references in docs (linear.md)\r\nwhere `tf.learn` was used (should be `tf.contrib.learn`).\r\n\r\nThis fix fixes #8718.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
6f36e6b27106fb4de065db18b9333a3c6c2fbb89,"'tfdbg doc: doc refactoring\n\n1. The two separate docs, debugger.md and tfdbg-tflearn.md, are merged into debugger.md.\n2. The command table is re-formatted and brought up-to-date with the recent changes.\n\nAlso:\nFixes: #10303\nPiperOrigin-RevId: 158852894'"
677560c974f490243dbbb08c65dcadd315bf19e7,'Merge pull request #10683 from caisq/pip-fix-1\n\nApply correct filter tags to two tests'
3af9224979917aa47e878f94306f62f4125b7fab,'remove LMDBReader from the API\n\n...until we can fix the API compatibility tests.'
7495d3f8a1438d49c90faeba25b46dbc95acd833,'Fix removed dependencies for licenses'
36101e7efaf6145aba8301ecb69849ff109b02f1,'Fix dependencies of android_proto_lib_lite\n\nRemove deleted dep reader_base_proto_cc.'
858cf6a30e5f59d936d5e22876e94fe413f91091,'Fix merge conflicts mostly due to lint enforcement and LMBD convulsions'
f35e4ae84e060188e28b6bb5a84047a71d4243cf,'Fix BUILD and PIP sanity issues related to meta_graph_testdata\n\nThis CL reinstates //tensorflow/python:framework_meta_graph_test in the pip build by adding the testdata filegroup to dependency list.\n\nPiperOrigin-RevId: 158802701'
1bb1c0d2d10d5507ce06576baac8f577c294c16a,"'Fix incorrect results from Eigen-based IRFFT kernel when input dimensions exceed fft_length.\n\nAlso fixes fft_ops_test msan failures for rank > 1 IRFFTs. The temporary buffer used for computing the (rank - 1) outer IFFTs is not fully initialized. Instead, only compute the (rank - 1) outer IFFTs over the valid positions of the temporary buffer.\n\nPiperOrigin-RevId: 158772209'"
b4aa475f0375ea3d007fd4c3c95d9e1971a13bfd,'Initialize found_unknown_shapes variable.\nFixes asan and msan errors in tests.\n\nPiperOrigin-RevId: 158728930'
fe731897ebeb118ba7fe62c4da7df5c407866b67,'Fix image links for tf.contrib.kernel_methods tutorial.\n\nPiperOrigin-RevId: 158723983'
bbb81bdb34ec494484002dd92938a90f88109086,'Merge pull request #10635 from Moriadry/master\n\nfix typos'
da1e8175fcfd00ae7af95d47d16e48dbddac4c41,'Merge pull request #10627 from taehoonlee/fix_typos_5\n\nFix typos'
5d390d4592f97cc75d767c5abf588ab147c1df37,'fix typos'
4aa26ce5050e43025c306649e9b26565cfa1c39b,'Merge pull request #10630 from Moriadry/master\n\nfix javadoc issues'
b8138a3b3ed8d576c411fada7a2a0d37c153f4b5,'fix javadoc issues'
cc2b908fa6f2acf06ffccf341ad2af8cd24aa12f,'Fix typos'
7f7826b33a84146535514d0eca07830db9b50575,'Fix typo in Dataset.zip documentation\n\nPiperOrigin-RevId: 158570433'
a5d639a5c3a187399a21d7d571583a4bba8d6b08,"""Fix a bug in importing for colocation's interaction with udf device fns.\n\nWhen a user imports a graph_def within a device function, the current\ncode properly propagates the colocation attribute to a node that\nis colocated with another.  However, a user's device function still\nindependently applies, causing the system to fail at runtime\nbecause the colocation attribute doesn't match the device function\nit is also given.\n\nTo address this, we add another phase to importing after we know all\nuser device functions have applied.  In this phase, in which we only\nprocess ops that are colocated with others, we fetch the colocation\nroot's device, and apply that to the local node's device.  If it\nis possible that the two devices merge cleanly, we attempt to\nmerge the devices so the user's specification still applies, as\nlong as it maintains the colocation property.\n\nPiperOrigin-RevId: 158551722"""
59c4cfee63b1b5d40b337cf3a14b2c8cd9d4c1b1,'Fix true_negatives and false_negatives to handle unsqueezed dimensions (as is already done for true_positives and false_positives).\n\nPiperOrigin-RevId: 158548096'
92cfd0105db9bb659e2b85548cbea24452f6aa60,"'Fix ImportGraphDef() bug\n\nIf an input map yields two control inputs of a node being mapped to the same control input, ImportGraphDef() will consolidate the two control inputs into a single incoming edge. The bug was in GraphConstructor::RemapNodeDefInputs(), which would reduce the number of input edges but not make the analogous changes in the input_already_exists vector (which tracks which inputs are remapped).\n\nThis change also introduces a test case that exposes this bug by causing two control inputs to be consolidated and another control input to be added. In this case, the input_already_exists entry for the added control input actually corresponds to the removed input, and has the wrong value.\n\nPiperOrigin-RevId: 158547284'"
5393c03c69394ba3e5940e204606795c16a8d2da,'Add a note to MaxPoolWithArgmax about indices and padding\n\nThe mathematically correct argmax indices should sometimes be negative if padding is involved.  Note that the op does not do the correct thing.\n\nFixes #10216.\n\nPiperOrigin-RevId: 158543062'
1b5235fd897f7ea5cffc715300f67b4dc852fa27,"'Merge changes from github.\nEND_PUBLIC\n\n---\nCommit f0e185d1f authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBetter handle nodes with a variable number of outputs\n\nPiperOrigin-RevId: 158435028\n\n---\nCommit bc3e20807 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused BUILD dependencies\n\nPiperOrigin-RevId: 158431059\n\n---\nCommit a0c80e4d5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDelete unnecessary (mistakenly duplicated) logging message.\n\nPiperOrigin-RevId: 158428506\n\n---\nCommit b6ad1d747 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds DNN-only tests for DNNLinearCombinedClassifier.\n\nPiperOrigin-RevId: 158423119\n\n---\nCommit ddbb58034 authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unnecessary pylint disable\n\nPiperOrigin-RevId: 158416140\n\n---\nCommit fcaa724e2 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans pack and unpack ops (#10336)\n\n* [OpenCL] Cleans pack op\n\n* [OpenCL] Cleans unpack op\n\n---\nCommit 2f53cacb2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix a test failure of quantization_utils_test on ASAN\n\nPiperOrigin-RevId: 158414538\n\n---\nCommit 50b2f951c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 158413455\n\n---\nCommit 1e90b78e9 authored by Brennan Saeta<saeta@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd CacheDataset ops.\n\nSome input pipelines may pull down data from remote webservers or perform\nexpensive processing. In order to avoid extraneous work, we now support\ncaching the dataset (e.g. on disk).\n\nPiperOrigin-RevId: 158411901\n\n---\nCommit e16cd2ede authored by Taehoon Lee<taehoonlee@snu.ac.kr>\nCommitted by gunan<gunan@google.com>:\nFix typos (#10533)\n\n---\nCommit 50d80ddf9 authored by Jonathan Hseu<jhseu@google.com>\nCommitted by Jonathan Hseu<jhseu@google.com>:\nFix fft_ops_test.py for CPU\n\n---\nCommit d35cbbb44 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd weight-column support to the heads.\n\nPiperOrigin-RevId: 158409180\n\n---\nCommit 7fb52cd54 authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDon\'t crash when displaying XLA metrics if they happen to be negative.\n\nPiperOrigin-RevId: 158407664\n\n---\nCommit 12a7a752a authored by Jianfei Wang<me@thinxer.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nAdd a tip for tf.train.LoggingTensorHook (#10237)\n\n`INFO` logs are not printed by default unless in IPython. Add a friendly tip for newcomers.\n---\nCommit 216dcbf1e authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Cleans reduction ops (#10340)\n\n* [OpenCL] Cleans reduction_ops_max.cc\n\n* [OpenCL] Cleans reduction_ops_mean.cc\n\n* [OpenCL] Cleans reduction_ops_min.cc\n\n* [OpenCL] Cleans reduction_ops_prod.cc\n\n* [OpenCL] Cleans reduction_ops_sum.cc\n\n---\nCommit 2b351062a authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nImprove docs for selective registration headers (#10351)\n\n* Improve docs for selective registration headers\n\nprogressing #10299\n\n* Update print_selective_registration_header.py\n\n* Mention both flags\n\n-DSELECTIVE_REGISTRATION and -DSUPPORT_SELECTIVE_REGISTRATION\n\n---\nCommit ee919510f authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nRe-enable some python tests in Windows Bazel build (#10526)\n\n---\nCommit b0e881457 authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Declare and assign separately (#10509)\n\nAs proposed by static analysis tool:\nhttps://github.com/koalaman/shellcheck/wiki/SC2155\n---\nCommit 284901b08 authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Remove unquoting quotes (#10506)\n\nAs proposed by static analysis tool:\nhttps://github.com/koalaman/shellcheck/wiki/SC2027\n---\nCommit 2a1f11556 authored by ksellesk<zhengdachuan200305@gmail.com>\nCommitted by ksellesk<zhengdachuan200305@gmail.com>:\nFix AttributeError in resnet.py\n\nThere is no function tf.softmax() in Tensorflow 1.x.\n\nWhen running the old code, Python interpreter complains:\n\nFile ""resnet.py"", line 152, in res_net_model\nprediction, loss = res_net(x, y)\nFile ""resnet.py"", line 148, in res_net\nreturn tf.softmax(logits), loss\nAttributeError: \'module\' object has no attribute \'softmax\'\n\n---\nCommit 1d68f729b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unneeded BUILD dependency\n\nPiperOrigin-RevId: 158391996\n\n---\nCommit 08ed32dbb authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nWindows: Make TensorFlow build without --cpu=x64_windows_msvc (#10466)\n\n* Windows: Make TensorFlow build without --cpu=x64_windows_msvc\n\nSince from Bazel 0.5.0, MSVC toolchain became the default toolchain on\nWindows. So --cpu=x64_windows_msvc is not required as long as we adjust\nthe BUILD files in TensorFlow.\n\n--cpu=x64_windows_msvc is also supported for now, but is depracated.\nThe configuration for cpu value x64_windows_msvc is a duplicate of\nx64_windows, which should be removed in the future.\n\n* Fix breakage on macOS\n\n---\nCommit 02dbe153a authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Simplify Conditional (#10503)\n\n---\nCommit c07bc581f authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Prefer read -a to split path (#10508)\n\nAs proposed by static analysis tool:\nhttps://github.com/koalaman/shellcheck/wiki/SC2207\n---\nCommit 0a389674d authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Prefer [ p ] && [ q ] over [ p -a q ] (#10507)\n\nAs proposed by static analysis tool:\nhttps://github.com/koalaman/shellcheck/wiki/SC2166\n---\nCommit 87a008ec3 authored by Jonathan Hseu<vomjom@vomjom.net>\nCommitted by gunan<gunan@google.com>:\nDelete non-deterministic testEmpty() test (#10512)\n\n---\nCommit 3a2971bd8 authored by Frank Chen<frankchn@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds the base for ClusterResolvers, a new way of communicating with and retrieving cluster information for running distributed TensorFlow.\n\nImplementations of this class would eventually allow users to simply point TensorFlow at a cluster management endpoint, and TensorFlow will automatically retrieve the host names/IPs and port numbers of TensorFlow workers from the cluster management service.\n\nPiperOrigin-RevId: 158358761\n\n---\nCommit 28b4e7f04 authored by Jonathan Hseu<vomjom@vomjom.net>\nCommitted by gunan<gunan@google.com>:\nDisable stage_op_test and map_stage_op_test (#10516)\n\n---\nCommit 390e57a75 authored by Yan (Asta) Li<yanastali@users.noreply.github.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nCheck EIGEN_MAX_ALIGN_BYTES to prevent mod-by-0 (#10380)\n\n* Check EIGEN_MAX_ALIGN_BYTES to prevent mod-by-0\n\nIf EIGEN_MAX_ALIGN_BYTES is set to 0, alignment checks that mod by EIGEN_MAX_ALIGN_BYTES fail at runtime.\n\n* Returns true, as in tensorflow/core/framework/tensor.h\n* Update unit tests\n\n* Enable tests only if EIGEN_MAX_ALIGN_BYTES > 0\n\n---\nCommit cd5ac40b3 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Update LLVM to upstream revision r304927.\nAdd LLVM build rules for the LLVM AMDGPU backend, commented out by default. Fixes issue #10437.\n\nPiperOrigin-RevId: 158351480\n\n---\nCommit 91cb809bd authored by David Norman<DavidNorman@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[XLA] Add ability to run the XLA unit tests against a different device (#9759)\n\n* Add ability to run the XLA unit tests against a different device\n\n* Allow for multiple extra backend devices\n\n* Correct merge error\n\n* Include options for additional tags\n\n---\nCommit aff4d124b authored by Yuxin Wu<ppwwyyxxc@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nCompare base_dtype instead of dtype in piecewise_constant (#10280)\n\n* Compare base_dtype instead of dtype in piecewise_constant\n\nCompare base_dtype instead of dtype in piecewise_constant. Fix #10086\n\n* add unit test\n\n* Small lint fix and comment\n\n---\nCommit 845539f98 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd evaluation test for linear classifier (n==2 or n >2).\n\nPiperOrigin-RevId: 158340296\n\n---\nCommit 7c46214ab authored by Jonathan Hseu<vomjom@vomjom.net>\nCommitted by GitHub<noreply@github.com>:\nFix numpy 1.13 incompatibilities (#10501)\n\n* Fix numpy 1.13 incompatibilities\n\n* Skip tests with numpy 1.13.0\n\n---\nCommit 4572c41df authored by gunan<gunan@google.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nA few changes to kernel_tests. (#10502)\n\n* Disable reader_ops_test on windows.\n\n* Run buildifier on kernel_tests/BUILD\n\n* Mark map_stage_op_test as large.\n\n* Set the size of stage_op_test to large\n\n---\nCommit 892293d98 authored by Brennan Saeta<saeta@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSet a default for datasets end_of_sequence.\n\nWhile all datasets carefully set the end_of_sequence to true at the\nappropriate time, some datasets might forget to set it to false in the normal\ncase. In order to avoid potential undefined behavior, we set the\nend_of_sequence variable to be false by default.\n\nPiperOrigin-RevId: 158337799\n\n---\nCommit 187404eac authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSetup the env to since ops such as MatchFileOp rely on it.\n\nPiperOrigin-RevId: 158336344\n\n---\nCommit 2741561c8 authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix up vz_projector script structure\n\nWe now make sure scripts and HTML imports are declared in the correct\nplaces. In the future, pedantically listing script tags should not be\nnecessary.\n\nPiperOrigin-RevId: 158334306\n\n---\nCommit beeaade46 authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nResubmit a reverted change. Original description:\n\n[XLA] Enable HloEvaluator for constant folding, also merged a few operations\nfrom hlo_constant_folding to hlo_evaluator.\n\nAdditionally:\n- In ShapeUtil::ForEachIndex:\n    * fix a bug where visitor is called when the shape has zero elements (e.g., F32{1,0})\n    * added test case for ForEachIndex.\n\n- In HloEvaluator:\n    * Instead of copying and caching a Constant instruction, return the literal directly if the instruction is constant.\n    * Fix an issue where TUPLE and OPAQUE primitives are not keyed in the templated typed_visitor.\n    * Use (fixed) LiteralUtil::Populate to populate resulting literal, fixes the preexisting bug in the evaluator where R0 and shape with zero size dimensions are not handled.\n    * Refactor ElementWiseUnaryOp and HandleCompare to be templatized on the operand\'s type.\n    * Refactor IsFinite to be top level since it is only applicable to floats and the return type is always boolean.\n    * Change from std::remainder to std::fmod for kRemainder to be compliant with existing XLA behavior.\n    * Change from std::max and std::min to std::fmax and std::fmin to handle NaNs.\n    * Minor comments fix.\n\nPiperOrigin-RevId: 158330052\n\n---\nCommit b94540e6f authored by Toby Boyd<tobyboyd@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntf.layers.conv2d use_bias=True to use nn.bias_add\n\nPiperOrigin-RevId: 158326493\n\n---\nCommit 379aa9911 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 158325855\n\n---\nCommit 4e529f0f1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 158325293\n\n---\nCommit 0a9d2dac0 authored by Yuefeng Zhou<yuefengz@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a util function in virtual placer to return canonicalized device string, which can be used to fix the node\'s device field before passing them to the maxcut algorithm.\n\nPiperOrigin-RevId: 158322753\n\n---\nCommit 2d8da1d9b authored by Daniel Ylitalo<daniel@blodan.se>\nCommitted by gunan<gunan@google.com>:\nRecognize CPU core count in FreeBSD (#10490)\n\n---\nCommit c19e6cac0 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Initial implementation of TensorArray ops.\n\nThe XLA implementation of TensorArrays is more restrictive than regular TensorArrays:\n* XLA TensorArrays must have dynamic_size=False.\n* all elements in an XLA TensorArray must have the same shape.\n* writes always add their values to any existing values; neither reads nor writes ever issue errors. Out-of-bounds writes currently wrap.\n\nRefactor Variable handling in the TF/XLA bridge. Use a XlaVariable* to refer to variables inside compilation rather than a numerical ID. Allow for variables that don\'t correspond to variables known to the user. Also use XlaVariable to handle TensorArrays.\n\nPiperOrigin-RevId: 158322041\n\n---\nCommit b5e8d3086 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Refactor randomized tests to allow testing of larger inputs without running out of memory.\n\nPiperOrigin-RevId: 158321431\n\n---\nCommit 5d90bbaac authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Disable constant_folding in test base, so that intended test code paths\nwould not be elided by constant_folding pass.\n\nPiperOrigin-RevId: 158317641\n\n---\nCommit 036ce8ba6 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans dense_update_ops (#10335)\n\n* [OpenCL] Cleans dense_update_ops\n\n* Acts on feedback from: #10335#discussion_r120536460\n\n---\nCommit 85f968125 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans cast operation (#10330)\n\n* [OpenCL] Removes not needed typedef for SYCLDevice\n\n* [OpenCL] Fixes formatting\n\n* [OpenCL] use SYCLDevice for int32 cast case\n\n---\nCommit bff5e72da authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix typo.\n\nPiperOrigin-RevId: 158310742\n\n---\nCommit 38249d6be authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSwap the order of NanTensorHook and custom hooks\n\nto ensure that when the training encounteres NaN\'s in the loss function, user-supplied hooks such as tf_debug.LocalCLIDebugHook can still be used to debug the root cause of the numeric issues.\n\nPiperOrigin-RevId: 158310249\n\n---\nCommit 599727c65 authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Propagate debug option flags to hlo_test_base.\n\nSpecific HLO tests have to replace the generic test_main target with a manual\nmain() that invokes RUN_ALL_TESTS.\n\nTo get access to a module with debug options set up, a new convenience method\nis created on HloTestBase.\n\nInitially algebraic_simplifier_test is modified as a canary; in a followup\nwe\'ll convert all HLO tests to this approach.\n\nPiperOrigin-RevId: 158309488\n\n---\nCommit 0770393e9 authored by Eric Liu<ioeric@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[Tensorboard] Add a trace viewer component to TensorBoard.\n\nWe make the trace viewer a separate app; otherwise, there would be dependency\nconflicts (e.g. Polymer) between the trace viewer app and the tensorboard app.\nThe trace viewer app would be served by a plugin, and Tensorboard dashboard will integrate trace viewer app using iframe in the\nfuture.\n\nThis CL also added ""mominify"" support for link import HTML tags in the\ntensorboard home-grown java vulnizer; otherwise, the vulcanized trace viewer code\nwould crash the java vulcanizer.\n\nFor open-source build, we add a denpendency on the Catapult github repository\n(https://github.com/catapult-project/catapult/tree/master/tracing). We use a bazel genrule to vulcanize a trace viewer binary which is then used in the\ntf-trace-viewer component.\n\nPiperOrigin-RevId: 158309408\n\n---\nCommit 85e832201 authored by RJ Ryan<rjryan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSupport unknown emit shapes in tf.nn.raw_rnn.\n\nPiperOrigin-RevId: 158308002\n\n---\nCommit edb5fed7f authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd label-vocab support to binary logistic head.\nAdd assertion that binary classifier label is in range [0., 1.]\nFixed Classifier Integration tests.\n\nPiperOrigin-RevId: 158307521\n\n---\nCommit f8e1cf8fa authored by Justine Tunney<jart@google.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nOpen up visibility of tf_imports (#10500)\n\nThis also fixes the definition of Clutz.\n---\nCommit 9fd7cf054 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Cleans relu ops (#10343)\n\n* [OpenCL] register relu ops to gpu types (no half)\n\n* [OpenCL] Removes #undef EIGEN_USE_SYCL\n\n---\nCommit 09c1455e3 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Cleans reverse_op.cc (#10346)\n\n---\nCommit b7892a30f authored by orome<royl@aldaron.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nClarify tf.matmul documentation (#10381)\n\n* Update math_ops.py\n\n* Fix non-ascii character\n\n---\nCommit 9786b7062 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Cleans StridedSlice Op (#10314)\n\n* [OpenCL] Cleans StridedSlice Op\n\n* [OpenCL] Removes half from registred types\n\n---\nCommit f105df047 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the CUDA path of depthwise_conv2d, optimize backward filter convolution for images 2 or 4 times smaller than 16x16. Also initialize in_cols from blockDim, to fix the regression caused in CL 157906773.\n\nPiperOrigin-RevId: 158296136\n\n---\nCommit 492afc2e3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 158295169\n\n---\nCommit abe0877ef authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd bazel version check to .configure\n\nPiperOrigin-RevId: 158294569\n\n---\nCommit b702e7e79 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 158294289\n\n---\nCommit 94085bee7 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nReplace std::function object with regular function.\n\nThe function is called recursively, and the std::function object had only existed to allow recursion from within a lambda expression. A regular function should be cheaper than a polymorphic function wrapper.\n\nPiperOrigin-RevId: 158292415\n\n---\nCommit ba656b261 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse template specialization instead of overloaded methods. This is a more appropriate tool here. NFC\n\nPiperOrigin-RevId: 158292035\n\n---\nCommit 55f987692 authored by Yutaka Leon<yleon@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n  Make tf.contrib.lookup  python functions use the kernels v2 that uses the resource tensor as handler.\n\nPiperOrigin-RevId: 158291836\n\n---\nCommit ebae3deba authored by Wei Ho<weiho@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSwitch back to max_num_rows_to_load instead of reading slice by slice due to performance regression from network overhead.\n\nAdd check when using initializing values to avoid seg fault\n\nPiperOrigin-RevId: 158291218\n\n---\nCommit 7b4c01794 authored by RJ Ryan<rjryan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSupport numpy-style padding and slicing of tf.spectral.rfft/irfft to match the desired FFT length.\n\nFixes incorrect RFFT/IRFFT results when fft_length does not match the input dimension.\n\nPiperOrigin-RevId: 158289991\n\n---\nCommit fdb8e2935 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate iOS examples to use CocoaPods, and moved to tensorflow/examples/ios\n\nPiperOrigin-RevId: 158289285\n\n---\nCommit d86167b5f authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nMerging rc2 back into master.\n\n---\nCommit dffea202a authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nClean up some code after previous CL\n\nPiperOrigin-RevId: 158282834\n\n---\nCommit 7b5302af0 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds ability to set a ""family"" attribute in Tensorflow summaries, which\ncontrols the ""tab name"" of the summary that is displayed.\n\nThis solution keeps using name_scope to keep names unique, but then prefixes the tag with the family name if provided.\n\nPiperOrigin-RevId: 158278922\n\n---\nCommit 611c82b5b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds integration test for DNNLinearCombined((Classifier)|(Regressor)).\n\nPiperOrigin-RevId: 158278512\n\n---\nCommit cc6c91a9a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove a further unused proto header inclusion\n\nPiperOrigin-RevId: 158278026\n\n---\nCommit 9f17c26ca authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add HloLocation to dataflow analysis.\nAdd an HloLocation abstraction to dataflow analysis which indicates where (in the output of what instruction and at which index) an HloValue may appear. Previously only uses were stored with an HLO value where a use is an edge in the HLO graph (instruction, operand number and ShapeIndex).\n\nAlso, change the handling of tuple-shaped kSelect instructions when ssa_form is true. Previously a phi value would be created. With this change the the value set instead contains the union of it\'s inputs identical to the ssa_form=false case.\n\nPiperOrigin-RevId: 158276598\n\n---\nCommit b9d5e1441 authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Start collecting flags for debug options in a single place.\n\nClientLibraryTestBase will now parse command-line flags for debug options\nautomatically, permitting subclasses to override certain options by using\nmutable_debug_options.\n\nmain() still has to call AppendDebugOptionsFlags() explicitly before running\nthe TF flag parser. In the mean-time, this CL leaves flag handling to the\ncurrent ""legacy"" approach. However, this is part of a larger plan to move *all*\ndebugging flags for XLA into the DebugOptions message and expose them as flags\nfrom a single place. The other flags (which are not controlling debugging\noptions) will have to be propagated more explicitly.\n\nPiperOrigin-RevId: 158276294\n\n---\nCommit 3b6fe94bb authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nProperly handle shape nodes that have a preexisting control dependency\n\nPiperOrigin-RevId: 158274845\n\n---\nCommit 1d67379d5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMinor cleanup\n\nPiperOrigin-RevId: 158268933\n\n---\nCommit 41997756c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSort header inclusions; define EIGEN_USE_THREADS where headers depend on it.\n\nPiperOrigin-RevId: 158267803\n\n---\nCommit 85355f015 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd missing header inclusion\n\nPiperOrigin-RevId: 158265934\n\n---\nCommit 3cf88d390 authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nWhen GPU is configured, do not require --config=cuda.\nAlso fix indentation in configure.\n\nPiperOrigin-RevId: 158232959\n\n---\nCommit f48673b50 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Removes ReductionFunctor for SYCLDevice (#10326)\n\nWe are using Eigen implementation\n---\nCommit 1b6453bec authored by Joan Puigcerver<joapuipe@gmail.com>\nCommitted by gunan<gunan@google.com>:\nFixes issue #10258 (#10366)\n\nOn CUDA versions previous to 8.0, only __shared__ variables could be declared as static in the device code.\n---\nCommit cd56a638d authored by Beomsu Kim<123bskim@naver.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFixed wrong range in docstring (#10272)\n\n---\nCommit d13ae380c authored by Micha? Jastrz?bski<michal.jastrzebski@intel.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFix CMD in Dockerfile (#10444)\n\nCurrently Notebook fails execution because default user for this container is root, and unless explicitly allowed, jupyter notebook will not start.\n---\nCommit 8118ab4ec authored by Simon Perkins<simon.perkins@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nSupport partial gets in MapStagingArea (#10276)\n\n* Modify map staging area tests\n\n- size from `small` to `medium`\n- introduce 2 shards\n\n* Add partial get support in MapStagingArea\n\nA partial list of tensors in a (key, value) map entry can now be\nrequested. Once all tensors associated with the entry are removed,\nit is removed from the map.\n\n* Correct output/indices mismatch errors\n\n* Rename IncompleteTuple to OptionalTuple\n\n* Add partial get test with indices\n\n* Add some more index checks\n\n* Improve stage test case graph creation\n\nTest sessions (and default graphs) are reused by default.\nCreate explicit, finalized graphs in each test to prevent\npossible interactions between stateful Staging Areas and\nothers ops created in separate tests.\n\n* Make staging area tests small and remove shards\n\nThey were originally made \'medium\' to ameliorate timeouts in the test\ncase, but they usually run in ~1s so they should be small.\n\n* Improve imports\n\nAvoid importing base tensorflow package\n\n* Support both python 2 and python 3 range.\n\n* Set map_stage_op_test to size=large\n\n* Convert the tests to size=medium\n\n---\nCommit 0df102b0a authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nUpdate `configure` script sample (#10455)\n\nThe `configure` script was changed regularly since the generation of the sample.\nThis PR updates the sample to reflect those changes.\n---\nCommit f6dc1ac61 authored by Earthson Lu<Earthson.Lu@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nMKL_INSTALL_PATH should not be ignore when given (#10180)\n\n* MKL_INSTALL_PATH should not be clear when given\n\n* fix overwrite by default\n\n---\nCommit 8ad6a036e authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nJava: Update Maven release to 1.2.0-rc2\n\nPiperOrigin-RevId: 158212897\n\n---\nCommit 15eddf035 authored by Fritz Obermeyer<fritz.obermeyer@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nExport C API symbols in _pywrap_tensorflow_internal.so (#10469)\n\n* Export C API symbols\n\n* Export C API symbols under config:default\n\n---\nCommit 754e12668 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Removes half concat op registration (#10331)\n\n---\nCommit cfdc22dee authored by Peng Yu<yupbank@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nfix the error (#10293)\n\n---\nCommit 58747e357 authored by Joel Hestness<jthestness@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nPhiloxRandom: Fix race in GPU fill function (#10298)\n\n* PhiloxRandom: Fix race in GPU fill function\n\nThe PhiloxRandom fill kernel for the GPU had race conditions that caused the\noutputs to be non-deterministic. In particular, the code previously executed\nwith N GPU threads (# thread contexts per GPU), but it would only advance the\nfill addresses by N-1 stride in each step. This incorrect stride caused the\n0th and N-1st threads to write to the same memory locations, racing for which\nwas last to write their common locations. Make the stride equal to the number\nof threads to eliminate the race.\n\nBONUS: By fixing this race, PhiloxRandom constant-sized GPU initializers now\nmatch CPU initializers.\n\n* Update random_ops_test.py to find race conditions\n\nIncreasing the size of arrays in the random_ops_test.py test to manifest\nthe race conditions to be resolved.\n\n---\nCommit 2cbcda08f authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFixed formatting in Linux install guide (#10353)\n\nFormatting issues were introduced in PR #8825, commit f30918b3694afe844990cbddc82e27e023d88856\n---\nCommit ab5f38560 authored by Lakshay Garg<lakshayg@outlook.in>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFixed typos in documentation & READMEs (#10365)\n\n---\nCommit 94dc1dbfa authored by Christos Nikolaou<cNikolaou@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nEnable figures in the tfprof README.md (#10372)\n\n---\nCommit 3018d4678 authored by Taehoon Lee<taehoonlee@snu.ac.kr>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFix typos (#10386)\n\n---\nCommit c5f3c6171 authored by Daniel Rasmussen<drasmuss@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFix unbatch for Datasets with multiple elements (#10401)\n\n* Fix unbatch for datasets with multiple elements\n\n* fixup! pylint (indent two spaces instead of four)\n\n---\nCommit 8b065bc10 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFix unaligned args in api_docs/python/tf/contrib/learn/Evaluable (#10423)\n\nThis commit fixes unaligned args in api_docs/python/tf/contrib/learn/Evaluable\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n---\nCommit 8f89b654f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nProfile memory usage in VirtualScheduler and report peak memory usage.\nTo do so, NodeState now handles different output ports of a node (in case\na node has multiple outputs).\n\nAlso, VirtualScheduler code is cleaned up with more comments.\n\nPiperOrigin-RevId: 158209068\n\n---\nCommit 0ea0bf5aa authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a frontend for viewing the first ops that exhibit bad values (NaN, +/- Inf).\n\nThis helps the user identify problematic ops. Also moved the debugger data logic within tf-graph-info into a new tf-graph-debugger-data-card component.\n\nPiperOrigin-RevId: 158208679\n\n---\nCommit ed47ecf2d authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Cleans variable op (#10333)\n\n* [OpenCL] Cleans variable op\n\n* Fixes formatting and float / double -> GPU_NUMBER_TYPES_NO_HALF\n\n---\nCommit 9b2c1af63 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Improves device reporting (#10462)\n\nPrints: id, type, name, vendor and profile of the device\n---\nCommit 7f5384dcc authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMaking load() work for resource variables.\n\nPiperOrigin-RevId: 158205361\n\n---\nCommit 05412bd36 authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Simplify Shape traversal visitors.\nSimplify shape traversal visitors in ShapeUtil and ShapeTree. Add a non-Status form because most uses of the traversal methods do not use it, and remove is_leaf parameter from ShapeTree.ForEach* as it is not frequently used.\n\nPiperOrigin-RevId: 158201574\n\n---\nCommit 69c9365b4 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtracted linear estimator testing utils to be reused by dnn-linear-combined.\nAdded tests for linear part of dnn-linear-combined estimator.\n\nPiperOrigin-RevId: 158200827\n\n---\nCommit 65ce8c723 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd arrowheads to dataflow edges.\nMake reference edges orange.\nRemove animations from tooltips in the graph documentation.\n\nPreviously, arrowheads were only added to reference edges (because we assumed users knew about the convention that arrowless edges flow upwards). That decision nicely reduces clutter. However, recently, some internal and external folks have expressed confusion, and so I want to try adding arrowheads to all data flow edges. And make the reference edges starkly different.\n\nSee #10428\n\nPiperOrigin-RevId: 158195388\n\n---\nCommit bf4c3dd6b authored by gunan<gunan@google.com>\nCommitted by GitHub<noreply@github.com>:\nRevert ""Fix patching issue on Windows"" (#10472)\n\nThis reverts commit 47e6785646a1266f01a1a570bd799f8518ee2997.\n\n---\nCommit b49515539 authored by David Soergel<soergel@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd only string constants to ASSET_FILEPATHS collection.\n\nPiperOrigin-RevId: 158192152\n\n---\nCommit 51acad09c authored by Sergio Guadarrama<sguada@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd tests with different delta to huber_loss.\n\nPiperOrigin-RevId: 158191361\n\n---\nCommit a4e7b7add authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixes a bug in setting default optimizers for DNNLinearCombinedClassifier.\n\nPiperOrigin-RevId: 158190192\n\n---\nCommit ddd67e333 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Cleans reshape.cc (#10347)\n\n* [OpenCL] Cleans reshape.cc\n\n* Removes half and complex numbers.\n\n Half is extension and complex numbers needs implementation in Eigen first\n\n---\nCommit 3ca653304 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 158186454\n\n---\nCommit 8cda8660e authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans sendrecv_ops.cc (#10345)\n\n---\nCommit 6915bb919 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans Slice op (#10341)\n\n---\nCommit 54998b45d authored by Michele Colombo<m-colombo@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nBasicRNNCell comment fix (#10467)\n\n---\nCommit df5906fb7 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMark saver/restore ops that depend on filesystem as stateful to disable them\nfrom being folded into a constant by graph optimizer.\n\nPiperOrigin-RevId: 158182282\n\n---\nCommit 96cb4d182 authored by Sergio Guadarrama<sguada@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd support of scale_l1 == 0. or scale_l2 == 0 to l1_l2_regularizer.\nAdded tests.\n\nPiperOrigin-RevId: 158179790\n\n---\nCommit b65eb3f9b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSpeed up atrous_convolution_test by combining evaluations.\n\nTo make this test run faster (and prevent it from timing out under\ncertain circumstances), this change combines all evaluations for each\ntest method into a single call to Session.run, to eliminate overhead.\n\nThis reduces the test time from about 40 seconds to 10 seconds.\n\nRELNOTES: n/a\nPiperOrigin-RevId: 158175227\n\n---\nCommit b440abce7 authored by Gao, Xiang<qasdfgtyuiop@gmail.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nadd Cuda{2D,3D}LaunchConfig that maximizes occupancy (#10032)\n\n* add Cuda{2D,3D}LaunchConfig that max occupancy\n\n* remove default val, check input<=0\n\n* add max size check\n\n* fix typo\n\n* tests, docs, and related changes\n\n* build the test\n\n* buildify\n\n* cudaOccupancy... call check success, and style fix\n\n---\nCommit 81cf61fdb authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInitialize tensor in graph_properties_test, to avoid msan complaint.\n\nPiperOrigin-RevId: 158169374\n\n---\nCommit cabc5c35c authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add xla_disable_hlo_passes to DebugOptions\n\nAlso add a SetDebugOptions method to ClientLibraryTestBas; this lets us set\ndebug options in tests by calling it.\n\nAs an example, this CL removes the current way of passing\nxla_disable_hlo_passes programmatically in tests - it used to employ a special\nconstructor parameter which is no longer required.\n\nPiperOrigin-RevId: 158169006\n\n---\nCommit 187d23337 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans Pad op (#10339)\n\n---\nCommit e8bc38ef6 authored by gunan<gunan@google.com>\nCommitted by GitHub<noreply@github.com>:\nFix test failures on windows. (#10470)\n\n---\nCommit 2b3535c64 authored by David Soergel<soergel@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMinor docstring fix for build_parsing_serving_input_receiver_fn\n\nPiperOrigin-RevId: 158163615\n\n---\nCommit e55f2e036 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPropagates constants through switch nodes.\n\nPiperOrigin-RevId: 158163537\n\n---\nCommit b01d4b905 authored by Jacques Pienaar<jpienaar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Remove outdated todo.\n\nPiperOrigin-RevId: 158161411\n\n---\nCommit 7125733d7 authored by William Chargin<wchargin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nCreate a set of sample data for the audio plugin\n\nThis implements a simple tone generator, with sine waves, square waves,\nand triangle waves, plus two simple combinations of sine waves. The step\nvalue is used to control the frequency.\n\nPiperOrigin-RevId: 158160889\n\n---\nCommit dc81a2420 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdates to the WALSMatrixFactorization estimator:\n- Add a completed_sweeps variable to keep track of sweeps that have been completed during training.\n- Add a StopAtSweepHook, which can request a stop after completing a specified number of sweeps.\n\nPiperOrigin-RevId: 158156347\n\n---\nCommit 74220616c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSet device cores and frequency in op_level_cost_estimator_test,\nto avoid asan error about assigning inf to int64 (this comes\nin from a divide-by-0).\n\nPiperOrigin-RevId: 158155488\n\n---\nCommit 47e678564 authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nFix patching issue on Windows (#10452)\n\n---\nCommit 6d54f09d9 authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nFix linking errors of lmdb on Windows (#10457)\n\n---\nCommit 61c8a745b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMinor cleanup: Add braces around if statement arms; remove redundant ""return"" and ""static"".\n\nPiperOrigin-RevId: 158143418\n\n---\nCommit e9a889c5e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPass int parameter by value, not by const reference\n\nPiperOrigin-RevId: 158142102\n\n---\nCommit 9184726ed authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAvoid unnecessary copying of map data during visitation\n\nPiperOrigin-RevId: 158141962\n\n---\nCommit 2e7e1d57b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSmall fix for how std::move is used in constructors\n\nPiperOrigin-RevId: 158141564\n\n---\nCommit 2a61c1652 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn cpu compiler\'s CompileAheadOfTime, pass ordering when compiling entry computation.\n\nPiperOrigin-RevId: 158140349\n\n---\nCommit f3f53e8b3 authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf.contrib.data] Add support for dicts and remove lists from nested structures.\n\nThis changes the behavior of constructors like\n`tf.contrib.data.Dataset.from_tensors()` when passed a list. Previously, the\n`nest` utility would recurse into each element of such a list and create a\nseparate Dataset component. Now the list will be converted to a tensor, allowing code like:\n\n```python\ndataset = tf.contrib.data.Dataset.from_tensor_slices(([1, 2, 3], [4, 5, 6]))\n```\n\n...to define a dataset with two components (each of shape `()`).\n\nThis change also adds support for dictionaries as nested structures, which\nsimplifies integration with dictionary-returning ops like `tf.parse_example()`.\n\nFixes #10151.\n\nRELNOTES: Breaking change to `tf.contrib.data.Dataset` APIs that expect a\nnested structure. Lists are now converted to tf.Tensor implicitly. You may need\nto change uses of lists to tuples in existing code. In addition, dicts are now\nsupported as a nested structure.\nPiperOrigin-RevId: 158139467\n\n---\nCommit b6a8848c1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nEnabling python configuration to use a remotely generated configuration that is located inside of the org_tensorflow repo (previously it *had* to be a remote repo declared in workspace file).\n\nPiperOrigin-RevId: 158138601\n\n---\nCommit 0fe0bfcc3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused protobuf header inclusions\n\nPiperOrigin-RevId: 158120864\n\n---\nCommit f0c4c6c3f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the CUDA path of depthwise_conv2d, add a fast NCHW backward filter convolution for images smaller than 16x16.\n\nPiperOrigin-RevId: 158111294\n\n---\nCommit 8dcf37b47 authored by Jon Malmaud<malmaud@gmail.com>\nCommitted by gunan<gunan@google.com>:\nFix typo (#10379)\n\n---\nCommit 3039d7da2 authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\nRemove ""bazel clean"" (#10318)\n\nReverting #8880 (see #10236)\nunnecessary since bazelbuild/bazel#2759 was merged\n---\nCommit ae1c16ae8 authored by Yifei Feng<fengyifei2026@gmail.com>\nCommitted by gunan<gunan@google.com>:\nUpdate docker to cudnn6. (#10307)\n\n* Update docker to cudnn6.\n\n* Update Dockerfile.gpu\n\n* Add --expunge to bazel clean to make cuda_configure run again and update TF_CUDNN_VERSION.\n\n* Remove expunge and set CUDA and CUDNN version default in configure.\n\n* Update configure\n\n* Only set --action_env once\n\n* Update prints for default version.\n\n---\nCommit 232e9d86d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntf_workspace() claims that the tf_repo_name argument is unused.\ntemp_workaround_http_archive still requires it.\nThis change silences the spurious message.\n\nPiperOrigin-RevId: 158089834\n\n---\nCommit cc1a02d37 authored by Francois Chollet<fchollet@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd fp16 support to convolutional layers that support it.\n\nPiperOrigin-RevId: 158086284\n\n---\nCommit 7d3fbba48 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtracted dnn estimator testing utils to be reused by dnn-linear-combined.\nAdded tests for dnn part of dnn-linear-combined estimator.\n\nPiperOrigin-RevId: 158084898\n\n---\nCommit 9d12c629c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRefactor the document and some polishment\n\nPiperOrigin-RevId: 158083952\n\n---\nCommit 134138299 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nCorrected comment: import_scoped_metagraph does not return a Saver.\n\nPiperOrigin-RevId: 158082288\n\n---\nCommit a58553e4d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd function in shape inference to try to infer output tensor content based on\nthe input shapes of the op. In some cases (E.g: shape), knowing the shapes of\nthe input is all that is necessary to infer the content of the output tensor.\nThis improves shape inference.\n\nPiperOrigin-RevId: 158079306\n\n---\nCommit 0cc851c08 authored by Yuefeng Zhou<yuefengz@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nCall maxcut algorithm in the model_based_cost_estimator.\n\nPiperOrigin-RevId: 158078511\n\n---\nCommit 7d76a90be authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd question marks next to items in the graph legend.\n\nPiperOrigin-RevId: 158076005\n\n---\nCommit 68fdb7628 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd DNNLinearCombinedClassifier.\n\nPiperOrigin-RevId: 158075939\n\n---\nCommit 3d52e4cb9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix create_meta_graph to respect an empty collection_list.\n\nPiperOrigin-RevId: 158073112\n\n---\nCommit 54ccc3e5a authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add module-scoped HLO dataflow analysis.\nThis is the first step to replacing TuplePointsToAnalysis with a global, module-scoped analysis. This dataflow analysis identifies all values and their defs and uses in the XLA graph. The analysis is currently unused. Follow up CLs will add buffer alias analysis using this dataflow analysis, and incrementally switch the transformation passes (for example, CopyInsertion) to use these new module-scoped analyses.\n\nPiperOrigin-RevId: 158067910\n\n---\nCommit 93c57c6e4 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nHandle control flow logic properly:\n * Don\'t fold enter/exit nodes since that can interact badly with frames\n * Create proper control dependencies on switch nodes\n\nPiperOrigin-RevId: 158066691\n\n---\nCommit 9e6899720 authored by Jingyue Wu<jingyue@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[SE] Add cudnnTransformTensor to StreamExecutor.\n\nPiperOrigin-RevId: 158062553\n\n---\nCommit 827874c30 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the CUDA path of depthwise_conv2d, add a fast NCHW backward input convolution for images smaller than 16x16.\n\nPiperOrigin-RevId: 158061669\n\n---\nCommit bee26215c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSpeed up multinomial_op on CPU by using a vectorized Eigen expression and avoiding unnecessary casts.\n\nBenchmark with AVX+FMA enabled:\n\nRun on <redacted> (12 X 3492 MHz CPUs); 2017-06-05T12:54:07.881672447-07:00\nCPU: Intel Haswell with HyperThreading (6 cores) dL1:32KB dL2:256KB dL3:15MB\nBenchmark                          Base (ns)  New (ns) Improvement\n------------------------------------------------------------------\nBM_Multinomial_cpu_1_10000_4          250817    172953    +31.0%\nBM_Multinomial_cpu_1_10000_128        273834    187552    +31.5%\nBM_Multinomial_cpu_1_10000_10000     1174175   1130778     +3.7%\nBM_Multinomial_cpu_1_100000_4        2040741   1276761    +37.4%\nBM_Multinomial_cpu_32_10000_4       10221765   4498666    +56.0%\nBM_Multinomial_cpu_32_10000_128     10638159   4994754    +53.0%\nBM_Multinomial_cpu_32_100000_4      100790019  44193314    +56.2%\nBM_Multinomial_cpu_128_100000_1     431269640  182506078    +57.7%\nPiperOrigin-RevId: 158061480\n\n---\nCommit 515b3ac67 authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd Clutz to TensorBoard build\n\nThis is so we can get JavaScript protobufs. This CL also improves the\nweb_aspect and makes some peculiar Closure Compiler errors go away\nrelating to externs.\n\nPiperOrigin-RevId: 158061198\n\n---\nCommit 0df6760fe authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded a test to make sure that graph properties for variables are properly\nreported\n\nPiperOrigin-RevId: 158053084\n\n---\nCommit 2ccfe8e76 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded a new method to extract the graph properties from a cost graph without\nhaving to run the model. This will simplify the process of creating regression\ntests\n\nPiperOrigin-RevId: 158050327\n\n---\nCommit 27f1b80c2 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixes memory leak in py_func when functions return unwrapped strings.\n\nPiperOrigin-RevId: 158046530\n\n---\nCommit cf238e1f2 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix memory leak in python caused by @tf_should_use.\n\nThe issue is that python\'s GC has trouble collecting objects with __del__ methods.\n\nThe solution is two pronged:\n* Keep track of usage state outside of the class, via a dict mapping\n  id(object) => state\n* Remove __del__ (this was the source: python\'s GC couldn\'t collect wrapped\n  objects), and instead use weakref.finalize to emit warnings just as the object\n  is being garbage collected.\n* Added tests for garbage collection [they were failing before i fixed the issue]\n\nPiperOrigin-RevId: 158042388\n\n---\nCommit e6f581863 authored by Bo Wang<david.b.wang@gmail.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nNew reader for LMDB databases (#9950)\n\n* Add LMDBReader op and test case\n\n* Add testcase to load LMDB from a folder\n\n* Add tensorflow/core/lib/lmdb/testdata/data.mdb\n\n* Add EOF test\n\n* Add license export\n\n* Blacklist the test data in pip_smoke_test.py\n\n* Address issues with respect to review\n\n* Add LICENSE to BUILD rules\n\n* Remove the prefx of LICENSE\n\n* Wrap key with compat.as_bytes()\n\n* Fixed a compilation flag\n\n* Improve BUILD rules\n\n* Support LMDB build in cmake\n\n* Fix BUILD file format with buildifier\n\n* Add fake unistd.h for lmdb to build on Windows\n\n* Avoid building lmdb tools which depends on unistd.h\n\n* Fix the string encoding issue in Python3\n\n* Update lmdb library name in CMakeList.txt\n\n---\nCommit cc411f938 authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nWhen converting the layout of Conv2DBackpropInput, we need to permute one of\nits inputs, which is a constant node. We permute a copy of this node, instead of the\noriginal node, because the original node may be used as input to other nodes.\nThis kind of sharing of const node could arise if the graph is pre-optimized by common\nsubexpression elimination, which is part of the L1 optimizations in\nTensorFlow.\n\nPiperOrigin-RevId: 158037552\n\n---\nCommit 88bdb6fca authored by Dandelion Man?<dandelion@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove all remaining references to non-public TF modules from TensorBoard.\n\nI deleted the PluginAssetUtil tests because that code is deprecated.\nI\'ll later add manual testing for backcompat in the text plugin.\n\nPiperOrigin-RevId: 158037466\n\n---\nCommit 6c531eb2f authored by Francois Chollet<fchollet@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd file hash to Keras Boston Housing dataset to force cache update.\n\nPiperOrigin-RevId: 158036587\n\n---\nCommit afdc38cd3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove deprecated resource handle functions in InferenceContext.\n\nPiperOrigin-RevId: 158034419\n\n---\nCommit 9f932e6ce authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAvoid parsing a rendezvous key for Send/Recv ops outside a loop.\n\nFor such ops, the rendezvous key will be constant, because\n`ctx->frame_iter()` will always evaluate to `{0, 0}`. Benchmarking\nreveals that this can save between 1 and 2 microseconds per Send or\nRecv op execution. The optimization applies to all cross-process,\ninter-device, and intra-device (host-to/from-device memory) Send/Recv\nops.\n\nPiperOrigin-RevId: 158032522\n\n---\nCommit cc2dd4ac8 authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntfdbg: dump debug data from different devices in separate directories\n\nFixes: #7051\nwherein TFDBG failed to load the data dump from a Session.run() involving multiple GPUs.\n\nThe root cause of the bug was that TFDBG previously assumed that node names are unique across all partition graphs. This is however not the case when multiple GPUs exist. The Send/Recv nodes in the partition graphs of the GPUs can have duplicate names. There will potentially be other cases like this in the future due to other reasons (e.g., distributed sessions and/or graph optimization).\n\nThis CL relaxes this assumption, by dumping the GraphDef and tensor data from different devices into different sub-directories under the dump root directory.\n\nPiperOrigin-RevId: 158029814\n\n---\nCommit a5909d643 authored by Toby Boyd<tobyboyd@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixed triggering create device multiple times\n\nPiperOrigin-RevId: 158025196\n\n---\nCommit 504a307b7 authored by Martin Wicke<wicke@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake sure that Adam colocates ops with a consistent variable across workers.\n\nPiperOrigin-RevId: 158022292\n\n---\nCommit 69ba4d3d4 authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix #10371\n\ncpuinfo.get_cpu_info() doesn\'t seem to include the l2_cache_size key on some\narchitectures.\n\nPiperOrigin-RevId: 158021008\n\n---\nCommit a51a9846c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPerformance-related tweaks: Don\'t copy loop variables; remove ineffective std::move casts.\n\nPiperOrigin-RevId: 158017670\n\n---\nCommit 009789f74 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Allow 0-sized slices in DynamicSlice and DynamicUpdateSlice; add tests.\n\nPiperOrigin-RevId: 158015870\n\n---\nCommit 48a4853eb authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMiscellaneous cleanups\n\nPiperOrigin-RevId: 158012131\n\n---\nCommit 379ddde24 authored by Chris Song<sjhshy@gmail.com>\nCommitted by Chris Song<sjhshy@gmail.com>:\nFix misspells.\n\n---\nCommit a0a76da97 authored by Lakshay Garg<lakshay.garg.1996@gmail.com>\nCommitted by Lakshay Garg<lakshay.garg.1996@gmail.com>:\nFixed typo in code\n\n---\nCommit 7ffc35732 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd support for bools in matrix_diag, matrix_diag_part, matrix_set_diag, matrix_band_part.\n\nPiperOrigin-RevId: 157939272\n\n---\nCommit edf3d5dbe authored by Darren Garvey<darren.garvey@gmail.com>\nCommitted by Darren Garvey<darren.garvey@gmail.com>:\nconfigure: Fix default path when enabling MPI.\n\nCorrect showing what the default path is when mpi is installed.\n\n---\nCommit aad2e3daf authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the CUDA path of depthwise_conv2d, add a fast NCHW forward convolution for images smaller than 16x16.\n\nPiperOrigin-RevId: 157915637\n\n---\nCommit 5cf08d9cb authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDrop blockDim.y for the equivalent in_cols, and slightly improve naming (use \'pixels\' instead of \'size\' for height*width numbers).\n\nPiperOrigin-RevId: 157906773\n\n---\nCommit 563f05ff6 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf contrib seq2seq] Expand tile_batch to handle nested structures.\n\nThis allows it to properly tile the initial wrapper state when using\nBeamSearchDecoder with AttentionWrapper.  Unit tests updated to show this use.\n\nPiperOrigin-RevId: 157903115\n\n---\nCommit 1234e2dda authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix Plottable definition\n\nOn Mac OS the build directory in the Node package conflicts with BUILD.\n\nPiperOrigin-RevId: 157899970\n\n---\nCommit bb7a8d8e7 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDon\'t use the _output_shape attribute in the op_level_cost_estimator since\nthere is no guaranty that it will be present or accurate.\n\nPiperOrigin-RevId: 157898989\n\n---\nCommit 6f4204c3d authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix TensorBoard SHA256 in cmake\n\nPiperOrigin-RevId: 157897958\n\n---\nCommit c9d2f432b authored by Justine Tunney<jart@google.com>\nCommitted by Justine Tunney<jart@google.com>:\nFix TensorBoard SHA256 in cmake\n\n---\nCommit 1c70fb686 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd training test for multi classes (n>2) linear classifier.\n\nPiperOrigin-RevId: 157896002\n\n---\nCommit 675d36be0 authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd fused batch norm to tf.layers.\n\nPiperOrigin-RevId: 157893874\n\n---\nCommit f37d0ea47 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal change -- first draft docs\n\nPiperOrigin-RevId: 157891937\n\n---\nCommit 9b8f6113b authored by Zongheng Yang<zongheng@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntensor_bundle: fix that the read path forgets to cache file handles.\n\nIn a case where a reader is geographically far from the file, this change\nachieves a speedup of end-to-end checkpoint restore by 5.8x.\n\nPiperOrigin-RevId: 157889659\n\n---\nCommit 0c92dada6 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse inplace Cholesky factorization and solves to speed up and reduce memory usage in matrix_solve_ls.\nCheck succes before copying outputs in cholesky_op.\n\nPiperOrigin-RevId: 157887564\n\n---\nCommit a4caeb2ea authored by William Chargin<wchargin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtract the graphs dashboard to a plugin\n\nThis completes the great plugin migration!\n\nThe graphs plugin is somewhat different from the plugins considered so\nfar. First, it exposes two kinds of data: graph data and run metadata.\nWe elect to put both sources of data under the domain of the graphs\nplugin for now, because it\'s not clear that the run metadata would be\nuseful for anything else. Second, the graph data really has no use for\n""tags"": a run either has an associated graph or it does not. Thus, we\nexpose an endpoint /data/plugin/graphs/runs that is different in format\nfrom the /tags routes exposed by other plugins (it returns just a list\ninstead of a run-to-tag mapping).\n\nThis change removes a bunch of tests from application_test.py. The tests\ncover the compresion behavior of the graph endpoint, but the graph\nendpoint doesn\'t have any special logic in the way of compression. Thus,\nthe tests are, apparently, testing that werkzeug (or whatever is\nrelevant here) provides good compression defaults. This isn\'t\nnecessarily a bad idea, but it shouldn\'t be coupled to the graph tests.\n\nTo get test data that includes run metadata, you can run this script:\n\n    https://raw.githubusercontent.com/tensorflow/tensorflow/326942394e69074d50d5889218a24c9371eff259/tensorflow/examples/tutorials/mnist/mnist_with_summaries.py\n\nPiperOrigin-RevId: 157884714\n\n---\nCommit 05a6a13f7 authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by gunan<gunan@google.com>:\nMake sure all writer caches are closed before deleting directories in dnn_test.\n\n---\nCommit d0e761f8d authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by gunan<gunan@google.com>:\nDisable another test that uses matrix_set_diag on windows.\n\n---\nCommit 8939b8562 authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf.contrib.data] Re-implement IteratorGetNext as an AsyncOpKernel.\n\nThis prevents the op from consuming an inter-op thread pool thread\nwhen blocked, and fixes a potential deadlock when many IteratorGetNext\nops are blocked. Fixes #10369.\n\nPiperOrigin-RevId: 157878885\n\n---\nCommit 9e25c68ad authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd loss_only_head to hold additional loss terms for multi_head setup\n\nPiperOrigin-RevId: 157875934\n\n---\nCommit 7cdcd0cca authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFilter more op types that don\'t benefit from constant folding.\n\nPiperOrigin-RevId: 157875168\n\n---\nCommit 366990d92 authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Fix a subtle issue in copy_insertion due the interaction between copy\noverriding logic and RecordIndicesToColocatingBuffers:\n\n- When building instructions ShapeTree to be copy overriden, it is possible\nthat we create a single kCopy for two identical instructions. An example can\nbe:\n\n    %tuple.19 = tuple(%constant.4, %constant.1793, %constant.1793)\n\nwhere it is used in a while.init operand, and constant.1793 is read-only within\nthe loop and also used by another while loop. The copy overriding pass will then\ncreate the following (logical, not finalized) tuple:\n\n    %tuple.19 = tuple(%constant.4, %copy.5, %copy.5)\n\n- In the subsequent pass RecordAmbiguousOrNonDistinctIndices, to add copies to\nensure point_to set is distinct, the duplicate %copy.5 are ignored because they\nare not yet finalized, and these indices (1 and 2 in the example) are still\nmarked as to-be copied.\n\nTherefore distinctiveness is lost.\n\nThis fix applies to the override building stage, to explicitly avoid creating\nshared copies for non-distinct buffers.\n\nPiperOrigin-RevId: 157872231\n\n---\nCommit f4b8d21b8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nChange function parameters to references to avoid copying, or otherwise move from function parameters when moving reduces the amount of copying.\n\nPiperOrigin-RevId: 157867333\n\n---\nCommit 3eee61caa authored by Drew Hintz<pushespretn@gmail.com>\nCommitted by GitHub<noreply@github.com>:\nfix quotes in example code from ? to ""\n---\nCommit 4905c0eae authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove TODO - the new tolerance is okay to keep.\n\nPiperOrigin-RevId: 157861020\n\n---\nCommit 55f6b6ff1 authored by David Soergel<soergel@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd explicit SparseTensor support to SignatureDef.\n\nPiperOrigin-RevId: 157860466\n\n---\nCommit 79099d677 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemoves default thresholds from BinaryLogisticHead and adds predict and evaluate tests for DNNClassifier.\n\nPiperOrigin-RevId: 157856471\n\n---\nCommit 54595f0f3 authored by Jianwei Xie<xiejw@google.com>\nComm\xe2\x80\xa6'"
d0ecf280b9a49d5119d271e0f620c9e5693bc855,'Merge pull request #10601 from av8ramit/fix1.2branchtests\n\nFixing the broken 1.2 branch tests.'
bf22796d4151e6aa168fc7e698efb08fa86cab43,'Fix numpy 1.13 incompatibilities (#10501)\n\n* Fix numpy 1.13 incompatibilities\r\n\r\n* Skip tests with numpy 1.13.0'
85211a479f502596225d568fd87ab1359e8a63e7,'fixed minor formatting issues (#10534)\n\nfixes some minor issues:\r\n\r\n* headings displayed correctly\r\n* timeline visualization is now shown correctly'
37946377f5287816d04c0681532573694095ffda,"""Bugfix: Don't ignore logical names in single tensor predict signatures. User-supplied names in predict signatures were silently ignored and replaced with constants.\n\nPiperOrigin-RevId: 158481505"""
e9de087fa7f59c39bbe12ac2c83c5547c83f746c,'Implemented sinh and cosh (#10427)\n\n* Implemented sinh and cosh #7531\r\n\r\n* Removed Eigen::half from cosh and sinh definitions\r\n\r\nRefer to Issue #7531 and Pull Request #7628\r\n\r\n* Fixed the gradient for sinh in math_grad_test.cc'
2f53cacb2b14ce4142ef29dcae36a2d7b28238c8,'Fix a test failure of quantization_utils_test on ASAN\n\nPiperOrigin-RevId: 158414538'
e16cd2ede6a739a1c9c4576ebf8a4fe81e83f39e,'Fix typos (#10533)'
50d80ddf926423c16864f886a4fd2297d7725da1,'Fix fft_ops_test.py for CPU'
4bc9ac90d0dd82360561dae092959d12fb45c3c3,'Merge pull request #10563 from ksellesk/Fix-AttributeError\n\nFix AttributeError in resnet.py'
2a1f11556c4c8e93d6fc79d2078a6b6d8a100721,"'Fix AttributeError in resnet.py\n\nThere is no function tf.softmax() in Tensorflow 1.x.\n\nWhen running the old code, Python interpreter complains:\n\nFile ""resnet.py"", line 152, in res_net_model\nprediction, loss = res_net(x, y)\nFile ""resnet.py"", line 148, in res_net\nreturn tf.softmax(logits), loss\nAttributeError: \'module\' object has no attribute \'softmax\''"
08ed32dbb9e8f67eec9efce3807b5bdb3933eb2f,"'Windows: Make TensorFlow build without --cpu=x64_windows_msvc (#10466)\n\n* Windows: Make TensorFlow build without --cpu=x64_windows_msvc\r\n\r\nSince from Bazel 0.5.0, MSVC toolchain became the default toolchain on\r\nWindows. So --cpu=x64_windows_msvc is not required as long as we adjust\r\nthe BUILD files in TensorFlow.\r\n\r\n--cpu=x64_windows_msvc is also supported for now, but is depracated.\r\nThe configuration for cpu value x64_windows_msvc is a duplicate of\r\nx64_windows, which should be removed in the future.\r\n\r\n* Fix breakage on macOS'"
cd5ac40b31afaec237aaee35007f2dc846caf811,"'[XLA] Update LLVM to upstream revision r304927.\nAdd LLVM build rules for the LLVM AMDGPU backend, commented out by default. Fixes issue #10437.\n\nPiperOrigin-RevId: 158351480'"
aff4d124b25c9d6fbf0673dbf9bcad750d8771c0,'Compare base_dtype instead of dtype in piecewise_constant (#10280)\n\n* Compare base_dtype instead of dtype in piecewise_constant\r\n\r\nCompare base_dtype instead of dtype in piecewise_constant. Fix #10086\r\n\r\n* add unit test\r\n\r\n* Small lint fix and comment'
7c46214abb55ec3b6d6fb0f44e5cb1a3460b1554,'Fix numpy 1.13 incompatibilities (#10501)\n\n* Fix numpy 1.13 incompatibilities\r\n\r\n* Skip tests with numpy 1.13.0'
2741561c8eea7748ba04f6b47076bdfd22e3a915,"'Fix up vz_projector script structure\n\nWe now make sure scripts and HTML imports are declared in the correct\nplaces. In the future, pedantically listing script tags should not be\nnecessary.\n\nPiperOrigin-RevId: 158334306'"
beeaade460a125975b6fe34d23ff0465183f8b4a,"""Resubmit a reverted change. Original description:\n\n[XLA] Enable HloEvaluator for constant folding, also merged a few operations\nfrom hlo_constant_folding to hlo_evaluator.\n\nAdditionally:\n- In ShapeUtil::ForEachIndex:\n    * fix a bug where visitor is called when the shape has zero elements (e.g., F32{1,0})\n    * added test case for ForEachIndex.\n\n- In HloEvaluator:\n    * Instead of copying and caching a Constant instruction, return the literal directly if the instruction is constant.\n    * Fix an issue where TUPLE and OPAQUE primitives are not keyed in the templated typed_visitor.\n    * Use (fixed) LiteralUtil::Populate to populate resulting literal, fixes the preexisting bug in the evaluator where R0 and shape with zero size dimensions are not handled.\n    * Refactor ElementWiseUnaryOp and HandleCompare to be templatized on the operand's type.\n    * Refactor IsFinite to be top level since it is only applicable to floats and the return type is always boolean.\n    * Change from std::remainder to std::fmod for kRemainder to be compliant with existing XLA behavior.\n    * Change from std::max and std::min to std::fmax and std::fmin to handle NaNs.\n    * Minor comments fix.\n\nPiperOrigin-RevId: 158330052"""
0a9d2dac0844d1bfe11c8a21d3b2598793564b95,"""Add a util function in virtual placer to return canonicalized device string, which can be used to fix the node's device field before passing them to the maxcut algorithm.\n\nPiperOrigin-RevId: 158322753"""
85f9681258c862ae8a74e14f87aa63fa70a7e832,'[OpenCL] Cleans cast operation (#10330)\n\n* [OpenCL] Removes not needed typedef for SYCLDevice\r\n\r\n* [OpenCL] Fixes formatting\r\n\r\n* [OpenCL] use SYCLDevice for int32 cast case'
bff5e72da9f3df488c7d99149497ea41b6366944,'Fix typo.\n\nPiperOrigin-RevId: 158310742'
edb5fed7fcb23f2f7ad8f556eb44c0a8213184ca,"'Add label-vocab support to binary logistic head.\nAdd assertion that binary classifier label is in range [0., 1.]\nFixed Classifier Integration tests.\n\nPiperOrigin-RevId: 158307521'"
f8e1cf8fa5fd244ae4cef738917675a90f2be301,'Open up visibility of tf_imports (#10500)\n\nThis also fixes the definition of Clutz.'
b7892a30f389d5ac3cdc374d371082585e5809ec,'Clarify tf.matmul documentation (#10381)\n\n* Update math_ops.py\r\n\r\n* Fix non-ascii character'
f105df0478cea110129811062ca3d29f289492c0,"'In the CUDA path of depthwise_conv2d, optimize backward filter convolution for images 2 or 4 times smaller than 16x16. Also initialize in_cols from blockDim, to fix the regression caused in CL 157906773.\n\nPiperOrigin-RevId: 158296136'"
7b4c01794fbc2e6dc46e93a42416dd80929ce1e5,'Support numpy-style padding and slicing of tf.spectral.rfft/irfft to match the desired FFT length.\n\nFixes incorrect RFFT/IRFFT results when fft_length does not match the input dimension.\n\nPiperOrigin-RevId: 158289991'
7b5302af0a4167ef991a298052746dbfcc26df84,"'Adds ability to set a ""family"" attribute in Tensorflow summaries, which\ncontrols the ""tab name"" of the summary that is displayed.\n\nThis solution keeps using name_scope to keep names unique, but then prefixes the tag with the family name if provided.\n\nPiperOrigin-RevId: 158278922'"
3cf88d390c73d99a45ffc19d3e0c338e3cf46715,"'When GPU is configured, do not require --config=cuda.\nAlso fix indentation in configure.\n\nPiperOrigin-RevId: 158232959'"
1b6453bec58e3c0c020fe654d04ba4fb8dbb20a3,"'Fixes issue #10258 (#10366)\n\nOn CUDA versions previous to 8.0, only __shared__ variables could be declared as static in the device code.'"
cd56a638dae843fd0bfa159fbeab1f5254b3e3ac,'Fixed wrong range in docstring (#10272)'
d13ae380c365196389bcd4fbcc42f8ceb5f403e9,"'Fix CMD in Dockerfile (#10444)\n\nCurrently Notebook fails execution because default user for this container is root, and unless explicitly allowed, jupyter notebook will not start.'"
f6dc1ac61ae9f2acad3cfff33b91a7da3771fa3d,'MKL_INSTALL_PATH should not be ignore when given (#10180)\n\n* MKL_INSTALL_PATH should not be clear when given\r\n\r\n* fix overwrite by default'
cfdc22dee65a81b3a4cf9676a62dde7704176ae5,'fix the error (#10293)'
58747e357b7275fef6d3a20d308e055bf4e063a6,"'PhiloxRandom: Fix race in GPU fill function (#10298)\n\n* PhiloxRandom: Fix race in GPU fill function\r\n\r\nThe PhiloxRandom fill kernel for the GPU had race conditions that caused the\r\noutputs to be non-deterministic. In particular, the code previously executed\r\nwith N GPU threads (# thread contexts per GPU), but it would only advance the\r\nfill addresses by N-1 stride in each step. This incorrect stride caused the\r\n0th and N-1st threads to write to the same memory locations, racing for which\r\nwas last to write their common locations. Make the stride equal to the number\r\nof threads to eliminate the race.\r\n\r\nBONUS: By fixing this race, PhiloxRandom constant-sized GPU initializers now\r\nmatch CPU initializers.\r\n\r\n* Update random_ops_test.py to find race conditions\r\n\r\nIncreasing the size of arrays in the random_ops_test.py test to manifest\r\nthe race conditions to be resolved.'"
2cbcda08f43a576042fde983aaf9781f6874a324,"'Fixed formatting in Linux install guide (#10353)\n\nFormatting issues were introduced in PR #8825, commit f30918b3694afe844990cbddc82e27e023d88856'"
ab5f38560c2ef544e1c728d05f1538c3dcc25c7f,'Fixed typos in documentation & READMEs (#10365)'
3018d4678d878177f10caffc229d03aecc472074,'Fix typos (#10386)'
c5f3c61712630493afb3208110cff9ce834b8819,'Fix unbatch for Datasets with multiple elements (#10401)\n\n* Fix unbatch for datasets with multiple elements\r\n\r\n* fixup! pylint (indent two spaces instead of four)'
8b065bc1093b97cee8de7b9cd323af0beca25f55,'Fix unaligned args in api_docs/python/tf/contrib/learn/Evaluable (#10423)\n\nThis commit fixes unaligned args in api_docs/python/tf/contrib/learn/Evaluable\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
ed47ecf2dcaa8ddd1f1cc2c38e413b3bfaf9caab,'[OpenCL] Cleans variable op (#10333)\n\n* [OpenCL] Cleans variable op\r\n\r\n* Fixes formatting and float / double -> GPU_NUMBER_TYPES_NO_HALF'
bf4c3dd6ba42a9a4b836cde2608f91869918c055,"'Revert ""Fix patching issue on Windows"" (#10472)\n\nThis reverts commit 47e6785646a1266f01a1a570bd799f8518ee2997.'"
a4e7b7add4c87f4601d32c2bc77a496de8cbe0b2,'Fixes a bug in setting default optimizers for DNNLinearCombinedClassifier.\n\nPiperOrigin-RevId: 158190192'
54998b45dbab1fbb4ed759558e712310009389bf,'BasicRNNCell comment fix (#10467)'
b440abce7f9bc27ec909d28c932fa4e1865a39b7,"'add Cuda{2D,3D}LaunchConfig that maximizes occupancy (#10032)\n\n* add Cuda{2D,3D}LaunchConfig that max occupancy\r\n\r\n* remove default val, check input<=0\r\n\r\n* add max size check\r\n\r\n* fix typo\r\n\r\n* tests, docs, and related changes\r\n\r\n* build the test\r\n\r\n* buildify\r\n\r\n* cudaOccupancy... call check success, and style fix'"
e8bc38ef6cac6f7a464371b40e44e2af6072fd10,'Fix test failures on windows. (#10470)'
2b3535c649f4301eed154e6753d5b53694f1bcdb,'Minor docstring fix for build_parsing_serving_input_receiver_fn\n\nPiperOrigin-RevId: 158163615'
47e6785646a1266f01a1a570bd799f8518ee2997,'Fix patching issue on Windows (#10452)'
6d54f09d97c58702e9ec8882b5c4ba8178415346,'Fix linking errors of lmdb on Windows (#10457)'
2be64b38e49ada5161b027bc08b558073d219351,'Merge pull request #10417 from darrengarvey/fix-configure-enabling-mpi\n\nconfigure: Fix default path when enabling MPI.'
2e7e1d57bd27a0acb7b46bbccf227a9e4325e38a,'Small fix for how std::move is used in constructors\n\nPiperOrigin-RevId: 158141564'
f3f53e8b394bdcaddc707f7bde8dcc98a73531e7,"'[tf.contrib.data] Add support for dicts and remove lists from nested structures.\n\nThis changes the behavior of constructors like\n`tf.contrib.data.Dataset.from_tensors()` when passed a list. Previously, the\n`nest` utility would recurse into each element of such a list and create a\nseparate Dataset component. Now the list will be converted to a tensor, allowing code like:\n\n```python\ndataset = tf.contrib.data.Dataset.from_tensor_slices(([1, 2, 3], [4, 5, 6]))\n```\n\n...to define a dataset with two components (each of shape `()`).\n\nThis change also adds support for dictionaries as nested structures, which\nsimplifies integration with dictionary-returning ops like `tf.parse_example()`.\n\nFixes #10151.\n\nRELNOTES: Breaking change to `tf.contrib.data.Dataset` APIs that expect a\nnested structure. Lists are now converted to tf.Tensor implicitly. You may need\nto change uses of lists to tuples in existing code. In addition, dicts are now\nsupported as a nested structure.\nPiperOrigin-RevId: 158139467'"
aa2941ffd7c6b6ae10fcb476ac1b3190b115bfbb,'Merge pull request #10453 from chris-chris/patch/170605-misspell\n\nFix misspells on comments'
8dcf37b47177c7f4ed974a35acc3fda57163c993,'Fix typo (#10379)'
7400ddc90f3de004f03c9d06dff37ef0f046fc04,'Fix: config MKL build error - mkl_layout_pass.cc has missing header dependencies (#9986)'
0880e87b56919a854ef131a16c3b1b556499e2fc,'Python 3.6 support on windows. (#10356)\n\n* Python 3.6 support on windows.\r\n\r\n* Fix typo in README.md\r\n\r\n* Make environment configurable for windows gpu build.'
51c404968a442fe1e561c3f5d672cf6eb2772e44,"""Fix memory leak in python caused by @tf_should_use.\n\nThe issue is that python's GC has trouble collecting objects with __del__ methods.\n\nThe solution is two pronged:\n* Keep track of usage state outside of the class, via a dict mapping\n  id(object) => state\n* Remove __del__ (this was the source: python's GC couldn't collect wrapped\n  objects), and instead use weakref.finalize to emit warnings just as the object\n  is being garbage collected.\n* Added tests for garbage collection [they were failing before i fixed the issue]\n\nPiperOrigin-RevId: 158042388"""
a823c8d40185bf6ba0ec47488f8e9fb20de1d20e,'Fixed triggering create device multiple times\n\nPiperOrigin-RevId: 158025196'
d5b89b184c58da9be8f3507db47b7495385ed934,"'[tf.contrib.data] Re-implement IteratorGetNext as an AsyncOpKernel.\n\nThis prevents the op from consuming an inter-op thread pool thread\nwhen blocked, and fixes a potential deadlock when many IteratorGetNext\nops are blocked. Fixes #10369.\n\nPiperOrigin-RevId: 157878885'"
a5030334d1d25eb2300cfef1d94a6f51d58aed15,'Fix flakiness in GpuMultiSessionMemoryTest.\n\nPiperOrigin-RevId: 157781368'
129c4fce232e6ed3feb28ac55248e261e2d729dd,"'Additional colocation options and bugfixes for TensorArray\n\n* colocate_with is now set properly when a TensorArray is passed through a\n  while_loop\n* added a new argument, ""colocate_with_first_write"" (default: True; this is\n  the current behavior).  If False, the TensorArray is simply placed on the\n  device from the context it\'s constructed in, and no colocation constraints\n  are added.\n\nPiperOrigin-RevId: 157643133'"
275e7d02bac0ff8ba6317006f9ab6588ea42c67e,"""[tf contrib seq2seq] Improve BeamSearchDecoder's ability to handle unknown shapes.\n\nUpdated unit tests to contain inputs of unknown shape (at graph build time).\nFound an issue in the gather helper that stops it from properly propagating\nthe batch size of the output shape.  This caused problems with tf.while_loop.\nFixed.\n\nPiperOrigin-RevId: 157533937"""
4f586f145be2a8aa66540be15e0f8ad3f8ff970c,"""[tf contrib seq2seq] Bugfixes to BeamSearchDecoder\n\nImplementation by Cinjon Resnick.  He can't push this since he's traveling.\nI just copied the fix and added some small syntax tweaks to make the unit\ntests pass.  More comprehensive unit tests will come in the near future.\n\nFixes at least part of #9904.\n\nBeamSearchDecoder:\n1. Fix the bug where we don't pass the next cell state through.\n2. Gather the cell state (and attention if that's a part of the model\n   as an AttentionWrapper on the cell) according to the next_beam_ids.\nPiperOrigin-RevId: 157415564"""
621cb8e91691e74f23eb3394981c4ad17389c8e9,'Fixes compatibility of contrib feature_column with core make_parse_example_spec.\n\nPiperOrigin-RevId: 157270783'
2b2dc6e8a36d2c1076dc9bed79f1cc76143c2e96,'Force GPU device objects that refer to the same physical card using the\nsame stream id to use the same cuda stream objects. This avoids confusing\nthe per-device memory allocator in ways that cause memory corruption.\n\nFixes https://github.com/tensorflow/serving/issues/335.\n\nPiperOrigin-RevId: 157258318'
852453b715ee5241e68b840da8ee2255a8bb0cff,'Fix attention score padding. Use -inf as default instead of 0 for softmax.\n\nPiperOrigin-RevId: 157214300'
3d52e4cb934bb058a45311702f3b0f61eef75bf3,'Fix create_meta_graph to respect an empty collection_list.\n\nPiperOrigin-RevId: 158073112'
27f1b80c22115f134fd959a7c0fe013a21784795,'Fixes memory leak in py_func when functions return unwrapped strings.\n\nPiperOrigin-RevId: 158046530'
cf238e1f2f68309822e1adb3f86dd439c0b87441,"""Fix memory leak in python caused by @tf_should_use.\n\nThe issue is that python's GC has trouble collecting objects with __del__ methods.\n\nThe solution is two pronged:\n* Keep track of usage state outside of the class, via a dict mapping\n  id(object) => state\n* Remove __del__ (this was the source: python's GC couldn't collect wrapped\n  objects), and instead use weakref.finalize to emit warnings just as the object\n  is being garbage collected.\n* Added tests for garbage collection [they were failing before i fixed the issue]\n\nPiperOrigin-RevId: 158042388"""
e6f58186363279496c46563e6f065ce7ea16c501,'New reader for LMDB databases (#9950)\n\n* Add LMDBReader op and test case\r\n\r\n* Add testcase to load LMDB from a folder\r\n\r\n* Add tensorflow/core/lib/lmdb/testdata/data.mdb\r\n\r\n* Add EOF test\r\n\r\n* Add license export\r\n\r\n* Blacklist the test data in pip_smoke_test.py\r\n\r\n* Address issues with respect to review\r\n\r\n* Add LICENSE to BUILD rules\r\n\r\n* Remove the prefx of LICENSE\r\n\r\n* Wrap key with compat.as_bytes()\r\n\r\n* Fixed a compilation flag\r\n\r\n* Improve BUILD rules\r\n\r\n* Support LMDB build in cmake\r\n\r\n* Fix BUILD file format with buildifier\r\n\r\n* Add fake unistd.h for lmdb to build on Windows\r\n\r\n* Avoid building lmdb tools which depends on unistd.h\r\n\r\n* Fix the string encoding issue in Python3\r\n\r\n* Update lmdb library name in CMakeList.txt'
cc2dd4ac8538045e94e3f8fe4fb1c532f67c1844,"'tfdbg: dump debug data from different devices in separate directories\n\nFixes: #7051\nwherein TFDBG failed to load the data dump from a Session.run() involving multiple GPUs.\n\nThe root cause of the bug was that TFDBG previously assumed that node names are unique across all partition graphs. This is however not the case when multiple GPUs exist. The Send/Recv nodes in the partition graphs of the GPUs can have duplicate names. There will potentially be other cases like this in the future due to other reasons (e.g., distributed sessions and/or graph optimization).\n\nThis CL relaxes this assumption, by dumping the GraphDef and tensor data from different devices into different sub-directories under the dump root directory.\n\nPiperOrigin-RevId: 158029814'"
a5909d64320a9dfd940b298bcb0bd758e514a04f,'Fixed triggering create device multiple times\n\nPiperOrigin-RevId: 158025196'
69ba4d3d49bd5775131ae7f00830a41f478dbbf5,"""Fix #10371\n\ncpuinfo.get_cpu_info() doesn't seem to include the l2_cache_size key on some\narchitectures.\n\nPiperOrigin-RevId: 158021008"""
8a46d7a2998c4226560283bd35c163aeb724f593,'Merge pull request #10426 from lakshayg/code_typos\n\nFixed typo in code'
379ddde2422ef4810f88002a4ecead4e1fbc656d,'Fix misspells.'
a0a76da973ad6adeb54ddc31023ec83c0ce9d7f1,'Fixed typo in code'
edf3d5dbe405930e863c3b747e8a241e73903616,'configure: Fix default path when enabling MPI.\n\nCorrect showing what the default path is when mpi is installed.'
5efd272aabd1107520d786ae98dbc29c15026c3f,'fix merge issues'
1234e2dda6851eb921bfa00355b80f2c9c661a7e,'Fix Plottable definition\n\nOn Mac OS the build directory in the Node package conflicts with BUILD.\n\nPiperOrigin-RevId: 157899970'
6f4204c3d30b2fded99627fd7839acf9e2ece279,'Fix TensorBoard SHA256 in cmake\n\nPiperOrigin-RevId: 157897958'
c9d2f432b6f4f72e779c216e90a9ff57813e59b3,'Fix TensorBoard SHA256 in cmake'
9b8f6113b7894acd07720e55f1cc6a33a1dc4b53,"'tensor_bundle: fix that the read path forgets to cache file handles.\n\nIn a case where a reader is geographically far from the file, this change\nachieves a speedup of end-to-end checkpoint restore by 5.8x.\n\nPiperOrigin-RevId: 157889659'"
8939b8562027189b24e7609b77e17122dc3a21d4,"'[tf.contrib.data] Re-implement IteratorGetNext as an AsyncOpKernel.\n\nThis prevents the op from consuming an inter-op thread pool thread\nwhen blocked, and fixes a potential deadlock when many IteratorGetNext\nops are blocked. Fixes #10369.\n\nPiperOrigin-RevId: 157878885'"
366990d92dfff7861ff11a4d0c9bb4a9f74f9077,"'[XLA] Fix a subtle issue in copy_insertion due the interaction between copy\noverriding logic and RecordIndicesToColocatingBuffers:\n\n- When building instructions ShapeTree to be copy overriden, it is possible\nthat we create a single kCopy for two identical instructions. An example can\nbe:\n\n    %tuple.19 = tuple(%constant.4, %constant.1793, %constant.1793)\n\nwhere it is used in a while.init operand, and constant.1793 is read-only within\nthe loop and also used by another while loop. The copy overriding pass will then\ncreate the following (logical, not finalized) tuple:\n\n    %tuple.19 = tuple(%constant.4, %copy.5, %copy.5)\n\n- In the subsequent pass RecordAmbiguousOrNonDistinctIndices, to add copies to\nensure point_to set is distinct, the duplicate %copy.5 are ignored because they\nare not yet finalized, and these indices (1 and 2 in the example) are still\nmarked as to-be copied.\n\nTherefore distinctiveness is lost.\n\nThis fix applies to the override building stage, to explicitly avoid creating\nshared copies for non-distinct buffers.\n\nPiperOrigin-RevId: 157872231'"
8db8ad2fd4c6f23c0d0f517ad5ae69c755edb3f3,"'Merge pull request #10402 from adhintz/patch-1\n\nfix quotes in example code from \xe2\x80\x9c to ""'"
3ae4491bebfd2d5355a6e741231fbcaedab28e0d,'Merge pull request #10395 from lakshayg/code_typos\n\nFixed typo in code comment'
3eee61caac1f26b6e95e8118703107f640eb70a9,"'fix quotes in example code from \xe2\x80\x9c to ""'"
43c0f52f12022905bacbbe5022fd28098ba30586,"'Fix off-by-one error in BoolVector(begin, end) constructor.\n\nPiperOrigin-RevId: 157833086'"
419d437bac393f2db700753b10cb21cdaa01003f,'Fixed typo in code comment'
07710014d2e09c8b44c36dd116de7f1fcdf6b696,'Fix device colocation for KMeans in case of multiple parameter servers.\n\nPiperOrigin-RevId: 157795360'
a65a70ea5a59728087e5cb1d01d58248604bfb3d,'Fix pip tests under contrib/text\n\nPiperOrigin-RevId: 157783952'
fb4bc806a83b629652f7919f4e0c0e9ae08198c0,'Fix flakiness in GpuMultiSessionMemoryTest.\n\nPiperOrigin-RevId: 157781368'
cc346e69063824eb2e9a8a66dec6e8878da69f9e,'Strip the :x suffix when generating control inputs from input names\n\nPiperOrigin-RevId: 157770257'
d29bbeca3d237e10c678242f34bde908ca68ccc3,"'Fix outdated code ref in TensorBoard README, add link to SO question.\n\nPiperOrigin-RevId: 157743374'"
9fc1642250713f27f520af0da080c388390912c5,'Fix index_table_from_file to allow vocabulary_file be a Tensor\n\nPiperOrigin-RevId: 157740677'
207203253b6f8ea5e938a512798429f91d5b4e7e,'Python 3.6 support on windows. (#10356)\n\n* Python 3.6 support on windows.\r\n\r\n* Fix typo in README.md\r\n\r\n* Make environment configurable for windows gpu build.'
24623653b2305aed001a45007f513b98ab15fa5f,'Fix graph text format serialization\n\nPiperOrigin-RevId: 157669530'
95d90ab2e0994127ffc42b80e16a3f532895cf6d,'[OpenCL] Fixes Split op (#10322)\n\n* [OpenCL] Fixes Split op\r\n\r\n  Split should alway go through SYCL device\r\n\r\n* [OpenCL] Removes half from registred types'
762280e11ef8118bc58c5df83113f5b4e8f3d147,'Merge pull request #10312 from cxxgtxy/master\n\nFix comments error in mnist_replica.py where only one ps is used with\xe2\x80\xa6'
75385814ff2921727d0a3923e122b26af5790d0f,'Fix comments error in mnist_replica.py where only one ps is used with two works by default.'
23364e2c68e886f831dcff7007ca324f941bdfda,'buildifier fix'
e5088cb823964216adfba3155965e0f6f2c7bf7c,'Fix discrepancy between measured and analytical cost graph. Use tf_cuda_library for utils.\n\nPiperOrigin-RevId: 157660745'
b0f739da665b0491920667a7d1e2bcc2fd721f0d,'Fixing merge conflicts'
787381ca528ff737d614c96ef4c3603a76405061,"""Split up session_test.py -> session_clusterspec_prop_test.py\n\nsession_test.py has gotten very large. Additionally, recently it has become\nflaky. In order to both (1) improve overall code health, and (2) to facilitate\nroot-causing the test flakiness, this CL begins to split apart session_test\ninto focused subsets.\n\nI've suffixed the scoping of the session_test in order to preserve filesystem\nsort-order grouping.\n\nPiperOrigin-RevId: 157658981"""
7ed44f4c92c1553c0cefb607ce8a17b7d85f326f,"""Split up session_test.py -> session_partial_run_test.py\n\nsession_test.py has gotten very large. Additionally, recently it has become\nflaky. In order to both (1) improve overall code health, and (2) to facilitate\nroot-causing the test flakiness, this CL begins to split apart session_test\ninto focused subsets.\n\nI've suffixed the scoping of the session_test in order to preserve filesystem\nsort-order grouping.\n\nPiperOrigin-RevId: 157651813"""
ccdb30763a5ddbf0beeac403facdeb436479c82e,"'Additional colocation options and bugfixes for TensorArray\n\n* colocate_with is now set properly when a TensorArray is passed through a\n  while_loop\n* added a new argument, ""colocate_with_first_write"" (default: True; this is\n  the current behavior).  If False, the TensorArray is simply placed on the\n  device from the context it\'s constructed in, and no colocation constraints\n  are added.\n\nPiperOrigin-RevId: 157643133'"
d310de4fac93c42caf7135038429362161045c6b,"""Split up session_test.py -> session_list_devices_test.py\n\nsession_test.py has gotten very large. Additionally, recently it has become\nflaky. In order to both (1) improve overall code health, and (2) to facilitate\nroot-causing the test flakiness, this CL begins to split apart session_test\ninto focused subsets.\n\nI've suffixed the scoping of the session_test in order to preserve filesystem\nsort-order grouping.\n\nPiperOrigin-RevId: 157640788"""
289e7bf5b88cee703f69b2ca204a36a58613e8a7,'Fixes and improvements to cmake windows build. (#10354)\n\n* Disable linalg ops tests on windows.\r\n\r\n* Do not print the full source code path for logs on windows.'
fd6c3c4f1b24812424a2c880726da87bdb0b8f86,'Fixes flaky test in dnn_linear_combined_test.\n\nPiperOrigin-RevId: 157622951'
ee05b8b6906776bcb358aa6dd75104a93fee03d7,"'Fix to remove TF op usage outside of the initializer fn (due to deferred execution of initializer fn, this prevent issues with graph mismatch).\n\nPiperOrigin-RevId: 157620177'"
964d1a50903348ee608e74cbbf8cdbff19cec093,'Fix a bug that an erroneous control edge can be introduced when loops are nested in control dependency context.\n\nPiperOrigin-RevId: 157616919'
d3c0482e6a107bd41e018a11ff07f713c07ae2e4,'Fix a typo in export_output.py (#9975)'
43bfc138c9676fb54945fbede977b90a0c0aea79,'Fix OSS compilation error in tfprof_main.cc\n\nPiperOrigin-RevId: 157602449'
904a3d075dd3e241913e196fbe6f71bd30c870fb,'Fixing issue with cuda compilation related to missing include (exception is only thrown when running with sandboxing on)\n\nPiperOrigin-RevId: 157602401'
d101472296f8881aee75d8c1f8a2de89cffcd2e5,'Fixed up the documentation for tf.contrib.layers.batch_norm and tf.layers.batch_normalization explaining how to include the update ops in the train_op. Also simplified the existing tf.layers.batch_normalization documentation to the least error-prone option (adding to the train_op). (#10308)\n\nPiperOrigin-RevId: 156609483'
5f8571a6bc5687d4bbb26cc2c4f5d987ad0d97c1,'Fix missing namespace comments\n\nPiperOrigin-RevId: 157591364'
2d1860859a812437d5c20fa3bf75e6e989fbbb87,'Fix test name in array_elementwise_ops_test.\n\nPiperOrigin-RevId: 157552402'
fe589d9e7caea582beed160ad47e55f537a8403e,"'[OpenCL] Implementation improvements (#9117)\n\n* OpenCL Improvements\r\n\r\n* Registers Scatter and ScatterNd Ops for SYCL\r\n\r\n* Registers Stack op for SYCL\r\n\r\n* Fixes No sycl buffer found error for debug ops\r\n\r\n* Registers MatMul and Transpose Ops to SYCL device for double\r\n\r\n* Extends analyzer_cli_test.py test to cover SYCL\r\n\r\n* Fixes Transpose Op for double when on SYCL\r\n\r\n* Bumps Eigen version to fix double precision issue on SYCL\r\n\r\n* Extends SessionDebugTestBase to cover SYCL\r\n\r\n* Register SYCL implementations for random ops\r\n\r\n* Avoid functions that might not be defined on SYCL device (#51)\r\n\r\n* Avoid functions that might not be defined on SYCL device\r\n\r\n* Simplify by using Eigen math functions\r\n\r\n* OpenCL improvements\r\n\r\n - Bumps Eigen Version\r\n - Refactors Ops registration\r\n - Introduces workaround for Const Op related to the difference between\r\n   CUDA which uses pointers and OpenCL that uses buffers/accessors\r\n - Extends memory types to cover DEVICE_SYCL as well\r\n - Introduces  GetSYCLDevice() method that returns list of supported devices\r\n   with GPU device having the highest priority ( doesn\'t include blacklisted devices )\r\n - ::internal::Transpose -> tensorflow::internal::Transpose in order to\r\n   avoid compilation reported error\r\n - re-introduces fix for bugged string replacement causing a lot of compilation\r\n   warnings -c -> --include\r\n - Adds sycl_runtime to bazels ARRAY_DEPS\r\n - Replicates TF_CALL_GPU_PROXY_TYPES for SYCL\r\n\r\n* [OpenCL] Fixes an issue caused by switch to aligned allocator for sycl buffer (#53)\r\n\r\n* [Build] Use gcc/g++ as a host compiler to avoid https://github.com/tensorflow/tensorflow/issues/8394 (#54)\r\n\r\n* [OpenCL] Fixes Scatter Op\r\n\r\n* Fix testSimple and testConst in stack_op_test (#3)\r\n\r\n* Fix testSimple and testConst in stack_op_test\r\n\r\n* Create a specialisation of DoParallelConcatUpdate for SyclDevice and\r\nregister it\r\n\r\n* Guard all code in TENSORFLOW_USE_SYCL\r\n\r\n* Do not use sycl device for int32\r\n\r\n* Registration of the Sycl version is now looking like the one for the GPU\r\n\r\n* Remove added empty line\r\n\r\n* Register batch normalization kernels for OpenCL (#61)\r\n\r\n* [OpenCL] RandomGamma has no GPU friendly implementation (#57)\r\n\r\n* [OpenCL] Compatibility fixes for TensorFlow 1.1.0-rc1\r\n\r\n* [OpenCL] Implements BatchMatmul Op for SYCL\r\n\r\n* Lowercase the device name when GPU or SYCL returned\r\n\r\n* [OpenCL] kernel_estimator_test.py assertEqual-> assertAlmostEqual due to floating point representation on the device\r\n\r\n* [Eigen] Version bump\r\n\r\n* GPU device name string manipulation is not needed anymore\r\n\r\n* [OpenCL] Adds SYCL to device backwards compatibility\r\n\r\n* [OpenCL] Extends core_rnn_test.py to run for SYCL device\r\n\r\n* [OpenCL] Minor optimizations for build script\r\n\r\n* [OpenCL] Enables skip folder list in build script\r\n\r\n* [OpenCL] Fixes ApplyAdamOp for Sycl device\r\n\r\n* [OpenCL] SYCL device improvements\r\n\r\n* [OpenCL] Fixes debug_ops\'s SEGFAULT for SYCL device\r\n\r\n* [Build] Adds hexagon to skipped folders list\r\n\r\n* [OpenCL] Removes EnterLameDuckMode from SYCL device and allocator\r\n\r\n* [OpenCL] Registers Unique Op for SYCL device\r\n\r\n* [OpenCL][Temporary] Disables tests for SYCL target due to features not being implemented yet\r\n\r\n  Tests affected:\r\n    - tensorflow/contrib/memory_stats/python/kernel_tests/memory_stats_ops_test.py\r\n    - tensorflow/contrib/rnn/python/kernel_tests/core_rnn_test.py\r\n    - tensorflow/python/kernel_tests/conv_ops_test.py\r\n    - tensorflow/python/kernel_tests/depthwise_conv_op_test.py\r\n    - tensorflow/python/kernel_tests/pooling_ops_3d_test.py\r\n    - tensorflow/python/kernel_tests/pooling_ops_test.py\r\n    - tensorflow/python/kernel_tests/scatter_nd_ops_test.py\r\n    - tensorflow/python/training/adam_test.py\r\n    - tensorflow/python/training/localhost_cluster_performance_test.py\r\n    - tensorflow/python/training/training_ops_test.py\r\n\r\n* [OpenCL][Temporary] Disables failing tests for SYCL in order to establish regression baseline\r\n\r\n  Tests affected:\r\n    - tensorflow/python/debug/cli/analyzer_cli_test.py\r\n    - tensorflow/python/debug/lib/session_debug_testlib.py\r\n    - tensorflow/python/debug/lib/stepper_test.py\r\n    - tensorflow/python/kernel_tests/unstack_op_test.py\r\n    - tensorflow/python/ops/image_ops_test.py\r\n\r\n* [OpenCL] Take options.config.device_count() into consideration\r\n\r\n* [OpenCL] Fixes compilation warning\r\n\r\n* [OpenCL] device:SYCL:0 -> sycl:0\r\n\r\n* [OpenCL] Removes unwanted flags in building script\r\n\r\nRemoves flags given to computecpp that enable SIMD instructions\r\nRemoves duplicate flags\r\n\r\n* bool -> const bool\r\n\r\n* [OpenCL] sycl in test_util.gpu_device_name() -> is_sycl_enabled()\r\n\r\n* [OpenCL][Temporary] Disables failing tests for SYCL in order to establish regression baseline\r\n\r\n  Test affected:\r\n    - tensorflow/contrib/stateless/python/kernel_tests/stateless_random_ops_test.py\r\n\r\n* Imports test_util from tensorflow.python.framework\r\n\r\n* [OpenCL] Fixes formatting in Python code\r\n\r\n* [OpenCL] Extends session_test.py to cover SYCL device\r\n\r\n* [OpenCL] Cleans singleton class\r\n\r\n* [OpenCL] Keeping CUDA happy\r\n\r\n* [OpenCL][Temporary] Disables failing tests for SYCL in order to establish regression baseline\r\n\r\n  Test affected:\r\n   - tensorflow/contrib/rnn/python/kernel_tests/core_rnn_cell_test.py\r\n   - tensorflow/contrib/seq2seq/python/kernel_tests/beam_search_ops_test.py\r\n\r\n* Added support for building with SYCL on ARM.\r\n\r\n* Acts on the review feedback from:\r\n - https://github.com/tensorflow/tensorflow/pull/9117#discussion_r113608975\r\n - https://github.com/tensorflow/tensorflow/pull/9117#discussion_r113609173\r\n\r\n* [OpenCL] Fixes scatter_nd_op_test\r\n\r\n* Fixes auto-merge mistake\r\n\r\n* [OpenCL] struct SyclDevice -> class SyclDevice\r\n\r\n* Revert ""[OpenCL] struct SyclDevice -> class SyclDevice""\r\n\r\nThis reverts commit addd43348c374a5379f67bb1e5ad084715722fc2.\r\n\r\n* [OpenCL] Reverting refactoring commit.\r\n\r\n  As requested in the review https://github.com/tensorflow/tensorflow/pull/9117#issuecomment-298454466\r\n  This change set will be re-introduced in smaller chunks.\r\n\r\n* Revert ""[OpenCL] device:SYCL:0 -> sycl:0""\r\n\r\nThis reverts commit cf16e60340b62d16c3764d71b716fe03d35f87a9.\r\n\r\n* Revert ""[OpenCL] Adds SYCL to device backwards compatibility""\r\n\r\nThis reverts commit b8401b5164199b7a169be1c1d8dea5001195c390.\r\n\r\n* Acts on the feedback from https://github.com/tensorflow/tensorflow/pull/9117#discussion_r115036905\r\n\r\n* control_flow_ops_py_test.py expects device name to be lower cased\r\n\r\n* Acts on the feedback from https://github.com/tensorflow/tensorflow/pull/9117#discussion_r115037222\r\n\r\n* Removes debug print\r\n\r\n* Removes not needed partial specialisation\r\n\r\n* [OpenCL] Registers ScatterNdFunctor for SYCL device\r\n\r\n* [OpenCL] Make it compile\r\n\r\n* [OpenCL] Follow gpu_device changes\r\n\r\n* [OpenCL] Adds cxx_builtin_include_directory for python lib\r\n\r\n  Fixes bazels missing undeclared inclusions that appeared after\r\n  merge with TensorFlow upstream\r\n\r\n* [OpenCL] Fixes Constant Op\r\n\r\n* [OpenCL] gXX-4.8 -> gXX\r\n\r\n* [OpenCL] Removes -D_GLIBCXX_USE_CXX11_ABI=0 as it breaks default compiler setup for Ubuntu 16.04\r\n\r\n* Revert ""[OpenCL] kernel_estimator_test.py assertEqual-> assertAlmostEqual due to floating point representation on the device""\r\n\r\nThis reverts commit 06c50c0a485f40c30a436f02c3fa7794e370c49d.\r\n\r\n* [OpenCL] CPU allocator is a singleton we should not delete it'"
d58cd296202b89440f59c2bcc8776a6eb08dc961,'Fix weblas license mirror URL\n\nPiperOrigin-RevId: 157537115'
96698f7fdc0e9fa82413691ca7064db2723d2d56,"""[tf contrib seq2seq] Improve BeamSearchDecoder's ability to handle unknown shapes.\n\nUpdated unit tests to contain inputs of unknown shape (at graph build time).\nFound an issue in the gather helper that stops it from properly propagating\nthe batch size of the output shape.  This caused problems with tf.while_loop.\nFixed.\n\nPiperOrigin-RevId: 157533937"""
5c73d01024c9429a274accddb266549a997f46ba,'Batch norm docs fix applied to _fused_batch_norm as well\n\nPiperOrigin-RevId: 157530527'
abd4aa49a773e570a0155a05a75bd12537bb305f,'Fix docs for tf.abs() and tf.pow().\n\nPiperOrigin-RevId: 157528475'
bbeaa1307c01fd3c3dd72be5a1ce4a204ce5e00b,'Fix the expand_dim for label and weight for classifier heads.\n\nPiperOrigin-RevId: 157524909'
2994444bf6a859e1eba656b8a62e75e1bcbf2bb3,"""Issue a more user-friendly error message if a variable's initializer is from inside a control-flow scope, such as tf.cond() or tf.while_loop().\n\nFixes #8604.\n\nPiperOrigin-RevId: 157516279"""
2249a4ea827510de80c2cdab95c889e8d13904e4,'Fix control reaching the end of ProjectiveGenerator.\n\nPiperOrigin-RevId: 157510013'
46db634e50d39015b6f514c3e096c050a0d50039,'Only run the no-winograd tests once each.\nOnly run the no-winograd tests on GPU; this also fixes\ntimeouts in asan and msan.\n\nPiperOrigin-RevId: 157505317'
af2b9d8757014519e26c0dc9750812dc8c47b2f5,"'Fix the trace inputs functionality of the graph explorer.\n\nAfter migrating to d3 v4, the graph can no longer directly index into d3.Selections to obtain elements. Instead, we must use the nodes method of d3.Selection to generate an array of selected elements.\n\nPiperOrigin-RevId: 157493509'"
4788ca2be18eaee103e28d21f73cd9a47e9c3797,"'Fix handling of Infinity/NaN in line chart domain\n\nTest Plan:\n  - Use the script listed below to generate data that has enough\n    infinities for these values to not be treated as outliers.\n  - Load the data into TensorBoard (`--logdir /tmp/infbug`) and look at\n    the scalars plot; also look at the console.\n  - Before this change, the chart is completely blank, and there is a\n    console warning: ""QuantitativeScales cannot take NaN or Infinity as\n    a domain value. Ignoring.""\n  - After this change, there is no console output, and the chart appears\n    as intended: a reasonable domain is shown, and the infinities just\n    shoot off the chart.\n\nGenerating script:\n```py\nimport tensorflow as tf\n\nLOGDIR = \'/tmp/infbug\'\nSTEPS = 134\n\ndef main():\n  x = tf.Variable(3.1415)\n  y = x.assign_add(x)\n  tf.summary.scalar(\'y\', y)\n  summ = tf.summary.merge_all()\n\n  sess = tf.Session()\n  writer = tf.summary.FileWriter(LOGDIR)\n  writer.add_graph(sess.graph)\n  sess.run(tf.global_variables_initializer())\n  for step in xrange(STEPS):\n    writer.add_summary(sess.run(summ), step)\n  writer.close()\n\nif __name__ == \'__main__\':\n  main()\n```\n\nPiperOrigin-RevId: 157472340'"
b73fea6e27b17dc4349754e585113e7a8138339e,"'Refactor `tf.Operation.traceback` implementation in to methods of tf.Graph.\n\nAdds an `_extract_frame_info` method to allow derived classes to extend the\ninformation available in each op traceback, if desired. The default result of\n`tf.Operation.traceback` is unchanged.\n\nAlso fixes a poorly scoped `pylint disable=line-too-long`, so adds the necessary\nenable/disable blocks to silence pylint for the offending docstrings.\n\nPiperOrigin-RevId: 157466174'"
822d64f0c699528ba41386cc60dcfbeba825c3f8,'Fix embedding_lookup() bug where normalization did not work with ids of rank != 1.\n\nPiperOrigin-RevId: 157422220'
34dcd5b493af9ac3bbc1bce81808a3f20e9791bd,"""[tf contrib seq2seq] Bugfixes to BeamSearchDecoder\n\nImplementation by Cinjon Resnick.  He can't push this since he's traveling.\nI just copied the fix and added some small syntax tweaks to make the unit\ntests pass.  More comprehensive unit tests will come in the near future.\n\nFixes at least part of #9904.\n\nBeamSearchDecoder:\n1. Fix the bug where we don't pass the next cell state through.\n2. Gather the cell state (and attention if that's a part of the model\n   as an AttentionWrapper on the cell) according to the next_beam_ids.\nPiperOrigin-RevId: 157415564"""
f7ae1461c2525cb0172ca6c0abc0fd476a450ea9,"""Fix oversampling in the GPU version of multinomial due to an error in generating\ngumbel noise.  -log(-log(U)) gives infinity if U draws a hard 0.  Adds a tiny\noffset to U (2e-30) to avoid log(U) = -inf.\n\nThe CPU sampling algorithm depends on the order of the logits which is\nundesirable and can also oversample the first logit if it is smaller than the\nsmallest random float larger than 0 (~1e-7).  Switching to double precision\ninternally mitigates these problems, although it doesn't fix them.  Slowdown\nis ~35% in the worst case.\n\nAlso adds various tests that we would like the sampling to pass.\n\nCPU Benchmark before:\n\n32 10000 1 0.060 0.069 0.87\n32 10000 4 0.229 0.074 3.10\n32 10000 32 2.180 0.059 37.09\n32 100000 1 0.430 0.480 0.90\n32 100000 4 2.322 0.449 5.17\n32 100000 32 31.508 0.471 66.96\n128 10000 1 0.168 0.235 0.71\n128 10000 4 0.965 0.246 3.93\n128 10000 32 7.989 0.225 35.51\n128 100000 1 1.681 1.539 1.09\n128 100000 4 9.012 1.57 35.73\n128 100000 32 126.222 1.626 77.60\n\nCPU Benchmark after:\n\n32 10000 1 0.054 0.112 0.48\n32 10000 4 0.206 0.093 2.21\n32 10000 32 1.826 0.091 20.12\n32 100000 1 0.292 0.636 0.46\n32 100000 4 2.086 0.606 3.44\n32 100000 32 28.496 0.633 45.03\n128 10000 1 0.125 0.266 0.47\n128 10000 4 0.759 0.258 2.94\n128 10000 32 7.362 0.254 29.03\n128 100000 1 1.550 2.18 10.71\n128 100000 4 8.712 2.22 23.92\n128 100000 32 122.585 2.213 55.39\n\nPiperOrigin-RevId: 157414849"""
62cf561f1d32abf4f5b7fbdee6d106389994ff05,'Add numpy_input_fn integration for LinearRegressor and fix the expand_dim for label and weight.\n\nPiperOrigin-RevId: 157405237'
e9d2fba8f1c93ece99b6e2ad45c5237404af3f6d,'Fix comment describing ignore_longer_outputs_than_inputs.\n\nPiperOrigin-RevId: 157400110'
7fda1bb1177c69fa7bf80d20d5c5e7aaa25816e7,'Merge pull request #10261 from taehoonlee/fix_typos\n\nFix typos'
848123e61c95b030a5034b2cdaa504870ebf7da6,"'Fix incorrect condition to instantiate depthwise_ops introduced in commit 15d9f00fa. The change should have excluded depthwise_conv2d for doubles on windows debug builds, but it excluded it for all windows and all debug builds.\n\nPiperOrigin-RevId: 157345929'"
f30705f8e0815c9fe78ac43ef187e4f7915f0cea,"'Merge pull request #10244 from lanhin/master\n\nFixed a comment typo in GraphView:InitializeNode(), executor.cc.'"
060d67b34adf0058c3005db70ad4faeec0474992,'Fix typos'
d20d0a6231dd107da35fc5de53ca547c60f28f64,'Fix the contrib estimator_test by updating the global step in all the appropriate spots.\n\nPiperOrigin-RevId: 157328239'
7937fb34dbd9fd04dc878eefa6ccfe00d1262f2e,'Merge pull request #10235 from zasdfgbnm/fix_flat_inner_outer_dims\n\nfix the return value of Tensor::flat_inner_outer_dims'
c817beb336f3484465e31300dea58130d4a4da16,'Merge pull request #10249 from frankyjuang/master\n\nFix typos'
d1144d3a9d071bbeffbf7d4541955cae2b186f5a,'Fix typos'
fa8bb43b12478a7b0d9e36e6bbf8ba4f490c961c,"'Fixed a comment typo in GraphView:InitializeNode(), executor.cc.'"
bf6684592e30273aee93b7ccdddc12b7a05f0bc5,"'Fix benign ""bug"" in PyArrayToTFTensor\n\nPassing \'array\' to the deallocator didn\'t do anything since the\ndeallocator doesn\'t use \'arg\', but it\'s confusing since \'array\' is\nfreed by the time the deallocator is called.\n\nPiperOrigin-RevId: 157280226'"
04fede8bde23381166fa4f5d9582cf7e05985393,'Fix StopAtStepHook with num_steps when multiple steps are executed in a single\nsession.run().\n\nPiperOrigin-RevId: 157277945'
53f8e361f326eae3287a06974f81ace36fa80472,"""Fix hash URLs\n\nURLs like localhost:6006/#graphs weren't working. This was because the\n`USE_HASH` property of `TF.Globals` was being read as false by the\nrouter, even though `tf-tensorboard` was trying to set it to `true`. The\nproblem was that `tf-tensorboard` was only setting to true the _copy_ of\n`USE_HASH` that it created at import time. The solution adopted here is\nto let `globals.ts` close over a private `use_hash`, and expose a getter\nand setter. An alternate solution is to expose a constant object\n`{use_hash: false}`; importing modules would copy the _reference_ to\nthis object, so their mutations would pass through. This alternate\nsolution would perhaps be more elegant if we had more properties.\n\nTest Plan:\n  - Load http://localhost:6006/.\n  - Change the URL to http://localhost:6006/#graphs.\n  - Note that the view updates.\n\nPiperOrigin-RevId: 157277248"""
26e34b02613d43d943bb4040990779e9b960d612,'fix const tensor in flat_inner_outer_dims'
2be3ae8a1268c2745c4761665d8e2444294bca8b,'Fixes compatibility of contrib feature_column with core make_parse_example_spec.\n\nPiperOrigin-RevId: 157270783'
9bdeea9b568976f4261e7882087b70951e25de70,'Fix protobuf_util build failure in open source.\n\nPiperOrigin-RevId: 157265680'
7cd98b0a0dd2551071f417bb212a6b7b3ef6e6a3,'Fix documentation on weights of tf.losses.softmax_cross_entropy.\n\nPiperOrigin-RevId: 157263047'
e18c81a0c5e20c170c4de5d1c484034eafd2aa55,"'Fix sign errors in tf.contrib.distributions.logistic.{log_cdf, log_survival_function} and add accompanying tests. Fixes #10131\n\nPiperOrigin-RevId: 157259406'"
fccaac3d1bf1391756fae67f1979afe598d10ed1,'Force GPU device objects that refer to the same physical card using the\nsame stream id to use the same cuda stream objects. This avoids confusing\nthe per-device memory allocator in ways that cause memory corruption.\n\nFixes https://github.com/tensorflow/serving/issues/335.\n\nPiperOrigin-RevId: 157258318'
70313342b65accf3c30c08db66ded563e0e41700,"'Fix ""unitialized"" typo.\n\nPiperOrigin-RevId: 157248921'"
91546f51184b92bbc4eb453b96cf1838f43b9350,'Merge pull request #10158 from meteorcloudy/fix_cuda_win_config\n\nFix Cuda configuration on Windows'
7b401106a488eba759b6cce370393dce05d1d173,"'[XLA:HLO] Add buffer aliases to BufferAssignmentProto serialization.\n\nAlso add "".json"" suffix to saved data files.\n\nPiperOrigin-RevId: 157236140'"
b4ac12db8cae4af6f2e8be9a9c221b472dcf047e,'Merge pull request #10223 from Moriadry/master\n\nfix misspell'
716bc62fd323c94b71e1cc574e288a4a2de046a1,'Merge pull request #10176 from jart/fix-python-bin\n\nMake PYTHON_BIN_PATH error go away'
f6c2d8e06e941890d060a5ab28b97d7a1d29e0f0,'Fixes msan and tsan failures for linear_test.\n\nPiperOrigin-RevId: 157228622'
973f50b2bed00f5fbb0e17fbb288060f176a71db,'fix spell'
49423af8ac280067042a08a4ec04b02f45557f92,'Fix attention score padding. Use -inf as default instead of 0 for softmax.\n\nPiperOrigin-RevId: 157214300'
3e551d903fa482ed0434efab9b170843fb22209c,'Fix comment'
a447f858e0de0299c62400c55e09266f0ff79e22,'Make PYTHON_BIN_PATH error go away\n\nFixes #9436'
405f70c6de296faf7561d6739e947d0fb9b26f14,"""[XLA] Enable HloEvaluator for constant folding, also merged a few operations\nfrom hlo_constant_folding to hlo_evaluator.\n\nAdditionally:\n- In ShapeUtil::ForEachIndex:\n    * fix a bug where visitor is called when the shape has zero elements (e.g., F32{1,0})\n    * added test case for ForEachIndex.\n\n- In HloEvaluator:\n    * Instead of copying and caching a Constant instruction, return the literal directly if the instruction is constant.\n    * Fix an issue where TUPLE and OPAQUE primitives are not keyed in the templated typed_visitor.\n    * Use (fixed) LiteralUtil::Populate to populate resulting literal, fixes the preexisting bug in the evaluator where R0 and shape with zero size dimensions are not handled.\n    * Refactor ElementWiseUnaryOp and HandleCompare to be templatized on the operand's type.\n    * Refactor IsFinite to be top level since it is only applicable to floats and the return type is always boolean.\n    * Change from std::remainder to std::fmod for kRemainder to be compliant with existing XLA behavior.\n    * Change from std::max and std::min to std::fmax and std::fmin to handle NaNs.\n    * Minor comments fix.\n\n- Disables constant_folding and reshape-motion for ClientLibraryTestBase so that constant folding would not affect the intended code paths to be execercised by the test. In the longer term we plan change all Constants to Parameter and re-enable constant_folding in tests.\n\nPiperOrigin-RevId: 157174708"""
072355e769f42eb33cf18122fc712364f33c0a50,"'Fix TF windows bazel tests. (#10115)\n\n* Fix TF windows bazel tests.\r\n - Ignore errors in shutil.rmtree until we figure out why rmtree fails.\r\n - Do not run neon_depthwise_conv_op, as we already omit linking in\r\n the op.\r\n\r\n* clear summarywritercache before removing model directories.\r\n\r\n* Make sure to clear cache in all test cases.\r\n\r\n* Also clear cache in newly added test cases.'"
8f0d0bdca81f9926bf6cf51eb7bf72e04fe43509,"'Simplify `dense_to_sparse_tensor` and `indicators_to_sparse_ids`, and fix them to work with inputs of undefined rank.\nAdd test for `indicators_to_sparse_ids` `dtype` arg.\nSmall update to `unstack` pydoc.\n\nPiperOrigin-RevId: 157160634'"
779588ae2d2c2a68780e0b85857b0f2c5b5884a0,'Enable more robust Java lint and errorprone checks\n\n1. Turn on stricter Xlint and errorprone checks in javac to converge\n   on a more consistent coding patterns.\n\n2. Minor changes to existing code to conform to the new checks.\n\n3. google-java-format corrections on any java file modified as part of\n   the fix.'
624442474ef48e7dc4075f4d4a1fa41bcd1b5987,'Bugfix to error message reporting when portpicker is not available.\n\nPiperOrigin-RevId: 156895715'
3f8b31d6802fc004b93d827c4706a5769faf7cbb,'Bugfixes to tfprof model analyzer unit tests.\n\nPiperOrigin-RevId: 156895551'
0fa3799d83933ebf66e0817abcccd9182a3bc6e0,"""Fix a bug in Scaffold's copy_from_scaffold argument because tf.Tensor cannot be converted to python bool\n\nPiperOrigin-RevId: 156375789"""
1be4e27f9d21ef99e6f0966279dd93be656713a6,'Merge pull request #10160 from 1123/master\n\nFixing broken links in Linear Model Tutorial.'
24220c9e740f666c08b115d0624f5a5e414c4328,"""Fixed the cost model to return an unknown shape instead of returning the shape of a scalar when the shape hasn't been set.\n\nPiperOrigin-RevId: 157120482"""
a7bf76bbc423ac25f0c665517077ab301865144b,'Merge pull request #10181 from maciekcc/master\n\nFix RNN tests broken in contrib move.'
b254b570428fe214226fcaa6fd74c00126df8f85,'Fix Rnn tests broken by move.'
ac93bdaaf0c1b05f7c44416a74feaf48b2919a6f,'Fix prefix of kernel for RemoteFusedGraphOps\n\nPiperOrigin-RevId: 157062094'
deb1e2e7df6fa46806510ce8cf828e1f6d46a5a1,"""Issue a more user-friendly error message if a variable's initializer is from inside a control-flow scope, such as tf.cond() or tf.while_loop().\n\nFixes #8604.\n\nPiperOrigin-RevId: 157060591"""
bd9c7ddf72ff5fe989fec26db153b91675911b5b,"""[XLA] In ReshapeMover:\n- change OperandCanTriviallyChangeShape to only look at operand's opcode, instead of comparing the dimension of the shape between the instruction and its operand.\n- remove accounting for non-trivial reshapes/transposes, and instead move the requirement to FirstNonScalarReshapeOperand instead.\n\nThis fixes an issue where a elementwise op's reshape0(constant0) operand gets moved (because reshape0 and constant0 are of different shapes), even when there is no benefit is doing so.\n\nAlso fixes incorrect test comments.\n\nPiperOrigin-RevId: 157060319"""
21e2c3406b927aa1f10db6e6bc9d02dd40d63aaa,'Fix bug which can cause last element of beam to have a score of infinity.\n\nPiperOrigin-RevId: 157052586'
791c25e3528a8a71543e6359143ebf273c4171ba,'Minor documentation fix.\n\nPiperOrigin-RevId: 157047588'
1822073137e1ac431250ea6f89b2719aac8d4782,'Allow uses of over-parameterized separable_conv.\n\nFixes #4330.\n\nRELNOTES: Allow uses of over-parameterized separable convolution.\nPiperOrigin-RevId: 157035904'
3be6124bcc7b41c94cad3f96fb62ec423abfd110,"""tfdg: minor doc fix\n\ndebug_utils is an internal target that shouldn't be used by users.\nReplacing it with the correct debug / tf_debug import.\n\nPiperOrigin-RevId: 157032842"""
e8dd3379e66dab743fb4fd3ebecc5db05e0ebe84,'Fix bug in TensorForest for mutli-regression statistics.\n\nPiperOrigin-RevId: 157018996'
ed316e4b53ef0de6a6cd6403213ed9dd9a76272f,'Fix bug when creating metrics variables inside a Tensorflow loop.\n\nPiperOrigin-RevId: 157005668'
ff38ea14fa2b8a060e063db30008cb1be167c551,'fixing broken Links in sample code and docs'
fbff1ee82d476568f9d1cba81018da94b75185b1,"'Fix Cuda configuration on Windows\n\nWhen creating a genrule for a set of files, we use copy instead of\nsymlink on Windows.\n\nApplied the same approach to python_config.bzl to simplify the code.'"
047546d6fee2549c5963a338cdcc2ac801097d76,"""Fix 'bazel test' errors"""
9c4101838c3f910490ed32f7754ac4f8aadb8869,'Fix the issue in which pan to node would direct the user to some crazy location. The problem was that the new translateBy method introduced by d3 v4 applied scaling before translation. This change manually counters that with a division.\n\nPiperOrigin-RevId: 156943470'
7b0ab551f04a096d97b25a167f7768fd9648c1e7,'Fix build dependency.\n\nPiperOrigin-RevId: 156938197'
d78a121e74cc0e8a6218e673275ac2cf538aefd5,'Fix the gpu time accounting.\n\n1. Handle the case when node_name in RunMetadata is suffixed with :op_type.\n2. Properly distinguish cpu/gpu time\n\nPiperOrigin-RevId: 156937421'
15705148626d19a58d0e244e9849bce746f653d7,'Fix regression in embeddings projector\n\nThis makes the ordering more reverse topological.\n\nPiperOrigin-RevId: 156924652'
fd579a05735fccadbd61eb9084f0d016f9364261,'Fix `python/ops/losses/util.py` docstrings.\n\nPiperOrigin-RevId: 156917717'
7568b44b1358fed46a409c35421b4bcfa661d10a,"""Fix oversampling in the GPU version of multinomial due to an error in generating\ngumbel noise.  -log(-log(U)) gives infinity if U draws a hard 0.  Adds a tiny\noffset to U (2e-30) to avoid log(U) = -inf.\n\nThe CPU sampling algorithm depends on the order of the logits which is\nundesirable and can also oversample the first logit if it is smaller than the\nsmallest random float larger than 0 (~1e-7).  Switching to double precision\ninternally mitigates these problems, although it doesn't fix them.  Slowdown\nis ~35% in the worst case.\n\nAlso adds various tests that we would like the sampling to pass.\n\nCPU Benchmark before:\n\n32 10000 1 0.060 0.069 0.87\n32 10000 4 0.229 0.074 3.10\n32 10000 32 2.180 0.059 37.09\n32 100000 1 0.430 0.480 0.90\n32 100000 4 2.322 0.449 5.17\n32 100000 32 31.508 0.471 66.96\n128 10000 1 0.168 0.235 0.71\n128 10000 4 0.965 0.246 3.93\n128 10000 32 7.989 0.225 35.51\n128 100000 1 1.681 1.539 1.09\n128 100000 4 9.012 1.57 35.73\n128 100000 32 126.222 1.626 77.60\n\nCPU Benchmark after:\n\n32 10000 1 0.054 0.112 0.48\n32 10000 4 0.206 0.093 2.21\n32 10000 32 1.826 0.091 20.12\n32 100000 1 0.292 0.636 0.46\n32 100000 4 2.086 0.606 3.44\n32 100000 32 28.496 0.633 45.03\n128 10000 1 0.125 0.266 0.47\n128 10000 4 0.759 0.258 2.94\n128 10000 32 7.362 0.254 29.03\n128 100000 1 1.550 2.18 10.71\n128 100000 4 8.712 2.22 23.92\n128 100000 32 122.585 2.213 55.39\n\nPiperOrigin-RevId: 156917266"""
4d25020cf70b98e43f85d11ae0d2e7ad4d8eaffa,'Fixes gradient for complex valued inputs\n\nPiperOrigin-RevId: 156909830'
25c02c7e64ab856c075dad870d2f5c68a1f40a8a,'Fix framework/ops_test.py for Python 3.\n\nPiperOrigin-RevId: 156908714'
b2bcb772c38aa15ccca147761719ab53c4c034f4,'Merge pull request #10114 from davidbrai/patch-2\n\nFix code example in supervisor.md'
a7200ea9efd66ee440b116cd847ee23d6993ca57,'Merge pull request #10065 from mouradmourafiq/fixImageFlipDocstring\n\nFix docstring for method `flip_up_down`'
7119cade454b1f57b5c3032a199aa296fa90b760,'Merge pull request #10138 from nelson-liu/patch-1\n\nFix spelling of Bahdanau in BahdanauAttention docstring'
f219e76828038c672b45a79257c4ee8a26edd87b,'Merge pull request #10139 from b1rd/deprecation_warnings\n\nFixed deprecation warnings'
b03209bbc26f8947cbd1d49e1a232c09e7dcd17a,'Bugfix to error message reporting when portpicker is not available.\n\nPiperOrigin-RevId: 156895715'
4ddc630c3d159dd7974cbeabb87648eeff13126b,'Bugfixes to tfprof model analyzer unit tests.\n\nPiperOrigin-RevId: 156895551'
3ff2747a71ad45ea5158631d99833e2b5198bd69,'Fix issue #9858. (#9876)\n\n* Fix issue #9858.\r\n\r\n* Write a custom copy loop to avoid touching the data twice.\r\n\r\n* Add a criterion for 1-byte data types.\r\n\r\n* Add test for both endianness.'
f1c972c2a235690eece224db8bf33b9dedd19295,'fixed deprecation warnings'
bc75a5b54cd31217221d4140a540ba8441fb137f,'Fix spelling of Bahdanau in BahdanauAttention'
b1dafd3d6803edbc1126f60c036d659f61aadffa,'Merge pull request #10120 from tensorflow/vulcanized\n\nUpdate vulcanized output of TensorBoard to fix health pill errors.'
538e0ce284abadcbfd58ed8e0aa04715020d5add,'rearrange code and fix the comments'
fbe4af7271c971accb3e3d96a96b764cc647a934,'Update vulcanized output of TensorBoard to fix health pill console errors\n\nThe previous version of TensorBoard in release 1.2 had outputted console errors related to debugger health pills (a currently internal feature). This new vulcanized output fixes that bug in release 1.2 by adding guards.'
23caaa5e42c87a189511438dcadc428b683cd028,"""Updated libxsmm kernels (#10112)\n\n* Fixed AVX-512 intrinsic layer (sparse_matmul_op.h). Incorporated LIBXSMM_DNN_CONV_OPTION_OVERWRITE. (#26)\r\n\r\n* Fixed AVX-512 intrinsic implementation.\r\n\r\n* OR'ed LIBXSMM_DNN_CONV_OPTION_OVERWRITE into convolution options, which folds zeroing the input buffer on first use. This removes the call to libxsmm_dnn_zero_buffer in case of LIBXSMM_DNN_COMPUTE_KIND_FWD.\r\n\r\n* Made xsmm_conv2d.cc up-to-date with TF/master, avoid double-free in case of LIBXSMM_DNN_WARN_FALLBACK, use libxsmm_hash instead of std::hash, code cleanup (#27)\r\n\r\n* Fixed AVX-512 intrinsic implementation.\r\n\r\n* OR'ed LIBXSMM_DNN_CONV_OPTION_OVERWRITE into convolution options, which folds zeroing the input buffer on first use. This removes the call to libxsmm_dnn_zero_buffer in case of LIBXSMM_DNN_COMPUTE_KIND_FWD.\r\n\r\n* Rely on libxsmm_hash rather than std::hash. Brought xsmm_conv2d.cc up-to-date with TF/master.\r\n\r\n* Code cleanup: use LIBXSMM_DNN_CONV_OPTION_WU_EXT_FILTER_REDUCE_OVERWRITE rather than assembling the option from separate flags.\r\n\r\n* Avoid to destroy the handle in case of LIBXSMM_DNN_WARN_FALLBACK since the next iteration may double-delete the same handle. One would need to update the handle-cache to allow destruction at this place. However, all handles are destructed when TF terminates (cache cleanup).\r\n\r\n* Configure LIBXSMM with default arguments (#28)\r\n\r\n* Fixed AVX-512 intrinsic implementation.\r\n\r\n* OR'ed LIBXSMM_DNN_CONV_OPTION_OVERWRITE into convolution options, which folds zeroing the input buffer on first use. This removes the call to libxsmm_dnn_zero_buffer in case of LIBXSMM_DNN_COMPUTE_KIND_FWD.\r\n\r\n* Rely on libxsmm_hash rather than std::hash. Brought xsmm_conv2d.cc up-to-date with TF/master.\r\n\r\n* Code cleanup: use LIBXSMM_DNN_CONV_OPTION_WU_EXT_FILTER_REDUCE_OVERWRITE rather than assembling the option from separate flags.\r\n\r\n* Avoid to destroy the handle in case of LIBXSMM_DNN_WARN_FALLBACK since the next iteration may double-delete the same handle. One would need to update the handle-cache to allow destruction at this place. However, all handles are destructed when TF terminates (cache cleanup).\r\n\r\n* Rely on default configuration arguments, and thereby lower the dependence from LIBXSMM internals."""
3667b292eb71a2d456f448227e511d68f4c59624,'Fix code example in supervisor.md'
88a8bb8b60c196ffb2615a50473d416a0a857eb5,'Merge pull request #10097 from meteorcloudy/fix_windows_build\n\nWindows: Make TensorFlow build with Bazel again'
4e3544100876676f85ef1668fc2222a6d18a3a68,'[TF:XLA] Fix stack overflow in the UserComputation ComputationLowerer for deep computations. Use an iterative DFS instead of a recursive DFS.\n\nPiperOrigin-RevId: 156772340'
1c48e272afbf91ab7532f56a003291fd8f7cbf2d,"""Make dynamic_rnn accept scalar values for state.\n\nThis change makes it possible to use AttentionWrapper from\ncontrib/seq2seq with dynamic_rnn.\n\nAlso fix some 'unused variable' errors from pylint.\n\nPiperOrigin-RevId: 156771993"""
76f60933bd8eb854fe3bf5b96d509134e4f922fd,'Fix deadlock in RecordYielder\n\nPiperOrigin-RevId: 156769620'
3eee108bc2ff4c5451ff990cf3fcf955a2207edd,'Fixes tf.norm for complex valued inputs.\n\nPiperOrigin-RevId: 156769129'
910d45064a8e91ec7be8beb536c15321c2572f87,'Merge pull request #10055 from av8ramit/fix_release\n\nUpdating the release.md file.'
635535a664114a14d18b83c0d907f7a02e130405,'Merge pull request #10064 from solaris33/master\n\nFixed typo'
fe444f14464bee2a536570730ef191fc09b54e2f,'Fix a bug in using record_host_persistent_memory_allocation (#9965)'
e30403eea5611c6e29484dd9ee45c8efe71dc411,'Fix mixed use of bytes and unicode string in gc.py (#9719)\n\n* Fix mixed use of bytes and unicode string in gc.py\r\n\r\n* Test get_paths() with different types of strings'
bff59278a48a93a316d70ebcfcfa92330f2383c6,'Merge pull request #10079 from see--/classification_example\n\nFix classification dataset example in readme'
6756621072c3835209e790c67e179ed2a7a9ff82,'Merge pull request #10100 from zjj2wry/typo-5-22\n\nfix some annotation'
5912558656b2c1d725c49143dfe21bc8bfa1a0ad,'Merge pull request #10101 from zjj2wry/typo-test\n\nfix typo in stepper_test function name'
177aca758d3ca3a5587bd70813c832bd90bfacc6,'fix typo in stepper_test function name'
1a24999f8d0dda2aabaf0a540b17681b18f599f6,'fix some annotation'
90cea69496d21722006d94fc85e15cfee780c732,'Fix comments in BUILD file'
8ef441b150c6e309cb73f7b68cf91031a3d3e28b,'Fix sanity license test'
cb9a9f1818602f0a948fbc836678d2202da0f832,'Fixed comments'
000ce5aea23ecabaeb54eff5422f902c2e14700d,'Fix some minor doc issues in contrib/data/README.md\n\nPiperOrigin-RevId: 156682900'
e777e9b914982c403b16deba3650e2ac45b6b8e1,'Fix classification dataset example in readme'
e4296aefff97e6edd3d7cee9a09b9dd77da4c034,'Merge pull request #10057 from fixTypos/fix_typos\n\nfix: typos using misspell'
c0aebdd931afec2fa4145d25c68994a62e98e112,'Fix ci_sanity errors'
bee23d372307ec23f95acc65b262b79cfa060d28,'typo fix'
1634d86cb11502d6089ce2570fd25a82f6496320,'Small lint fixes in test file.'
1b1326b0b224f8285e9ba02d09667d1ae0f02e49,"'Small lint and doc fix,'"
0cba9a28982f658bb7cbd5c242a688ca9985f1f8,'Fix docstring for method `flip_up_down`'
20f3ea178a1472e9dc945d0943bc33728e34dc65,'Fixed typo'
1f6ed06221949c5a9037f2d81f30208d23f3afc6,'fix: typos using misspell\n\nfix: typos\n\nThis PR is part of a campaign to fix a lot of typos on github!\nYou can see the progress on https://github.com/fixTypos/fix_typos/\n\nhttps://github.com/client9/misspell'
0a721659059b2d50c0625b58ed4cccc7c45ef6fa,"'AttentionWrapper: fixed naming\n\nThe keyword parameter attention_size has been renamed to\nattention_layer_size, a docstring was still mentioning the old name.\n\nAlso renamed the attribute for consistency.\n\nPiperOrigin-RevId: 156614391'"
675f0f9073e9e6ac6df8018e972f2b38f2c4c23c,'Fixed up the documentation for tf.contrib.layers.batch_norm and tf.layers.batch_normalization explaining how to include the update ops in the train_op. Also simplified the existing tf.layers.batch_normalization documentation to the least error-prone option (adding to the train_op).\n\nPiperOrigin-RevId: 156609483'
3790553351ad3b1e47982d31f485590c3b015f71,"'Remove the ""_d3v4"" suffix from d3v4 components, since the migration is complete.\n\nPiperOrigin-RevId: 156609024'"
2803742817755846f847ac506bbe20b4d4a14195,'Fixing 404-URL (#10052)'
80e2ecc3c52021d8750c7376a3fc18c8e1b58e9f,'Fix conflicts'
fabd225532ee068d1f9ffbdc4a8795e7de99ad24,'Fix some doc format for CropAndResize (#10025)'
1705b099df0fd7c2ea4abf83cfee896febeb8309,"'Map Staging Area (#9686)\n\n* Map Staging Area Operator\r\n\r\n* Add map staging operators to the BUILD\r\n\r\n* Don\'t be too clever about notifying waiting thread\r\n\r\n* Add Staging Area Size op\r\n\r\n* Use predicate form of condition_variable.wait\r\n\r\n* Add a Staging Area clear op\r\n\r\n* Add Peek op and capacity to the Staging Area\r\n\r\n* map_stage_op.cpp -> map_stage_op.cc\r\n\r\n* size should be int32\r\n\r\n* Small improvements to staging test case\r\n\r\n* Create BaseStagingArea\r\n\r\nContaining common functionality to StagingArea and BaseStagingArea\r\n\r\n* Add MapStagingArea test cases\r\n\r\n* Add an ordering test\r\n\r\n* Rename get() to peek()\r\n\r\n* Combine pop(key) and popitem() into get(key=None)\r\n\r\n* Block on peek methods\r\n\r\nWait for the requested element to be inserted into the staging area.\r\n\r\n* Use constructor initializer lists\r\n\r\n* Arrange class typedefs, members and methods\r\n\r\nAlso make previously public helper methods like HasBoundedCapacity() and\r\nIsFull() private.\r\n\r\n* Better docs for StagingArea.clear()\r\n\r\n* SYCL_DEVICE MapStage => OrderedMapStage\r\n\r\n* Initializer list fix\r\n\r\n* device(\'/gpu:0\') => test.gpu_device_name()\r\n\r\n* Copyright year to 2017\r\n\r\n* Reverse keys before random shuffle\r\n\r\n* Python docstring updates\r\n\r\n* Fix stage op docs\r\n\r\n* Order RecordInput correctly\r\n\r\n* Updated MapStage op docs\r\n\r\n* Capture index by value instead of reference\r\n\r\nIts just an int.\r\n\r\n* Add support for Staging Area memory limit\r\n\r\nMostly useful for constraining the amount of memory used for Staging\r\nAreas placed on the GPU.\r\n\r\n* Use key Tensor as key rather than int64\r\n\r\n* Pass dtypes to StagingMap\r\n\r\n* CamelCase types\r\n\r\n* Support barrier operation on the MapStagingArea\r\n\r\n- It is now possible to insert incomplete elements.\r\n- Key std::map and std::unordered_map on scalar Tensor int64\r\n  (avoids unnecessary allocations)\r\n\r\n* Remove shuffling to make test deterministic\r\n\r\n* Use size_t for indices and positive quantities\r\n\r\n* Fix lint errors\r\n\r\n- autopep8 data_flow_ops.py indentation to 2 spaces.\r\n- Alphabetically order data_flow lib dependencies in BUILD\r\n\r\n* extra capacity() should be memory_limit()\r\n\r\n* Run buildifier\r\n\r\n* Fix OrderedMapIncompleteSize kernel name\r\n\r\n* Fix device name in colocation test\r\n\r\nDevice name is """" if no GPU is present.\r\n\r\n* Fix subtle size_t to int conversion bug\r\n\r\n* Add #include <numeric> for windows builds\r\n\r\n* Add #include <numeric> in stage_op.cc too'"
f5ab4ac9425fa20251eba5103055827b6e82a184,'Fix capitalization typo (#10038)'
c6c53d0067a5473c5d278d6d9629cd50f2467043,'Fix legacy webfile build of vz_line_chart_d3v4.\n\nPiperOrigin-RevId: 156585598'
83f01b3cff97a5a6901d3cdf2e45b03dc4d3632e,'Fix another merge error.'
8bbec0bc01ffad39d3006a1696fc22a775154d06,"'Bazel CI / TensorFlow: fix more errors (#9762)\n\n* Bazel CI / TensorFlow: fix more errors\r\n\r\nIn this commit:\r\n\r\n1. Keep just the first character of the python\r\nversion checker script\'s output. This is a simple\r\nway to strip \\n and \\r and we only need the major\r\nversion anyway. The string is later used in\r\nwriting the .bazelrc file where these characters\r\nwould cause problems.\r\n\r\n2. Export environment variables in\r\nrun_configure_for_cpu_build, use their default\r\nvalues\r\n\r\n3. Allow a user-defined value for BAZEL_SH\r\n\r\n4. Fix python_configure.bzl:\r\n\r\n4.a. Fix the symlink creation on Windows: create a\r\nsingle junction pointing to the src_dir. This is a\r\ntrick to get around the problem that on Windows we\r\ncan\'t create symlinks. By creating this symlink\r\nand declaring the same outputs as on Linux/Darwin,\r\nwe make it look like that the genrule successfully\r\nproduced these files. This only works in a\r\nsingle-machine execution environment.\r\n\r\n4.b. Get rid of the ""select"" in\r\n@local_config_python//:numpy_include and\r\npython_include. The results of `find` and `dir`\r\nonly make sense on Linux/Darwin and Windows\r\nrespectively, so there\'s no point in generating\r\nthe non-Windows genrule on Windows and the\r\nWindows-specific one on non-Windows, because all\r\nthe paths would be wrong. So instead of that,\r\ngenerate just the genrule corresponding to the\r\nplatform.\r\n\r\n4.c. Write the genrule.cmd\'s commands to scripts\r\nand execute those instead. This avoids the\r\ndifficulties with escaping backslashes and quotes.\r\nBackslashes are necessary on Windows because paths\r\nwith forward slashes aren\'t generally accepted,\r\ne.g. ""cmd.exe /c foo/bar"" doesn\'t work because\r\nWindows believes foo is an executable and /bar is\r\nits switch:\r\n\r\n    c:\\tempdir>type bar.cmd\r\n    @echo this is bar.cmd, %%1=(%1)\r\n\r\n    c:\\tempdir>cmd.exe /c bar/baz\r\n    this is bar.cmd, %1=(/baz)\r\n\r\n5. simplify the ""is_windows"" function in\r\n./configure\r\n\r\nFixes https://github.com/bazelbuild/bazel/issues/2892\r\n\r\n* Fix bad cc_library.includes from prev. commit\r\n\r\n* bazel_test_lib.sh: add envvars to CPU build config\r\n\r\n* Fix junction creation in python_configure.bzl\r\n\r\nBazel deletes the output files from a previous\r\nbuild before running an action, and if the\r\njunction pointing to the source directory is\r\npresent then Bazel would delete the source files,\r\nbelieving they are in the output directory.\r\n\r\nThanks to @meteorcloudy on\r\nhttps://github.com/tensorflow/tensorflow/pull/9762'"
2661ebb7b97fd229b390477af0dde76407934344,'Minor docstring formatting fix.\n\nPiperOrigin-RevId: 156552579'
8759fdc2b058d59e2b31933fe97a5915a4caecb1,'Fix comments for dataset ops (#10030)'
53cb26d05a5c2080d8022124178b1cc43a30ffe5,"""Merge changes from github.\nEND_PUBLIC\n\n---\nCommit c2b8927f2 authored by Dandelion Man?<dandelion@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix another d3v4 regression in the graph visualizer.\n\nPiperOrigin-RevId: 156343038\n\n---\nCommit 170f0b350 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Add XLA implementation of ResourceStridedSliceAssign.\n\nPiperOrigin-RevId: 156341053\n\n---\nCommit 1390dd68f authored by Vijay Vasudevan<vrv@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nWhen Op Type is not registered, log the hostname of the machine that\nit is running on in the error message, since the message could be routed\nback during a failure on a remote binary, and it is hard to tell which\nmachine it came from.\n\nIdeally, we'd somehow log the name of the binary running instead, but\nwe don't have a function to get that right now.\n\nPiperOrigin-RevId: 156337679\n\n---\nCommit 9ca8a151b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal change.\n\nPiperOrigin-RevId: 156335942\n\n---\nCommit 40255434c authored by Martin Wicke<wicke@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDeprecate contrib/learn/dataframe. To be removed June 15.\n\nPiperOrigin-RevId: 156333930\n\n---\nCommit 7f71b7fbe authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 156123287\n\nPiperOrigin-RevId: 156503903"""
6a16db94b66d28f8a03a7003470e3ee24212d88c,'Minor docstring formatting fix.\n\nPiperOrigin-RevId: 156458396'
febbec41771c96b30309807e6396890cc54e3f76,'Fix WholeFileReader for named pipes (or any file with incorrect or non-fixed sizes).\n\nPiperOrigin-RevId: 156452522'
e4f51234980f032df6e00734a246205cfd2c441e,'Cherry-pick RNN migration CLs into r1.2 (#10011)\n\n* Unify op names between RNNCells and Keras layers.\r\n\r\n* Fixes to checkpoint_convert doc string\r\n\r\nPiperOrigin-RevId: 156386066'
7916e22e954fc893e673f74b4088b9e9c3a9be97,'Minor docstring formatting fix.\n\nPiperOrigin-RevId: 156448484'
f7d266cf19da089c660c9dd0cdd1444c0c90ba72,"'fix a bug in generate-pc.sh (#10008)\n\n* add pkg-config generation script\r\n\r\n* add suggestions from asimshankar to generate-pc.sh\r\n\r\n* generate-pc: fix bug and robustify\r\n\r\nThe script was unable to genereate the pkgconfig file even with the\r\ncorrect options.\r\nAlso, now it forces user to pass a version in order to continue.'"
a4a449b3db8c33f0404a838a247736c2c9b5e91b,'Minor style fix'
7eef45621d3e917cf09101b309a7c839008dde76,'Fix indentation'
1bb0704a01d47b7addb54b3b8cc273a589fb87da,'Fix broken instructions link md in performance_models\n\nPiperOrigin-RevId: 156442062'
e6a780b896a4f7a5706cf8c6d5d51e21ab4f62a4,"'Fix bugs in SetAttrValue and remove unnecessary calls to Node::ClearAttr\n\nSetAttrValue appended to list attrs, which is unlikely to be what the user expected given the name.  With that fixed, several calls to ClearAttr immediately followed by AddAttr can be removed.\n\nPiperOrigin-RevId: 156440096'"
eac1a7bade980426925cb79ccc14c7f738bd5528,'Fix misspells. (#10000)'
faf55ee67c1efc25507402820cb7af6b2b57c446,"'There is a bug in tf.gradients() when it comes to handling backprop of non-trainable data types. The invariant for calling a gradient function is that the input gradients must be all tensors. However in the case of non-trainable data types, this invariant can be violated. For this CL I have only fixed it for my particular instance to unblock people.\n\nPiperOrigin-RevId: 156429814'"
8c835bec973b2df859fd3feafff8b2ba04940c32,"""Explicitly place local_step variable on worker's local device (was defaulting to PS).\n\nThe local step is used by the ConditionalAccumulators to check gradients for staleness and optionally discard them.\n\nThis fixes the issue if that the local step is increased by one worker and a backup worker pushes a stale gradient to a ConditionalAccumulator, then the gradient will be accepted (and hence, training won't be synchronous anymore.)\n\nPiperOrigin-RevId: 156417310"""
3a6676477c7ccb47cf7213bf7f63a80af90b2b49,'Minor docstring formatting fix.\n\nPiperOrigin-RevId: 156415121'
165fc29ecda0cb17a14e5f128700b3ea5030e64a,"'Python partial run binding should make call when feeds but no fetches are provided.\n\nAlthough no fetches and some feeds being specified on a run call should be a no-op, it is perfectly valid for no fetches and some feeds to be provided in a partial_run call. This is because a subsequent partial_run call with fetches may need that earlier feed. (see test for example). This change fixes the python binding to allow for that.\n\nPiperOrigin-RevId: 156396669'"
e534c80fea290a04c9b821e9f116d12839522a76,'Buildifier fixes.'
3fb4b5d30ce0600338ee039cb52ac193ffb60a01,'Fixes to checkpoint_convert doc string\n\nPiperOrigin-RevId: 156386066'
64d283057b91f21ea98ac13af74435c9d9edb6ee,"'Make .bazelrc import ~/.bazelrc (#9987)\n\nWhen running ./configure for the first time, an import ~/.bazelrc statement\r\nwill be added to the generated .bazelrc if the user has one.\r\n\r\nFixes #9963\r\nSee also bazelbuild/bazel#3022'"
e5824d60f717e4aea40e11944873c1eb56cb994b,'Fix: config MKL build error - mkl_layout_pass.cc has missing header dependencies (#9986)'
d87007ac1c765874fefceafe672ee6024e12c2d9,"""Fix a bug in Scaffold's copy_from_scaffold argument because tf.Tensor cannot be converted to python bool\n\nPiperOrigin-RevId: 156375789"""
a7157f5ab0e208eca7373b6b8ab04b324fb0d28b,'Merge pull request #9985 from tensorflow/pooling-fix\n\nExecute average pooling on GPU if available'
9d9aa78c105a2414deed6ced31fb7699f08e55bb,"'[XLA] Fix bool support for Array2D/Array3D/Array4D.\n\nThe Array?D<T> classes were previously backed by a std::vector<T>, which has an inconsistent bitset implementation for T == bool. This meant that the bool instantiations of Array?D caused compile-time errors. Change the Array classes to be backed by a std::unique_ptr<T[]> instead, since the dimensions of an Array are constant.\n\nPiperOrigin-RevId: 156364397'"
c2b8927f2547c526ae58a9736d1bed1cedb87a17,'Fix another d3v4 regression in the graph visualizer.\n\nPiperOrigin-RevId: 156343038'
3d8ed3ecfe94e34aa87ab938a14881fbccd3b309,'Merge pull request #9980 from av8ramit/compat\n\nFixing the api compatibility test.'
368a1588586d50dd008359e4d4e571c03faa5b67,"'Add a simple BMP decoder and enable it on Android (#9563)\n\n* Add a simple bmp decoder\r\n\r\nAdd a bmp decoder and make sure that the decoder works with label_image.\r\n\r\ntensorflow/python/kernel_tests/decode_bmp_op_test.py uses data from\r\nExample 1 of Wikipedia BMP file format page [1].\r\n\r\ntensorflow/core/lib/bmp/testdata/lena.bmp for\r\ntensorflow/python/kernel_tests/decode_image_op_test.py is converted from\r\n./tensorflow/core/lib/png/testdata/lena_rgba.png\r\n\r\n[1] https://en.wikipedia.org/wiki/BMP_file_format#Example_1\r\n\r\n* enable building label_image w/ bmp decoder for Android\r\n\r\n(0) modifiy Andorid NDK entry in WORKSPACE\r\n(1) build it\r\n> bazel build -c opt \\\r\n  --cxxopt=""-std=c++11"" --cxxopt=""-DTENSORFLOW_DISABLE_META""  \\\r\n  --crosstool_top=//external:android/crosstool \\\r\n  --cpu=arm64-v8a \\\r\n  --host_crosstool_top=@bazel_tools//tools/cpp:toolchain \\\r\n  tensorflow/examples/label_image/label_image\r\n\r\n(2) push the binary to your Android device\r\n> adb push bazel-bin/tensorflow/examples/label_image/label_image /data/local/tmp\r\n\r\n(3) push model and other files to the device\r\n\r\n(4) adb shell then \'cd /data/local/tmp/\', then we can run \'label_image\' like:\r\n\r\n> ./label_image  --graph=inception_v3_2016_08_28_frozen.pb  --labels=imagenet_slim_labels.txt --image=grace_hopper.bmp\r\n\r\n    And get results like:\r\n\r\nnative : main.cc:208 military uniform (653): 0.834119\r\nnative : main.cc:208 mortarboard (668): 0.0196274\r\nnative : main.cc:208 academic gown (401): 0.00946237\r\nnative : main.cc:208 pickelhaube (716): 0.00757228\r\nnative : main.cc:208 bulletproof vest (466): 0.0055856\r\n\r\n* Small type fixes and style issues.\r\n\r\n* Fixing syntax, check that channels is a valid number for now.\r\n\r\n* Use internal::SubtleMustCopy on fields extracted from input tensor\r\n\r\n* use channels_ extensively\r\n\r\nuse channels_ when calculating positions and support 4 channels\r\n\r\n* PNG->BMP\r\n\r\n* Change default channels of bmp decoder to 0\r\n\r\nChange default channels of bmp decoder to 0 for consistency.\r\nFixed a typo in tensorflow/core/kernels/decode_bmp_op.cc\r\n\r\n* Fixed BUILD files as suggested by buildifier\r\n\r\n* Add test data for decode_image_op_test\r\n\r\nAdd test data dependency for tensorflow/python/kernel_tests:decode_image_op_test\r\nand add tensorflow/python/kernel_tests:decode_bmp_op_test to test bmp.'"
2774f653d9baf01663fce0e0c55688722360b08e,'Fixing the api compatibility test.'
931fd84bb72df0500f512d5d92ec0bef2ea461be,'fix numpy.prod and GatherGrad overflow for large tensors inside windows (#9780)\n\n* fix numpy.prod overflow for windows\r\n\r\n* fix GatherGrad large shape exception for windows\r\n\r\n* add __long__ for Dimension; modify comment according to review'
6192777e89d2d8d9b5dcb51abba5469eb9670bd2,'CPU kernels for FFT (#9029)\n\n* Add C2C FFT kernels for CPU.\r\n\r\n* Remove reinterpret_cast.\r\n\r\n* Add RFFT (does not compile).\r\n\r\n* Implement RFFT without IRFFT.\r\n\r\n* Fix gpu build.'
9a47c258c9c2286ae2c14a0da6458055f3b691d3,'[TF cmake] Bugfix: lazy import of portpicker in test_util.\n\nAlso remove a test that relies on it from the cmake tests: tensor_array_ops_test.py\n\nPiperOrigin-RevId: 156311187'
eb937e62c54ffaa607283cfa9db1359e9a0b62fa,'Fixing issue with cuda configuration when cudnn.h located in /usr/include/cudnn.h\n\nPiperOrigin-RevId: 156306372'
339856c0a6599d194895b0fdff35b61c53663bc2,'Fix small typo in Dataset readme.\n\nPiperOrigin-RevId: 156270919'
7161c8205794f744653ffe6739a0c4038e1d6cb8,'Fix contrib.seq2seq.BeamSearchDecoder #9855 (#9875)\n\n* Shielded top_k input with min\r\n\r\nFixes #9855.\r\n\r\n* Fix docstring note about BeamSearch _get_scores\r\n\r\n* Change next_beam_size to tensor\r\n\r\n* Calculate number of available beams before cond'
ef97b7258b0e668a2944d3c5ed349640e6ae6a25,"'Fix bug in d3v4 version of graph visualizer.\n\nIt caused the graph to not relayout properly when node groups were\nopened and closed.\n\nAlso fix a bug where the old d3zoom api was being used, and update appropriately.\n\nPiperOrigin-RevId: 156247989'"
726abf64ba54fb7bb324df764320054a24b81a68,"'Made the minimap translate ""to"" an (X, Y) coordinate instead of ""by"" an (X, Y) coordinate. Basically, during the d3v4 migration, translate() got replaced with translateBy(). That caused the scene to continually translate in some direction (until it went off screen) when the user panned the minimap.\n\nWe now use a d3 transform that specifies a final location (translate to).\n\nFurthermore, the minimap was transforming the wrong object. It should have been transforming this.svg instead of the root g element. This CL fixes that too.\n\nPiperOrigin-RevId: 156247665'"
16a8a6d7d834e4645e007b2e3cfbe26511bf133a,'[TF] A couple fixes for Mod:\n\nIn TF:\n    - fix incorrect doc string for TruncateMod.\n    - remove outdated TODO.\n\nPiperOrigin-RevId: 156239535'
d0936ab91ccdc0e50dc31b0c0bb7711132fcd445,"""Fix the issue in which the user choppily moves into a different graph transform configuration after panning/zooming after fitting the graph.\n\nThe main problem had been that the fit function had been altering the root 'g' element's transform, while the zoom behavior had been instead altering the root 'svg' element's transform.\n\nPiperOrigin-RevId: 156236623"""
69433c1f1adef96fde2074b05d3362e88d8587de,"'TFLearn Estimator Summary Writer Fix (#7555)\n\n* Fix evaluation summary writing. TFLearn\r\n\r\n* Update estimator.py\r\n\r\nFixed White Space\r\n\r\n* Fix similar issue. \r\n\r\nFix similar issue under, `tensorflow/python/estimators/estimator.py`\r\n\r\n* Filter out ""global_step""\r\n\r\nThis is seemingly the best way to ensure we don\'t write ""global_step"" to the summary, (which would be useless), while not modifying the dictionary. \r\n\r\n(Pull request for the other `estimator.py` incoming.)\r\n\r\n* Filter ""global_step"" [part 2]\r\n\r\nSame as other `estimator.py`.'"
5e3545c24eeb178ce8231067f1c8c42c7c42750f,'[TF:XLA] Fix compilation bug for computations with one non-constant output and one or more variable outputs.\n\nPiperOrigin-RevId: 156193188'
c30ae04407940be85678cafb25747e2412e74db9,'Bugfix: tf.reverse supports string type.\n\nPiperOrigin-RevId: 156191186'
e7a0308e61121338b5a86998b610abbaa2d8c372,"'[TF RNN] Fix recently introduced bug if the state size is a scalar.\n\nTurns out tf.concat((int32_tensor, []), 0)  thinks the empty list []\nis floating point.  o_O.\n\nPiperOrigin-RevId: 156131674'"
c03d5cc66421b97770ee2b63595c806a90173ef4,'NADAM Optimizer (#9889)\n\n* Initial commit for NADAM\r\n\r\n* Add GPU and sparse implementations and add missing arguments\r\n\r\n* Add tester\r\n\r\n* Revert changes to files made for testing\r\n\r\n* Add nadam optimizer in a class of its own\r\n\r\n* Reverse changes to adam_test.py\r\n\r\n* Reverse changes to adam.py\r\n\r\n* Actually reverse adam_test.py\r\n\r\n* Actually reverse adam.py\r\n\r\n* Delete nadam_optimizer_test.py\r\n\r\n* Create nadam_optimizer_test.py\r\n\r\n* Fix BUILD\r\n\r\n* Run buildifier on BUILD'
a8b19784a7a3f2b21ea604571cb09b11c1d272e8,"'Fix graph rendering in d3v4.\n\nNote, there are still some bugs with layout/rendering (e.g. try to open/close a node group and things get weird.)\n\nPiperOrigin-RevId: 156122210'"
7c1339e32d7c8c3b95fbb11799bcef4795a9b72a,'Fix some unused variable warnings when IS_MOBILE_PLATFORM\nis defined.\n\nPiperOrigin-RevId: 156120864'
e08e54e8b232d95038c1f2a1ddd4d26664323100,'verbs: Configure IB/RoCE QPs MTU according to the port MTU (#9667)\n\n* verbs: Configure IB/RoCE QPs MTU according to the port MTU\r\n\r\n* fix indent for linting'
652252e0d2d54769b3a37212eaf06939bb68e99a,'Fixed the documentation for tf.layers.conv2d to indicate that `use_bias` takes precedence over `bias_initializer`\n\nPiperOrigin-RevId: 156089552'
ad24ce18411d47ab8148d8698453940c50e880d0,"""Fix use of incorrect OpDef from another graph's function library in Graph::CopyNode().\n\nPiperOrigin-RevId: 156086326"""
0dda9d4a87c04b7dc2717957ce3c17ed26bd2ffa,"""fixing $PATH search when running ffmpeg.  Previous code bailed on first failure of realpath() which didn't proceed to rest of $PATH (#9888)"""
54efd636b504aad368eea254eca2970a16d457f6,"""Update RNN helpers to be able to handle dynamic state sizes.\n\nThis fixes a bug I introduced previously by adding the alignment into the AttentionWrapper's state (since the alignment's size may have to be a Tensor - the encoder's max_time is not usually static).\n\nPiperOrigin-RevId: 156077314"""
6d43171b4169c1e41bdb98275cd629005c89cb4e,"'Fix type error: convert ""view"" to ""list"" for indexing.\n\nPiperOrigin-RevId: 156059413'"
68d198ee4999a8661a3249b15d108b08b0da8811,'Fixing issue with cuda configuration when cuda symlinked directories have a single file\n\nPiperOrigin-RevId: 156046172'
2b90ef158b9dd07b71453f3254a6a8a16501cdfa,'Fix importing a scoped metagraph into a graph that has an active name scope.\n\nPiperOrigin-RevId: 156038375'
7cb059717dd9012188db194faa8a14a006a80e2a,'Improve Polymer test fixture definition\n\nPiperOrigin-RevId: 155939905'
7930c794ae1775b0131134cb5bf4f062bb850e9c,"""Fix TensorBoard dashboard common regression\n\nIf the script that calls Polymer() isn't in the same HTML file that declares\nthe DOM element, then it needs to be wrapped with window.HTMLImports.onReady.\nRather than putting a callback in the source, the TypeScript compilation was\njust broken down into finer grained units.\n\nPiperOrigin-RevId: 155936270"""
89506a70f659f1d32454edd9753835f44403e9b9,'Fix merge'
7d785f1e18af9d22d940f18aac6e8c9ffd268b22,'C API: Do not ignore errors in shape inference when constructing the graph.\n\nFixes #9826\n\nPiperOrigin-RevId: 155898632'
04891087aa887ac744c5ec2d991314b5b3c4f78e,"""Make all the image decode ops handle all formats\n\nToo many users try to decode pngs as jpegs.  Now, if you pass a png to\ndecode_jpeg, or a gif to decode_png, it silently does what the user was\nexpecting.\n\nUnfortunately, tf.image.decode_image still exists as a separate thing in\nPython, since decode_gif returns 4-D shapes incompatible with the other ops.  A\nfuture CL could clean that up, but it's hard to do in a backwards compatible\nway.  As is, decode_png and decode_jpeg will bail if you try to decode an\nanimated gif, and produce 3-D images for nonanimated gifs.\n\nAlso fix some crash-on-error bugs and memory leak bugs in gif_io.cc.\n\nRELNOTES: Make decode_jpeg/decode_png/decode_gif handle all formats, since users frequently try to decode an image as the wrong type.\n\nFixes #9786.\n\nPiperOrigin-RevId: 155888493"""
365b5c1c322df7870688d9f08320d4012ef1b6bc,'Bugfix for proto file changes introduced in recent while_loop/stop_gradient PR.\n\nPiperOrigin-RevId: 155886984'
827c00e769e7a104921355591b7dc6177092e1e3,'Fix some linter issues with tensor.h\n\nPiperOrigin-RevId: 155875914'
1a31f09d1cd49f6d4efafa8ad19efb4389409edb,'Fix formatting issues'
f850ff3113125ba9f20b714074b921c2e40ba8c7,"'Optimize using C++ backend, and fixing incorrect implementation'"
53dc8ab2a14f913583cc259930f35d777bc7cc81,'Add newline to fix tuple output description formatting.\n\nPiperOrigin-RevId: 155863837'
31d3881b4b276b5aab004e69129f05d3a4c51174,'Fixed build error'
bae71921dfc6efb9880add651aaee1292715a282,"'Fix how-to reference in distributed runtime README (#9772)\n\nThe current link 404s, and now that the website documentation\r\nhas been updated, the link can now point there.\r\n\r\nSigned-off-by: Paul Van Eck <pvaneck@us.ibm.com>'"
5f10181420cf991d05b668e054239768d892eea9,'Fix python doc generation example in `documentation.md`\nAdd error checking to `generate_lib.py`\n\nfixes: #1574\nPiperOrigin-RevId: 155852240'
a33022c1470ce1334766b0cad38d9e91c17a2e5d,'Fix verbs compile error (#9791)'
eb0a59f003977332b7363526fcfd0b3f4311492b,'Fixes #9654: Allow model_fn being a member function of a class (#9807)\n\n* Fixes #9654: Allow model_fn being a member function of a class\r\n\r\n* Remove self from arg instead of changing a const'
e7f64e391ad4c597392f87711560215186fae2d4,'Merge pull request #9825 from kemaswill/FixBrokenLink_20170510\n\nFix a broken link'
33cd434e24e88ef33b74f7d3bd9f7d34034ee05e,'Merge pull request #9844 from chris-chris/patch/170511-misspell\n\nFix misspells on c++ codes.'
7d8ea3d8c7577e9a674892c57327f8084a87e6e1,'Fix broken links'
cfdf449ae2daa749e66565f846808bb9e5c1bff5,"'Update TensorForest to provide output_alternatives for serving.\n\nAlso, fix reversed inference dict key constants.\n\nPiperOrigin-RevId: 155826149'"
dbb78c7783c32f8f3dc86364dc10d7d51cf61277,'Fix typos in high performance models docs (#9845)'
a9c50eabd8f19d9695a5b017c7a33921fbbd8f78,'Fixes markdown formatting.\n\nPiperOrigin-RevId: 155806609'
912eaee77be9a042578c7566436fd4838b97fd05,'Fixing some indenting issues in Markdown.\n\nPiperOrigin-RevId: 155778725'
51caa2b03f2975be51ab3f03999f35046b34f4af,'Fix misspells.'
b456315662c84a0721a7db33ddd55ef9d8cde639,'Fix expected error text in feature_column_test.py.\n\nPiperOrigin-RevId: 155760913'
99706cf26befc2b86606557d01f14b32bf7c73f7,'Fix build by adding three.d.ts typing\n\nPiperOrigin-RevId: 155712533'
ab2a1e37c681e9f5f248e3efbaf15a5935c8901a,'Merged commit includes the following changes:\n155673782  by ashankar <ashankar@google.com>:\n\n    Windows: Fix bazel builds on Jenkins.\n\n    PR #9580 added TF_NEED_MKL as an argument to the\n    configure script. So that needs to be set before\n    invoking it on Windows.\n\n--\n155671008  by A. Unique TensorFlower <gardener@tensorflow.org>:\n\n    Internal change.\n\n--\n\nPiperOrigin-RevId: 155673782'
01822a426d44b18c311712005e451099761d3823,"'Allows more properties in core RunConfig to be *mutated*.\n\nAlso improve the usability that if save_checkpoint_steps is mutated, the save_checkpoint_secs should be set as None, and vice verse.\n\nFixes #9795\n\nPiperOrigin-RevId: 155668946'"
15f32d93a48fa78f7f2f17c0a46f5625637c82aa,"'get_attr returns dtype objects instead of raw ints\n\nOriginally by @Mycosynth, but edited to make it work using\ninteger conversion.\n\nFixes #447.\n\nIf this breaks you, do an explicit cast of the return of get_attr to int, if you\nare parsing a dtype object.\n\nPiperOrigin-RevId: 155661630'"
0ea08a755c27affd3b41abdcd081716fcc9c03ad,"'Fixes Markdown rendering of UTF-8 strings in text_plugin for Python 2.\n\nMarkdown does an internal conversion to unicode of any input string passed to it, which fails in case the string contains any non-ASCII characters. This fixes the problem by converting the string to unicode using UTF-8 encoding beforehand.\n\nPiperOrigin-RevId: 155638665'"
96980d5f7a8e5f4ae0d06c23663e2f7fecc2e7ba,"'Fix a bug when applying stop_gradient() on the gradient of a while loop. It turned out that I really needed to have tf.gradients() to backprop correctly on the gradient loop even if we have a stop_gradient on it. So, with this CL, I suspect that we are epsilon away to support higher-order gradients for while loops.\n\nPiperOrigin-RevId: 155568884'"
b661c841c1bb39215661f1b21bd54a4d96ab8ed4,'Fix android tests broken by sparse_cross_op.\n\nPiperOrigin-RevId: 155563563'
049f9e6a354a1ccc6f1e97064593dede50f07867,"'Fix formatting of some op descriptions. In most cases, this means\nseparating out a 1-line summary from the main description.\n\nPiperOrigin-RevId: 155553359'"
9a83416501c4a03d6b7f72a046d1b4ad0238cd3b,"'[TF:XLA] Fix (u)int64 and tensorflow::protobuf_(u)int64 discrepancies\n\nBecause of the fact that tensorflow::protobuf_uint64 is defined as uint64_t\nwhile tensorflow::uint64 is defined as unsigned long long, there exist\ncompiler versions for which the template type matching does not trigger\ncorrectly.\nThe LiteralUtil::GetMutableRepeatedField<>() API ends up in having an\nasymmetric interface because of that, where it needs to be called with\ntensorflow::protobuf_(u)int64 for 64bit types.\nThis CL removes the LiteralUtil::GetMutableRepeatedField<>() API,\nconfines to Resize<>() the multiple template type expansion, and introduces\na new public GetMutableArraySlice<>() API which does not suffer from the\ndiscrepancies the LiteralUtil::GetMutableRepeatedField<>() had.\nPiperOrigin-RevId: 155520416'"
73e537e7826297d2b238ca276db87f7289bb6eb2,'Show entire shapes in random_crop assertion.\n\nFixes #9708.\n\nPiperOrigin-RevId: 155511759'
d764056bfeea666898bbec5097ef4a56eedb387c,'Fix formatting of some op descriptions by separating out a 1-line\nsummary from the main description.\n\nPiperOrigin-RevId: 155482473'
77a65cfe9d1ef561eb70f1554e4df997d7fbff4e,"""Merged commit includes the following changes:\n155469502  by A. Unique TensorFlower <gardener@tensorflow.org>:\n\n    Fix docs for ConcatOffset op. Can't have anything after arg docs.\n\n--\n155468120  by A. Unique TensorFlower <gardener@tensorflow.org>:\n\n    Internal change.\n\n--\n\nPiperOrigin-RevId: 155469502"""
0b783210120d02d8441f87c2f31684b6e4e52349,'SavedModel documentation fix.\n\nPiperOrigin-RevId: 155462669'
94807f281536d07562f4e281ef1663424cd1c3eb,'Fixed the evaluate call in ValidationMonitor to support core Estimator.\n\nPiperOrigin-RevId: 155453312'
036921c833bbe14dd3e21373665e4fd6a7d9f2ad,'Small documentation fix: Update code example in cuda_solvers.h after changing method name.\n\nPiperOrigin-RevId: 155430968'
3be35ada0ee4984d57aa3a1a887f778227ffc4c9,'VectorLaplaceDiag distribution added.\nVectorLaplaceLinearOperator added but not exposed as part of API.\n.det_covariance and .log_det_covariance removed from MVNLinOp\nSome small docfix to MVN\n\nPiperOrigin-RevId: 155417807'
ebd6de64299a5484265455d8e0f469fad91a0927,'Fix flaky test batch_sequences_with_states\n\nPiperOrigin-RevId: 155410358'
a816db6b977fac2e3ff6ccd490529aa558f1a9d1,'Fixes typos in docstring of string table.\n\nPiperOrigin-RevId: 155410244'
eaa18b3d0fc4bd71d9b36a55fda81f7787427e8f,"'Actually enforce nomac tag on Mac\n\nPreviously the nomac tag was not enforced, perhaps by mistake. This CL fixes that.\n\nPiperOrigin-RevId: 155409422'"
41f86fd4220e3e92b756c2c18033c693655baea3,'Fixed typo.\n\nPiperOrigin-RevId: 155408790'
dcb6e92b1d0833ad9f30536896f5874260f80995,"""[XLA] Service::CreateModuleConfig should take the backend as a parameter, rather than assuming it's creating a module for the execute backend.  This fixes the TODO from service.cc that I added in my previous commit.\nChange: 155389451"""
bdca561c273d3749a8359763c157daa850af138c,"'Fix tf.meshgrid documentation (#9740)\n\nThe original document has the wrong output regarding the default indexing xy.\r\n\r\n    x = [1, 2, 3]\r\n    y = [4, 5, 6]\r\n    X, Y = tf.meshgrid(x, y)\r\n    print(X.eval())\r\n    print(Y.eval())\r\n\r\n    [[1 2 3]\r\n     [1 2 3]\r\n     [1 2 3]]\r\n    [[4 4 4]\r\n     [5 5 5]\r\n     [6 6 6]]'"
d1565250256215a5e8bea184f3848b9d468672cb,'Fix missing dash for cxxopt build option (#9736)'
6ee900438cb0e25b082f7ab54f677b07ce812ebd,'fix doc (#9733)'
d5956e3e6a30ec7c81a36d0ab82656e865716f84,'Added 2 unit tests for BasicLSTMCell to check ValueError. (#9693)\n\n* Added 2 unit tests for BasicLSTMCell to check ValueError.\r\n\r\n* spelling error\r\n\r\n* change assertRaisesRegexp => assertRaises\r\n\r\n* some lint fixes'
4be052a5fc9e6569fcf07da3e9615b463e008266,'Patch/170506 misspell (#9725)\n\n* Fix misspells.\r\n\r\n* Fix misspells.\r\n\r\n* Fix misspells.'
91c9366589b1082e5d9d8fdc70fe46666efb69a1,"'Including batch_norm as the normalizer function by default, as mentioned in function description (#9652)\n\n* fixed separable_conv2d description error and included batch_norm by default as mentioned in description\r\n\r\n* Update layers.py\r\n\r\n* Update layers.py'"
e321ae5e32859b459879706fea931f4b352be7f6,"""Fix bug when inlining function calls inside a control-flow construct.\n\nAdd control dependencies from a control frame's pivot node onto all operators within the frame. Function inlining may introduce extra nodes in the graph, and those newly introduced nodes must depend on the enclosing control frame's pivot node. However, since the inlining transformation only looks locally at the function call node, it has no way to know that it should do this.\n\nThere are two possible solutions: either (a) teach the function inliner about control flow frames, or (b) add a control dependency from the pivot node to function call node and have the inliner propagate that dependency. This change does the latter.\n\nWhen inlining a function call, propagate control dependencies from the function call node onto each inlined operator with no data dependencies, and onto any nested function calls or SymbolicGradients.\nChange: 155289198"""
1182c93e3ea447477554a6825014199f455d86d4,'Fix warning of type conversion in array_ops.cc\nChange: 155273711'
1959ae333f3a6acc48fc7af58944dddf5f62a64a,"'[XLA] Fix fallout from CompileOnlyClient et al refactoring.  That change broke computation of constants in the XLA2TF bridge, for a couple of reasons, which are described in the comments adjacent to the fixes.\nChange: 155270959'"
50d816cbc55ac2fb5e2f9dfadb669553fd4e2525,'Link to gcc_s and gcc if compiler is GCC version 5. Fixes issue #9593 (#9642)'
53f68459f18fd9c707183511e1e58d03e2f367db,"""Fix multiple minor split_v related issues.\n\n* Bug where the implementation didn't check in the case of one output that it\n  was of the correct size.\n* Bug in the shape inference where the output shapes are known.  It didn't do\n  any error checking in the inference function, leading to a delay in finding\n  problems.\nThe above two problems were highlighted by #8720\n* Bug when num_or_size_splits is a constant tensor.\n#7754\n\nAlso updates golden values in phasedLSTM test since it depends on the number\nof nodes in the graph, which this CL changes.\nChange: 155259859"""
7467f370927207dfa12f18c2f42920ccf3920fe0,'merge fix'
fdb4eba5b1cd0f2a2b10f83042a7e0eec1a41548,'- fixing comments to reflect reality\nChange: 155256914'
e436ecd251b0bdb6c645ba32ad33219bcbf6004e,"'Set inline <script> tags to strict mode\n\nThe ""const"" and ""let"" keywords cause problems in some browsers\nwhen not running in strict mode.\n\nFixes #9075\nChange: 155245440'"
cae8ed1ca54a9fd4f9cc64d08cadebce31fd4607,'Fix build scripts for MKL (#9698)'
feb26a7224b8018a02af94fa28eaaafd4ddd2147,'Clean up TensorBoard build and fix sync process\nChange: 155237534'
65f8c5ca31a8dc217133f559281ced876d580113,'Fix error of version_info.cc not being generated on windows if building python bindings is disabled in CMake (#9660)'
2311dfc8ec1cef44dddb37603211337f48708824,"""Fix a bug in save_model_cli 'show'.\nChange: 155217646"""
88cb0291b759397481a1f2df6fe4bb591984dcad,"""Added missing 's' on and in `bijectors` guide, fixing the links.\nfixed link to `kl_divergence` in `distributions` guide.\nChange: 155196210"""
20b5a90c24d514673204b87f2dc604e2a818a22a,'This fixes some issue introduced in the previous version where RTTI (#9671)\n\nwas removed from the exclusion list. Because of this the number of\r\nsymbols in the def file was close to 64K for gpu builds and yesterday\r\na few added symbols pushed us over the 64K limit for the windows linker.\r\nAdding RTTI back to the exclusion list.'
7ff483746404a3ca7ed66ae4271b21bcb07082ee,'Fix documentation in supervisor.\nChange: 155140112'
243ac0132001a5b8fa9c1d4435842d0b588b82be,"""Added identity op and a fix for LRN (#9641)\n\n* relu grad and maxpooling grad fixes for perf\r\n\r\n* Graph layout pass and conversion pass changes\r\n\r\nThis commit makes following changes:\r\n\r\n- Enables support for ReluGrad and BiasAddGrad\r\n- Adds support for detecting depthwise/batchwise pooling\r\n- Adds more unit tests for Graph rewrite pass\r\n- Improvements to handling control-flow edges\r\n- Bug fixes\r\n\r\n* Defaulting to Eigen when LRN depth_radius!=2\r\n\r\n* Fixed mkl_conv_grad_filter.cc for conv_ops_tests.py\r\n\r\n* Style fix to mkl_matmul and remove unnecessary 'MKL' label on matmul kernel\r\n\r\n* Style fixes based on clang-format to mkl_conv_* and mkl_matmul\r\n\r\n* Bug fixes\r\n\r\n* Adding OP_REQUIRES_OK check in Concat\r\n\r\n* Making some style changes\r\n\r\n* Enabled the configuration of MKL settings\r\n\r\n* relu grad and maxpooling grad fixes for perf\r\n\r\n* Graph layout pass and conversion pass changes\r\n\r\nThis commit makes following changes:\r\n\r\n- Enables support for ReluGrad and BiasAddGrad\r\n- Adds support for detecting depthwise/batchwise pooling\r\n- Adds more unit tests for Graph rewrite pass\r\n- Improvements to handling control-flow edges\r\n- Bug fixes\r\n\r\n* Defaulting to Eigen when LRN depth_radius!=2\r\n\r\n* Fixed mkl_conv_grad_filter.cc for conv_ops_tests.py\r\n\r\n* Style fix to mkl_matmul and remove unnecessary 'MKL' label on matmul kernel\r\n\r\n* Style fixes based on clang-format to mkl_conv_* and mkl_matmul\r\n\r\n* Bug fixes\r\n\r\n* Adding OP_REQUIRES_OK check in Concat\r\n\r\n* Making some style changes\r\n\r\n* Enabled the configuration of MKL settings\r\n\r\n* Fixing graph unit tests with Mkl op name change to _Mkl; Fixed missing _ in MklToTf op\r\n\r\n* Fixed missing libdl.so.2 in BUILD file\r\n\r\n* Fixes for unit test build failures.\r\n\r\n* Changes in mkl_conv_grad_filter_ops.cc for Google code style\r\n\r\n* Fixes to remove dead code\r\n\r\n* removed the dead code and added a TODO for mkl implementation to handle this case in the future\r\n\r\n* Enabling MklIdentityOp\r\n\r\n* Calling MKL for all values of depth radius in LRN\r\n\r\n* Fixed buildifier sanity check error\r\n\r\n* Adding support for google's CI automation\r\n\r\n* Updated link to new MKL version\r\n\r\n* Enabling MklIdentityOp\r\n\r\n* Calling MKL for all values of depth radius in LRN\r\n\r\n* Fix for missing locate binary\r\n\r\n* Fix for missing locate command in CI\r\n\r\n* Adding updatedb to populate the database after installing mlocate\r\n\r\n* Fixed buildifier issue\r\n\r\n* setting tf_need_mkl=0 in libtf files\r\n\r\n* Added third_party/mkl/* to .gitignore\r\n\r\n* Added third_party/eigen3/mkl_include to .gitignore\r\n\r\n* In configured, set MKL-enabling options only for Linux.\r\n\r\n* Enabling MklIdentityOp\r\n\r\n* Calling MKL for all values of depth radius in LRN\r\n\r\n* Making style fix in LRN\r\n\r\n* Fixed Indentation"""
4c992d9d6d45cc2e23f20ee728880fc236901dd4,'Fix mac build.\nChange: 155140054'
6604bc6fdc456c4028b3de41c1eda0ae89007630,'Clean up TensorBoard build and fix sync process\nChange: 155136555'
27dd167c5fd4d0d4e7572cc8d639c0e61e69215e,"""Enable MKL in configure and various bug fixes (#9580)\n\n* relu grad and maxpooling grad fixes for perf\r\n\r\n* Graph layout pass and conversion pass changes\r\n\r\nThis commit makes following changes:\r\n\r\n- Enables support for ReluGrad and BiasAddGrad\r\n- Adds support for detecting depthwise/batchwise pooling\r\n- Adds more unit tests for Graph rewrite pass\r\n- Improvements to handling control-flow edges\r\n- Bug fixes\r\n\r\n* Defaulting to Eigen when LRN depth_radius!=2\r\n\r\n* Fixed mkl_conv_grad_filter.cc for conv_ops_tests.py\r\n\r\n* Style fix to mkl_matmul and remove unnecessary 'MKL' label on matmul kernel\r\n\r\n* Style fixes based on clang-format to mkl_conv_* and mkl_matmul\r\n\r\n* Bug fixes\r\n\r\n* Adding OP_REQUIRES_OK check in Concat\r\n\r\n* Making some style changes\r\n\r\n* Enabled the configuration of MKL settings\r\n\r\n* relu grad and maxpooling grad fixes for perf\r\n\r\n* Graph layout pass and conversion pass changes\r\n\r\nThis commit makes following changes:\r\n\r\n- Enables support for ReluGrad and BiasAddGrad\r\n- Adds support for detecting depthwise/batchwise pooling\r\n- Adds more unit tests for Graph rewrite pass\r\n- Improvements to handling control-flow edges\r\n- Bug fixes\r\n\r\n* Defaulting to Eigen when LRN depth_radius!=2\r\n\r\n* Fixed mkl_conv_grad_filter.cc for conv_ops_tests.py\r\n\r\n* Style fix to mkl_matmul and remove unnecessary 'MKL' label on matmul kernel\r\n\r\n* Style fixes based on clang-format to mkl_conv_* and mkl_matmul\r\n\r\n* Bug fixes\r\n\r\n* Adding OP_REQUIRES_OK check in Concat\r\n\r\n* Making some style changes\r\n\r\n* Enabled the configuration of MKL settings\r\n\r\n* Fixing graph unit tests with Mkl op name change to _Mkl; Fixed missing _ in MklToTf op\r\n\r\n* Fixed missing libdl.so.2 in BUILD file\r\n\r\n* Fixes for unit test build failures.\r\n\r\n* Changes in mkl_conv_grad_filter_ops.cc for Google code style\r\n\r\n* Fixes to remove dead code\r\n\r\n* removed the dead code and added a TODO for mkl implementation to handle this case in the future\r\n\r\n* Fixed buildifier sanity check error\r\n\r\n* Adding support for google's CI automation\r\n\r\n* Updated link to new MKL version\r\n\r\n* Fix for missing locate command in CI\r\n\r\n* Adding updatedb to populate the database after installing mlocate\r\n\r\n* Fixed buildifier issue\r\n\r\n* setting tf_need_mkl=0 in libtf files\r\n\r\n* Added third_party/mkl/* to .gitignore\r\n\r\n* Added third_party/eigen3/mkl_include to .gitignore\r\n\r\n* In configured, set MKL-enabling options only for Linux."""
e46a12bc9fbcea1fef224daa47eb9f1cf9e56472,'Docs: Fix broken link in contrib.layers.initializers\nChange: 155117831'
9340f27ae1daa1a7d4aeef9487dae6807cb6d5e5,"'Fix Bazel CI / TensorFlow project. (#9659)\n\nThis change:\r\n\r\n1. updates common_env.sh to export PYTHON_LIB_PATH\r\nalong with PYTHON_BIN_PATH so the configure\r\nscripts doesn\'t have to guess\r\n\r\n2. writes these paths to bazelrc with quotes\r\naround, to guard agains spaces in the path (e.g.\r\n""C:/Program Files/Anaconda3/python"")\r\n\r\nFixes https://github.com/bazelbuild/bazel/issues/2892'"
2b75d151c92660e9aa8d378feda20059a1592e5c,'Fix an error.\nChange: 155098574'
3bee923c93f9624ce3abf8d55173be66a7755545,'Use $opt defined in the loop rather than raw string.\n\nFixes #9651.\nChange: 155089799'
1ed691459980004f0f9e53bd19d751fa5449d79f,"""Group LSTM cell (#9606)\n\n* GLSTM cell from https://openreview.net/forum?id=ByxWXyNFg&noteId=ByxWXyNFg\r\n\r\n* Responding to comments on PR#9606\r\n\r\n* Update comments according to review.\r\n\r\n* More fixes on users' behalf."""
b0ab95c7af7c051d78dd74bd0a3032ce35273ea6,"'Catch exception on tf_session.TF_NewStatus() (#9575)\n\n* Catch exception on tf_session.TF_NewStatus()\r\n\r\n""try"" and ""finally"" without ""except"" is not sufficient to catch the exception.  The exception makes TensorFlow appear to be broken.  Fixes #8652\r\n\r\n* Catching an AttributeError instead of broad exception type'"
dc33e79fea3777f23fa37a3d7840968d1a954190,'fix `iris_test.csv` download link (#9649)'
1aaff859bfe8855ff81088dabf13991ce9c7494c,'Fixed typo: date -> data (#9648)'
7c0f8489c7acab99bd1497d82fa9fa6459007fe2,"'Fix Bazel CI / TensorFlow project (#9510)\n\n* Windows, python_configure, configure: fix issues\r\n\r\nFix Bazel CI for TensorFlow after TF started using\r\npython_config.bzl instead of python_config.sh:\r\n\r\n- Fix the default python binary detection\r\n  ./configure to use mixed-style paths (Windows\r\n  path with forward slashes, see ""cygpath -m"")\r\n- python_configure.bzl:_symlink_genrule_for_dir\r\n  now executes ""cmd.exe /c dir"" instead of just\r\n  ""dir"" on Windows, because it used to find\r\n  /usr/bin/dir instead of the built-in dir command\r\n- python_configure.bzl:_execute is a new method to\r\n  run commands and report errors in a uniform way\r\n\r\nSee https://github.com/bazelbuild/bazel/issues/2892\r\n\r\n* python_configure: fix an error message\r\n\r\n* workspace.bzl: fix ""patch"" call on Windows\r\n\r\nFound as part of fixing https://github.com/bazelbuild/bazel/issues/2892'"
ddf30ca616de8ceebdf414c9800b857aa004e281,'Added missing header file to fix the MacOS builds\nChange: 155030326'
4a4a1ebc485d854196f0c2231842f70eebeb8981,'TensorFlow documentation fixes\nChange: 155029319'
6adc38555f66357426cd4c2028574ef00ba147cf,"'Allocation tracking of pre-tracked buffer returned in a tuple should increment the buffer by 2 (#9408)\n\n* Allocation tracking of pre-tracked buffer returned in a tuple should increment the buffer\r\nref count by 2, not 1.\r\n\r\nA buffer not pre-tracked has its ref-count set to 2 when it is part of a tuple. A buffer\r\npre-tracked has its value increased by 1, whether it is part of a tuple or not.  This is\r\nan error.\r\n\r\n* Adjust range check following review\r\n\r\n* Fix silly off by 2 error'"
22586bdf900640217deac6dc826054bc6e785518,"'Branch 154885009 (#9604)\n\n* Enable grappler to propagate shapes through queues.\r\nChange: 154789133\r\n\r\n* Add whitelist support in uid of RunConfig.\r\nChange: 154794859\r\n\r\n* Fix a bunch of bad links and missing docs in contrib.\r\nChange: 154820641\r\n\r\n* Don\'t try to refine the shapes for a node if its inference context wasn\'t\r\nsuccessfully built by the AddNode() method.\r\nChange: 154838211\r\n\r\n* Fix issue related to empty bazel.rc file.\r\nChange: 154840138\r\n\r\n* Remove overly precise CHECK when rendering debug output for a function.\r\n\r\nAn `_Arg` node can have more than three attrs, because the runtime may\r\n(and does) add system-defined attrs (viz. ""_output_shapes"") that do\r\nnot change the meaning of the op.\r\nChange: 154850526\r\n\r\n* Port makefile build breakage\r\nChange: 154855106\r\n\r\n* [TF:XLA] Try to incorporate Tensorflow node structure for large HLO GraphDefs.\r\n\r\nThis change assumes that a TF subgraph/op does not cross the boundary of a HLO\r\ncomputation and always put top-level TF subgraphs/ops under HLO computations.\r\nChange: 154855884\r\n\r\n* Added a unit test to check what happens when 2 shapes with known rank but\r\nunknown dimensions are merged\r\nChange: 154856675\r\n\r\n* [XLA] Refactor constant folding operations into a dedicated module\r\n\r\nRefactor constant folding operations into a dedicated module, and added a new\r\nReplaceInstruction() API to collapse { computation->ReplaceInstruction();\r\nchanged=true}.\r\nChange: 154857025\r\n\r\n* Java: Docs: Update instructions for Windows.\r\n\r\nInspired by\r\nhttp://stackoverflow.com/questions/43741775/tensorflow-in-java-running-failed\r\nChange: 154859066\r\n\r\n* Add more documentation for features and labels.\r\nChange: 154859649\r\n\r\n* Added link to high-performance models\r\nChange: 154860213\r\n\r\n* Navigation and index for new performance section documents.\r\nChange: 154862215\r\n\r\n* Fix shape mismatch between loss and weights.\r\nChange: 154862650\r\n\r\n* Add examples to TensorShape documentation and ran autoformatter.\r\nChange: 154862667\r\n\r\n* Move linking of cudnn_plugin, cublas_plugin and cufft_plugin from\r\nstream_executor to the ops that need them.\r\nChange: 154863520\r\n\r\n* Properly track the persistent memory usage of lookup tables.\r\nChange: 154866686\r\n\r\n* Reset the inputs to ShapeRefiner::RunShapeFn so that it behaves the same every time it\'s called.\r\nTo properly handle queues that have populated by several enqueue ops, merge the shapes of the inputs to all the enqueue ops before calling InferenceContext::set_output_handle_shape(). This ensures that we detect incorrect queue setups (where the 2 enqueue ops might generate tensors with incompatible shapes), and that we take all the known shape information instead of that of just one of the enqueue ops.\r\nChange: 154866747\r\n\r\n* Making sure an error message will be produced by session_manager when a non-tensor object is passed in.\r\nOtherwise the \'name\' property is missing.\r\nChange: 154868022\r\n\r\n* Don\'t needlessly synchronize the CUDA stream in CropAndResize.\r\nMake the op Async so we don\'t block an executor thread while waiting for the result of the box bounds check to be copied back to the host.\r\nChange: 154868460\r\n\r\n* Add contribution guidelines and standards section to CONTRIBUTING.md\r\n\r\nSeveral parts are largely based on the post by @yaroslavvb at: #7443#issuecomment-279182613\r\n\r\nFixes #7443\r\nChange: 154876045\r\n\r\n* Final draft\r\nChange: 154876563\r\n\r\n* Final draft\r\nChange: 154876646\r\n\r\n* Fix losses documentation.\r\n\r\nFix documentation of get_total_loss() to be correct.\r\nAnd add a helpful comment about a common pitfall.\r\nChange: 154876822\r\n\r\n* [XLA] Second change for HLO interpreter.\r\n\r\nExtends HloEvaluator to allow evaluation of HLO Computation or single HLO instruction\r\nwith non-constant operands, by traversing the instruction in post order and keeps track of\r\neach instruction along the way as evaluated literals.\r\nChange: 154877580\r\n\r\n* [tf distributions] Move the remaining whitelisted distributions to core.\r\nChange: 154878206\r\n\r\n* Add shape to error message.\r\nChange: 154880260\r\n\r\n* Revert ""Fix build issue when `/usr/bin/python` path is not available (#9547)""\r\n\r\nThis reverts commit 95f37ebf0bd46c328266f65bbd16d319c0efab3d.'"
427081c11b55d494b92fa836f67ad07439096115,"'[XLA] Account for computation output size correctly in HLO rematerialization.\nPreviously in HLO rematerialization, the tuple elements of the output were not counted against memory use. This change fixes this. Also, move the accounting for the parameter to the caller of HLO rematerialization because the arguments to the computation are existing allocation prior to execution and are not part of the memory allocated specifically for the computation.\nChange: 154978404'"
622e2f22041e69656531d224c7a87b9bd2299c25,'Fix some pylint errors.\nChange: 154972424'
00bfa9069e2f8456e26e09d6a7a1d0dff807e5bf,"'fixed a bug passing two flag values: show_type and show_summary, they currently override the value of show_time\nChange: 154967526'"
1414cc83d99336e88560b76c1615b7065c1e6b2c,'Add 8 comments for event_multiplexer tests. (#9629)\n\n* Add 8 comments for event_multiplexer tests.\r\n\r\n* small fixes'
a1f5abe8e1855d1d5a18870a5d3129f3c2040f15,'Fix typo in LINE#500 (#9626)\n\ncell_input_fn -> probability_fn'
550df413158b32645ca5df4dcaabc67f1a48964d,'Added -D_GLIBCXX_USE_CXX11_ABI=0 to bazel build (#9607)\n\n* Added -D_GLIBCXX_USE_CXX11_ABI=0 to bazel build\r\n\r\nFixes issues with missing symbols when compiling with GCC 5.x. See\r\nissue tensorflow/tensorflow#1419.\r\n\r\n* Split lines to keep line length under 80 chars'
cb4322c7c3731740680a30ebbf8dd62ce9d4cb9f,"'Fix tf_env_collect.sh on macos by avoiding >>& redirection (#9601)\n\nAvoid using redirection "">>& foo.txt"".\r\nInstead use ""2>&1  >> foo.txt""\r\n\r\nFixes #9587'"
c590b00b2cbd757a94594da55de89d1b66a8b064,'Fix losses documentation.\n\nFix documentation of get_total_loss() to be correct.\nAnd add a helpful comment about a common pitfall.\nChange: 154876822'
a8cf54a732d2385fa7b97495c73a91e4515e8d60,'Add contribution guidelines and standards section to CONTRIBUTING.md\n\nSeveral parts are largely based on the post by @yaroslavvb at: #7443#issuecomment-279182613\n\nFixes #7443\nChange: 154876045'
6a533a0824eb23a32b8e9c5d64ddccf08497e45d,'Fix shape mismatch between loss and weights.\nChange: 154862650'
a6dcd5e0c8e3186ea821f83bb0b1d742c054821a,'Fix several TODOs in gRPC runtime (#9531)'
aaa5600245ea328057a91752dfeaed0770136676,'Fix issue related to empty bazel.rc file.\nChange: 154840138'
883e32600ef242cb44d0702bb96f71f3140b5403,'Fix a bunch of bad links and missing docs in contrib.\nChange: 154820641'
a6fb4cc4338e4e947e9bff8fcbffaf072d14aa3e,"""Allow the output of `tf.argmax` as index type (#9000)\n\nThis fix tries to fix the issue raised in #8951 where\r\nthe following will raise a `TypeError`:\r\n```\r\na = tf.constant([1, 2, 3], dtype=tf.float32)\r\nb = tf.argmax(a)\r\ntf.Session().run(a[b])\r\n\r\nTypeError: Input 'strides' of 'StridedSlice' Op has type int32 that does not match type int64 of argument 'begin'.\r\n```\r\nThe reason for the erorr is that, `strides` is added as `append(1)`\r\nwithout type while `begin` is appended with type.\r\n\r\nThe mismatch of `strides` and `begin` causes the error.\r\n\r\nThis fix fixes the issue by cast the stride with the same type\r\nas `begin` when needed.\r\n\r\nThis issue was raised in #8951. It was also raised earlier in\r\nhttps://github.com/tensorflow/tensorflow/issues/206#issuecomment-259076860\r\n\r\nThis fix fixes #8951.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
f0faf5139819e2c6d7b0437d9e03ffce71c7d6e5,'Fix PATH error with non-system GCC (#7543). (#9482)'
880b4aca813738fe70de57bda3f408168f1d270c,"""Added atrous_conv1d and 3d. Refactored 2d. (#7545)\n\n* Added atrous_conv1d and 3d. Refactored 2d.\r\n\r\nThis commit makes following changes:\r\n* deleted most atrous_conv2d code to reuse existing tf.nn.convolution function\r\n* added atrous_conv1d and atrous_conv3d with similar API as atrous_conv2d\r\n* Added support for variable rate per dimension, e.g. for atrous_conv2d\r\n  rate=2, or rate=[2,1] does different things. Former is equal to\r\n  rate=[2,2]. rate_i determines dilation_rate in dimension i.\r\n* added strides support with same API as in tf.nn.convolution function\r\n\r\nThis commit makes more code deletions then additions. However\r\ndocumentation per function makes it appear large.\r\n\r\nTest Plan:\r\n\r\nSome simple tests to verify I haven't screwed something up:\r\n\r\n```\r\nA = np.array([1, 2, 3, 4, 5, 6], dtype=np.float32).reshape(1, 6, 1)\r\nprint(A)\r\n\r\nkernel = np.array([100, 10, 1], dtype=np.float32).reshape(3, 1, 1)\r\n\r\nwith tf.Session() as sess:\r\n    print(sess.run(tf.nn.atrous_conv1d(A, kernel, padding='SAME', rate=[2])))\r\n```\r\n\r\n```\r\nB = np.arange(16, dtype=np.float32).reshape(1, 4, 4, 1)\r\nkernel = np.array([1000, 100, 10, 1.0], dtype=np.float32).reshape(2, 2, 1, 1)\r\n\r\nwith tf.Session() as sess:\r\n    a = sess.run(tf.nn.convolution(B, kernel, padding='SAME', dilation_rate=np.array([2, 2])))\r\n    b = sess.run(tf.nn.atrous_conv2d(B, kernel, rate=2, padding='SAME'))\r\n    print(np.allclose(a, b))\r\n    print(a)\r\n    print(b)\r\n```\r\n\r\n```\r\nC = np.arange(4**3, dtype=np.float32).reshape(1, 4, 4, 4, 1)\r\nkernel = (10**np.arange(8, 0, -1, dtype=np.float32)).reshape(2, 2, 2, 1, 1)\r\n\r\nwith tf.Session() as sess:\r\n    a = sess.run(tf.nn.conv3d(C, kernel, strides=[1, 1,1,1,1], padding='SAME'))\r\n    b = sess.run(tf.nn.atrous_conv3d(C, kernel, rate=1, padding='SAME'))\r\n    print(np.allclose(a, b))\r\n    print(a)\r\n    print(b)\r\n```\r\n\r\nAlso running atrous_conv2d unit tests to verify backward compatibility.\r\n\r\n* Fixed > 80 char lines, implemented suggestions\r\n\r\n* Implemented suggestions.\r\n\r\nDeleted atrous_conv1d and atrous_conv3d.\r\nAdded note in documentation for atrous_conv2d that convolution should be\r\nused instead.\r\n\r\n* Restored short summary in atrous_conv2d\r\n\r\n* Fixed cleanup of leftover comments/mentions of atrous_conv1d/3d.\r\n\r\n* Fix undefined strides"""
0627928fb49ea03022b001e2e366f7967367eace,"'Introduce a new tool/function to visualize a pb model as requested by #8854 (#8867)\n\n* Clarify and correct Android Sections\r\n\r\nBuild Tools version updated to latest version shipping with Android Studio.\r\nAdded some comments to clarify both this and NDK Level details that have been causing confusion.\r\n\r\n* Update Build Tools Version\r\n\r\nAndroid studio uses 25.0.2 now (I think) and complains about incorrect bulid tools version in gradle. This fixes it. Not sure if this is unique to my android studio though because I have latest version?\r\n\r\n* Requested changes to WORKSPACE for Android\r\n\r\nClarification of comments to the android section at the top. Comments added to avoid common confusion.\r\n\r\n* Update Dockerfile.android to clarify build tools.\r\n\r\nI don\'t understand this dockerfile too much but I gather that this will download and use the correct build_tools_version regardless? Nonetheless, updated to 25.0.2 as a minimum and added a comment to assist troubleshooters in the future.\r\n\r\n* Update build_tools_version and add comment\r\n\r\nAdded comment to clarify build_tools_version updates and changed it to 25.0.2\r\n\r\n* Update WORKSPACE\r\n\r\n* Update WORKSPACE\r\n\r\n* Update Dockerfile.android\r\n\r\n* Update WORKSPACE\r\n\r\n* Updated for ""the"", lines and line wrapping\r\n\r\n* Create import_pb_to_tensorboard.py\r\n\r\nIn response to issue #8851, a quick tool to put a .pb model into tensorboard for visualization until a more friendly means appears.\r\n\r\n* Fix issue number\r\n\r\n* Improve formatting and style guideline adherence\r\n\r\nAction the suggested changes\r\n\r\n* Fix code on behalf of user\r\n\r\n* Add copyright and __future__ imports\r\n\r\n* Typo\r\n\r\n* Fix lint error\r\n\r\n* Change tab to space and minor MD formatting.'"
74e9ccc7d5c888a8bd9236bcf0b291f64458ac66,"'add ""frames"" op to ""contrib/signal"" (#9236)\n\n* add ""frames"" op\r\n\r\nAdded op to slice a tensor into (overlapping) frames.\r\nMay be used for signal processing purposes.\r\nInspired by `python_speech_features.sigproc.framesig`\r\n\r\n* Update array_ops.py\r\n\r\n* Update array_ops.py\r\n\r\n* Update array_ops.py\r\n\r\n* Update array_ops.py\r\n\r\n* Update array_ops.py\r\n\r\n* Update array_ops.py\r\n\r\n* Update array_ops.py\r\n\r\n* Update array_ops.py\r\n\r\n* Update array_ops.py\r\n\r\n* Update array_ops.py\r\n\r\n* Update array_ops.py\r\n\r\n* Add files via upload\r\n\r\n* Update array_ops.py\r\n\r\n* Add files via upload\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Add files via upload\r\n\r\n* Delete __init__.py\r\n\r\n* Delete BUILD\r\n\r\n* Delete __init__.py\r\n\r\n* Delete shape_ops_test.py\r\n\r\n* Delete __init__.py\r\n\r\n* Delete shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops_test.py\r\n\r\n* Update shape_ops_test.py\r\n\r\n* Add files via upload\r\n\r\n* Update BUILD\r\n\r\n* Update shape_ops.py\r\n\r\n* Update BUILD\r\n\r\n* Update shape_ops.py\r\n\r\n* Update shape_ops.py\r\n\r\n* fix buildifier complaint\r\n\r\n* Update shape_ops.py\r\n\r\n* Fix some expected linting issues\r\n\r\n* fix todo colon\r\n\r\n* Remove public visibility of signal_py, since it is brought in via contrib API.\r\n\r\n* Fix reference to default package visibility to //tensorflow'"
6155cd1ccfd1c5308efbb3691564790295da47fe,'Fixes #8666 which removes referral to a deleted function\nChange: 154754448'
81eef33cc4d03580d7f3d0636ef5bab878dca909,'Added gradients + tests for ImageProjectiveTransform (#9533)\n\n* Added gradients and tests for projective_transform\r\n\r\n* Lint fixes'
02c0a9651cc9d956af866ca40bad4b6c5f129920,'Fixed minor spelling errors and an incorrect link.\nChange: 154752409'
54d78fdb9461111af31dc2c8d08db833a6402e17,"""Fixes latex in math ops' documentation.\nChange: 154752402"""
3bdea6179da97ce309a48f31ca5f311ebf36506f,'Fix TF-Slim TFExampleDecoder link/references in README (#9349)\n\nThe slim/data README references the tfexample_decoder.py file as\r\ntfexample_data_decoder.py. This commit fixes the corresponding\r\nbroken link and adjusts any additional references accordingly.\r\n\r\nSigned-off-by: Paul Van Eck <pvaneck@us.ibm.com>'
cd2789e5e771fd01fa4bc3f00ae93f089ed30b65,'Add link for Xavier initializer paper and update example for zero_faction function (#9426)\n\n* Add link for Xavier initializer paper and update example for zero_faction function\r\n\r\n* fixed broken link\r\n\r\n* use template instead of path for doc links'
dbdc9fc2ed2e8f9b247c8b2980b0bcd079e39359,'Add should-use for commonly misused ops.\n\nFixed a bunch of invalid callers (by initially using should_use_with_fatal and looking for failing unit tests)\nChange: 154748211'
99edb91f178bb6814188ece8a8239999976a029d,'Add ibverbs support for RoCEv2 networks (#9432)\n\n* add gid to enable running on roce\r\n\r\n* fix typo\r\n\r\n* add gid definition in rdma.h\r\n\r\n* fix typo\r\n\r\n* gid changed to snp and iid\r\n\r\n* typo\r\n\r\n* increase hop_limit to its upperbound'
95f37ebf0bd46c328266f65bbd16d319c0efab3d,"'Fix build issue when `/usr/bin/python` path is not available (#9547)\n\nThis fix tries to fix the build error where `PYTHON_BIN_PATH` is not\r\nused in `tf_version_info_genrule()` (which will cause build error\r\nif `python` is not available in the `PATH`).\r\n\r\nThis could be an issue even if `python` is available yet a different\r\npython location is used in `./configure`.\r\n\r\nThis fix fixes the issue by passing `$(PYTHON_BIN_PATH)` explicitly\r\nso that same python version could be used:\r\n```udiff\r\n-      ""$(location //tensorflow/tools/git:gen_git_source.py) --generate $(SRCS) \\""$@\\"""",\r\n+      ""$(PYTHON_BIN_PATH) $(location //tensorflow/tools/git:gen_git_source.py) --generate $(SRCS) \\""$@\\"""",\r\n```\r\n\r\nSee issue description:\r\n\r\nIn one of the build machines (Ubuntu 16.04) only python3 is available\r\n(/usr/bin/python3) without python 2:\r\n```\r\nubuntu@ubuntu:~/tensorflow$ python --version\r\npython: command not found\r\nubuntu@ubuntu:~/tensorflow$ python3 --version\r\nPython 3.5.2+\r\nubuntu@ubuntu:~/tensorflow$ which python3\r\n/usr/bin/python3\r\n```\r\n\r\nAfter configure with `/usr/bin/python3`:\r\n```\r\nPlease specify the location of python. [Default is /usr/bin/python3]:\r\n...\r\n```\r\n\r\nThe following is the error:\r\n```\r\nubuntu@ubuntu:~/tensorflow$ bazel build --config=opt //tensorflow/tools/pip_package:build_pip_package\r\nWARNING: /home/ubuntu/tensorflow/tensorflow/contrib/learn/BUILD:15:1: in py_library rule //tensorflow/contrib/learn:learn: target \'//tensorflow/contrib/learn:learn\' depends on deprecated target \'//tensorflow/contrib/session_bundle:exporter\': Use SavedModel Builder instead.\r\nWARNING: /home/ubuntu/tensorflow/tensorflow/contrib/learn/BUILD:15:1: in py_library rule //tensorflow/contrib/learn:learn: target \'//tensorflow/contrib/learn:learn\' depends on deprecated target \'//tensorflow/contrib/session_bundle:gc\': Use SavedModel instead.\r\nINFO: Found 1 target...\r\nERROR: /home/ubuntu/tensorflow/tensorflow/core/BUILD:1363:1: Executing genrule //tensorflow/core:version_info_gen failed: bash failed: error executing command /bin/bash -c ... (remaining 1 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 127.\r\n/usr/bin/env: \'python\': No such file or directory\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\nINFO: Elapsed time: 3.548s, Critical Path: 0.20s\r\n```\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
0282080ef3df0187f46fa5972b8cd718d668d4f9,'Fix Community link in README (#9577)\n\nSigned-off-by: Paul Van Eck <pvaneck@us.ibm.com>'
bcf7e53d183a97f7139e3e1343eed363b69c2877,'Small fixes to op generation.\nChange: 154745991'
c71f12cadca136e72c9dcc35d984475c1c9f6497,"'Fix link in installation docs for OSX (#9556)\n\n* Fix link in installation docs for OSX\r\n\r\n* Correct anchor, fix one more place in file.'"
a48d2ae1e5b6fb656839c8c9f2b353b14d842bd2,'fix some trivial typos (#9565)'
99cc759e0ba0ae056d0d8f991b66e99cf4f2a91a,'Fix misspellings in tensor flow tools (#9574)'
fcfb5482da6da3221f8ea843829c24a289c4a4c8,"'Update ""Using TensorFlow via Docker"" README to mention memory limits.\n\nFixes #7861\nChange: 154721550'"
9a68fb3812477751e5651477281d3eb003d5e509,'Docs fix for sdca_ops.cc\nChange: 154710766'
203b36898e14f0f90fd4ae90b8c5535182c86b9a,'Merge commit for internal changes\n\nFixed conflicts by taking --theirs:\n\ttensorflow/contrib/seq2seq/python/ops/attention_wrapper.py\n\ttensorflow/docs_src/install/install_mac.md\n\ttensorflow/tensorboard/components/tf_tensorboard/tf-tensorboard.html'
f582fdcfe77785522675653591757121dfbe7bd6,'Fixed a couple of typos.\n\nThis fix fixes a couple of typos:\n```\ns/unneccessary/unnecessary/\ns/accidently/accidentally/\n```'
1d679a04765c4cfa271335483fc28270834f43be,"'Fix broken links to images, make all image links absolute.\n\nFixes #8064, fixes #7685.\n\n(after docs republish)\nChange: 154614227'"
c2de8f94051e10ceabc5aff6d0ed6f6e3a79ac61,'use test fixture for all reshape operations'
0a9b39caefd437fec742ae48b25061abd6e2699b,"'When allocating GPU constants, check to see if the destination\ntensor is intialized early (because we ran out of memory) and report\nit as such.\n\nFixes #7025.\nChange: 154603030'"
8acd664fa1dfbaafe6399bdbb969eddd9446d6a5,"'Fixup tf.contrib.labeled_tensor.select to handle tuples properly\n\nYou can use a tuple to label a point along an axis, so tuples should not be\nconverted into lists of points for indexing.\nChange: 154603014'"
be88359aa1cd5e0221427a3626e0f690239b89de,"'Remove or warn about nn_ops accidentally registered to ints\n\nSeveral nn_ops were registered for ints accidentally.  Some of these even have\nkernel registrations for ints which do very strange things.  The ops without\nkernels registered have been restricted to floating point types, and warnings\nhave been added for those with kernels.  Other ops were registered with more\nfloat types than they had kernels for.\n\nFixes #9317.  Fixes #5539.\nChange: 154595629'"
561fb9b89f49fe12e594f093a7073568c74910ef,'Document that tf.train.batch is nondeterministic\n\nFixes #9441.\nChange: 154593819'
4ef4a1231d9db8e965f2319f9aa6af5b61b7580e,'Fix losses.get_regularization_losses documentation to avoid implying losses are Variables.\nChange: 154593246'
998baa0f1fa8aee4382be1a00e4ae9ee70a6b194,'Added expalanation when to use embedding_lookup_sparse instead of sparse_tensor_dense_matmul.\n\nFixes #8131\nChange: 154591681'
863048121dc594acee3bcd869ab6dfef3109ce93,'Documentation fixes for TF Layers tutorial (see #8301)\nChange: 154591046'
3f68ed17518cc3190ac86b38f4268b5d5b7f0b0d,'Improve docstring on strided_slice to refer users to easier function.\n\nFixes #5761\nChange: 154590417'
71319c58a3436fbd7081e49c52878dd1ba1772b5,"'Clarify candidate sampling ops documentation\n\nRemoves incorrect ""per batch"" language.\n\nFixes #3824.\nChange: 154587896'"
59901f8e51bceb48f2e260caad45d633f0f3161b,'Small comment fix.\nChange: 154586226'
a4b352bfddd518b540c30e456f3bc0027ba9351f,"'Merge pull request #9520 from kant/patch-1\n\nFix minor typo -- ""pipelinining"" -> ""pipelining""'"
9e10fc4c311a659eda8e9cfadb7f5192c909db55,'fix build error'
8352c05cc637b2635f326189ba11ce6254129493,"""Fix shape documentation for tf.gather_nd and tf.scatter_nd\n\nThe new version of the shape documentation for both ops is hopefully correct and doesn't introduce temporary variables.  Additionally, tf.scatter_nd warns about nondeterministic behavior if indices contains duplicates.\n\nFixes #8245.  Fixes #8102.\nChange: 154581230"""
f3a86a0818c90e618b3fb3026286dbc2f5b1389c,'Fixes bug in state_ops.assign for PartitionedVariables\nChange: 154577958'
f635c181204b7e46d07c8f3457b7d1fbd7b95b57,'Fix formatting on Estimator __init__ docstring.\nChange: 154562449'
0c08c585591152046ca1e6781d1f2fa573427dfc,'Fix links to tensorflow/models\n\nFixes #8809\nChange: 154553141'
00a8b7b492e8360633b73a033c65edbdb6d1aca9,"""Fix SummaryAtEndHook when used with tf.learn's Experiment\nChange: 154548095"""
141e8d652eb113319301fff6d30452b01903b771,'Fix call to with_dependencies.\nChange: 154501275'
9d983a97e78b862efc0aaf0627cae19fe2a2b5db,"'Fixes alignment issue with nearest neighbor interpolation when align_corners=True. In particular, we change floorf() to roundf() in discretizing the continuous coordinates when align_corners=True.\nChange: 154492447'"
653c7dc2508556a5355a1341196c37d27cba1681,'[XLA] Fix CHECK failure in rematerialization.\ncl/154253719 added a CHECK which fails if a value (LogicalBuffer) is used more than once by an instruction. This resulted in duplicate values in a list of uses.\nChange: 154485725'
b8e4c4485894daa6e4f2bb3206428cb5421689f3,'Fix the shape function of the StackPush op\nChange: 154458671'
7be3d9ee95e59f28126e3b9370fba738253fdc3b,"'[XLA] Various HLO naming fixes.\nThis change includes a number of fixes to HLO instruction especially fusion instructions. Specific changes:\n\n(1) Remove HloInstruction::set_name and HloComputation::set_name. These methods were a bit dangerous as it made easy to create non-unique HLO names. Replace it with UniquifyName which renames the object to a unique name based on its current name.\n\n(2) Change the name of the fusion computations to ""fused_computation"". Previously it was named after the root.\n\n(3) Change naming of fusion parameters. They are now named after the unfused-instructions whose values they represent. Also, previously superfluous "".1"", "".2"", etc, could be added to the parameter names. This change fixes that.\n\n(4) Change naming of instructions in fusion computations to be identical to the instructions they were cloned from. Previously all fused instructions would end up having a .clone suffix.\n\n(4) If HloInstruction::Clone() is called with an empty suffix, then don\'t add a ""."" to the name.\nChange: 154454938'"
7468625dc86721cbdadfbf0aabf6d2e4efe78f35,"""Make binary ops delegate to rhs when tensor conversion fails (#8219)\n\n* Make binary ops delegate to rhs when tensor conversion fails\r\n\r\n* Fix test file's doc string\r\n\r\n* Add comment"""
1fb1a0798ffe6552a62937f6c739e2313d5903cf,"'Fixing anaconda install command (#9277)\n\n3.6 is the standard python version of anaconda. In order to get tensorflow installed correctly, version 3.5 is needed. Passing the exact version of python to the anaconda environment is necessary.'"
6a1825e2369d2537e15dc585705c53c4b763f3f6,"'Implement atan2 (#9276)\n\n* Add atan2 ops.\r\n\r\n* Correct arguments from copied code.\r\n\r\n* Fixed CUDA define, changes arguments and docstring.\r\n\r\n* Added some tests for atan2.\r\n\r\n* Fixed inf for python 2.\r\n\r\n* Add atan2 to public API.\r\n\r\n* Modify argument names and docstring.'"
a462e0f1911ecbf0650faf5ef7ec543801848c54,"'Branch 154338128 (#9468)\n\n* Improved support for lookup tables. These tables are often initialized from large files stored on disk, and can take tens of minutes to load: increased the initialization timeout to give grappler enough time to load them.\r\nChange: 154303608\r\n\r\n* Add eager (static) checking to assert_equal when constant values are available.\r\n\r\nThis raises errors during graph creation, when possible, instead of at runtime.\r\nChange: 154304392\r\n\r\n* Add tf.log_sigmoid\r\n\r\nThis is a numerically stable version of tf.log(tf.sigmoid(x)).  It\'s just\r\n-tf.nn.softplus(-x), but it\'s easy to add and the identity is easy to mistype.\r\n\r\nRELNOTES: Add tf.log_sigmoid(x) = tf.log(tf.sigmoid(x)) = -tf.nn.softplus(-x).\r\n\r\nFixes #3719.\r\nChange: 154308666\r\n\r\n* GrapplerItem is a struct and not a class\r\nChange: 154319534\r\n\r\n* Migrate tf_storage and tf_globals to d3v4.\r\nChange: 154319656\r\n\r\n* Allow SVStepCounter to measure progress for other counters beyond global_step.\r\nChange: 154326389\r\n\r\n* Provide a user-defined default constructor to grappler::ItemConfig to avoid compiler error\r\nChange: 154331360\r\n\r\n* [tf contrib seq2seq] Update BeamSearchDecoder + AttentionWrapper API:\r\n* BeamSearchDecoder no longer tries to pass a tiling operator to the cell.\r\n* Instead the cell must ""know"" about the fact that batch_size is now bigger.\r\n* Much more explicit and careful error messages if batch sizes don\'t match.\r\n* Added helper function to tile the batch by beam_width.\r\n* AttentionWrapper now accepts an initial_cell_state argument (it\'ll pass the value back through when zero_state() is called).\r\nChange: 154333600\r\n\r\n* AllocationRegistry: only check fail if two different allocator types\r\nare defined for the same name and priority.\r\nChange: 154333776\r\n\r\n* Add a conversion from xla session module to a list of node structure as a step of xla computation transformation\r\nChange: 154337650\r\n\r\n* tfdbg: Improve the way uninitialized tensor values and DT_RESOURCE tensor values are displayed\r\n\r\n1. Fix the bug wherein DT_RESOURCE tensors are displayed as ""Uninitialized tensor"", even if they are initialized.\r\n2. For truly uninitialized tensors, provide more information by printing the TensorProto, which contains the dtype and shape.\r\nChange: 154338128'"
5c2c39d19e64634dc9a3d33fec183cf324289355,'Fix two tiny bugs in cudnn_rnn_ops\n\n1. test cudnn_rnn_ops_test.py:testSaveRestore was broken.\n2. a tiny bug that hardcoded is_training in GRU model.\nChange: 154347435'
05c77baecdafb2a44d3788b369a92cec66157162,"'tfdbg: Improve the way uninitialized tensor values and DT_RESOURCE tensor values are displayed\n\n1. Fix the bug wherein DT_RESOURCE tensors are displayed as ""Uninitialized tensor"", even if they are initialized.\n2. For truly uninitialized tensors, provide more information by printing the TensorProto, which contains the dtype and shape.\nChange: 154338128'"
7c5defbff92d51bc43ca9c918179c0c29e8a8243,"'GridRNN cell uses tuples for output and states (#6832)\n\n* use tuple for states and output of gridRNN cells\r\n\r\n* code style update, change LSTMCell to use state_as_tuple\r\n\r\n* fix line continuations and example code in doc string\r\n\r\n* checking for None explicitly'"
9845d0e822f1a8ec455507f48541b379c9778829,"""Add tf.log_sigmoid\n\nThis is a numerically stable version of tf.log(tf.sigmoid(x)).  It's just\n-tf.nn.softplus(-x), but it's easy to add and the identity is easy to mistype.\n\nRELNOTES: Add tf.log_sigmoid(x) = tf.log(tf.sigmoid(x)) = -tf.nn.softplus(-x).\n\nFixes #3719.\nChange: 154308666"""
7bd133cd21be98eaf261f664c81bbd8c1837d1c5,'Add tensorflow/core/kernels/function_ops.cc to Makefile (#9459)\n\nThis should fix the breakage in Makefile-based builds after 858e0afcc45c39b6428bf82ab1444323e925cfd8.'
d133dc0aa766571967d68c1a9eff5e3a3aa4f79d,"""Usability bug fix: Print out expected input types, output types, and\nname of op in error message.\n\nBefore, you got:\nTypeError: Inputs are not compatible with input types\n\nBut you have no idea what the type mismatch is, or even worse,\nwhat the op is.\n\nNow you get:\n\nTypeError: In op 'Foo', inputs are not compatible with input types. expected types: [tf.string_ref, tf.string, tf.int64], input types: [tf.string, tf.string, tf.int64]\nChange: 154235334"""
0777da4faf9e5a1bed1c29356a7d129ec1d33340,"""Bug fix to checkpoint_utils.init_from_checkpoint().\n\nPrior to this change, attempting to restore variables under a specific scope\nwould also restore variables under other scopes whose names shared the same\nprefix, mangling the names slightly. For example, if a client tried to restore\nvariables under 'my_scope/' and there was a variable named 'my_scope_1/foo' then\nthe function would try to restore a variable with the mangled name 'my_scope/1/foo'.\nChange: 154229485"""
1d8ac37322983c71f02d0300766740172ad00485,'Fix link way in xla_tf_util_test\nChange: 154226057'
71425b5713494546cf0e2471d24dcd83e5765473,'Split graph_to_functiondef into its own library.\nAdd a non-const overload of Graph::input_node().\nFix comment in description of Merge op.\nChange: 154225918'
c19dd491e57c6ed8f4aedec69d6653478f5824ee,'Fix queue runner test flakiness. The cost graph may be requested before cost_graph_ is stored.\nChange: 154224628'
f213edbe471c2d22ceff6c5d2ef5e626e555d90b,'Close FileWriterCache before moving training directory in estimator_test (#9281)\n\nFixes #9185\r\n* Make sure clear() close()s filewriters.\r\n* clear FileWriterCache before moving training directory\r\n* Add close() to FakeSummaryWriter'
311734a965b374ceb7a22d3b7331477c2402edec,'Fix bug with optimizer not propagated from KernelLinearClassifier constructor.\nChange: 154190471'
d48ef8f6b743c715e8209e7faf4d2c46ace57046,'Fix doc for CTC_Greedy (#8690)\n\n* Fix doc for CTC_Greedy\r\n\r\n The output is the minus the sum of the logits and the logprobs\r\n\r\n* Corrext sentence'
a2276eefa2770e69298f7a03180de2505d791826,"'[XLA:HLO] Avoid stuttering the clone suffix in HloInstruction names.\nPreviously an HloInstruction cloned multiple times would have a name like\n""foo.clone.clone.clone."". Change this to ""foo.clone3"" where the number is the\nnumber of times the instruction has been cloned.\nChange: 154095902'"
866087d2257dc80695a29a04d48b2331570fe819,'Clarify scope argument documentation tf.get_collection. Fixes #9314. (#9418)'
f6cb79b53c6d26173d1d596d75a9da415f5ebcd0,'Fix persistent memory tracking for queue ops.\nChange: 154081725'
7cc3f9eb24516b70e80a2d679729843e00860df6,"'Migrate the tf_graph_common component to use webfiles\n\nMove all TypeScript files to be within the same directory. Otherwise, the build tool outputs JS files in subdirectories, which breaks links in HTML files.\n\nFixed some type-related issues to allow for compilation.\n\nAdded the noResolve flag to the TypeScript compilation command. This prevents the compiler from following triple slash references within typings (such as the one in polymer.d.ts).\nChange: 154009186'"
4fa785e5d016bad7f2cca9bb5fc69ee2ed9f38c5,'Use slash after node prefix. It produces better organized graphs in tensorboard.\nChange: 153959030'
34c738cc6d3badcb22e3f72482536ada29bd0e65,'Merge pull request #9386 from schaber/schaber-patch-1\n\nFix typo in encoders.py documentation'
921947028277dd1dbbed0ac1e64a41fcce12cc61,'Improve ISSUE_TEMPLATE.md (#9385)\n\n* Improve ISSUE_TEMPLATE.md\r\n\r\n* Fix system information section'
092172c32cba7e38d6308191cc6e4f6b46a64a1f,'Fix typo in encoders.py documentation'
640963a1e106d8a36d4a18cb5d27d0f8e6f5db7e,'Merge pull request #9353 from wydwww/master\n\nFix typos'
92675de336721b0d03902a0fa5a07685a3269162,'Merge commit for internal changes\n\nManually fixed conflicts by accepting --ours:\n\ttensorflow/contrib/slim/README.md\n\nManually fixed conflicts by accepting --theirs:\n\ttensorflow/contrib/learn/python/learn/datasets/mnist.py\n\ttensorflow/contrib/verbs/BUILD\n\ttensorflow/contrib/verbs/grpc_verbs_client.cc\n\ttensorflow/contrib/verbs/grpc_verbs_client.h\n\ttensorflow/contrib/verbs/grpc_verbs_service.cc\n\ttensorflow/contrib/verbs/grpc_verbs_service.h\n\ttensorflow/contrib/verbs/grpc_verbs_service_impl.cc\n\ttensorflow/contrib/verbs/grpc_verbs_service_impl.h\n\ttensorflow/contrib/verbs/rdma.cc\n\ttensorflow/contrib/verbs/rdma.h\n\ttensorflow/contrib/verbs/rdma_mgr.cc\n\ttensorflow/contrib/verbs/rdma_mgr.h\n\ttensorflow/contrib/verbs/rdma_rendezvous_mgr.cc\n\ttensorflow/contrib/verbs/rdma_rendezvous_mgr.h\n\ttensorflow/contrib/verbs/verbs_server_lib.cc\n\ttensorflow/contrib/verbs/verbs_server_lib.h\n\ttensorflow/contrib/verbs/verbs_service.proto\n\ttensorflow/contrib/verbs/verbs_util.cc\n\ttensorflow/contrib/verbs/verbs_util.h\n\ttensorflow/core/distributed_runtime/rpc/grpc_server_lib.cc\n\ttensorflow/core/distributed_runtime/rpc/grpc_server_lib.h\n\ttensorflow/core/framework/function_testlib.cc\n\ttensorflow/core/graph/mkl_layout_pass.cc\n\ttensorflow/core/graph/mkl_layout_pass_test.cc\n\ttensorflow/core/graph/mkl_tfconversion_pass.cc\n\ttensorflow/core/graph/mkl_tfconversion_pass_test.cc\n\ttensorflow/core/kernels/fixed_length_record_reader_op.cc\n\ttensorflow/core/kernels/mkl_concat_op.cc\n\ttensorflow/core/kernels/mkl_conv_grad_bias_ops.cc\n\ttensorflow/core/kernels/mkl_conv_grad_filter_ops.cc\n\ttensorflow/core/kernels/mkl_conv_grad_input_ops.cc\n\ttensorflow/core/kernels/mkl_conv_ops.cc\n\ttensorflow/core/kernels/mkl_fused_batch_norm_op.cc\n\ttensorflow/core/kernels/mkl_lrn_op.cc\n\ttensorflow/core/kernels/mkl_relu_op.cc\n\ttensorflow/core/kernels/mkl_reshape_op.cc\n\ttensorflow/core/kernels/mkl_tfconv_op.cc\n\ttensorflow/core/kernels/sparse_tensor_dense_matmul_op.cc\n\ttensorflow/core/kernels/sparse_tensor_dense_matmul_op.h\n\ttensorflow/core/kernels/sparse_tensor_dense_matmul_op_gpu.cu.cc\n\ttensorflow/core/ops/array_ops.cc\n\ttensorflow/core/ops/nn_ops.cc\n\ttensorflow/core/util/mkl_util.h\n\ttensorflow/examples/tutorials/mnist/mnist_with_summaries.py\n\ttensorflow/python/kernel_tests/reader_ops_test.py\n\ttensorflow/python/kernel_tests/sparse_tensor_dense_matmul_grad_test.py\n\ttensorflow/python/kernel_tests/sparse_tensor_dense_matmul_op_test.py\n\ttensorflow/python/ops/io_ops.py\n\ttensorflow/python/ops/nn_impl.py\n\ttensorflow/python/ops/sparse_grad.py\n\ttensorflow/tensorboard/gulp_tasks/vulcanize.js\n\tthird_party/jemalloc.BUILD'
3c0900a49c11b7975c7accc026153bbc2001c018,'Fix python3 build caused by recent RNNCell refactor.\nChange: 153902768'
e58225b6ede5f3ecfe0607327b2f24d10b08dc1a,'Support multi-dimension weights for multi-class metrics.\nFix weighted loss.\nFix some lint errors.\nChange: 153887559'
3bf7bc9ebb3168791d8f217f46f6413888ccea92,'Python 3 compatibility bugfix in tensorboard/scripts/generate_testdata.py.\nChange: 153863140'
54cda0a2650f6301977793262b9f4c1c607ed5c5,"""Fix typo in 'density'.\nChange: 153861823"""
7ee26f7e144849d07e985b0a1c8abf7bf36adb27,'Fix some ClangTidy warnings in third_party/tensorflow/core/common_runtime.\nChange: 153861629'
48d9915ebca770b40c4497a13c3edb87b6b042d0,'Merge pull request #9352 from szpssky/patch-1\n\nfix slim README error'
b0594e1b82180efe5b1d0558b4410137f3974b93,'[XLA] Fixes some div-by-zero bugs.\nChange: 153795265'
9fd28d29ebb03597c03d205696213b1d5d7ac4d1,'fix typos'
5f606e4d306f8cd637ff2509326278e6096a6e6f,'fix slim README error\n\nvgg.vgg_16(images) will return two values.'
623dd8361325d22d1487b6a2ec67c54065dd726b,'Merge pull request #9348 from wangyum/tflean-fix-doc\n\nFix tflearn doc incorrect comment'
c1bd0fe248c63b58b0b663a8c8529791354fdf75,'- Bug fix in ShapeInference\n - CommaSeparatedString and VectorString added to xla_util.h\n - ReferenceUtil can now do more general Pad ops.\nChange: 153782516'
35d358f92dad1aaafd6afe4995db7b1db0e53d13,'Fix serious bug which broke TensorBoard when there are many scalar runs and few text runs.\nChange: 153780710'
7c068a3784d797ebdfb8f768ecb486479cbc4b93,'Fix _get_arguments to work with partials.\nChange: 153776958'
fa25fcbbc9c3c0b9dea4c6bc0bf26ac10f790125,'Fix issue where TensorBoard run selector can become non-responsive.'
7a49d4667c059823dff4db9822b5b9019fde8824,'Merge pull request #9350 from dandelionmane/fix-run-selector-bug\n\nFix issue where TensorBoard run selector can become non-responsive.'
f942e8c21658e20cdba20b3bba025a71cbb5e60a,"'Fix typo in ""First TensorFlow program"" from open source README\n\nThis is sort of pedantic, but the Python prompt prints strings with quotes.\nChange: 153772799'"
b853b2172d3811f098d81fd315da483fd5190777,'Fix issue where TensorBoard run selector can become non-responsive.'
b728b749402309912d33f365bb349db0897690bf,'Merge pull request #9291 from asimshankar/r1.1-9074\n\nDocs: Fix #9074 in release branch'
a08456e39eb4d5a3d80dda922a08c796769da9c6,'Fix incorrect comment'
20a52139efd7ddf34740db99d993c66976fc94c1,"'Add unreduced NONE, and reduced MEAN options for losses.\nRemove ""WEIGHTED_"" prefix from other Reduction constants.\nChange: 153758104'"
c0088ae3d2541d8e00fc238377dd802a811624f3,"'[XLA] Fix the parameter instruction printing issue\n\nAppend the parameter number to the fusion parameter name, and use the parameter\nname rather the instruction name in creating the new parameter.\n\nShow the paramameter number when printing out parameter instructions.\nChange: 153752424'"
54ce98f636a927eb8685ba743fd29f111f552e93,'Fix missing assertion methods in core_rnn_cell_test.py\n\nThe assertEmpty and assertNontEmpty methods do not appear to be universally available across the environments that TF is tested on.\nChange: 153751634'
dcb1e2166ae4cb321e11644acc9bc909c05446e9,'Fix const-ness of master_env.\n\nA recent change in grpc_server_lib removed const from\nthe master_session_factory function. This change fixes\nmaster_env.h to accurately reflect the new type\nsignature.\nChange: 153751309'
60e803ae8a862b6ced7e84c4d9c3077d6297d010,"'Vulcanize TensorBoard (for the pip package)\n\nThis new version fixes a bug in the graph and embedding projector dashboards. They had been initialized before being added to the DOM, which is problematic because initialization of those dashboards depends on properties of the DOM.\nChange: 153495107'"
817533db9b17b5456b85ba9187df7262c2c9c453,'[XLA] Fix incorrect comments\nChange: 153737501'
92bf4b39274d6da59ddf710f5ef5be2e9039a99e,"'Fix graph_transform documentation:\n  - remove \\ from within strings\n  - remove :0 from inputs and outputs, so fold_constants works\n  - make sure fold_(old_)batch_norms runs before quantize_weigths\n    and round_weights.\nChange: 153728959'"
733af539ea1f847de2f209452e9a6120f56315bd,'Fix uninitialized local variable (#8783)'
cbebbc032971e44522d1e76b3be670cc58feaa72,'Fix no attribute prediction_key error (#8758)'
2cd2c124488f596e255f35b0c22f72f65b4f7d5d,'Merge pull request #9293 from richardjdavies/fix-multirnncell-call\n\nForce new instance creation in MultiRNNCell'
0557e8f90c1a2f027f4561c70558c6c836138058,"'Fix typo in LINE#471 (#9323)\n\nchange cell_input_fn to probability_fn, bug reported in https://github.com/tensorflow/tensorflow/issues/9312'"
149553af786d05a7c7c07198acacf3623a2cc3b1,'libtensorflow: Fix typo\n\nWindows: Fix typo in C API binary release script.\n(Not that the C API binary release for Windows is ready to release yet)\n\nLinux/Mac: Fix typo in libtensorflow_proto.zip location\nChange: 153656805'
fd14d0ac6ab5df924ec63f9cf073b384863d0f17,"""Support the whence parameter in GFile's .seek() to match Python's file\nsemantics. Also rename position to offset to match Python's file parameter\nnaming.\n\nFixes numpy.load() from gfile.\nChange: 153655962"""
bcb77007ad9d0be3d6b5e7ff8338f982d99c1a7a,'Add new hexagon ops and fix hvx ops support checker\nChange: 153650245'
dd40e9840da886c2a8b296146c709907c0dd3d85,'Ibverbs-based RDMA path (#8943)\n\n* initial check-in\r\n\r\n* modifications according to review feedback\r\n\r\n* fix BUILD file\r\n\r\n* Update BUILD\r\n\r\nAdd missing comma in verbs/BUILD file\r\n\r\n* Buildifier fix\r\n\r\n* Buildifier fix #2\r\n\r\n* added #define TENSORFLOW_USE_VERBS\r\n\r\n* fix defines()\r\n\r\n* buildifier fix\r\n\r\n* link option fix\r\n\r\n* fix TENSORFLOW_USE_VERBS'
242e0fc80a800fb5caec7ebcbea2cad3ec69f598,'Fix bug in resource variable to/from proto\nChange: 153626178'
e1d5eb3fc789066d5cbedfffbcde2dbabb7ad98d,'Fix timeout propagation in distributed runtime.\n\nThe following fixes were required:\n- In grpc_session.cc we use the config.operation_timeout_in_ms value if one is not given in RunOptions.\n- We provide the default timeout value from the config in grpc_server_lib to the LocalMaster and GrpcMasterService. This allows them to use this value in the CallOptions.\nChange: 153624168'
779aae1211204422636f468e8fcbbf3a1ab632db,"""[tf contrib rnn] Bugfix: DeviceWrapper's zero_state gets created on self.device.\nChange: 153607222"""
1f210ad7c2a81fe27196dd1a85c9bb92f19bc94a,'Rejigger locking in master_session & ReffedClientGraph\n\nThis change simplifies locking and avoids reader-writer contention\nin MasterSession::Extend by allowing to execute without waiting\nfor all concurrent Execute calls to quiesce.\n\nFixes #9136\nChange: 153600372'
b1e174e4204e0661c9060dddd8ea7513cf7f9915,'Merge pull request #9295 from dtrebbien/patch-5\n\nFix a small copy/paste typo in a comment'
8b6c3c8e8817b64e83ba3a7379935d0ea9232605,'Fix error messages for missing or unspecified partial run feeds/fetches.\nChange: 153568192'
466baaa93830b42817478c2a09164bf42c58dd82,'Fix a small copy/paste typo in a comment'
ea0c7558390344194428cd8c3b77457345ae6425,"'For SummaryAtEndHook, move FileWriterCache to after_session_run function in\norder to fix the b/37347760 for text summary plugin temporarily.\nChange: 153506993'"
15c475463cf48b58f42ef81df8687fae79bd9c60,'[XLA] Fix the indentation for printing fusion computation.\nChange: 153502127'
8cabc326b0081fb9015f6d70f30512f20aa0fba5,'* Properly compute Hermitian matrices in self_adjoint_eig tests.\n* Disable self_adjoint_eig tests for complex types until we fix crash in Numpy code when compiling with nvcc or cudaclang.\nChange: 153500103'
e25925838ea1e12f865926d93147f265665a195a,"'Vulcanize TensorBoard (for the pip package)\n\nThis new version fixes a bug in the graph and embedding projector dashboards. They had been initialized before being added to the DOM, which is problematic because initialization of those dashboards depends on properties of the DOM.\nChange: 153495107'"
c5f99a9973290964e2e3cb2508c9087611ae9ca3,"'Added ""hop_bytes"" option to FixedLengthRecordReader (#8970)\n\n* Add overlap option to fixed_length_record_reader\r\n\r\n* fixed bug(typo)\r\n\r\n* Add unit test for overlap option of fixed_length_record_reader_op\r\n\r\n* Add unit test for hop_bytes argument\r\n\r\n* fixed python import order, add comment for the new checking condition'"
746fd0c4cc24f8797e8e93ac0e519d682755305e,'Docs: Fix #9074\nChange: 153414133'
ba0ab4c09a0746d447bfcc76f8de4cfaf2bc1c57,"'Remove most of d3 references from projector and fix many lint errors along the way (mostly let => const)\n\nRemaining is random normal variables, and color scales.\nChange: 153467106'"
cf0eef65fa8fb04ef0788f460948f9f002f3355f,"'Merge commit for internal changes\n\nFixed following conflicts taking --theirs (i.e, internal):\nISSUE_TEMPLATE.md\ntensorflow/contrib/cmake/CMakeLists.txt\ntensorflow/contrib/cmake/tf_c.cmake\ntensorflow/contrib/cmake/tf_python.cmake\ntensorflow/contrib/cmake/tf_shared_lib.cmake\ntensorflow/contrib/image/kernels/single_image_random_dot_stereograms_ops.cc\ntensorflow/contrib/image/ops/single_image_random_dot_stereograms_ops.cc'"
fdbeae662c27b0a30d598bd373e1fff07b4905ef,'Merge pull request #9265 from ragulpr/master\n\nfix style_guide.md my_op-example'
98f9dd67f7cfe339a3794bee9fa0b83a69462ff6,'Ensure that we merge config provided to tf.train.create_local_server with config provided to Session constructor.\nFixes #8982.\nChange: 153433741'
cca1b71352d246fc292d6e6b9cda63810c659c83,'Expose `get_name_scope` and fix example docstring.\nChange: 153420717'
822b60144146d97b544d8c7bec7f4ef4c68698d5,'Add BestSplits op to common windows installation problems. (#9279)\n\n* Add BestSplits op to common windows installation problems.\r\n\r\n* Fix stackoverflow url.\r\n\r\n* Add an entry about SSE instructions'
60fb0a8c11f980fd87a6eded122191dd89c11199,'Including the grpc++/create_channel.h only when gRPC support is enabled (#9267)\n\n* Including the grpc++/create_channel.h only when gRPC support is enabled\r\n\r\n* fixup for identation'
4eaf53c278d46d23655fe9c420d08103c8b82112,'Adding MKL op for reshape and several fixes to other ops (#9228)\n\n* Bug fixes to max/avg pooling\r\n\r\n* Added fixes for unexpected behaviour of OP_REQUIRES\r\n\r\n* Fix to get common_runtime/function_test to pass with MKL. Removes eigen label from test function when compiled with mkl flag\r\n\r\n* MKL Reshape\r\n\r\n* MKL Reshape (by Amin)\r\n\r\n* Bug fixes to max/avg pooling\r\n\r\n* Added fixes for unexpected behaviour of OP_REQUIRES\r\n\r\n* Fix to get common_runtime/function_test to pass with MKL. Removes eigen label from test function when compiled with mkl flag\r\n\r\n* MKL Reshape (by Amin)\r\n\r\n* Fixed duplication caused during merge\r\n\r\n* Modified Mkl Layer and Op Registry\r\n\r\n* config for mkl\r\n\r\n* Addressed PR comments\r\n\r\n* Mkl ops ordered alphabetically in tensorflow/core/BUILD'
5eb25c7da590e83c55b7993656481cd27c0e1c71,'Docs: Fix #9074\nChange: 153414133'
a8b175a7d79032308f147351a85039bc3a29694a,'Improve graph and session management for retrain.py\n\nAlso fixed existing lint errors.\nChange: 153410743'
554b4ab833520e3ee6fc84b146e300bb2fcdd58b,'fix filter position for Im2Col (#9181)\n\ncac52fdebb292bc7706383d07c7987be66882085 fixed the filter position for\r\nthe reference class but the same problem exists in the Im2Col class.\r\n\r\nThis patch makes the calculation of the filter position consistent\r\nwith the reference quantized class and the gemm/fused conv_ops\r\nclasses.'
6856a110178f67dedcfca366cce356766a25d80e,'Fix bug where if all data=0 then the y-scale does not display properly.\nChange: 153407154'
9d3efca71e9a6250802dcdc3d19152f3acf0c675,'Pass min and max attributes to FakeQuantWithMinMaxArgsGradient.\nFixes #6616.\nChange: 153394867'
3d0380476b16d8180cd89c34b1b9e7d6e7275e7f,'Fixed GreedyEmbeddingHelper docstring.\nChange: 153388906'
ea910532bc21e265d5af7bdcd63d836e4204acf2,'Fix ShapeTree operator= to actually work.  Also added some tests.\nChange: 153385325'
596bd1f6057d6e3e8b8dadf31f7b262b0bee75af,'Merge pull request #9268 from zjj2wry/fff\n\nFix code annotation'
cfa63bccfb8196c9097d26e82f5ce3fac694a03c,'Fixed jemalloc build on linux ppc64le when it is enabled while configure (#9214)\n\n* Fixed jemalloc build on linux ppc64le when it is enabled while configure\r\n\r\n* Review comments incorporated\r\n\r\n* Fixed build issue caused after rebase from the latest master\r\n\r\n* Update jemalloc.BUILD'
da29a61b43ff58f4aea792069e96d9944257f0e0,'Fixing mistakes made to bzl file and configure.'
04efa1e4b49aba28335b343313778c75c65d5f0e,'Fix code annotation'
7c876d2476b634edac5e3bbfb28edb627527b275,'Update batch_norm_benchmark.py\n\nFix typo'
0e1716213d3a6d03f65b0d6533d41886f2ec0369,'fix style_guide.md my_op-example\n\n2 Typos causes errors:\n\n-tf.add_to_collections -> tf.add_to_collection\n-adding missing indentation (0 -> 2 spaces)\n\nResulting my_op-chunk tested with tf. version 1.0.1\n\nSee:\nhttps://www.tensorflow.org/community/style_guide\nFor the erronous version.'
a241fe8ec5bc46e06c48c3ad609f00bc7a5030d9,"'[XLA] Improve ShapeTree implementation.\n\n1) Ensure PODs are zero-initialized via the shape-constructor; i.e.\n   ShapeTree<bool>(shape) has all data items initialized to false.\n2) Add a default constructor, which makes it possible to use operator[] in a\n   FlatMap<_, ShapeTree<_>>. This creates a tree where !ShapeTree::IsValid.\n3) Change the representation so that the root node holds the shape by value,\n   while non-root nodes don\'t hold a shape. This is ""cleaner"" than holding an\n   unused shape in non-root nodes, and also simplifies the implementation.\n   There is now a struct internal::ShapeTreeNode only used by ShapeTree.\n4) Simplify constructors to delegate to a single implementation.\n5) Fix bug in ShapeTree(Shape shape, T init_value) constructor, which caused\n   the existing code to only work for T=bool.\n6) Fix documentation to indicate that a T data value is held for every node in\n   the tree, not just leaf nodes. That was the original behavior, which is\n   unchanged in this CL; it\'s just the documentation that was wrong.\nChange: 153305130'"
b7f85a74058fc63ccb7601c418450ab934ef5953,'Merge pull request #9252 from zjj2wry/fix_description\n\nfix package description'
4d5ee0169f63c4b37ff76efddc0f7956870e4184,'Merge pull request #9244 from eklitzke/warn\n\nfix warning about comparing signed/unsigned types in auto_parallel.cc'
9594624658f14a5cb94a7d4d9258c1dc013a493b,'fix package description'
0e714992102ccc4bd221d117833fa133e026742f,'fix warning about comparing signed/unsigned types'
70b73ac3acae7496281bd8c3bea15b75c5f89961,'fix description (#9238)'
94fcc167ac19f8600312707f470e8561365e97a4,'Fix _get_arguments to work with partials.\nChange: 153215155'
5774625bc73ad2e4da38e0d40288936a68049e17,'Merge pull request #9218 from caisq/fix-docker-bazel-download-r1.1a\n\nDocker build: fix bazel installer and LICENSE download issue'
f4f065c27846290b695f832ddd081769f91e42b6,'Docker build: fix bazel installer and LICENSE download issue (#9217)'
77cbe5a665bc842a3eb4a3682d69be10fb66a20b,"'Embedding Projector- fix bug where LOGDIR/projector_config.pbtxt gets ignored, but no plugin assets exist.\nChange: 153167747'"
585315d1b047b6473f8ed1d0745a226253410e5b,'Docker build: fix bazel installer and LICENSE download issue'
de7a060aa76cb3ab6cec16f9402d9152e341b0af,'Update vgg_16 ref in slim readme (#9208)\n\nFixes #9187'
7eee50b635f4cd4196f84bbc1edec2d34d1a1821,'fix this build warning about comparing signed/unsigned types (#9200)'
c44e87d142eadb6d01b568e272e8dc0fb2de43d5,"'Thoroughly skip testWarnings for Python version >=3.6\n\nShould fix nightly build errors such as https://ci.tensorflow.org/view/Tensorflow%20Jenkins%20Monitored%20builds/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=NO_OPT,TF_BUILD_IS_PIP=NO_PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=mac-slave/455/consoleFull\nChange: 152959394'"
55dee478b92486b8f3e420950e30998716fadae9,'Updating RELEASE.md to include keras fixes and TensorBoard text dashboard.'
72d7af2f55b596947f6ba5a2b8aa7d30d5e0695d,'Bug fix: zeros_like(x) does not depend on x if its shape is fully defined.\nChange: 153117347'
4152dfba9380f273411502d975a9c6b22ebdba42,"""Fix MetaGraphDef comparison.\n\nDon't compare the collection_def protos in serialized form; this leads to errors\nwhen the proto serialization isn't exactly identical.\nChange: 153105424"""
71f558ffc155d70e0c4581b76b3fca5cb1c421fb,'Updating update_version to update the suffix in core.h\nChange: 152729057'
16399c361859f61ab6b26f5a25dc1da617605219,'Backport fixes and improvements from external Keras.\nChange: 152867002'
4df3a25ab889d1e01ebf6e34092de4c0ce5ca93a,'Add boolean param for whether to use local storage to test\n\nThis fixes a TypeScript compilation error during vulcanization.\nChange: 153094698'
a16db8302a2436d915dcb551d0a7b537025e2f35,"'C API: fix misnamed function in c_api.h\n\nTF_ImportGraphDefOptionsRemapControlDependency() was accidentally\ncalled TF_GraphImportGraphDefOptionsRemapControlDependency() in the\nheader file. This change is technically a breaking change to the public\nAPI, but given that the public function was never defined it seems ok\nto change it to the intended name. This change also adds a test for\nTF_ImportGraphDefOptionsRemapControlDependency(), which was missing\nbefore, allowing this to happen.\nChange: 153075645'"
cf1a098bc78897d04ec14c411ddf2a158fdb0851,"'Fix the bug that ""0"" is overridden in the constructor\nChange: 153026139'"
1926b9d3b91375f5a4433303a27b49b4da53f64e,"'Documentation fix for Adam\'s ""epsilon"" parameter.\n\nFixes #9047.\nChange: 152990185'"
7c3ad6569611aac36fd2527030bf98fb8756919f,'fix missing Gather.png in tf.gather document (#9163)'
86d3891ba6612552347beaabe27edac11f5758d7,'NADAM Optimizer (#8405)\n\n* Nadam + Radam Optimizers\r\n\r\n* Better sparse Nadam\r\n\r\n* Formatting fixes + proper SYCL undefs\r\n\r\n* Formatting fix\r\n\r\n* Fixed quote formatting\r\n\r\n* Fix lint errors\r\n\r\nSuper calls in Nadam/Radam init worked but were gross.\r\n\r\n* Variable rename'
331ba78797f57af890a4a7b09ee03de3eff9b615,'fix windows gpu build: https://github.com/tensorflow/tensorflow/commit/72c023d3967a3218cd3d830ce6e57f7c4d87a18c (#9165)\n\nrequires cusolver'
ea82ff5a5737073bf2962aeac788ad3057418b9a,'Fix typo in docstring\nChange: 152959462'
688d1aced9a57c73b8d849db2dce5f61dd6d0f83,"'Thoroughly skip testWarnings for Python version >=3.6\n\nShould fix nightly build errors such as https://ci.tensorflow.org/view/Tensorflow%20Jenkins%20Monitored%20builds/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=NO_OPT,TF_BUILD_IS_PIP=NO_PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=mac-slave/455/consoleFull\nChange: 152959394'"
9cc21f04ed051d6a6d3a21e909aa547110aa8b0d,'tfdbg: fix broken link in python/debug/examples/README.md\n\nFixes: #9161\nChange: 152947343'
348b3b114021c06d90dcf0f0efd3f22642d64929,"'Ensure that moving_mean and moving_variance are grabbed before being updated. Note that this should not be necessary since they are only updated during training and used during testing (unlike renorm_* which are both used and updated during training). However, due to an apparent bug in tf.cond, we create ""fake"" updates during inference (with decay=1), and so data races may result. This CL fixes that.\nChange: 152887553'"
a2019a128c0731b35f1cb4231c996b1af142a0be,"'tfdbg: fix bug related to compiled Python files\n\nPreviously, the modules source_utils.py and analyzer_cli.py did not take into account that files in the stack could be compiled (i.e., pyc and pyo files).\nChange: 152873179'"
b6d47b5e56b19394c2fa55e55b36e2ef77fbc69e,"'fix formatting errors and broken links inside ""Getting Started With TensorFlow""\nChange: 152867721'"
b8b8ebcf851df71ebb5209ae27d75e2befc50f0d,'Backport fixes and improvements from external Keras.\nChange: 152867002'
846a6222e622818286934954347a14c807a11c88,'Docs: Tutorial formatting and links fix\n\nFixes #9092\n(When accompanied by changes to the www.tensorflow.org/code redirects to point\nto the appropriate release branch on github)\nChange: 152866886'
2e85e1c2c1d8d3b9f404fd110ca7ffd34a046f65,'Fix QuantizedToFloat to avoid bias.\nChange: 152835355'
a2818749579f315740ea150c34fad25f87b69e13,'[XLA] Fix cloning of tuples in HloInstruction::CloneWithNewOperands.\n\nTuple instructions would previously not be cloned with new operands.\nChange: 152830440'
d3aa99075fdd9b5ce0d65537e12af4e3a448d18a,'Fixes tf.cond with nested return values inside while loops.\nChange: 152830112'
af08eacee9c6878392013d21a85f99b73caff64e,'Add SingleImageRandomDotStereogramsOp to Contrib (#8370)\n\n* Add single_image_randome_dot_stereograms to CONTRIB\r\n\r\n* remove Debug commands\r\n\r\n* Clean up code formatting\r\n\r\n* Manually reformat Python Code 4 spaces after Oparen\r\n\r\n* formatting fixes\r\n\r\n* more formatting\r\n\r\n* Fixed spelling error and other improvements based upon review\r\n\r\n* Fixed typo in description\r\n\r\n* Eliminate generation_mode parameter\r\n\r\n* Add back number_colors in PY file that was removed in error\r\n\r\n* Indentation\r\n\r\n* Enable IMAGE TEST'
0f7df20b2ca2eae753437503b7fe80bf09315ad3,"'Allow callers to control the names of the slot variables.\n\nOther optimizers which have only a single slot variable allow control through\nthe \'name\' constructor parameter, but the FtrlOptimizer has two variables.\nBecause they both are created with the same \'name\' parameter, one of them has\nname as a suffix, and the other has name + ""_1"" as a suffix.  This change\nallows them to be specified in a more controllable way.\nChange: 152802478'"
67f9925ef9ceed02892c200a3122092ab497943a,'Updates based on review comments - round 2\n\nThis commit makes following changes based on review comments:\n1) Changes API that uses notion of Mkl layer to use Mkl Op\n2) Adds description of workspace\n3) Fixes incorrectly updated mkl_relu'
24a95ae389e1c76e771ac33d66e0ec40a236260f,"'Change Placeholder to support partial shapes and enforce scalar shapes.\n\nAdds tests; testScalar failed before with the original placeholder because\nit treated [] as ""?"" instead of scalar.  Now you can actually specify\n[] and it means \'scalar\'.\n\nAdded a backwards compatibility test using a graph_def generated\nfrom a previous tf version.\n\nRELNOTES: tf.placeholder can represent scalar shapes and partially known\nshapes accurately. Note, this change can break already buggy programs because\nit makes placeholder shape handling more consistent across graph serializations.\n\nNote: There are some buggy cases where this change can break a buggy pipeline: namely those that serialize a graph using an unknown shape (e.g., [None, 10] in a tf.placeholder, but then reload the graph using import_graph_def and feed it a different shape.  Prior to this change, serializing the graph_def loses the [None, 10] shape requirement, so you can feed anything you want. This change makes it so that you serialize the graph with [None, 10], and so when you reload it, it would fail if you fed it a different shape.  In these cases, the fix is to correct the original placeholder shape to match what you feed it, which is not a bug in TF but in the user\'s program.\n\nNote 2: A python user that did tf.placeholder(shape=[]) would get scalar checking\nin the same process due to python shape inference code.  However, a C++ user that did Placeholder(shape=[]) would not have gotten\nscalar shape checking; a C++ program that passed Placeholder(shape=[]) that expects\nto interpret this as ""UnknownShape"" would break -- however, that user could have\nalready used an {unknown_shape: true} proto, and should not have expected the legacy behavior.\n\nBackwards compatibility: Old graphs that have shape = {} in the proto will also have a\ngraph_def_version <= 21, so the default value of shape prior to this change will be interpreted by new binaries as ""UnknownShape"" just as before.\n\nForwards compatibility: new graphs will produce, by default, shape={ unknown rank: true}; old binaries will use PartialTensorShape\'s parsing code to parse that proto\ninto an object whose shape.dims() <= 0, and so these binaries will continue to interpret\nthe default shape as ""unknown shape"" without crashing and without producing new errors.\n\nFixes #9103\nChange: 152751019'"
5b628924684b36aaa6905a5c74075953c087be16,"'Support self_adjoint_eig to complex64 and complex128 (#8662)\n\nThis fix adds the complex64 and complex128 support for\r\nself_adjoint_eig, as was raised in 5190.\r\n\r\nThis fix fixes 5190.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
31559fd5317abd10c457575a1718b88b3917446c,'Fix some size_t casting issues.\nChange: 152749005'
6d6738098055416e3f190745fcb236eff5ead514,'Fix tf.nn.softmax (#8716)\n\n* Fix tf.nn.softmax\r\n\r\nhttps://github.com/tensorflow/tensorflow/issues/8667\r\n\r\n* Update nn_ops.py\r\n\r\nAvoid redundant using tf.identity for assigning tensor name'
a352cba4a60aa99af9c817a792aae3e03e1b74a6,'Fix a segfault in AlgebraicSimplifierVisitor.\nChange: 152743270'
7a2b8153a3eb8ca21224c84857fe054060256ef6,"'Allows summary writer to take an optional suffix= argument, which\nis appended to every summary file name.\nChange: 152736272'"
d380f1f0eb70478f7a15ecacf88d926b427a5589,'Fixes to Mkl graph passes based on review comments'
e0813b2c58890decedcddf84af839a1bf3c0bc76,'Fixes based on feedback from Google on mkl-kernel-2'
3dc4907a0d7ae113547fcf716f618e3c8e1b9c77,'Fix mac protobuf links.\n\nFixes #9089\nChange: 152732901'
d34efc50167737792b9db6953995727f64bba897,'Updating update_version to update the suffix in core.h\nChange: 152729057'
9e7bf403817a3acd4e8d865b041f37609564076e,"'Branch 152703253 (#9112)\n\n* Improve py_func error handling.\r\n\r\nAutomatically translate some python errors into corresponding TF errors at runtime.\r\nChange: 152156821\r\n\r\n* Update interaction with libpng so that we use the public API instead of\r\nknowledge of the internal libpng data structures.\r\nChange: 152167754\r\n\r\n* TensorBoard plugins now contain their own name/route prefix.\r\nChange: 152167807\r\n\r\n* Passes trainable flag to separable_conv2d biases.\r\nChange: 152170239\r\n\r\n* Saving resource variables with a caching device.\r\nChange: 152171539\r\n\r\n* Drop loss from estimator_spec.eval_metric_ops, as required by core Estimator.\r\nChange: 152179924\r\n\r\n* sample_stats.percentile DOCFIX.\r\nChange: 152182295\r\n\r\n* Added a memory optimizer to grappler.\r\nChange: 152184170\r\n\r\n* Change default behavior of the tf runs selector:\r\n\r\n- If there are fewer than 41 runs, enable them all by default\r\n- If there are 41 runs or more, disable them all by default\r\n\r\nThis is in response to user complaints that having it enable only the first ten runs by default was confusing, because it was not obvious to users that some runs had been disabled.\r\nHowever, it still solves the initial user complaint that having very many runs simultaneously enabled would lag the UI.\r\n\r\nI also changed the ""toggle all runs"" button to try to turn everything off before turning everything on.\r\nAlso, I improved the logic for detecting when the runs selection is back in the default state, so that we can avoid generating long URI strings wherever possible.\r\nChange: 152188948\r\n\r\n* Autogenerated Change: Change TensorBoard TAG to 52\r\nChange: 152189000\r\n\r\n* Remove warning that only happening with config cuda.\r\nChange: 152189205\r\n\r\n* Make resource variable shared name consistent with non-resource variables.\r\n\r\nRemove colocation constraint from resource variable cached value with the\r\nvariable itself.\r\nChange: 152192203\r\n\r\n* Add a way to specify the optimization order; refactor and add constant folding to meta optimizer.\r\nChange: 152193646\r\n\r\n* Backport fixes and improvements from external Keras.\r\nChange: 152198296\r\n\r\n* Merge changes from github.\r\nChange: 152200430\r\n\r\n* Go: Update generated wrapper functions for TensorFlow ops.\r\nChange: 152200754\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 152203174\r\n\r\n* Make ImportGraphDef() work with functions.\r\n\r\nIn addition to modify graph_constructor.cc, this patch adds some other\r\nfunctionality to enable importing fucntions:\r\n* Ability to add FunctionDefLibraries to Graphs and\r\n  FunctionLibraryDefinitions (in addition to existing functions)\r\n* FunctionDefsEqual() utility function\r\nChange: 152205258\r\n\r\n* Expand contrib test to more than just test targets.\r\nChange: 152206822\r\n\r\n* Preserve graph version during optimization\r\nChange: 152213262\r\n\r\n* Exclude enter and exit nodes from shape refiner\'s constant folding.\r\nChange: 152213637\r\n\r\n* Allow reshape_mover and algebraic_simplifier to make multiple mutations, by avoiding the short-circuit\r\nstd::any_of.\r\nChange: 152232810\r\n\r\n* Fix dynamic_rnn transpose bug (can input/output non-3d tensors).\r\n\r\nAlso a few cleanups to RNN code.\r\nChange: 152267628\r\n\r\n* Fix flaky tests\r\nChange: 152272801\r\n\r\n* Add an auto parallelization grappler optimization pass.\r\nChange: 152276787\r\n\r\n* Change json.decode.JSONDecodeError to ValueError.  JSONDecodeError seems to be\r\nthe exception used in the simplejson module, not the json module.\r\nChange: 152278012\r\n\r\n* Internal change.\r\nChange: 152281471\r\n\r\n* [XLA] Force buffer sharing of separate while instructions.\r\nChange: 152288540\r\n\r\n* replica_device_setter should work for resource variables\r\nChange: 152289915\r\n\r\n* Fix ./configure script\r\n1. Add %workspace% in .bazelrc file when using import statement\r\n2. Write action_env into bazelrc file for required environment variables for OpenCL support\r\nChange: 152290700\r\n\r\n* Pointing a number of Tensorboard graph visualization-related help links to the new locations for the correspondent API documentation.\r\nChange: 152293459\r\n\r\n* Restore most of pull request #8606\r\n\r\nPull request #8606 added str(Label(...)) for most dependencies in\r\ntensorflow.bzl, allowing most functions to be used from repositories which\r\ninclude TensorFlow as a submodule.  Unfortunately, it broke when pulled into\r\nGoogle and was removed in cl/152200430.  This CL restores the change, except\r\nfor two Android-only functions; these were the only problematic bits.\r\nChange: 152297413\r\n\r\n* Removed dead code in Estimator.\r\nChange: 152297597\r\n\r\n* Assert rank is at least equal to new_rank for `_sparse_inner_flatten`.\r\nChange: 152303319\r\n\r\n* Extend quantization ranges to include 0.0f.\r\nChange: 152304380\r\n\r\n* Remove Keras config file saving.\r\nChange: 152306552\r\n\r\n* API backwards compatibility tests.\r\nChange: 152310869\r\n\r\n* [TF:XLA] Add a test for an R3 -> R4 broadcast.\r\nChange: 152313967\r\n\r\n* Fix the problem that no enough placeholders for persistent tensor\r\nbatch delete\r\n\r\nThe deleter_key is always a device_name, hence there is only one\r\nof it. Hence, we cannot delete >1 handles at one time.\r\n\r\nIn the fix, it creates delete placeholder on demand, the max\r\nnumber of placeholders is _DEAD_HANDLES_THRESHOLD.\r\nChange: 152322770\r\n\r\n* [XLA] Add several reduction tests.\r\nChange: 152323510\r\n\r\n* Added the memory optimizer to the meta optimizer.\r\nChange: 152323689\r\n\r\n* Started a set of utilities to categorize op types\r\nChange: 152329057\r\n\r\n* Add AudioSpectrogram op to TensorFlow for audio feature generation\r\nChange: 152332221\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 152332812\r\n\r\n* Automated rollback of change 152332221\r\nChange: 152333917\r\n\r\n* Call Py_CLEAR on dead fields during TF_RESOURCE-to-ndarray conversion\r\nChange: 152338333\r\n\r\n* [TF contrib seq2seq] Initial, incomplete implementation of beam search decoder.\r\n\r\n**DOES NOT WORK, pushed for collaboration only**\r\nChange: 152343927\r\n\r\n* [XLA] Change HloPassPipeline to disallow Add* calls after Run.\r\nChange: 152345578\r\n\r\n* Automated rollback of change 152332812\r\nChange: 152349057\r\n\r\n* Remove all 64/32 bit compiler warnings from core/ops.\r\nChange: 152353506\r\n\r\n* libtensorflow.so: Don\'t export private symbols.\r\n\r\nWith this change, libtensorflow.so will only export\r\nfunctions defined in c_api.h. This also results in\r\na decreased binary size of libtensorflow.so.\r\n\r\nOn Linux the decrease was from roughly 150MB to 67MB.\r\nOn OS X it was from roughly 101MB to 82MB.\r\n\r\nAlso fixes #8923\r\nChange: 152366053\r\n\r\n* Add Elu ops in XLA.\r\nChange: 152383201\r\n\r\n* Fixed test. (\'broadcast_dims\' has size 1)\r\nChange: 152383633\r\n\r\n* Add more detailed error message for rank assertion in _sparse_inner_flatten.\r\nChange: 152397909\r\n\r\n* tensor_bundle: propagrates errors related to directory creation.\r\nChange: 152401909\r\n\r\n* matrix_adjoint added to contrib/linalg/linear_operator_util\r\nChange: 152404828\r\n\r\n* Add an is_active method to plugins\r\n\r\nThis method determines whether a plugin is active. A plugin may be inactive if say it lacks data. This new is_active method allows us to add a route to TensorBoard noting which plugins are active. The frontend could then avoid querying routes of inactive plugins.\r\nChange: 152406232\r\n\r\n* Replace a gather op for shapes by a stack op so dilated convolutions can be\r\nplaced on GPU even with strict placing (before the gather went to CPU).\r\nChange: 152411159\r\n\r\n* [TF:XLA] Implement BatchToSpace, BatchToSpaceND, SpaceToBatch, SpaceToBatchND.\r\nFix crashes in core implementations of the same operators for zero-sized blocks.\r\nChange: 152416903\r\n\r\n* Estimator saves relative paths in checkpoint.\r\nChange: 152420211\r\n\r\n* Fix layers_test exception regex matching.\r\nChange: 152422855\r\n\r\n* Unhide bijectors. Correct TransformedDistribution docstring.\r\nChange: 152424418\r\n\r\n* Choosing a saner default for min_eval_frequency in the constructor for Experiment for the GCS file system, because the default of 1 causes performance problems.\r\nChange: 152439984\r\n\r\n* Inherit use_resource from scope for partitioned variables.\r\nChange: 152442103\r\n\r\n* Support quantized reshape in hexagon runtime\r\nChange: 152445539\r\n\r\n* tfdbg CLI: add command list_source (ls) + UI fixes and improvements\r\n\r\nThe new list_source (shorthand: ls) command lists Python source files responsible for constructing the nodes and tensors encountered in the run() call.\r\n\r\nIt divides the source files into two categories and list them separately.\r\n1) files that are not part of the TensorFlow Python library, and\r\n2) files that are a part of it.\r\n\r\nThe list contains information about how many nodes, tensors and dumps of tensors the files is responsible for. The file paths contain clickable links to the existing print_source/ps command.\r\n\r\nThe list_source/ls command supports filtering by file-path and node-name regex patterns.\r\n\r\nUI fixes:\r\n* Fixed inconsistent black vs. transparent background color that made the layout look messy on some terminal types. Now using the transparent color for default font color consistently.\r\n* In the print_source command output, add clickable links to expand source lines and graph elements.\r\nChange: 152446002\r\n\r\n* tfcompile: Be a little more verbose about missing required flags.\r\n\r\nFixes #9014\r\nChange: 152446338\r\n\r\n* Disable failing test cases in pooling_ops_test.\r\nChange: 152447322\r\n\r\n* Register more types for tf.image_crop_and_resize(). Resolves #9020.\r\nChange: 152448160\r\n\r\n* Automated rollback of change 152439984\r\nChange: 152450929\r\n\r\n* Add a route to TensorBoard for fetching plugin names\r\n\r\nSpecifically, we add a /data/plugins_listing route to the TensorBoard application. This route responds with an object mapping the name of each initialized plugin to whether it is active.\r\n\r\nThis route could help the frontend avoid issuing requests to inactive plugins.\r\n\r\nOrdered the listing of routes within application.py so there is a little more organization.\r\n\r\nRefactored the test for application to use a fake plugin.\r\nChange: 152451390\r\n\r\n* Added the ability to retrieve the amount of usable gpu memory\r\nChange: 152453470\r\n\r\n* Allow to set session ConfigProto in RunConfig and use it in Estimator.\r\nChange: 152454548\r\n\r\n* Colocate ResourceVariable reads with their handles.\r\nChange: 152455939\r\n\r\n* tfdbg: update doc for new command list_source/ls\r\nChange: 152456128\r\n\r\n* Make rnn directions slightly easier to follow.\r\nChange: 152456296\r\n\r\n* Internal change\r\nChange: 152458104\r\n\r\n* Adds batch renormalization.\r\n\r\nNOTE: if you use renormalization, you might want to use faster moving average updates, i.e. lower `decay` values.\r\nChange: 152458872\r\n\r\n* When using ImportGraphDef with a passed in ShapeRefiner, use the\r\nproducer version of the GraphDef when importing; the ShapeRefiner\r\nmay be initialized with a different graph_def_version, so we need\r\nto be able to override it.\r\n\r\nThe test failed without the change to graph_constructor and passes with it.\r\nThe test uses a legacy graph that is supported (reduction shape).\r\nChange: 152459169\r\n\r\n* Allow any iterable for `export_strategies` arg.\r\nChange: 152461826\r\n\r\n* Log steps/sec every 100 steps in MonitoredSession, as before.\r\nChange: 152465320\r\n\r\n* Fixes documentation to note that the in case of ties the identity of the return value of ArgMin and ArgMaxis not guaranteed .\r\nChange: 152465346\r\n\r\n* Automated rollback of change 152465346\r\nChange: 152465844\r\n\r\n* Fix shape inference fn on _ParallelConcatStart.\r\nChange: 152466076\r\n\r\n* Fix getting started guide\r\n\r\nExplain numerical differences in loss\r\nfix one example to print\r\nChange: 152466119\r\n\r\n* Remove superfluous mode argument.\r\nChange: 152467334\r\n\r\n* Add a tool that converts HLO computations to tensorflow GraphDef which can be visualized on Tensorboard.\r\n\r\nThis CL defines basic tensorflow::OpDef for each HLO instruction/node. More attributes (e.g. shapes, colors) will be added in the future.\r\nChange: 152477918\r\n\r\n* [TF:XLA] Increase shard count of //third_party/tensorflow/compiler/tests:spacetobatch_test to reduce flakiness when built under ASAN.\r\nChange: 152496244\r\n\r\n* Make projector plugin backend read assets saved via the PluginAssets API.\r\n\r\nAt the same time, keep backwards compatibility with the old way of looking up assets.\r\nChange: 152504793\r\n\r\n* Move MNIST pointers to mirror hosted by the CVDF on Google Cloud.\r\nFixes: #9031\r\nChange: 152504901\r\n\r\n* Merge changes from github.\r\nChange: 152508170\r\n\r\n* Update API after changing default step couter frequency before.\r\nChange: 152517535\r\n\r\n* Move a few random op helper functions to header files\r\n\r\n1. shape_inference::RandomShape\r\n2. OpKernel::MakeShape(Tensor, TensorShape*)\r\nChange: 152522156\r\n\r\n* addresses the divide by zero bug\r\nChange: 152522488\r\n\r\n* Clarify doc on tf.assign.\r\nChange: 152523909\r\n\r\n* Sparse adam for resource variables.\r\nChange: 152525327\r\n\r\n* Automated rollback of change 152310869\r\nChange: 152528732\r\n\r\n* Add an env_var tf_sync_on_finish_bool that block until device has finished all queued operations in a step if true.\r\nChange: 152533676\r\n\r\n* Add more node attributes for HloInstruction on Tensorboard e.g. shape and layout etc.\r\nChange: 152534472\r\n\r\n* Add tf.complex64 GPU support to tf.gather.\r\n\r\nAlso add ldg specializations for std::complex.\r\nChange: 152537848\r\n\r\n* Formatting changes\r\nChange: 152544842\r\n\r\n* Upgrade TensorBoard TypeScript to 2.2.1\r\n\r\nSee also: #8326\r\nChange: 152545950\r\n\r\n* TEST:  Getting reasonable test sizes on linalg library, removing need for\r\nsharding.\r\nChange: 152546409\r\n\r\n* Disabling _testSourceUtilModuleReturnsTrue as its causing opensource issues.\r\nChange: 152548721\r\n\r\n* Fix race due to unsafe buffer forwarding in maxpooling second order gradients added in #6664.\r\nRe-enable previously flaky tests.\r\nClean up a few minor things in maxpooling_op_gpu.cu.cc\r\nChange: 152550050\r\n\r\n* LinearOperator:  adjoint_arg kwarg added to all operators.  Now,\r\noperator.apply(x, adjoint_arg=True) means that the adjoint of \'x\' is taken\r\nbefore application of operator.  Sometimes this is done more efficiently than\r\nsimply taking adjoint.\r\nChange: 152560471\r\n\r\n* Adds weighted_average_loss metric key.\r\nChange: 152560999\r\n\r\n* Documentation: Fix bug in manual device placement example\r\nChange: 152563392\r\n\r\n* Change for internal compatibility.\r\n\r\n* Use std::vector for storage instead of map.\r\nDo the sorting inplace and return the same vector to avoid any copies.\r\nOn larger streams it is about 50% faster.\r\nChange: 152576112\r\n\r\n* Add tf.add_n GPU support for complex64/complex128.\r\n\r\nAlso adds a unit test for tf.add_n.\r\nChange: 152577190\r\n\r\n* - Adds support for nested types in tf.case and tf.cond.\r\n- Adds a ""strict"" mode which disables silent unpacking of singleton lists.\r\n- Adds shape inference to tf.case.\r\n- Adds a lot of unit tests.\r\nChange: 152581097\r\n\r\n* [XLA] Add support for folding transpose into convolution\r\nChange: 152581336\r\n\r\n* Add a smoke test to ensure that the doc generator runs.\r\nChange: 152592164\r\n\r\n* Add tensorboard to the _do_not_descend_map of the PublicAPIVisitor.\r\nChange: 152592268\r\n\r\n* Add auto parallelization to meta optimizer. Enable MetaOptimizer if any one of the optimizers is on.\r\nChange: 152598517\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 152629248\r\n\r\n* Prevent the renorm_weight from being updated too early.\r\nChange: 152631776\r\n\r\n* Automated rollback of change 152528732\r\nChange: 152652473\r\n\r\n* Construct TensorBoard dashboards in a JS list\r\n\r\nPreviously, adding a dashboard to TensorBoard involved changing logic in several places.\r\n\r\nAs part of this effort, added constructors to dashboards. Tweaked logic in various dashboards to preserve original behavior. For instance, the graph dashboard can only perform fitting after the dashboard is attached to the DOM.\r\nChange: 152658532\r\n\r\n* Make CheckpointSaverListener visible next to CheckpointSaverHook.\r\nChange: 152662945\r\n\r\n* tfdbg CLI: minor bug fixes\r\n\r\n1: The calculation of the scroll command in the scroll bar didn\'t take into account that the y-coordinate of the scroll block is in the ScrollBar coordinate system, while the mouse click y-coordinate is in the screen coordinate system.\r\n\r\n2: The y position of the ScrollBar was off by one.\r\n\r\n3: The command box is not re-created after mouse-triggered commands, leading to strange-looking cursor position.\r\nChange: 152684294\r\n\r\n* Remove obsolete use of validate_indices from embedding_ops.py\r\n\r\nvalidate_indices is ignored, so it shouldn\'t appear in new code.\r\nChange: 152691948\r\n\r\n* Preparation of using GMock matchers in XLA tests.\r\nChange: 152691970\r\n\r\n* Replace RuntimeException by RuntimeError in coordinator documentation.\r\nChange: 152697758\r\n\r\n* Move the TensorBoard debugger plugin to be internal.\r\n\r\nThis feature is currently not open-source anyway.\r\nChange: 152700267\r\n\r\n* Add a single-machine tf.learn Estimator implementation for the WALS solver.\r\nChange: 152700915\r\n\r\n* Add tf.contrib.training.python_input -- making it easy to feed data into\r\nTensorFlow from python coroutines.\r\nChange: 152701623\r\n\r\n* Show that QuantizeToFloat consistently introduces a small error. The\r\nerror is equal to\r\n  range_min - round(range_min / range_scale) * range_scale\r\nChange: 152702015\r\n\r\n* Internal Changes\r\nChange: 152703253\r\n\r\n* Remove tensorflow/tensorboard/plugins/debugger, as part of merge resolution.'"
984e8c586799a999128f3e74efa2fc339c0d2dc7,"""tfdbg CLI: minor bug fixes\n\n1: The calculation of the scroll command in the scroll bar didn't take into account that the y-coordinate of the scroll block is in the ScrollBar coordinate system, while the mouse click y-coordinate is in the screen coordinate system.\n\n2: The y position of the ScrollBar was off by one.\n\n3: The command box is not re-created after mouse-triggered commands, leading to strange-looking cursor position.\nChange: 152684294"""
468eb47a90e301201eb9ab4ff111c16ef535d66f,'Merge pull request #9070 from ajschumacher/patch-2\n\nfix example typo (too many brackets)'
bb08eef695c5d8a8a3c21564be11651745eb3ad1,"""fix example typo (too many brackets)\n\nThe example was like `json.dumps({{}})`, which fails because `{{}}` is not a valid data structure.\r\n\r\nAlso, just below this, there is `assert config.master == 'host4:2222'`, which I believe would fail since that value comes back as `'grpc://host4:2222'`, but I'm less sure about recommending this change."""
45115c0a985815feef3a97a13d6b082997b38e5d,'Change scalar_summary to summary.scalar (#8883)\n\n* Change scalar_summary to summary.scalar\r\n\r\nscalar_summary is deprecated and issues a warning. This was reported in bug #8878\r\n\r\n* Fix head_test to reflect new naming'
41a9fd1f7ee218a3deb59bba5972507b6bb05e48,'fix summary writer thread leak (#8981)\n\n* fix summary writer thread leak\r\n\r\n* use a sentinel event to terminate daemon thread'
52dcb2590bb9274262656c958c105cb5e5cc1300,"'Branch 152550050 (#9059)\n\n* Improve py_func error handling.\r\n\r\nAutomatically translate some python errors into corresponding TF errors at runtime.\r\nChange: 152156821\r\n\r\n* Update interaction with libpng so that we use the public API instead of\r\nknowledge of the internal libpng data structures.\r\nChange: 152167754\r\n\r\n* TensorBoard plugins now contain their own name/route prefix.\r\nChange: 152167807\r\n\r\n* Passes trainable flag to separable_conv2d biases.\r\nChange: 152170239\r\n\r\n* Saving resource variables with a caching device.\r\nChange: 152171539\r\n\r\n* Drop loss from estimator_spec.eval_metric_ops, as required by core Estimator.\r\nChange: 152179924\r\n\r\n* sample_stats.percentile DOCFIX.\r\nChange: 152182295\r\n\r\n* Added a memory optimizer to grappler.\r\nChange: 152184170\r\n\r\n* Change default behavior of the tf runs selector:\r\n\r\n- If there are fewer than 41 runs, enable them all by default\r\n- If there are 41 runs or more, disable them all by default\r\n\r\nThis is in response to user complaints that having it enable only the first ten runs by default was confusing, because it was not obvious to users that some runs had been disabled.\r\nHowever, it still solves the initial user complaint that having very many runs simultaneously enabled would lag the UI.\r\n\r\nI also changed the ""toggle all runs"" button to try to turn everything off before turning everything on.\r\nAlso, I improved the logic for detecting when the runs selection is back in the default state, so that we can avoid generating long URI strings wherever possible.\r\nChange: 152188948\r\n\r\n* Autogenerated Change: Change TensorBoard TAG to 52\r\nChange: 152189000\r\n\r\n* Remove warning that only happening with config cuda.\r\nChange: 152189205\r\n\r\n* Make resource variable shared name consistent with non-resource variables.\r\n\r\nRemove colocation constraint from resource variable cached value with the\r\nvariable itself.\r\nChange: 152192203\r\n\r\n* Add a way to specify the optimization order; refactor and add constant folding to meta optimizer.\r\nChange: 152193646\r\n\r\n* Backport fixes and improvements from external Keras.\r\nChange: 152198296\r\n\r\n* Merge changes from github.\r\nChange: 152200430\r\n\r\n* Go: Update generated wrapper functions for TensorFlow ops.\r\nChange: 152200754\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 152203174\r\n\r\n* Make ImportGraphDef() work with functions.\r\n\r\nIn addition to modify graph_constructor.cc, this patch adds some other\r\nfunctionality to enable importing fucntions:\r\n* Ability to add FunctionDefLibraries to Graphs and\r\n  FunctionLibraryDefinitions (in addition to existing functions)\r\n* FunctionDefsEqual() utility function\r\nChange: 152205258\r\n\r\n* Expand contrib test to more than just test targets.\r\nChange: 152206822\r\n\r\n* Preserve graph version during optimization\r\nChange: 152213262\r\n\r\n* Exclude enter and exit nodes from shape refiner\'s constant folding.\r\nChange: 152213637\r\n\r\n* Allow reshape_mover and algebraic_simplifier to make multiple mutations, by avoiding the short-circuit\r\nstd::any_of.\r\nChange: 152232810\r\n\r\n* Fix dynamic_rnn transpose bug (can input/output non-3d tensors).\r\n\r\nAlso a few cleanups to RNN code.\r\nChange: 152267628\r\n\r\n* Fix flaky tests\r\nChange: 152272801\r\n\r\n* Add an auto parallelization grappler optimization pass.\r\nChange: 152276787\r\n\r\n* Change json.decode.JSONDecodeError to ValueError.  JSONDecodeError seems to be\r\nthe exception used in the simplejson module, not the json module.\r\nChange: 152278012\r\n\r\n* Internal change.\r\nChange: 152281471\r\n\r\n* [XLA] Force buffer sharing of separate while instructions.\r\nChange: 152288540\r\n\r\n* replica_device_setter should work for resource variables\r\nChange: 152289915\r\n\r\n* Fix ./configure script\r\n1. Add %workspace% in .bazelrc file when using import statement\r\n2. Write action_env into bazelrc file for required environment variables for OpenCL support\r\nChange: 152290700\r\n\r\n* Pointing a number of Tensorboard graph visualization-related help links to the new locations for the correspondent API documentation.\r\nChange: 152293459\r\n\r\n* Restore most of pull request #8606\r\n\r\nPull request #8606 added str(Label(...)) for most dependencies in\r\ntensorflow.bzl, allowing most functions to be used from repositories which\r\ninclude TensorFlow as a submodule.  Unfortunately, it broke when pulled into\r\nGoogle and was removed in cl/152200430.  This CL restores the change, except\r\nfor two Android-only functions; these were the only problematic bits.\r\nChange: 152297413\r\n\r\n* Removed dead code in Estimator.\r\nChange: 152297597\r\n\r\n* Assert rank is at least equal to new_rank for `_sparse_inner_flatten`.\r\nChange: 152303319\r\n\r\n* Extend quantization ranges to include 0.0f.\r\nChange: 152304380\r\n\r\n* Remove Keras config file saving.\r\nChange: 152306552\r\n\r\n* API backwards compatibility tests.\r\nChange: 152310869\r\n\r\n* [TF:XLA] Add a test for an R3 -> R4 broadcast.\r\nChange: 152313967\r\n\r\n* Fix the problem that no enough placeholders for persistent tensor\r\nbatch delete\r\n\r\nThe deleter_key is always a device_name, hence there is only one\r\nof it. Hence, we cannot delete >1 handles at one time.\r\n\r\nIn the fix, it creates delete placeholder on demand, the max\r\nnumber of placeholders is _DEAD_HANDLES_THRESHOLD.\r\nChange: 152322770\r\n\r\n* [XLA] Add several reduction tests.\r\nChange: 152323510\r\n\r\n* Added the memory optimizer to the meta optimizer.\r\nChange: 152323689\r\n\r\n* Started a set of utilities to categorize op types\r\nChange: 152329057\r\n\r\n* Add AudioSpectrogram op to TensorFlow for audio feature generation\r\nChange: 152332221\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 152332812\r\n\r\n* Automated rollback of change 152332221\r\nChange: 152333917\r\n\r\n* Call Py_CLEAR on dead fields during TF_RESOURCE-to-ndarray conversion\r\nChange: 152338333\r\n\r\n* [TF contrib seq2seq] Initial, incomplete implementation of beam search decoder.\r\n\r\n**DOES NOT WORK, pushed for collaboration only**\r\nChange: 152343927\r\n\r\n* [XLA] Change HloPassPipeline to disallow Add* calls after Run.\r\nChange: 152345578\r\n\r\n* Automated rollback of change 152332812\r\nChange: 152349057\r\n\r\n* Remove all 64/32 bit compiler warnings from core/ops.\r\nChange: 152353506\r\n\r\n* libtensorflow.so: Don\'t export private symbols.\r\n\r\nWith this change, libtensorflow.so will only export\r\nfunctions defined in c_api.h. This also results in\r\na decreased binary size of libtensorflow.so.\r\n\r\nOn Linux the decrease was from roughly 150MB to 67MB.\r\nOn OS X it was from roughly 101MB to 82MB.\r\n\r\nAlso fixes #8923\r\nChange: 152366053\r\n\r\n* Add Elu ops in XLA.\r\nChange: 152383201\r\n\r\n* Fixed test. (\'broadcast_dims\' has size 1)\r\nChange: 152383633\r\n\r\n* Add more detailed error message for rank assertion in _sparse_inner_flatten.\r\nChange: 152397909\r\n\r\n* tensor_bundle: propagrates errors related to directory creation.\r\nChange: 152401909\r\n\r\n* matrix_adjoint added to contrib/linalg/linear_operator_util\r\nChange: 152404828\r\n\r\n* Add an is_active method to plugins\r\n\r\nThis method determines whether a plugin is active. A plugin may be inactive if say it lacks data. This new is_active method allows us to add a route to TensorBoard noting which plugins are active. The frontend could then avoid querying routes of inactive plugins.\r\nChange: 152406232\r\n\r\n* Replace a gather op for shapes by a stack op so dilated convolutions can be\r\nplaced on GPU even with strict placing (before the gather went to CPU).\r\nChange: 152411159\r\n\r\n* [TF:XLA] Implement BatchToSpace, BatchToSpaceND, SpaceToBatch, SpaceToBatchND.\r\nFix crashes in core implementations of the same operators for zero-sized blocks.\r\nChange: 152416903\r\n\r\n* Estimator saves relative paths in checkpoint.\r\nChange: 152420211\r\n\r\n* Fix layers_test exception regex matching.\r\nChange: 152422855\r\n\r\n* Unhide bijectors. Correct TransformedDistribution docstring.\r\nChange: 152424418\r\n\r\n* Choosing a saner default for min_eval_frequency in the constructor for Experiment for the GCS file system, because the default of 1 causes performance problems.\r\nChange: 152439984\r\n\r\n* Inherit use_resource from scope for partitioned variables.\r\nChange: 152442103\r\n\r\n* Support quantized reshape in hexagon runtime\r\nChange: 152445539\r\n\r\n* tfdbg CLI: add command list_source (ls) + UI fixes and improvements\r\n\r\nThe new list_source (shorthand: ls) command lists Python source files responsible for constructing the nodes and tensors encountered in the run() call.\r\n\r\nIt divides the source files into two categories and list them separately.\r\n1) files that are not part of the TensorFlow Python library, and\r\n2) files that are a part of it.\r\n\r\nThe list contains information about how many nodes, tensors and dumps of tensors the files is responsible for. The file paths contain clickable links to the existing print_source/ps command.\r\n\r\nThe list_source/ls command supports filtering by file-path and node-name regex patterns.\r\n\r\nUI fixes:\r\n* Fixed inconsistent black vs. transparent background color that made the layout look messy on some terminal types. Now using the transparent color for default font color consistently.\r\n* In the print_source command output, add clickable links to expand source lines and graph elements.\r\nChange: 152446002\r\n\r\n* tfcompile: Be a little more verbose about missing required flags.\r\n\r\nFixes #9014\r\nChange: 152446338\r\n\r\n* Disable failing test cases in pooling_ops_test.\r\nChange: 152447322\r\n\r\n* Register more types for tf.image_crop_and_resize(). Resolves #9020.\r\nChange: 152448160\r\n\r\n* Automated rollback of change 152439984\r\nChange: 152450929\r\n\r\n* Add a route to TensorBoard for fetching plugin names\r\n\r\nSpecifically, we add a /data/plugins_listing route to the TensorBoard application. This route responds with an object mapping the name of each initialized plugin to whether it is active.\r\n\r\nThis route could help the frontend avoid issuing requests to inactive plugins.\r\n\r\nOrdered the listing of routes within application.py so there is a little more organization.\r\n\r\nRefactored the test for application to use a fake plugin.\r\nChange: 152451390\r\n\r\n* Added the ability to retrieve the amount of usable gpu memory\r\nChange: 152453470\r\n\r\n* Allow to set session ConfigProto in RunConfig and use it in Estimator.\r\nChange: 152454548\r\n\r\n* Colocate ResourceVariable reads with their handles.\r\nChange: 152455939\r\n\r\n* tfdbg: update doc for new command list_source/ls\r\nChange: 152456128\r\n\r\n* Make rnn directions slightly easier to follow.\r\nChange: 152456296\r\n\r\n* Internal change\r\nChange: 152458104\r\n\r\n* Adds batch renormalization.\r\n\r\nNOTE: if you use renormalization, you might want to use faster moving average updates, i.e. lower `decay` values.\r\nChange: 152458872\r\n\r\n* When using ImportGraphDef with a passed in ShapeRefiner, use the\r\nproducer version of the GraphDef when importing; the ShapeRefiner\r\nmay be initialized with a different graph_def_version, so we need\r\nto be able to override it.\r\n\r\nThe test failed without the change to graph_constructor and passes with it.\r\nThe test uses a legacy graph that is supported (reduction shape).\r\nChange: 152459169\r\n\r\n* Allow any iterable for `export_strategies` arg.\r\nChange: 152461826\r\n\r\n* Log steps/sec every 100 steps in MonitoredSession, as before.\r\nChange: 152465320\r\n\r\n* Fixes documentation to note that the in case of ties the identity of the return value of ArgMin and ArgMaxis not guaranteed .\r\nChange: 152465346\r\n\r\n* Automated rollback of change 152465346\r\nChange: 152465844\r\n\r\n* Fix shape inference fn on _ParallelConcatStart.\r\nChange: 152466076\r\n\r\n* Fix getting started guide\r\n\r\nExplain numerical differences in loss\r\nfix one example to print\r\nChange: 152466119\r\n\r\n* Remove superfluous mode argument.\r\nChange: 152467334\r\n\r\n* Add a tool that converts HLO computations to tensorflow GraphDef which can be visualized on Tensorboard.\r\n\r\nThis CL defines basic tensorflow::OpDef for each HLO instruction/node. More attributes (e.g. shapes, colors) will be added in the future.\r\nChange: 152477918\r\n\r\n* [TF:XLA] Increase shard count of //third_party/tensorflow/compiler/tests:spacetobatch_test to reduce flakiness when built under ASAN.\r\nChange: 152496244\r\n\r\n* Make projector plugin backend read assets saved via the PluginAssets API.\r\n\r\nAt the same time, keep backwards compatibility with the old way of looking up assets.\r\nChange: 152504793\r\n\r\n* Move MNIST pointers to mirror hosted by the CVDF on Google Cloud.\r\nFixes: #9031\r\nChange: 152504901\r\n\r\n* Merge changes from github.\r\nChange: 152508170\r\n\r\n* Update API after changing default step couter frequency before.\r\nChange: 152517535\r\n\r\n* Move a few random op helper functions to header files\r\n\r\n1. shape_inference::RandomShape\r\n2. OpKernel::MakeShape(Tensor, TensorShape*)\r\nChange: 152522156\r\n\r\n* addresses the divide by zero bug\r\nChange: 152522488\r\n\r\n* Clarify doc on tf.assign.\r\nChange: 152523909\r\n\r\n* Sparse adam for resource variables.\r\nChange: 152525327\r\n\r\n* Automated rollback of change 152310869\r\nChange: 152528732\r\n\r\n* Add an env_var tf_sync_on_finish_bool that block until device has finished all queued operations in a step if true.\r\nChange: 152533676\r\n\r\n* Add more node attributes for HloInstruction on Tensorboard e.g. shape and layout etc.\r\nChange: 152534472\r\n\r\n* Add tf.complex64 GPU support to tf.gather.\r\n\r\nAlso add ldg specializations for std::complex.\r\nChange: 152537848\r\n\r\n* Formatting changes\r\nChange: 152544842\r\n\r\n* Upgrade TensorBoard TypeScript to 2.2.1\r\n\r\nSee also: #8326\r\nChange: 152545950\r\n\r\n* TEST:  Getting reasonable test sizes on linalg library, removing need for\r\nsharding.\r\nChange: 152546409\r\n\r\n* Disabling _testSourceUtilModuleReturnsTrue as its causing opensource issues.\r\nChange: 152548721\r\n\r\n* Fix race due to unsafe buffer forwarding in maxpooling second order gradients added in #6664.\r\nRe-enable previously flaky tests.\r\nClean up a few minor things in maxpooling_op_gpu.cu.cc\r\nChange: 152550050'"
32c80cd7a4240f7d373325c93e37c6468f1311c4,'Documentation: Fix bug in manual device placement example\nChange: 152563392'
ef2f8891ad409e41f4f9b8e9cfd86b519adb6da6,'Fix race due to unsafe buffer forwarding in maxpooling second order gradients added in #6664.\nRe-enable previously flaky tests.\nClean up a few minor things in maxpooling_op_gpu.cu.cc\nChange: 152550050'
35c88a7f7d0189809dfb630396566eec078dc5db,'Move MNIST pointers to mirror hosted by the CVDF on Google Cloud.\nFixes: #9031\nChange: 152504901'
f8e5c0620fd0395437c4317ada068258ef43d620,'Fix getting started guide\n\nExplain numerical differences in loss\nfix one example to print\nChange: 152466119'
3a997b0e28fc9dd89cdb9406cd607f80e3c08bd1,'Fix shape inference fn on _ParallelConcatStart.\nChange: 152466076'
0ca4d911321e60d27e91a93ef892332b1b9523ff,'Fixes documentation to note that the in case of ties the identity of the return value of ArgMin and ArgMaxis not guaranteed .\nChange: 152465346'
a957eb9cb5ccc238b3196707be4ed22b91b67913,'tfcompile: Be a little more verbose about missing required flags.\n\nFixes #9014\nChange: 152446338'
5226234de780d09cfdf5d83bbdaf065a73f8bc51,"'tfdbg CLI: add command list_source (ls) + UI fixes and improvements\n\nThe new list_source (shorthand: ls) command lists Python source files responsible for constructing the nodes and tensors encountered in the run() call.\n\nIt divides the source files into two categories and list them separately.\n1) files that are not part of the TensorFlow Python library, and\n2) files that are a part of it.\n\nThe list contains information about how many nodes, tensors and dumps of tensors the files is responsible for. The file paths contain clickable links to the existing print_source/ps command.\n\nThe list_source/ls command supports filtering by file-path and node-name regex patterns.\n\nUI fixes:\n* Fixed inconsistent black vs. transparent background color that made the layout look messy on some terminal types. Now using the transparent color for default font color consistently.\n* In the print_source command output, add clickable links to expand source lines and graph elements.\nChange: 152446002'"
f8dce81aeaff40dc78d398741854ad8766806f91,'fix windows gpu build by disabling nccl which currently will not (#9005)\n\ncompile/work on windows'
5fc14e22172722a115a282cbde8c4770e305aef5,'Fix layers_test exception regex matching.\nChange: 152422855'
96bc32eab3b21192bfd065a5944c12269fe3f5a4,"'[TF:XLA] Implement BatchToSpace, BatchToSpaceND, SpaceToBatch, SpaceToBatchND.\nFix crashes in core implementations of the same operators for zero-sized blocks.\nChange: 152416903'"
d599e9615237326bfb94a37a186fb495b0901ad6,"""Fixed test. ('broadcast_dims' has size 1)\nChange: 152383633"""
b0989a0280971034bd838fa176ae3f92b210e8dc,"""libtensorflow.so: Don't export private symbols.\n\nWith this change, libtensorflow.so will only export\nfunctions defined in c_api.h. This also results in\na decreased binary size of libtensorflow.so.\n\nOn Linux the decrease was from roughly 150MB to 67MB.\nOn OS X it was from roughly 101MB to 82MB.\n\nAlso fixes #8923\nChange: 152366053"""
e2177df4fc3000fcab237bebaf6900693904ad26,"'Merge rc1 back into master. (#8998)\n\n* Internal changes (#8808)\r\n\r\nChange: 151077399\r\n\r\n* Internal change.\r\nChange: 151391358\r\n\r\n* Fixes correctness of ProximalAdagrad and ProximalGradientDescent under normal training with L1/L2.\r\n\r\nAlso fixes issue where optimizers write to the same memory location multiple times, causing inconsistencies during distributed training.\r\nChange: 151479203\r\n\r\n* Support for domain buckets, e.g gs://bucketname.domain-example.com/...\r\nChange: 151516660\r\n\r\n* Initial release of installation guides for Java, C, and Go.\r\nUpdated leftnav_files to provide pointers to new installation guides.\r\nUpdated landing page (index.md) to distinguish between OS installs and language\r\ninstalls.\r\nChange: 151712658\r\n\r\n* Updating the Writing Tensorflow Documentation doc to reflect changes in TF1.0 and onward.\r\nChange: 151761382\r\n\r\n* Java: Maven: Fix some boo boos with the Windows installation.\r\n\r\n- The resource path should not use the platform\'s file separator.\r\n- Restore the commands to download and extract the Windows native libraries.\r\n- Unrelated tweaks the README\r\nChange: 151161421\r\n\r\n* Add the corresponding --action_env to .bazelrc from ./configure (#8637)\r\n\r\nThis will make the fetch phase reproducible so the refetch does\r\nnot happens unless people re-run configure (the environment variable\r\nare stored in the .bazelrc file).\r\n\r\nFixes #8619.\r\n\r\n* force grep to not use color (#8784)\r\n\r\n* Revert ""Add the corresponding --action_env to .bazelrc from ./configure (#8637)""\r\n\r\nThis reverts commit fba05c300bf6840e76787680ed7fd1239cdb9ad0.\r\n\r\n* Rollback of adjust contract change: Breaks backwards compatibility, and is inconsistent with other adjust_ops.\r\nChange: 151792071\r\n\r\n* tfdbg: fix a bug in graph validation related to tf.while_loops\r\n\r\nCL/147488620 fixed a bug where the debugger would hang at Enter and NextIteration nodes under certain conditions. But it introduced another bug where the debug dumps from Enter and NextIteration may get generated later than downstream nodes in the tf.while_loop body, causing ""causility violation"" during debug_data.DebugDumpDir\'s validation process under certain conditions (e.g., backpropagation on a dynamic_rnn). This CL fixes that by excluding Enter and NextIteration nodes from the validation process.\r\n\r\nFixes: #8337\r\nChange: 151787432\r\n\r\n* Updating the r1.1.0-rc0 references to r1.1.0-rc1.\r\n\r\n* Add bazel clean back info the configure script for 1.1 release.\r\n\r\n* Updating the authors in RELEASE.md and updating new bug fixes.\r\n\r\n* Implementing Yifei and Gunan\'s suggestions.\r\n\r\n* Increasing indent for one bug fix.\r\n\r\n* Disable gradients_test testWarnings for python versions 3.6 or above.\r\nChange: 151507105\r\n\r\n* Updating update version script (#8940)\r\n\r\n* Updating the install source files to be rc1 compliant. Updating the update_version script as well to handle these changes.\r\n\r\n* Removing extraneous input.\r\n\r\n* Removing the print statements.\r\n\r\n* Including the java, c, and go install files.\r\n\r\n* Fix unbound <table> tag. (#8960)\r\n\r\nChange: 152029426'"
62a07cc877b4f1fa403852a8231aa6ebf0191974,'Use html5lib version that bleach wants (#9004)\n\nFixes #8971'
43292decf62c1c16042a8da3a1ebd06d87c42d32,'links typo fix (#8984)'
046b7b0056340ddd2fff6f7d4552a4d942b9c87b,"'Fix the problem that no enough placeholders for persistent tensor\nbatch delete\n\nThe deleter_key is always a device_name, hence there is only one\nof it. Hence, we cannot delete >1 handles at one time.\n\nIn the fix, it creates delete placeholder on demand, the max\nnumber of placeholders is _DEAD_HANDLES_THRESHOLD.\nChange: 152322770'"
e69f71759adac4a794d5b159358af5253cb243bf,"'Branch 152232810 (#8988)\n\n* Improve py_func error handling.\r\n\r\nAutomatically translate some python errors into corresponding TF errors at runtime.\r\nChange: 152156821\r\n\r\n* Update interaction with libpng so that we use the public API instead of\r\nknowledge of the internal libpng data structures.\r\nChange: 152167754\r\n\r\n* TensorBoard plugins now contain their own name/route prefix.\r\nChange: 152167807\r\n\r\n* Passes trainable flag to separable_conv2d biases.\r\nChange: 152170239\r\n\r\n* Saving resource variables with a caching device.\r\nChange: 152171539\r\n\r\n* Drop loss from estimator_spec.eval_metric_ops, as required by core Estimator.\r\nChange: 152179924\r\n\r\n* sample_stats.percentile DOCFIX.\r\nChange: 152182295\r\n\r\n* Added a memory optimizer to grappler.\r\nChange: 152184170\r\n\r\n* Change default behavior of the tf runs selector:\r\n\r\n- If there are fewer than 41 runs, enable them all by default\r\n- If there are 41 runs or more, disable them all by default\r\n\r\nThis is in response to user complaints that having it enable only the first ten runs by default was confusing, because it was not obvious to users that some runs had been disabled.\r\nHowever, it still solves the initial user complaint that having very many runs simultaneously enabled would lag the UI.\r\n\r\nI also changed the ""toggle all runs"" button to try to turn everything off before turning everything on.\r\nAlso, I improved the logic for detecting when the runs selection is back in the default state, so that we can avoid generating long URI strings wherever possible.\r\nChange: 152188948\r\n\r\n* Autogenerated Change: Change TensorBoard TAG to 52\r\nChange: 152189000\r\n\r\n* Remove warning that only happening with config cuda.\r\nChange: 152189205\r\n\r\n* Make resource variable shared name consistent with non-resource variables.\r\n\r\nRemove colocation constraint from resource variable cached value with the\r\nvariable itself.\r\nChange: 152192203\r\n\r\n* Add a way to specify the optimization order; refactor and add constant folding to meta optimizer.\r\nChange: 152193646\r\n\r\n* Backport fixes and improvements from external Keras.\r\nChange: 152198296\r\n\r\n* Merge changes from github.\r\nChange: 152200430\r\n\r\n* Go: Update generated wrapper functions for TensorFlow ops.\r\nChange: 152200754\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 152203174\r\n\r\n* Make ImportGraphDef() work with functions.\r\n\r\nIn addition to modify graph_constructor.cc, this patch adds some other\r\nfunctionality to enable importing fucntions:\r\n* Ability to add FunctionDefLibraries to Graphs and\r\n  FunctionLibraryDefinitions (in addition to existing functions)\r\n* FunctionDefsEqual() utility function\r\nChange: 152205258\r\n\r\n* Expand contrib test to more than just test targets.\r\nChange: 152206822\r\n\r\n* Preserve graph version during optimization\r\nChange: 152213262\r\n\r\n* Exclude enter and exit nodes from shape refiner\'s constant folding.\r\nChange: 152213637\r\n\r\n* Allow reshape_mover and algebraic_simplifier to make multiple mutations, by avoiding the short-circuit\r\nstd::any_of.\r\nChange: 152232810\r\n\r\n* fixing workspace.bzl\r\n\r\n* workspace.bzl further fixes\r\n\r\n* fixing tensorflow.bzl merge conflicts\r\n\r\n* fixing typo in dnn.h\r\n\r\n* fixing bad merge for dnn.h'"
8268476073824a55eb25c127f6fe0d5b5374f75d,'Fix ./configure script\n1. Add %workspace% in .bazelrc file when using import statement\n2. Write action_env into bazelrc file for required environment variables for OpenCL support\nChange: 152290700'
97c447c0fc0c0c85473287b2828460cbab3f8128,'Fix flaky tests\nChange: 152272801'
916fcfb39a23afd96893bf85cb6f29c71a483642,'Fix dynamic_rnn transpose bug (can input/output non-3d tensors).\n\nAlso a few cleanups to RNN code.\nChange: 152267628'
94947b59417af27fb6cf0049355b49c97afd93ae,'contrib/slim: Fix broken links in README.md (#8974)\n\nFixes #8969'
9477900946f923cb43ed76ed215490d01474bfe7,'Backport fixes and improvements from external Keras.\nChange: 152198296'
7284cd8615067fc887648fe973a418f13a5529e4,'sample_stats.percentile DOCFIX.\nChange: 152182295'
a88279b76fe1e1ed7b0223f1c4a5b554b2567049,'TensorBoard plugins now contain their own name/route prefix.\nChange: 152167807'
36a47f2bdcbbdf302da6f292ceee366ebd9640d2,'Fix unbound <table> tag. (#8960)\n\nChange: 152029426'
5ee21f26bb9f96daddee1cfab3269892f8049148,'fixing merge conflicts'
0873aa5725dfb401d32ed73e0d28583e3cdc8069,'Fix all 64/32 bit warning in core/common_runtime.\nChange: 152141388'
9c4124ce9249aa5b2edca441a8e2a01cf6587ddb,'Fix two ongoing breakages in Jenkins postsubmit\nChange: 152138513'
a02a3318ccc228638a1bda1d5ad6631cf780b329,'Fix the build in contrib/factorization.\nChange: 152089511'
98602f5d0b53e4d4068de336deb8eec21a5b20c9,'Update pypi description to reflect that our manylinux1 wheel does not conform\nto PEP531.\nFix #8802\nChange: 152066556'
e18c7a5332b97ddcaad7f5485c46ad8dc8fcd274,'Fix a bunch of compiler warnings.\nChange: 152059475'
c06042dfee9280db1c940352088adc320d5e6722,'Update lstm_ops.cc (#8915)\n\nfix o in doc'
b63e9b5a01d94bb13b38b77eaacf00ec4d72b698,'Fix build broken by cl/151008918 by adding missing #include.\nChange: 152045097'
7ab36077ef94631144d50cc310c3a9658d572052,"'tutorials/monitors/iris_monitor.py fixes (#8927)\n\n* Iris_Monitors.py validation metric prediction key\r\n\r\nupdate to ""classes""\r\n\r\n* Iris_monitors.py import removed\r\n\r\ncode to import MetricSpec\r\n\r\n* iris_monitors.py repetitive code removed\r\n\r\ncode should not have been duplicated'"
ba17eb445d53d0a68cded931e16e6cb4cb554dc8,"'Remove --no-deps flag from pip install of tensorflow whl in pip.sh\n\nFixes ongoing breakages related to the new dependencies of the\ntensorflow wheel (e.g., bleach and markdown).'"
663eaa05bf1bfa2e84d60b16dc6f4d49cecc8b9a,"""Fix the circular dependency tf/contrib/tensorboard <--> tf/tensorboard.\n\ntf/tensorboard should not depend on tf/contrib/.. This is resolved by moving projector_config.proto from tf/contrib/tensorboard/plugins/projector to tf/tensorboard/plugins/projector.\n\nThe user-facing API hasn't changed. `ProjectorConfig` is still exposed as `tensorflow.contrib.tensorboard.plugins.projector.ProjectorConfig`.\nChange: 152030381"""
ca881f4767a2076f3d085cbeb36dfafd98ffafbc,'Fix unbound <table> tag.\nChange: 152029426'
0a455e7ed945d2f27a76f0761fcb62a62c8cc7b5,'Merge pull request #8816 from Intel-Corporation/mkl-convbwdfix\n\nThread-safe implementations of MKL kernels and rerolling changes lost in previous merge'
be84d60fc6cefe90d548f3c6e79340f5a132ae9f,'Merge pull request #8882 from maidens/patch-1\n\nMinor fix to saved_model/builder_impl.py docstring'
1f2c3866dc1cad44cd321e34e02623e523c5df3e,'Merge pull request #8863 from falcondai/master\n\n minor edit to sequence_loss doc. fix issue-8755'
00d72581b3f71fe4cdffd861da84ad2c4bd31ba5,'Fix reference to proto2 in boosted_trees.\nChange: 151917679'
1044c0ee945327294d2d6fdd93f6b4da9f529cf7,'Windows: Fix cuda_configure.bzl for Bazel build (#8837)\n\n* Windows: Fix cuda_configure.bzl for Bazel build\r\n\r\n1. Remove corresponding action_env before writing it\r\n2. Add quote to environment variables\r\n3. Return a dummpy value for gcc detection on Windows\r\n\r\n* Use import .tf_configure.bazelrc in .bazelrc\r\n\r\n* Small fix\r\n\r\n* More fixes after merge\r\n\r\n* Add TF_CUDA_CLANG=0 on Windows after merge'
643573d41f770961255707a1aa9413d54f979ba3,'Fix bug where we ignore errors in RecvOutputsAsync.\nChange: 151899658'
9a92e63e9d10489bcf184f8203026d5cc71f3742,'Fix typo.\nChange: 151885257'
e5f156eb77e72f0bc879631d4758865fcdbeb842,'Increasing indent for one bug fix.'
5c8c0782ea6ab7c6cf65b72e03da726271e90268,'Updating the authors in RELEASE.md and updating new bug fixes.'
fe416cc557caf77ee66728f2ddf08130b4d14f3c,'Fix links in docs.\nChange: 151876042'
004692ba538ec48d3b937f95d055e1935d9a2133,'Merge pull request #8869 from caisq/r1.1-patch\n\n[cherry-pick] tfdbg: fix a bug in graph validation related to tf.while_loops'
ad078f8cd8fc4486e15786e43d4659329fa708b7,'Fix condition for skipping sampling by treating sample_ids as a boolean array instead of a list of indices.\nChange: 151863667'
d922630aaf1f603af552cb468fd7fef9cec44d64,'Fix inequalities in Estimator.train().\nChange: 151858259'
f07d3a31f278cf9e21f3cf90eafa054b25244c1c,'Minor fix to saved_model/builder_impl.py docstring'
ac933c956a01187b626a4095ea00822364cfb6c2,'Fix issue in installing latest nightly tensorflow pip wheel in ubuntu:16.04-based gcs_test Dockerfile\nChange: 151843345'
0fe523ac05f1f49145f4b243953a7aad331ea4dc,'tfdbg doc: fix code blocks under numbered bullets\nChange: 151838508'
93e822ea4f16ec33110ef4d2bb24d2f9aa2e9eaa,"'Fixes a bug where heads/pre-canned estimators were not exporting proper classes tensor.\nServo expects classes to be a string tensor of the same shape as scores and containing the labels for corresponding scores. While creating output alternatives, if classes tensor does not match these conditions, we create a new tensor with these properties.\nChange: 151838225'"
bbd2047cf3a715a1431889ad8f558576a5382876,"'[XLA:HLO] Minor fix for Clamp shape inference, and add some tests.\n\nPreviously Clamp(f32[5], f32[], f32[9]) returned success, but it now returns a\nfailure.  Noticed while debugging a different problem.\nChange: 151835981'"
86780b511d774ea6e0c065c308a1e7e6a86d60d3,"'Add support for dict generator input_fn in learn_io (#7045)\n\n* Branch to test_tensorflow\r\n\r\n* using types.GeneratorType for validation\r\n\r\n* changed to receving generator function\r\n\r\nThis allows to run multiple epochs of a finite generator\r\n\r\n* using placeholders as keys to feed dictionary\r\n\r\n* added correct counter for the index_placeholder\r\n\r\nadded corrections to tests\r\n\r\n* removing extra spaces\r\n\r\n* doc_string fixes\r\n\r\n* Changed logic to handle final batch\r\n\r\nif the generator ends  it restarts to fill the final batch\r\n\r\n* Added check that dictionary is returned from gen\r\n\r\nfixes in tests\r\n\r\n* Fixes in docstrings, tests and target_key bug\r\n\r\n* All tests fixed and pass\r\n\r\n* Added generator_input_fn to __init__\r\n\r\n* revert repo and branch in dockerfile.devel to original\r\n\r\n* docstring changes based on reviewer comments\r\n\r\n* target returns now a dict of labels\r\n\r\ntarget_key can now be a list of keys to be used to populate the target\r\n\r\n* added more test functions for the new label dict possible errors\r\n\r\n* if label is a single feature return a tensor (to make it work with estimator object)\r\n\r\nmoved asserts to begining of generator_input_fn\r\nadded test for dictionary with single input as generator return\r\n\r\n* Added sorting to keys to ensure order\r\n\r\n* moved _GeneratorFeedFn to contrib\r\n\r\n* fixed numpy import\r\n\r\n* Revert ""Added sorting to keys to ensure order""\r\n\r\nThis reverts commit 4ad3a0ddee7f263c650fefe9139a95099d457467.\r\n\r\n# Conflicts:\r\n#\ttensorflow/python/estimator/inputs/queues/feeding_functions.py\r\n\r\n* removed duplicate generator feed function from contrib feeding_functions.py\r\n\r\n* indendation fixes and added sorted keys again\r\n\r\n* fixed imports\r\n\r\n* removed extra lines from feeding_functions\r\n\r\n* removed unnecessary import in feeding_functions\r\n\r\n* fixed sorting of keys\r\n\r\nadded ability to pass any container of target_keys (e.g. list set tuple)\r\nraise KeyError if mismatch between genarator dict keys\r\ndocstring fixes\r\n\r\n* add empty line between class methods\r\n\r\n* Fixing some final formatting\r\n\r\n* Undo misguided types import\r\n\r\n* fixed indentation back to two spaces'"
7ce8fb4ef2e1bf25db1c1667e71d78cfc42e802d,'[tf learn estimators] Bugfix to rnn_common following rollback of RNNCell instance argument support.\nChange: 151829043'
35e9035b8c76306cc85ed4871660ffb78d484a3a,'TESTFIX:  LinearOperatorFullMatrix placeholder test was not using a\nplaceholder.\nChange: 151822825'
7b410ebea68bb26b3166a357cf7c1e8946a1b35b,"'tfdbg: fix a bug in graph validation related to tf.while_loops\n\nCL/147488620 fixed a bug where the debugger would hang at Enter and NextIteration nodes under certain conditions. But it introduced another bug where the debug dumps from Enter and NextIteration may get generated later than downstream nodes in the tf.while_loop body, causing ""causility violation"" during debug_data.DebugDumpDir\'s validation process under certain conditions (e.g., backpropagation on a dynamic_rnn). This CL fixes that by excluding Enter and NextIteration nodes from the validation process.\n\nFixes: #8337\nChange: 151787432'"
99559a3455d7c3b3663968a55bf56801743201d0,"'tfdbg: fix a bug in graph validation related to tf.while_loops\n\nCL/147488620 fixed a bug where the debugger would hang at Enter and NextIteration nodes under certain conditions. But it introduced another bug where the debug dumps from Enter and NextIteration may get generated later than downstream nodes in the tf.while_loop body, causing ""causility violation"" during debug_data.DebugDumpDir\'s validation process under certain conditions (e.g., backpropagation on a dynamic_rnn). This CL fixes that by excluding Enter and NextIteration nodes from the validation process.\n\nFixes: #8337\nChange: 151787432'"
3e98a1a52fe2e322ddecf5fd89d3337fd34ed72e,' minor edit to sequence_loss doc. fix issue-8755'
e8ee5286a686c6fc3057ba7cf9ba9ef7003789a6,"""Remove 2**40 size limit on TensorShape and harden to overflow\n\nThe limit was preventing valid uses of TensorShape as the dense shape of very\nlarge sparse tensors.  There's no security advantage to the limit, since a\nmemory allocation of 2**40 bytes is already far beyond a reasonable machine\nsize.  The new limit is std::numeric_limits<int64>::max().\n\nIn addition, the previous TensorShape code did not check for overflow when\nmultiplying, which meant an operation as simple as\n\n    tf.gather(tf.zeros([2**5, 2**60 + 1]), 7).eval()\n\nwould appear as valid during TensorShape construction and then crash.\nA new MultiplyWithoutOverflow function does the correct overflow checking.\n\nFixes #8494.\nChange: 151778176"""
6187242334f85934f3c025b5b27f42dc4364a94e,'Add the corresponding --action_env to .bazelrc from ./configure (#8637)\n\nThis will make the fetch phase reproducible so the refetch does\nnot happens unless people re-run configure (the environment variable\nare stored in the .bazelrc file).\n\nFixes #8619.'
badffcd162d2ed6a43914267704f476a33f3f0e6,"""Java: Maven: Fix some boo boos with the Windows installation.\n\n- The resource path should not use the platform's file separator.\n- Restore the commands to download and extract the Windows native libraries.\n- Unrelated tweaks the README\nChange: 151161421"""
c617074d0988ff4301f2ed613f791238e2676876,"'Fixes correctness of ProximalAdagrad and ProximalGradientDescent under normal training with L1/L2.\n\nAlso fixes issue where optimizers write to the same memory location multiple times, causing inconsistencies during distributed training.\nChange: 151479203'"
3bb48276cf1b4d509d2ebec402da090576591e7f,'A small style fix.\nChange: 151769063'
e3d33b80cfd11537488320da18f9944185df7d62,"'Fix ReshapeMover to handle scalar operands correctly, particularly for Select.\nChange: 151753464'"
1308255efa0ad373aa306839d0acd4fb199f62ca,'Bug fix involving weight update (#24)\n\n* weight update\n\n* bug fix'
bbdd4a7f6508c32042dcff10025fd39aeba72cdc,'FIxed merge issues'
709e9c4c830edad909bb2781ac13f428cc7709d1,"'Fixed calling libxsmm_spmdm_* by supplying \'T\' for ""transpose"" instead of \'Y\' (a.k.a. ""Yes""). This fixes the issue unveiled by some of the regression tests (Thank you for reporting!). (#15)'"
8ea7c8ffc5a39fa81d2de854e4033a7199aaaddc,'Upgraded to the latest version of libxsmm to fix build errors'
1c156f643c9e5cdf5b349f43111b0cd1391ef468,"'Preparation for LIBXSMM 1.8 (#13)\n\n* Fixed libxsmm_config_arguments: Fixed the incorrect value supposed to trigger auto-prefetch. Fixed the 0-threshold, which is now accounted for in LIBXSMM (by just populating the default threshold). The problem arised from the assumption ""threshold: fallback to BLAS if n*m*k above this"", which is wrong (the threshold populates an upper bound until which JIT code is generated). The previous configuration perhaps caused all sorts of issues due to other values derived from the 0-threshold. Note, explicitly JIT\'ting code is/was never subject to a threshold.\n\n* Upgraded to libxsmm 1.6.5\n\n* Enable the use of libxsmm for matrix multiplications\n\n* Enable the use of libxsmm to speedup 1x1 convolutions (which are\ncomputed using matrix multiplications)\n\n* Fixed libxsmm_config_arguments in libxsmm.BUILD (#7)\n\n* Fixed libxsmm_config_arguments: Fixed the incorrect value supposed to trigger auto-prefetch. Fixed the 0-threshold, which is now accounted for in LIBXSMM (by just populating the default threshold). The problem arised from the assumption ""threshold: fallback to BLAS if n*m*k above this"", which is wrong (the threshold populates an upper bound until which JIT code is generated). The previous configuration perhaps caused all sorts of issues due to other values derived from the 0-threshold. Note, explicitly JIT\'ting code is/was never subject to a threshold.\n\n* Make use of TensorFlow\'s allocation infrastructure even when using LIBXSMM allocation functions. In particular, the (cached) libxsmm_spmdm_init now relies on TF\'s cpu_allocator().\n\nFor C++ code, one can use a libxsmm_scoped_allocator<kind> in order to (temporarily) setup a different allocation mechanism. For instance, using libxsmm_tf_allocator<libxsmm_scratch_allocator> changes LIBXSMM\'s scratch allocator to rely on TensorFlow. The libxsmm_tf_allocator provides two kinds of c\'tors: (1) the no-argument variant adopts TF\'s cpu_allocator(), whereas the one-argument form (2) adopts the allocator from the given OpKernelContext. Changing the allocator in LIBXSMM with pending buffers (from different allocators) is valid, and all other services in LIBXSMM\'s ""malloc domain"" work regardless of the allocation mechanism (e.g., libxsmm_malloc_size).\n\n* Simply renamed API items in order to follow changes in LIBXSMM 1.7. This is incomplete as more changes/adjustments are needed.\n\n* Account for removed non-check API.\n\n* Include libxsmm_malloc.h now that libxsmm_tf_allocator is used.\n\n* Renamed libxsmm_dnn_create_conv_handle to libxsmm_dnn_create_conv_layer.\n\n* Renamed LIBXSMM_DNN_CONV_FORMAT_* to LIBXSMM_DNN_TENSOR_FORMAT_*.\n\n* Renamed libxsmm_dnn_destroy_conv_handle to libxsmm_dnn_destroy_conv_layer.\n\n* Include missing header file (libxsmm_malloc.h).\n\n* Renamed LIBXSMM_DNN_CONV_KIND_* to LIBXSMM_DNN_COMPUTE_KIND_*.\n\n* Account for the fact that datatype_in/out is now only datatype (libxsmm_dnn_conv_desc structure).\n\n* Updated to new libxsmm_dnn_link_* functions.\n\n* Updated to use new libxsmm_dnn_bind_* functions.\n\n* Fixed calling libxsmm_dnn_transpose_filter.\n\n* Updates in preparation of LIBXSMM 1.7 (#8)\n\n* Fixed libxsmm_config_arguments: Fixed the incorrect value supposed to trigger auto-prefetch. Fixed the 0-threshold, which is now accounted for in LIBXSMM (by just populating the default threshold). The problem arised from the assumption ""threshold: fallback to BLAS if n*m*k above this"", which is wrong (the threshold populates an upper bound until which JIT code is generated). The previous configuration perhaps caused all sorts of issues due to other values derived from the 0-threshold. Note, explicitly JIT\'ting code is/was never subject to a threshold.\n\n* Upgraded to libxsmm 1.6.5\n\n* Enable the use of libxsmm for matrix multiplications\n\n* Enable the use of libxsmm to speedup 1x1 convolutions (which are\ncomputed using matrix multiplications)\n\n* Make use of TensorFlow\'s allocation infrastructure even when using LIBXSMM allocation functions. In particular, the (cached) libxsmm_spmdm_init now relies on TF\'s cpu_allocator().\n\nFor C++ code, one can use a libxsmm_scoped_allocator<kind> in order to (temporarily) setup a different allocation mechanism. For instance, using libxsmm_tf_allocator<libxsmm_scratch_allocator> changes LIBXSMM\'s scratch allocator to rely on TensorFlow. The libxsmm_tf_allocator provides two kinds of c\'tors: (1) the no-argument variant adopts TF\'s cpu_allocator(), whereas the one-argument form (2) adopts the allocator from the given OpKernelContext. Changing the allocator in LIBXSMM with pending buffers (from different allocators) is valid, and all other services in LIBXSMM\'s ""malloc domain"" work regardless of the allocation mechanism (e.g., libxsmm_malloc_size).\n\n* Simply renamed API items in order to follow changes in LIBXSMM 1.7. This is incomplete as more changes/adjustments are needed.\n\n* Account for removed non-check API.\n\n* Include libxsmm_malloc.h now that libxsmm_tf_allocator is used.\n\n* Renamed libxsmm_dnn_create_conv_handle to libxsmm_dnn_create_conv_layer.\n\n* Renamed LIBXSMM_DNN_CONV_FORMAT_* to LIBXSMM_DNN_TENSOR_FORMAT_*.\n\n* Renamed libxsmm_dnn_destroy_conv_handle to libxsmm_dnn_destroy_conv_layer.\n\n* Include missing header file (libxsmm_malloc.h).\n\n* Renamed LIBXSMM_DNN_CONV_KIND_* to LIBXSMM_DNN_COMPUTE_KIND_*.\n\n* Account for the fact that datatype_in/out is now only datatype (libxsmm_dnn_conv_desc structure).\n\n* Updated to new libxsmm_dnn_link_* functions.\n\n* Updated to use new libxsmm_dnn_bind_* functions.\n\n* Fixed calling libxsmm_dnn_transpose_filter.\n\n* integrated LIBXSMM 1.7\n\n* support for LIBXSMM 1.7 (#9)\n\n* Upgraded to libxsmm 1.6.5\n\n* Enable the use of libxsmm for matrix multiplications\n\n* Enable the use of libxsmm to speedup 1x1 convolutions (which are\ncomputed using matrix multiplications)\n\n* integrated LIBXSMM 1.7\n\n* updated LIBXSMM to 1.7.1\n\n* updated to LIBXSMM 1.7.1 (#10)\n\n* Upgraded to libxsmm 1.6.5\n\n* Enable the use of libxsmm for matrix multiplications\n\n* Enable the use of libxsmm to speedup 1x1 convolutions (which are\ncomputed using matrix multiplications)\n\n* integrated LIBXSMM 1.7\n\n* updated LIBXSMM to 1.7.1\n\n* merge alheinecke master (#11)\n\n* Upgraded to libxsmm 1.6.5\n\n* Enable the use of libxsmm for matrix multiplications\n\n* Enable the use of libxsmm to speedup 1x1 convolutions (which are\ncomputed using matrix multiplications)\n\n* integrated LIBXSMM 1.7\n\n* updated LIBXSMM to 1.7.1\n\n* Take new translation units into account (LIBXSMM 1.8).\n\n* Account for adjusted header dependency in LIBXSMM (TODO: API to avoid incl. header from LIBXSMM\'s src).\n\n* Trigger rebuild if template changed (LIBXSMM).'"
1272fe8c8c6cf77668f3e04def37b6308579756f,'Fix a bug that the numpy_input_fn pollutes the method arg.\nChange: 151746565'
63b2f999d3f22cfe915b89103faa1b0a1b1b7617,'Enable snappy.\nFix implicit type cast bug in snappy_inputbuffer. Bitwise OR of unsigned int and signed char can cause unexpected issues so we explicitly cast it to unsigned char.\nChange: 151737878'
4d35ecb853f5e9c7d41df3629a31dcbc7b4032ca,'Copy handle dtype and shape to the placeholders created inside Defun context\nfor captured external tensors.\n\nAlso fix a minor bug in ResourceVariable that dtype from deserialization contains integer enum value rather than dtypes.DType instance.\nChange: 151723784'
ddef51c1c93f66989ac7a88b88b89f5b2a9df599,"'Clarify and correct Android Sections in WORKSPACE (#8689)\n\n* Clarify and correct Android Sections\r\n\r\nBuild Tools version updated to latest version shipping with Android Studio.\r\nAdded some comments to clarify both this and NDK Level details that have been causing confusion.\r\n\r\n* Update Build Tools Version\r\n\r\nAndroid studio uses 25.0.2 now (I think) and complains about incorrect bulid tools version in gradle. This fixes it. Not sure if this is unique to my android studio though because I have latest version?\r\n\r\n* Requested changes to WORKSPACE for Android\r\n\r\nClarification of comments to the android section at the top. Comments added to avoid common confusion.\r\n\r\n* Update Dockerfile.android to clarify build tools.\r\n\r\nI don\'t understand this dockerfile too much but I gather that this will download and use the correct build_tools_version regardless? Nonetheless, updated to 25.0.2 as a minimum and added a comment to assist troubleshooters in the future.\r\n\r\n* Update build_tools_version and add comment\r\n\r\nAdded comment to clarify build_tools_version updates and changed it to 25.0.2\r\n\r\n* Update WORKSPACE\r\n\r\n* Update WORKSPACE\r\n\r\n* Update Dockerfile.android\r\n\r\n* Update WORKSPACE\r\n\r\n* Updated for ""the"", lines and line wrapping'"
1ba53b9057003995470527052791e656677698cb,'[TF:XLA] Fix copy-and-paste error in error message for ResourceApplyRMSProp.\nChange: 151713569'
14fb4194c67ded2c966e488b64acd73c4d97ab04,'Merge pull request #8844 from ebigelow/master\n\nFix doc for svd'
d83714e7d73ab23601a37d506ea059631f89212c,'Merge pull request #8826 from asimshankar/java-readme-fix\n\nJava: Formatting tweaks to READMEs'
300eab45906e3b39afcb20c8089f8a0e935aa2fc,'fix python 2 and 3 compatibility bug'
e19802fbe01bc375b3c98f79487851c310e6e015,'Merge pull request #8839 from bhaprayan/patch-1\n\nFix resources section link'
8b6624f2bbe6e65ce6750d240d859dcf417846ec,'Fixed error in docstring for svd'
ddc7c6a7d9dadeb616a17df83020d6b77e791f7f,'Fix resources section link\n\nUpdated the resources section link to point to the correction page on tensorflow.org'
6e5f92ffc743c9b1765ffe4b79aac29a7059d464,'Fix docstring for get_variable to indent collections correctly.\nChange: 151681007'
649ac9824678b3233c2ef568f6a6102fe54050e5,'Move equal_graph_def.h/cc from core/graph to core/util\n\nThis fixes build dependencies for a future patch (specifically allows\nreferencing equal_graph_def.h from core/framework)\nChange: 151668115'
bca9716c517f05277497da16a358286098a1070d,'[TF:XLA:GPU] Fix flaky convolution tests by increasing test tolerance.\nChange: 151662713'
55a1f26547f18ddc5c5b5c8a07479591a4ba789d,"'fixed broken references to summarize_graph (#8781)\n\n* fixed broken references to summarize_graph\r\n\r\n""summarize_graph.cc"" doesn\'t exist (anymore),\r\nupdated references to ""summarize_graph_main.cc""\r\n\r\n* Update README.md'"
b9e1950716f1089de41459fea59a70ed708e6f1b,'Merge pull request #8814 from Staberinde/missedCompatToBytesDeepdreamExample\n\nFixed python 3 compatibility issue for DeepDream example notebook'
7a70b4d3f2ba1eb9fcc0092b3ab4f468a984cccf,"""Merge branch 'master' into mkl-convbwdfix"""
a7616da17f1469454476485328258b4d81257d15,"""Fix transpose benchmark's throughput computation.\nChange: 151589798"""
a7d60270d564a2aa7ece58f1c3d9fad8c7def594,'Replay of #8637: Add the corresponding --action_env to .bazelrc from ./configure\n\nThe original PR got overriden by bc456e361d49d1d89a74b80060c70efb51fd7d87\n\nThis will make the fetch phase reproducible so the refetch does\nnot happens unless people re-run configure (the environment variable\nare stored in the .bazelrc file).\n\nFixes #8619.'
f30918b3694afe844990cbddc82e27e023d88856,'Fixed some formatting issues in Installing TF on Linux and Installing TF on Mac OS.\nChange: 151538676'
c5cd1f758f067fcb6f5e38ea27a6cd5cb9ab78e8,'Fix incorrect inclusion of tensor_forest all_ops.\nChange: 151524146'
d4b8c7b06ad1daab10ddc5953dec6c349f47052f,'[XLA] Break fix for compiler scoping error in OSS compiler.\nChange: 151518190'
58bfd6ec8e32e4e0783b0563e033430061c3262a,"'Fix shape handling errir in convolutional layer.\n\nIndexing TensorShape returns a Dimension object, and the result cannot be\ncompared directly to None.\nChange: 151517447'"
ff11ab744665c575859b87dda45e7260981ebaa0,'Merge pull request #8747 from jamesmishra/patch-1\n\nFix broken link in Android example README'
125e153703341df9ad8209154331487db52d5461,'Fix the data not found warnings in TensorBoard.\nChange: 151510876'
557b7b85f6d1ac6879f23b9b57828ce7ccfd57dd,'[CMake] Enabling CPU optimization with MSVC (#8737)\n\n* MSVC SIMD instructions\r\n\r\nAdding option to enable SIMD instructions when compiling with MSVC.\r\n\r\n* adding MSVC SIMD optimization instructions\r\n\r\n* Fixing SIMD error message\r\n\r\n* Updating SIMD optimization doc'
26e7d874a1bfe6b406b11701ea405cc8d66241d3,'Document learning rate parameter with regards to the original paper.\n\nIn response to #8528\nFixes #8528\nChange: 151507159'
3e3e35b463da7de6575a15021c2d16ef43e0210b,'Embedding Projector: Fix broken link to documentation. The link changed due to the new tensorflow website.\nChange: 151503219'
622713560012c44f2903ace5c4d7fc24474ca1dd,'Fixed typo in doc.\nChange: 151488679'
1297f732d7755c04922b1124cadb02aa2589e351,"'Fixes correctness of ProximalAdagrad and ProximalGradientDescent under normal training with L1/L2.\n\nAlso fixes issue where optimizers write to the same memory location multiple times, causing inconsistencies during distributed training.\nChange: 151479203'"
904edee4456a61d50d5b1ffe9858a7772acc423e,"'Max pool grad grad (#6664)\n\n* Adds cpu and gpu kernels for max pooling grad grad\r\n\r\n* Adds operations to tensorflow C++ registry\r\n\r\n* Adds python gradient definition for average and max pooling\r\n\r\n* Adds maxpool grad grad to the list of hidden ops\r\n\r\n* Update shape inference function for MaxPoolGradGrad\r\n\r\n* Fixes max pool grad grad cpu kernel\r\n\r\n* Adds grad grad grad for max pool and avg pool\r\n\r\n* Updates gpu kernel to correctly accumulate gradient\r\n\r\n* Adds tests for max pool grad grad (python bindings)\r\n\r\n* Fixes max pool grad grad op error message\r\n\r\n* Updates cpu and gpu kernels (accumulate only single value)\r\n\r\nCurrent implementation propagates only one maximum value in top_diff. To be\r\ncompatible with cudnn and the rest of tensorflow api propagate only single value\r\n(specifically should_stop flag is added into inner loop of kernel)\r\n\r\n* Adds gpu grad grad kernel for HCWC data layout\r\n\r\n* Defines pooling ops for all real number types\r\n\r\n* Registers kernels properly\r\n\r\nGroup kernels and register them using compiler macros. This allows to easily\r\nadd new types for kernels.\r\n\r\n* Declares functors for max pooling kernels with support for double\r\n\r\nThis allows to use templates and conveniently register kernels. Further\r\nrefactoring may combine cpu and gpu ops. However, currently cpu does not support\r\nall the variants which are available for gpu.\r\n\r\n* Forward declaration of max pool 3d grad grad and registers gradients\r\n\r\n* Updates cudnn pooling bindings to support double\r\n\r\nChanges to core stream_executor merely duplicate method for float with\r\ndifferent type.\r\n\r\n* Adds test for maxpooling with double\r\n\r\n* Registers 3d pooling with half precision floats\r\n\r\n* Adds kernels for max pool3d grad grad\r\n\r\n* Increase margin for second order gradient to 1.5e-2\r\n\r\ntestMaxPoolGradValidPadding2_1_7_3d on gpu fails with 1e-2 margin (error is\r\n0.102). Increases margin so tests can pass. On cpu tests passes with 1e-2\r\nmargin. The differences are related to different numerical precision on gpu and\r\ncpu.\r\n\r\n* Adds 3-rd order gradient for max pooling\r\n\r\n* Remove redundant comment (eigen pooling works only with floats)\r\n\r\n* Update shape function for max pool grad grad\r\n\r\nMore comprehensive check for input and output shapes for op.\r\n\r\n* Fix confusion with planes/rows/cols in kernel call\r\n\r\n* Update tests for 3d pooling kernels\r\n\r\n* Respect clang google format\r\n\r\n* Update cudnn pooling loading for double\r\n\r\nReference commit: 191658d54f90ac03c15b339326129cd52d1f56a3\r\n\r\n* Fix function name typo in python\r\n\r\n* Buildifier auto-fix for build file\r\n\r\n* Fix typo mistake\r\n\r\n* Remove redundant context checks\r\n\r\n* Replace allocate_output calls with forward_input_or_...\r\n\r\n* Use double for alpha and beta with cudnn pooling for doubles\r\n\r\n* Updated doc for MaxPoolingGradGrad\r\n\r\n* Update doc for MaxPoolingGradGrad kernels\r\n\r\n* Rename s/margin/tolerance/ and update doc string\r\n\r\n* Remove unnecessary zero initialization and lunch with cuda config\r\n\r\nFor MaxPoolGradGrad kernels zero initialization is unnecessary. Therefore,\r\nremoving it might save some computation time.\r\n\r\n* Use assertAllCloseAccordingToType\r\n\r\n* Fix MaxPool3dGrad op definition and default type for maxpool\r\n\r\nPrevious registration uses orig_input: float and grad: T. To pass compatibility\r\ncheck two types for the input and output is necessary\r\n\r\n* Fix pooling_ops_3d test for xla compiler\r\n\r\nGrad operations for pooling 3d were hidden like pooling 2d grads.'"
968539fd469fff76f0903b89eb68c015e05a5295,'Fix copy-paste error in ConstantR4FromArray4DWithLayout().\nChange: 151462530'
c573c4a00662b4e8c117a978861f71919b16b7cb,"'BUGFIX:  Correct definition of positive definite.  Previously, we stated things\nwere PD if all eigenvalues have positive real parts.  This is incorrect, and\ndifferent than the definition that that quadratic form have positive real part.\nChange: 151455600'"
699f9d4ed3b85bb801ce6111732396b6244746fc,"'TESTFIX:  Test for dirichlet multinomial was flaky (once every 15 days).\nEverything is seeded, so not sure why.  Perhaps an occasional low value of\nalpha caused covariance to be near zero, and this caused a failure because\nrelative tolerance near zero events should be poor, and then we figure maybe a\nfail happens due to different float precision on different machines.  This\nattempted fix is to increase alpha.\nChange: 151453406'"
dac7b6b52171a8f4216b1d83c2ce9827ab0188ea,"'BUGFIX:  Incorrect use of tensor_util.constant_value results in unneeded\nrotation of argument \'x\'.  This rotation is done correctly, but static shape\ninformation was lost.\n\nWhat was incorrect?  When tensor_util.constant(value) returns a bool, it returns np.array(True) or np.array(False), which is not the same object as ""True"" or ""False"".  Therefore,\ntensor_util.constant_value(anything) is False\nwill *always* evaluate to False.  Instead, you should use\ntensor_util.constant_value(anything) == False\nor == True.\nNote that implicit boolean is also bad, since constant_value can return None.\nChange: 151428047'"
832f9a79af2040c3f190adecd6642c6b979b0ab3,'Create a new tempdir for each test to fix the race condition for sharded tests.\nChange: 151403279'
ad93dc71f1154c0a4935b1bd86653f29acc8fdfa,'Java: Update documentation with instructions for Maven and Windows.\n\nFixes #7877\nFixes #6926\nChange: 151400818'
b105b9f5badf22e4b25d643cb769183f420db9bc,'Merge pull request #8730 from yongtang/03262017-doc-python-learn\n\nFix broken links in `contrib/learn/python/learn/README.md`'
1e33acb381430ed0004eb76b98181624af267b2c,'Use str(Label(...)) in tensorflow.bzl for use as a submodule (#8606)\n\ntf_kernel_library and friends do not currently work if called from a\r\nrepo that contains tensorflow as submodule.  Justine recommended this\r\nas the right fix.\r\n\r\nFixes #8439.'
b32a1b7294b9d8b4fe07d3b4ecde1a83a68d2ace,'Update hexagon supported op list and fix hexagon execution sample tests\nChange: 151366249'
c0d4a6929a181cd3501dc9502e2c020d0515a053,"'Fix op description for BatchMatMul to state that it works for >= 2D, not > 2D.\nChange: 151341608'"
6b6dd247a514482e1878ccf8f1d04e97c9199b0f,'Merge pull request #8735 from seo-3/fix_attribute_error\n\nFix no attribute prediction_key error'
c790c772d7dbbf075acc689adc3d508f61bff950,'Merge pull request #8714 from tae-jun/patch-1\n\nFix typo at description of tf.nn.conv1d'
d255e9093149e027da10f573ef9983e0d5299b00,'Tensorboard smoothing 1st order lag filter (#8363)\n\n* Fix tensorboard smoothing.\r\n\r\n* Whitespace stuff.\r\n\r\n* Preserve small averating window width at start.\r\n\r\n* Review comments.\r\n\r\n* Alternative smoothing using first-order IIR lag filter.\r\n\r\n* Whitespace and cleanup.\r\n\r\n* Review comments.\r\n\r\n* Revert tf-tensorboard.html.'
9fd71390a9839c7912d83fffd4f762ea4970e3f1,"'Checkpoints default values for RunConfig (#8488)\n\n* Default value of save_checkpoints_secs\r\n\r\nTo not use the default value of save_checkpoints_secs if save_checkpoints_steps is specified in the RunConfig call\r\n\r\n* Update run_config.py\r\n\r\n* Addressing None, None caller input \r\n\r\nAs mentioned in the review comments, the caller many not want any checkpoints and can pass None, None for these parameters. This is to address that case.\r\n\r\n* Fix indentation\r\n\r\n* Update run_config.py'"
66385003ac8b24580ca2b3a68f94395fa4c4bcbe,'Merge pull request #8631 from critiqjo/attn-wrapper\n\nMinor bugfix in DynamicAttentionWrapper; improve docs'
58eb4099558c14f1c53b40f0d4462a7d19b84c75,'Merge pull request #8750 from orgkhnargh/patch-1\n\nFix code block indent in TensorFlow Linear Model Tutorial'
9135048fa8d5228d3f22b3604b7022d431f7574c,'Fix code block indent'
bb09c45fb6a0ef791f94ba23b51855117ba53414,"'Fix broken link in Android example README\n\nIssue  #8742 identified that the link to os_setup.html does not work for the master version.\r\n\r\nos_setup.html is still available for old versions ( https://www.tensorflow.org/versions/r0.11/get_started/os_setup#prepare_environment_for_linux ), but it makes more sense to link directly to the Bazel installation instructions.'"
8dc2898fb38eddcdbaeac381b515b7bde0283d84,'Fix no attribute prediction_key'
05ef7bdb0f9d5a71af9841eac5137d5d110330f3,'Update README.md\n\nadd space to fix separation line rendering'
026a150d48ed66f0d119cc997f3426c48a85e2d9,"'Fix broken links in `contrib/learn/python/learn/README.md`\n\nThis fix fixes broken links in `contrib/learn/python/learn/README.md`\nby replacing g3doc with appropriate URLs, e.g.,\n```\n-    ([docs](../../../../g3doc/api_docs/python/contrib.learn.md#LinearClassifier))\n+    ([docs](https://www.tensorflow.org/api_docs/python/tf/contrib/learn/LinearClassifier))\n```\n\nNOTE: Inside `contrib/learn/python/learn/README.md` there are still\nseveral `g3doc` references. However the remaining links are actually\ncorrect and are not broken.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
dbca4f78380d56c0b144daa058decaea2bbf55ff,"'Remove pandas imports, and use convert_to_tensor, as suggested in the review.\n\nThis fix removes pandas imports, and use convert_to_tensor,\nas suggested in the review.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
0799c7fd65b7778aa24db9e8a1d26127f773dde7,"'Merge pull request #8707 from chsahit/patch-1\n\nUpdate Tensorboard readme with fixed links, fixes #8706'"
d3c6961c7ff76e4b28b31c6ea5a08c7ef5423798,'Fix typo at description of tf.nn.conv1d'
40d6853cb9a1465f044db7048f04155d0351634c,'documentation formatting fix\n\nApplied formatting of section of\r\nhttps://www.tensorflow.org/api_docs/python/tf/nn/softmax_cross_entropy_with_logits\r\nto responding section of\r\nhttps://www.tensorflow.org/api_docs/python/tf/nn/sparse_softmax_cross_entropy_with_logits'
241d4abbe96972048cd15080f8465aacabcbf179,'Update Tensorboard readme with fixed links'
060e002e70e1abf04144a107fde939bda4051ac5,"'[XLA] Rematerialize subcomputations.\nExtend HLO rematerialization to rematerialize subcomputations in addition to the entry computations. Outer nesting levels of computations are rematerialized before inner nesting levels because inner subcomputations may be while bodies where rematerialization is more expensive. Also\n\nAlso fix latent bug in call_graph dealing with fusion instructions, and extend HloInstruction::Clone to accept a string suffix (eg, ""remat"") for the clone name.\nChange: 151179956'"
404db0358aacc0fc2319fc333df4cc5bc0fc404a,'Fix tfprof to measure the actual kernel execution time.\nChange: 151166174'
fdf32bc5ede067b000c42f6404df8ab98e56ec11,"""Java: Maven: Fix some boo boos with the Windows installation.\n\n- The resource path should not use the platform's file separator.\n- Restore the commands to download and extract the Windows native libraries.\n- Unrelated tweaks the README\nChange: 151161421"""
c44601f5411408c324c81dd38bc8686cbd2568aa,'Fix two compiler warnings (#8695)'
f2574c273778eeb05a8ef3ba40544ddee98a9e07,'Fix lint issues after pull.\nChange: 151154030'
59cc69a9c8212d5232c3ace7e7a4a36d9bf8b91e,"""fix `needs_broadcasting` expression (#8537)\n\nin Python3, `range()` function doesn't create lists, so `[0, 1, 2] != range(4)[:-1]` always returns True"""
5c5b6643848b04cf636c71e110e817748c1a9702,"""softmax_loss_function in tf.contrib.legacy_seq2seq and tf.contrib.seq2seq now requires named arguments in order to prevent mixing up labels and logits\n\nAlso added lint fixes and fixed a broken/hidden test that wasn't being run\nChange: 151069880"""
004ec6d2bc67a06c2af5bfb21d62a6863529044c,'Edits and fixes to SDCA-based tf.learn estimators:\n- Renaming SDCARegressor to SDCALinearRegressor\n- Improving documentations\nChange: 151065563'
fe97705b706c9dcd36586b6158e30758346c6afd,"'MKL support for max/avg pooling and relu (#8296)\n\n* Adding MKL support for Max/Avg Pooling and ReLU\r\n\r\n* Missed the mkl layer registry files\r\n\r\n* Fixed sanity check errors with buildifier\r\n\r\n* Adding MKL support for Max/Avg Pooling and ReLU\r\n\r\n* Missed the mkl layer registry files\r\n\r\n* Fixed sanity check errors with buildifier\r\n\r\n* Adding Intel Conv2D kernel implementation alongwith required Graph passes\r\n\r\nThis commit contains 4 main components:\r\n\r\n1) Intel-optimized kernel implementation for Conv2D op\r\n   Implementation in kernels/mkl_conv_ops.*\r\n\r\n2) Graph passes required to enable Conv2D optimized implementation\r\n   Implementation in graph/mkl_*. We also need a new op, MklToTf op.\r\n   Its implementation is in kernels/mkl_tfconv_op.cc.\r\n\r\n3) Utility functions used in kernel implementation\r\n   Implementation is in common_runtime/mkl_layer_registry* and util/mkl_util.h\r\n\r\n4) BUILD changes for Conv2D, graph passes and utility functions\r\n\r\n* Refactor MKL convolution forward pass computation into smaller functions. Changed configure to point to newer MKLML library\r\n\r\n* Moved Mkl helper datastructures and routines to private class members\r\n\r\n* MKL op registration changed to use existing op registry (nhasabni)\r\n\r\n* Fixed buildifier error\r\n\r\n* Adding MKL support for Max/Avg Pooling and ReLU\r\n\r\n* Missed the mkl layer registry files\r\n\r\n* Fixed sanity check errors with buildifier\r\n\r\n* Removed the mkl layer registry (should not have been added) and made fixes according to the code review comments\r\n\r\n* Adding Intel Conv2D kernel implementation alongwith required Graph passes\r\n\r\nThis commit contains 4 main components:\r\n\r\n1) Intel-optimized kernel implementation for Conv2D op\r\n   Implementation in kernels/mkl_conv_ops.*\r\n\r\n2) Graph passes required to enable Conv2D optimized implementation\r\n   Implementation in graph/mkl_*. We also need a new op, MklToTf op.\r\n   Its implementation is in kernels/mkl_tfconv_op.cc.\r\n\r\n3) Utility functions used in kernel implementation\r\n   Implementation is in common_runtime/mkl_layer_registry* and util/mkl_util.h\r\n\r\n4) BUILD changes for Conv2D, graph passes and utility functions\r\n\r\n* Refactor MKL convolution forward pass computation into smaller functions. Changed configure to point to newer MKLML library\r\n\r\n* Moved Mkl helper datastructures and routines to private class members\r\n\r\n* MKL op registration changed to use existing op registry (nhasabni)\r\n\r\n* Fixed buildifier error\r\n\r\n* Adding MKL support for Max/Avg Pooling and ReLU\r\n\r\n* Missed the mkl layer registry files\r\n\r\n* Fixed sanity check errors with buildifier\r\n\r\n* Removed the mkl layer registry (should not have been added) and made fixes according to the code review comments\r\n\r\n* Fixed rebase messups\r\n\r\n* Added documentation for mkl pooling op parameters\r\n\r\n* removed layer registry reference from mkl relu op'"
978a1e0f63c96deed8c213fa063d07b532b863aa,'FixedLenSequenceFeature for parsing a variable-length tensor with parse_single_example.\nChange: 151038761'
5b4a597b088344ff55c917a505eacefe605737aa,'[CMake] Fix for building tools with GPU (#8636)'
afbeb7df73bc5929644dc33754493122a57da5aa,'Fix typo referring to provided strategy function byte_size_load_fn.\nChange: 151036671'
2226b6f600a1c9beb3c21dee8819551e8b4a0a05,'Fix misleading text in TensorBoard tutorial.\nChange: 151012934'
f598a193868aee0ab952b6b8faf556566ae06d87,"'Mkl kernels (#8184)\n\n* Adding MKL support for conv_ops\r\n\r\n* Adding Conv2D backpropbias, filter and input kernels; removing MklLayerRegistry\r\n\r\n* Fixed immutable_ops_test failure and added code review modifications from Jing'"
5c75f363e198d7c2de78df5faf1d6dd3eb9a1f3c,'Small fixes to the C++ docs.\nChange: 150999781'
f00b5c9b2e1c3c02ff5ebe49e3a95cc28d15946c,'fix unit test bug'
81fcc25ae5c92318ff607a5be3ff06446e232134,"'Fixed a Minor Bug, due to use of global keyword in file tensorflow/python/platform/googletest.py (#8634)'"
61de65654faa5989c5afe16637f1ebd6b41da4b1,"""Fixed badly formed error message.\n\nBefore: ('Inputs should have rank 4Received input shape:', '(4, 10, 8)')\nAfter: 'Inputs should have rank 4. Received input shape: (4, 10, 8)'\nChange: 150967908"""
4b86783ac6c3af9c35d3af36d4db0e9bc11f21c0,"""Fix docstring Args/Raises/Returns parsing (Don't assume there is a blank line between).\n\nFix whitespace in copy_elements doc-strings\nFixes #8364\nChange: 150952638"""
fba05c300bf6840e76787680ed7fd1239cdb9ad0,'Add the corresponding --action_env to .bazelrc from ./configure (#8637)\n\nThis will make the fetch phase reproducible so the refetch does\r\nnot happens unless people re-run configure (the environment variable\r\nare stored in the .bazelrc file).\r\n\r\nFixes #8619.'
189744b722b83f1ae5d2086c96d25525cf1cbd89,'Add test case to support object with `__array__` as input for tf.constant\n\nThis commit adds a test case to support object with `__array__` as\ninput for tf.constant.\n\nThis fix is part of the PR to address 2318.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'
2259213c3d768c5b2e6450087464774cd1d0cfce,'Merge pull request #8639 from av8ramit/cherrypick_windows\n\nCherrypick fix windows gpu build (#8603)'
81761d7d07018af6665a20afe74b99b18ba02728,"'Undo a breaking change to the public API; while retaining the bugfix of #8504.\n\nAs it turns out, the intent of constructing tf.layers._Layer with reuse=True\nis to reuse the subscope containing the layer\'s name.  This was broken before the recent change fixing #8504, but that change didn\'t actually fix the problem (it introduced a different bug!).  Here we finish fixing #8504.\n\nThe following will now work correctly:\n\na = Dense(3, name=""a"")\na.apply(...)  # scope of a is ""a""\n\na_reuse = Dense(3, name=""a"", _reuse=True)\na_reuse.apply(...)  # scope of a_reuse is ""a""\n\nthe errant behavior was that a_reuse scope became just """".\n\nThe alternative behavior can still be recreated via:\n\na_reuse = Dense(..., _reuse=True)\na_reuse.apply(..., scope=tf.get_variable_scope())  # scope of a_reuse is """".\nChange: 150947095'"
7d0360a3dc78ff454e3c2783831b970b1b6306f0,"'Fixes a bug where heads/pre-canned estimators were not exporting proper classes tensor.\nServo expects classes to be a string tensor of the same shape as scores and containing the labels for corresponding scores. While creating output alternatives, if classes tensor does not match these conditions, we create a new tensor with these properties.\nChange: 150943474'"
52681c3e855b43078f9843b30a8e5fca21fb27b8,'fix windows gpu build (#8603)'
2d196b553f3a06c39cacc664efd3032f1d7ec043,"'Support pandas Series and DataFrame as input for tf.constant\n\nThis fix tries to address the proposal raised in 2318 to support\npandas Series and DataFrame as input for tf.constant.\n\nAs was explained in 2318, Series and DataFrame has `__array__`\nmethod, which is the standard API used for indicating that an\nobject is coercible into NumPy arrays.\n\nThis fix adds the support for objects with `__array__` to be\nserved as input for tf.constant.\n\nThis fix fixes 2318.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
176833807d68f3fac8f35b912d67b378235746a0,'Fix and re-enable the flaky test in ExperimentTest.\nChange: 150927460'
9e5533fe3d04d4ce5b6f23b7362796d85b5fa5f2,"""Fixing a bug with the tf_kernel_library rule where the exclude attribute in the globs didn't include the prefix. This causes issues with build rules such as contrib/rnn:gru_ops_kernels.\nChange: 150921333"""
7c455b0e909bf0a5309fd6970ef858bff31d7d24,"'Fix internal build, a build file got merged in boosted_trees.\nChange: 150918469'"
0351ed1612f237165bec239cedd7b98cf2331565,'Fixed unintentional reversion of Savable objects in Estimator export.\nChange: 150916165'
98d43edd3383421b1ec24780ba7e6ed931694157,'Minor bugfix in DynamicAttentionWrapper; improve docs'
a5493db6082a6fe29ed11e71f2aab5bfdf5f98c7,'Fix the bug of not passing the couple_input_forget_gates flag to BidirectionalGridLSTMCell.\nChange: 150906718'
039c74293abfc8e9263ca80ab4facdde658dfb03,"'tfdbg: Let LocalCLIDebugWrapperSession error out when OpErrors happen prior to graph execution\n\nPreviously, LocalCLIDebugWrapperSession attempts to continue running and provide user with error information, instead of erroring out, even when OpError subtypes (e.g. FailedPreconditionError, InvalidArgumentError) occurred during the underlying Session.run() call. This works for errors that happen in the middle of the graph execution (e.g., most dimension mismatch errors). But if an OpError happens before any debug dump is generated, e.g., during partition graph construction due to invalid device names, LocalCLIDebugWrapperSession will mask the OpError and generate confusing error messages. The error messages complain about missing debug dump directory.\n\nFor details, see the referred GitHub issue #8507.\n\nThis CL fixes this issue by letting LocalCLIDebugWrapperSession raise the same exception as the unwrapped tf.Session does in case of this type of pre-graph execution OpErrors.\n\nFixes: #8507\nChange: 150894042'"
b35a22c36a2500bf00d14fab16276ba75cc7af2f,"""tf.clip_by_value: prevent unintentional broadcasting\nwhere the output is not compatible with the input.\n\nThe clipping should never produce a shape that is different than\nthe input.  We can catch such cases by using TensorShape's merge\nto validate (when statically known) when this accidental broadcasting\nis happening, though we have no way of preventing this when the user\nchooses dynamic batch sizes (e.g., None's).\n\nAdds a test for a test case that shouldn't pass, which did before.\n\nRELNOTES: clip_by_value and clip_by_norm contract tightened to ensure\noutput shape matches input shape (no accidental broadcasting). This is\na bugfix that may break models that have a bug in them (clipping ops\nby definition should not change the shape of the input tensor).\nChange: 150893660"""
3116fa80450735e907907bc57a6834e9e212570a,"'Allow zero samples in RandomGamma (#7950)\n\n* Allow zero samples in RandomGamma\r\n\r\nFixes #7406.  Instead of an error with zero samples,\r\nwe now return a zero-shape tensor.\r\n\r\n* Address comment, simplify samples=0 case.\r\n\r\n* formatting'"
4b553d2325bef388fdbae4a868189c6c7e7cbf57,"""Fix several minor issues with C++ custom ops (`adding_an_op.md`) documentation (#8546)\n\nThis fix tries to address several issues related to C++ custom ops\r\n(`adding_an_op.md`) documentation:\r\n1. The `tf.load_op_library('zero_out.so')` should use full path or relative path (`./`)\r\n   (This issue has been raised in #4727 as well).\r\n2. The mentioning of `zero_out_op_1.py` and `tf.load_op_library('zero_out_op_kernel_1.so')`\r\n   is really misleading. While `zero_out_op_1.py` is located in\r\n   `tensorflow/examples/adding_an_op/`, the documentation (`adding_an_op.md`) does not\r\n   really use `zero_out_op_1.py`. It is better to use the `zero_out.cc` that\r\n   is presented in the doc.\r\n\r\nThis fix changes `tf.load_op_library('zero_out.so')` to `tf.load_op_library('./zero_out.so')`\r\nand updates a few places so that following the documentation could have the expected result.\r\n\r\nThis fix fixes #4727.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>"""
dead59557c31e71a0a6842d4682141803e1a9b58,'Fixed pooling layer example. (#8512)\n\nAnd improved consistency by keeping same name over whole example.'
9967bf6702153631e27f52ac95ab822f73fe758d,"""Move module-level comment out of _RNNCell class (#8458)\n\n* Move module-level comment out of _RNNCell class\r\n\r\nThe _RNNCell class docstring contained a description of the module\r\nitself. I moved it back to the module's docstring.\r\nI also fixed a comment that wasn't correctly indented.\r\n\r\n* Reorganizing rnn_cell_impl module docstrings\r\n\r\n- Moves the module docstring of `python.ops.rnn_cell_impl` to\r\n`contrib.rnn.python.ops.core_rnn_cell_impl`, where the actual\r\nimplementation of all the LSTM cells is located.\r\n- Adds a module docstring to `python.ops.rnn_cell_impl`, explaining\r\nthat the module contains an abstract definition of the `RNNCell` and\r\nthat the actual implementations are located in `contrib`."""
dc09bf6e3e6d3ac36c36b2c2c16c6746c9700e32,'fix documentation of tf.switch outputs (#8599)'
57bd2fd0fac59fcdd5f6d15a05da35ef6d324367,"'Assert Bazel version from tf_workspace() (#7799)\n\n* Assert Bazel version from tf_workspace()\r\n\r\nThis ensures that projects depending on TensorFlow, e.g. TFServing, will\r\nbenefit from the version check.\r\n\r\nThe mandatory version has also been bumped up to Bazel 0.4.4 which has been out\r\nfor 21 days. It includes numerous very important fixes. TensorFlow also appears\r\nto not work without it.\r\n\r\n* update version to 0.4.5'"
da52fa9cc9aea2867e1a6c6c9d1659a6ff6f5911,'Fix prettyprinting.\nChange: 150881055'
553b04f292eb18dbb9f1a0a9c8459db8360dce5a,'examples change to sklearn dataset load method (#7512)\n\n* examples change to sklean dataset load method\r\n\r\n* fix blank lines\r\n\r\n* fix blank lines and import order'
0e7cd27dabfdaf2552f5840ab6a956a336772e70,'fix windows gpu build (#8603)'
c06dc89f301653777c6716e3cff37f8d74c74b1f,"'Release notes for 1.1 release (#8605)\n\n* Release notes for 1.1\r\n\r\n* Indented RNNCell note\r\n\r\n* Removed duplicate note\r\n\r\n* Updated RNN cell note\r\n\r\n* Updated RNN cell note\r\n\r\n* Updated spectral comment, mac gpu support comment and fixed username\r\n\r\n* Reword tf.spectral message.'"
540a812c820c530d5f650f6ae49bba59d47e8291,'Fix some documentation formatting errors.\nChange: 150841749'
0eafa2485ebde630760602e5dac8895eedce27b9,'Fixes data races in the executor and ops around Refs.\nChange: 150825189'
656a201768cc63fa106ed5c4585b29df40954714,"""IPv6 compatibility fixes for TensorBoard\n\nAlso adds unit tests for Tensorboard's HTTP server construction.\nChange: 150811562"""
a76603c189769eddf67ca77c88aff674e58e2e15,"""Further improvements to TensorBoard scalar dashboard range setting.\n\n- Fix a bug where the y axis doesn't display properly when all the data is the same value (and that value is not in [0,1])\n- Stop trying to be clever about setting the upper bound on the y axis for data in the unit interval, but do keep logic for including 0 as the lower bound.\nChange: 150786094"""
1cef828056cb70bbc180577e6f505dfd7235ab48,'Merge pull request #8543 from palimarrao/update_sess_run_docs\n\nFix some comments in the run() method of the BaseSession class.'
0b939e44258e1211bd0f95318641a6f853f09ce9,'Fix an edge case in direct TensorHandle feed during Session.run()\n\nThe edge case involves using TensorHandles as direct feed(s) for Tensor(s) that are also present in the fetch list.\nChange: 150713525'
cb9d67def133b238b0ebba62392e672410a40f0d,"""Change behavior of tf.layers._Layer: scope (if not provided) is set lazily.\n\nAlso fixes #8504.\n\nThis doesn't affect any existing users (no one is using the OO api yet).\nHowever is necessary for compatibility with RNNCell; and the behavior has\nbeen somewhat ambiguous up until now.  Defines a behavior and adds unit tests\nto make it clear.\n\nThe original behavior of _Layer is to immediately create the variable scope\nit will use, in its initializer.  However, this doesn't work with _reuse=True,\nand may not be the right behavior in general.\n\nWith RNNCells' current design the internal scope is set lazily based on the\nfirst __call__ into the layer.  This allows one to write:\n\ncell_fw = LSTMCell(...)\ncell_bw = LSTMCell(...)\n... = tf.nn.dynamic_bidirectional_rnn(cell_fw, cell_bw, ...)\n\nthen cell_fw gets the variable scope '.../bidirectional_rnn/fw/lstm_cell' and\ncell_bw gets the variable scope '.../bidirectional_rnn/bw/lstm_cell'; thus their\nvariable names are tied to their function.\n\nFurthermore, this change allows Layers constructed with reuse=True to reuse\nthe scopes within which they are **called** the first time.  Before this,\na new scope was always created, and having reuse=True would just lead to\nerrors (see, e.g., github issue #8504).\n\nwith tf.variable_scope('new_scope'):\n    ker = tf.get_variable('kernel', [5, 6])\n    tf.layers.dense(inputs=tf.constant(np.random.randn(3, 4, 5)), units=3, reuse=True)\n\nused to raise:\n\nValueError: Variable new_scope/dense/kernel does not exist, or was not created with tf.get_variable(). Did you mean to set reuse=None in VarScope?\n\nThe new (correct) behavior is to reuse the 'kernel' variable in scope 'new_scope'.\n\nI have additionally added an optional argument scope= to the __call__ method\nto provide a way to provide a scope upon application.  This scope is used\nonly if the layer has not yet been built and no scope has yet been provided.\n\nAdded unit tests to show the behavior.\nChange: 150701086"""
fbad4e056e45a9743f10cec44b2e3c73674fe8ca,"'Fixed the order of arguments for softmax_loss_function in two places, including a semantic code change.\nChange: 150685391'"
3c9ba5673cf560ded0739530b673ab0a05d43630,"""[XLA] Fix undefined behavior on int32 overflow in prng_test\n\nThis is calling Square<int32>(65280), the result doesn't fit into an int32.\nLLVM takes advantage of this and changes the behavior of the code, making the\ntest fail when optimization is enabled (e.g. in msan and tsan mode).\nChange: 150672767"""
d8d0bab6301ea7a4f32eb5cc6b13d1d495aa5e7a,"'tfdbg: improve file paths & causality check under suboptimal timestamp resolution\n\nOlder versions of Windows (e.g., Windows 7) have lower temporal resolution in timestamps than other platforms. On such Windows machines, multiple dumps of the same or different tensors may end up with the same timestamp, causing\n1) failures in the causality check in the constructor of DebugDumpDir,\n2) occasional overwriting of previous tensor dumps and core metadata files,\n3) loss of ordering information for debug watches of a tensor that is dumped multiple times during a Session::Run() call, e.g., due to While loops.\n\nThis CL addresses those two issues:\n1) DebugDumpDir._validate_dump_with_graphs now examines tensor dumps of the same timestamp to take into account the possibility of timestamp collision during dependency validation.\n2) During the dumping of tensors, file path collisions are checked and if they occur, an index suffix (e.g., ""-1"", ""-2"") is appended to the file path.\n3) The core metadata Events files now include session_run_count in their names, to avoid collision due to same timestamps.\nChange: 150670298'"
fc6b9aec8aec033d08eb478d95a3a7f3db3f0dcd,'Fixes broken gpu kernel registration for resource variables.\nChange: 150664185'
af62b5ccb9d06381096d18418920d06390d90be9,"'Fixed the order of arguments for softmax_loss_function in two places, including a semantic code change.\nChange: 150685391'"
36a706d97af7ad6317395e2a3cba5ab5f1cd49a7,"""[XLA] Fix undefined behavior on int32 overflow in prng_test\n\nThis is calling Square<int32>(65280), the result doesn't fit into an int32.\nLLVM takes advantage of this and changes the behavior of the code, making the\ntest fail when optimization is enabled (e.g. in msan and tsan mode).\nChange: 150672767"""
9142d6164b1be58b2e2adf6ba7be6e46a942ff5a,"'tfdbg: improve file paths & causality check under suboptimal timestamp resolution\n\nOlder versions of Windows (e.g., Windows 7) have lower temporal resolution in timestamps than other platforms. On such Windows machines, multiple dumps of the same or different tensors may end up with the same timestamp, causing\n1) failures in the causality check in the constructor of DebugDumpDir,\n2) occasional overwriting of previous tensor dumps and core metadata files,\n3) loss of ordering information for debug watches of a tensor that is dumped multiple times during a Session::Run() call, e.g., due to While loops.\n\nThis CL addresses those two issues:\n1) DebugDumpDir._validate_dump_with_graphs now examines tensor dumps of the same timestamp to take into account the possibility of timestamp collision during dependency validation.\n2) During the dumping of tensors, file path collisions are checked and if they occur, an index suffix (e.g., ""-1"", ""-2"") is appended to the file path.\n3) The core metadata Events files now include session_run_count in their names, to avoid collision due to same timestamps.\nChange: 150670298'"
c89fc94236087703695dd9cbc7453cad4ba48bb0,'Fixes broken gpu kernel registration for resource variables.\nChange: 150664185'
92eb06d2e4d98bcd58c8f4d7c68de0d3c637e181,'Typo fix for data type mismatch error.\nChange: 150650257'
be548898294ccc41cc9d740116f3899a8be51fc1,'Fix estimator subdirs when running tests on the pip-installed tensorflow.\nChange: 150646570'
97bb657c6d3849bfddead2c4c6f68c53157d7982,"'tfdbg: Ensure that the curses UI can run in a child thread, and only one runs at once.\n\nFixes: #8047\nChange: 150631022'"
4376dd7278c3f8da1ea7ac330bc6473163793d17,"'special_math_ops:  Fix handling of empty arrays in lbeta.  We now follow the (standard) convention that the sum over the empty set is 0, and the product is 1.  This same standard is followed elsewhere in TF, so this is a fix.\n\nAs a side benefit, no conditionals or asserts are needed.\nAlso, this fixes a Github issue. #8391#issuecomment-286648477\nwhich is addressed by the test  test_four_dimensional_arg_with_partial_shape_dynamic\nFixes #8391\nChange: 150614295'"
11ddeeb83bc7e43ec4408fd7eb778d3931f1249c,'Fix some comments in the run() method of the BaseSession class.'
baa85cbf5e51a21f58bc28ef9eedc122e6118eb8,'Merge pull request #8520 from yongtang/03182017-md-quote-align\n\nFix misalign of code blocks in `tensorflow/tools/ci_build/README.md`'
1058ad9ce9609ee3ee8b6dcbb044f3b5c34df3d1,"'Fix misalign of code blocks in `tensorflow/tools/ci_build/README.md`\n\nThe code blocks in `tensorflow/tools/ci_build/README.md` are misaligned,\ndue to the unaligned pair of ""```bash"" and ""```"".\n\nThis fix fixes the misalign.'"
504816b752cea83a848d3b3eb1cdf94b8bea1596,"'Identify and fix bug in handling of variable-length data in ExampleParserOp.\n\nThe bug was that the parsing code generated blocks of output, where each block may contain 0 or more var-len batch entries.  I had originally assumed that each block corresponded to a single minibatch entry.  The existing unit tests were small enough that this always ended up to be true because for small batch sizes, the thread pool just gave each minibatch entry its own block.  But for any reasonable batch size, this assumption broke down and I would accidentally skip copying some minibatch data to the output Tensors.\n\nThis has now been fixed.\nChange: 150509644'"
0845c37f13fc355021d53ad3dcb15b37116f295a,'Fix indentation in code snippet for SavedModel builder.\nChange: 150493560'
c76bc807c3089069d520edd6ab7f3f07a0c76f53,'Fix link in `constant_op.py`.\nChange: 150466902'
8e138e7273f7a45bfdd020020b030d928c7297bf,'Fix mis-spelling.\nChange: 150450082'
d1415bdc03fcdb090752ab0c91ee529dc09eb4ee,'Merge pull request #8499 from mszep/patch-1\n\ntensorboard README: fix grammar mistake'
e4236e0ce64a7d926e9f87761a266d4351976d9e,'tensorboard README: fix grammar mistake'
a0ca4bcb81dfd07fdb1c7872b5852f84cfc1a081,'Fix separable convolution bias check\nChange: 150385615'
e05cfa65258bf83315fa07b4ca6dbd1a821d63d0,'Upgrade bazel to 0.4.5.\n - Feature in 0.4.5 is required for cuda_configure to stay fix\n   #7575\nChange: 150376995'
424662da7d9d81e6f4af634424b4b4a8d788e4e8,'Fix estimator tests when running against the installed pip package.\n\nThis change allows the importing from tensorflow.python.estimator.* for usage in tests.\nChange: 150356830'
f8d1f5b5aa07d395bcba105f1f3d5d76f53d4546,'Fix minor error-handling bug (#8468)'
f2ec1f000e2e52112907b362a4ee3d72bd6aa8a3,"'Fix broken link in `tensorflow/examples/learn/README.md` (#8479)\n\nThis fix fixes broken link in `tensorflow/examples/learn/README.md`\r\n```\r\n../../g3doc/tutorials/tflearn/index.md => https://www.tensorflow.org/get_started/tflearn\r\n```\r\n\r\nThis fix change the g3doc into tensorflow.org link, per:\r\nhttps://github.com/tensorflow/tensorflow/pull/8169#issuecomment-284800453'"
73394f4c06c19265e44a65728c6cf25b0fab25f9,'Fixed a race condition in the single_cluster code\nChange: 150345708'
e8aefd216930667ff0b278d24cf411b216a9c100,'tfdbg: test examples and binaries against pip install\n\nI realized that CL/149810103 forgot to include the tfdbg binary and examples in the pip package.\n\nThis CL fixes that and adds pip test for the correct inclusion of these files.\nChange: 150345489'
af2ebdb827f0b07d8f7d2b76b061976a2a778cb0,'Fixing 2 minor issues as suggested by Gunan.'
91d502ad1f752838371c0f5059c1b2dce5f6e074,'Fix flaky experiment_test.\nChange: 150289601'
3212251f95153eed0b63653124e08018fc9da6f9,'resize_image_with_crop_or_pad can work with batch of images (#7369)\n\n* resize_image_with_crop_or_pad can work with batch of images\r\n\r\n* use _BatchImageDimensions\r\n\r\n* use _BatchImageDimensions\r\n\r\n* _ImageDimensions takes rank\r\n\r\n* add require_static to _CheckAtLeast3DImage\r\n\r\n* fix tests'
3d489f2ef23b540aa835d2182b12c1830833b4f0,'Fix broken links in in docs_src/ (missing $)\n\n  Delete OpMatcher and op_type from guide (they have been deleted from the public api).\nChange: 150267754'
90d964f3382faf30d291aa3fbdb509844e1f042a,'Avoid raising an exception when we fail to delete a session on shutdown.\n\nFixes #3388.\nChange: 150265211'
1626c7bb6473f759218752d128aad2e7da64af4f,'[XLA] Fix crash when loading a serialized computation with dependencies between embedded computations.\nChange: 150233783'
3290a5d13d1094988314f0cd995940f0d355505f,'tfdbg: minor doc string fix\nChange: 150227865'
2fdd1784d59dda69c840fa699220a79f72cbd5c0,'fix issue #8325 (#8437)'
a86b86a2d25efbc5767ac5d270725bf85db183ff,"""Windows: Fix TensorFlow Bazel build (#8426)\n\n* Windows: Remove explict reference to nodejs binary\r\n\r\n@org_nodejs//:bin/node doesn't work on Windows, since it's supposed to\r\nbe @org_nodejs//:node.exe\r\n\r\n* Windows: Fix Bazel build after #8217\r\n\r\n1. Use COMPILER_MSVC instead of PLATFORM_WINDOWS, because the latter one\r\nis only defined in tf_copts. Some targets don't have tf_copts will fail to\r\nbuild, eg. //tensorflow/core/distributed_runtime/rpc:grpc_remote_master\r\n\r\n2. Add TF_COMPILE_LIBRARY in tf_copts\r\n\r\n* Windows: Fix the pip package dependencies in Bazel build\r\n\r\n1. Remove some targets that doesn't build yet.\r\n2. After https://github.com/bazelbuild/bazel/issues/2088 is fixed,\r\n   //tensorflow/tensorboard is buildable now.\r\n\r\n* Windows: Remove python tests than are already deleted from bazel_test_lib.sh"""
f45bd8318daf6656787cf1a37e69b93fa3045d91,'Fix small typo in seq2seq (#8427)'
c8188b10b974b706177a319dd7c8d6a28f871859,'Fix unit tests which rely on IPv4\nChange: 150200536'
496a6ac03200bb518b4a9ea74b7b24ef58cbf918,"""TF_GraphImportGraphDef bug fix.\n\nIt's okay to import graphs containing deprecated ops.\n\nFixes #8396\nChange: 150199261"""
3c5de8536b367dfe3566b09c1a3ae2703624844e,'Fix lint errors in test utilities\nChange: 150165844'
012f9c10dcc27a838ed4b170b9036483bc2c5869,'fixes bug in logging utilities file that prevented the package from loading in interactive environments (eg. Zeppellin) (#8420)'
85002f5be5c8d8b411af36e4f214f0de898fc1d4,"'fixed a bug in tensordot (#8282)\n\nwhen one operand had a partially known shape, and the other\r\noperand had only one dimension, the function would incorrectly throw an exception'"
79dcde355ee58ed826dc068f8a315b9cafce9a94,"'configure: Bugfix (#8413)\n\ncommit 429d14d435259899ff0436014187fe35c6cdd1d7 introduced\r\nTF_BAZEL_TARGETS. However, it turns out that if:\r\n\r\nTF_BAZEL_TARGETS=""//tensorflow/... -//tensorflow/contrib/nccl/...""\r\nthen\r\nbazel fetch ""$TF_BAZEL_TARGETS""\r\nwork out fine, but\r\nbazel fetch $TF_BAZEL_TARGETS\r\nfails with\r\n""Invalid options syntax: -//tensorflow/contrib/nccl/...\r\n\r\nHowever, if\r\nTF_BAZEL_TARGETS=""//tensorflow:libtensorflow.so //tensorflow/tools/lib_packages:clicences_generate""\r\nthen\r\nbazel fetch ""$TF_BAZEL_TARGETS""\r\nfails with:\r\n  ERROR: Error while parsing \'deps(//tensorflow:libtensorflow.so  //tensorflow/tools/lib_packages:clicences_generate)\'\r\nwhile\r\nbazel fetch $TF_BAZEL_TARGETS\r\nsucceeds.\r\n\r\nThe latter is used in the Windows libtensorflow release scripts.\r\nFor now, a quick fix to make the intended usage of TF_BAZEL_TARGETS\r\nwork. Revisit the appropriate fix later.'"
c1f03764a17ba2f6814d9f8d4e7252f70ede794a,'Fix: Use TestCase.get_temp_dir in dataframe_test. (#8412)\n\n* Fix: Use TestCase.get_temp_dir in dataframe_test.\r\n\r\n* self.self -> self'
d9c61b8f56dfc0bb2fba8cf46a1930d378204cd0,"""Simplify _linear_model_fn\n\n* reduce line count using getattr() on layers 'weighted_sum...' rather than two explicit calls\r\n\r\n*  create a variable that has a reference to the correct function\r\n\r\nas suggested\r\n\r\n* use a better name for the logit function\r\n\r\n* use regular if statement\r\n\r\n* be more explicit in if statement\r\n\r\n* fix whitespace\r\n\r\n* whitespace fix"""
6a689e92d1850d6f49eef371b0ba0330c7a0e2d6,'MKL support for the transpose op (#7748)\n\n* Adding MKL support for the transpose op\r\n\r\n* Fixed build issues for bazel test\r\n\r\n* Ran buildifier on core/kernels/BUILD\r\n\r\n* Adding MKL support for the transpose op\r\n\r\n* Fixed build issues for bazel test\r\n\r\n* Ran buildifier on core/kernels/BUILD\r\n\r\n* Fixed rebase issue (buildifier) with build file\r\n\r\n* BUILD file fixes'
fafd5b24223c4e07e3bbb7267750a06a80e37d95,'[XLA] Fix up a reduce semantics example.\nChange: 150128412'
f22ae3d4a0b493d3c4ee79adb5753f3fb6ea647b,'update BUILD file to include client session in libtensorflow_cc.so (#7792)\n\n* update BUILD file to include client session in libtensorflow_cc.so\r\n\r\n* Fix for buildifier'
ac8d8465e0d286cdfb61a17ffda818f9b442c1fe,'Very minor doc fix.\nChange: 150122507'
b902459cfc91f91f3e65916f0193898242a1b751,'Small fix in Estimator documentation.\nChange: 150112019'
7624fbccae91e11d31f4b623473b6e64e30ec1b5,'Fix build_config.bzl broken by recent push (#8408)'
bce77b91f958840a3c8a037993ccd8247fa61758,"'Use .bazelrc to configure optional dependencies (#8218)\n\nRather than having ./configure mutate one of our .bzl files, which\r\ndirties the git repository, this change has ./configure put the options\r\nfor jemalloc, GCS, HDFS, and XLA inside a .bazelrc at the root of the\r\nTensorFlow repository. This file is listed in .gitignore.\r\n\r\nTherefore, running ./configure will no longer cause the git repository\r\nto be in a modified state.\r\n\r\nFixes #8202'"
9daae39fbf531389543df9a2f79215af32b8da67,'Fixing building from source instructions in README (#8333)'
23e1c11ed98b9b283dbe3d8b22a2194cb7af0c2a,"'Silence exception thrown by graph explorer when an op lacks a value for the ""_output_shapes"" attribute.\n\nThis is in line with how the graph explorer shows nothing about the shape if the shape cannot be determined.\n\nAlso, fix awkward indentation of 1.\nChange: 150095236'"
3549499aaa2f9d45c2a728dd8a059c6148127834,"'Switch back to Ubuntu 14.04 for our releases. (#8373)\n\n* Revert ""Update CI Docker images to Ubuntu 16.04""\r\n\r\nThis reverts commit d7dc1304053428849f47981f3e77ad1fe88d59dd.\r\n\r\n* Fix the old Dockerfile\r\n\r\n* Delete trusty add-apt-repository\r\n\r\n* Fixes\r\n\r\n* Upgrade protobuf\r\n\r\n* Fix build\r\n\r\n* Explicitly specify pip2\r\n\r\n* Fix the cmake build'"
f8beb12f050ed14de0d195b59c19614baf4c5563,'Fixed documentation for false_negatives calculation (#7865)'
e34d18a51393fdfb4ae749ec64ca3c26fa1c375d,'Add support for FixedLenSequenceFeature for parse_example/parse_single_example.\nWith this you may parse variable-length feature of the Example into a padded Tensor.\nChange: 150009250'
866de15d53cdd7f249043197cd9caae83fc4f8c6,'Change public fns to support non-tensor inputs.\nFix `index_table_from_tensor` to handle `int32` keys with no oov buckets.\nAdd better tests for sparse integer inputs.\nChange: 150006782'
c07f591c830ba97f4a17049ea114514d2f4ef9e3,'Fixed TF Stylize crash after reaching the end (#8366)'
ea963dd048749df525d2a1f19c31d7abcdc3268e,'Fix global_step double-counting bug in some tutorials.\nChange: 149995324'
32c11fd917f82619f76273f6b83d7e21fb68c173,'Fix lint issues introduced by my pull from GitHub.\nChange: 149985352'
57f87f2bfc6523f85edcc1d5b6e0fd6c7e50dfe9,"'Mkl bfc allocator and static memory allocator registry (#8153)\n\n* Enabling BFC allocator for MKL\r\n\r\n* Cleaned up & fixed build file\r\n\r\n* Revert ""Cleaned up & fixed build file""\r\n\r\nThis reverts commit 345399082f30af570b0ef05bb0f17d671902e927.\r\n\r\n* Revert ""Enabling BFC allocator for MKL""\r\n\r\nThis reverts commit 66d8670d2638f94d6af7381738affd2405a2d49f.\r\n\r\n* Added a static memory allocator registry and an MKL-targeted cpu memory allocator\r\n\r\n* Adds sanity checks for allocator registration calls and some style fixes\r\n\r\n* Minor style fixes\r\n\r\n* Made Mkl allocator hooking functions private to the class. And more style fixes'"
c664520a1a7642cd3c9368cd1bd036892d8966b2,'Comment fix (#8339)'
b059b4c7e7de05024f6c19370dcd83293b500a26,"'Fix `go generate` error in case multiple directories in GOPATH exist (#8331)\n\nThis fix tries to address the issue raised in #7136 where `go generate`\r\nwill produce an error when multiple directories in GOPATH exists.\r\n\r\nThe issue is because, in case multiple directories exist in GOPATH,\r\nthe following line in `generate.sh` will not work:\r\n```\r\ncd $(dirname $0)\r\nTF_DIR=${GOPATH}/src/github.com/tensorflow/tensorflow\r\nPROTOC=""${TF_DIR}/bazel-out/host/bin/external/protobuf/protoc""\r\n```\r\n\r\nThis fix address the issue by iterating througgh each directory in `GOPATH`\r\nso that `protoc` (`${PROTOC}`) could be correctly located.\r\n\r\nThis fix fixes #7136.'"
35a4183cf261a3893549c7877f63fc415e8287ed,'Add an arg to fix the global_step increment bug for DNNLinearCombined estimators.\nChange: 149956102'
c1af2f81dea1bd2ec9814f63cfdaf016872e7e29,'[TF:XLA] Increase the absolute error threshold for convolution tests on GPU to fix flaky 3D convolution test.\nChange: 149939991'
60ef131d2b7820367d8aa097fb4d2b7a2a3109fe,"""Merge pull request #8358 from MicaelCarvalho/master\n\nFixing function path for 'bow_encoder' -- Closes #8353"""
56fc1e2b7a7dcc37ef2a346acd773bf5a8533caa,'* Fixed multiple formatting bugs.\n* Improved description of virtualenv installation.\nChange: 149935784'
3e64dcd2d66e25bc248767a0101922a3cb25d1cb,"""Fixing function path for 'bow_encoder' -- Closes #8353"""
72442624308e1114de8a9f6bdbd0900583dfa6cf,'tfdbg: minor doc fixes\nChange: 149865949'
d29f7ada3ec69e01a6771f84fbc66e71d9a3d620,'Avoid using parallel_gpu_execute.sh on macos. (#8294)\n\n* Avoid using parallel_gpu_execute.sh on macos.\r\n\r\n* Fix typo in run_pip_tests.sh'
5fb1aeaa6df73fe3ed6e66c034cf4202e3aa90ed,'TensorArrayV3: Fix shape inference function.\n\nFixes #8284\nChange: 149862437'
f1ffbc548906e379d423633f76edc558be8284e7,'Merge pull request #8307 from sanosay/patch-1\n\nFixed typo'
734d704da8686d8ab686f598dece48c149c634c9,"""Fixed typo\n\nRunning the example didn't produce any output.\r\nAdded print on estimator.evaluate to comply with the expected behavior."""
eb281da2d4379cce5bcb16c6910a085ade84b24b,'Fix unsuccessful opdef lookup when function was not created via Defun.\nChange: 149826365'
a91be11e5d228848e9648f1e63e6d509754befb9,'Fix conflicts.'
6a28d426ac19d2b0ee9d21ce1ba2bc0b7b12de7b,'Merge pull request #8257 from nghiattran/master\n\nFix docs for pool and convolution functions'
ab370b2d53a45e187a2f3014516590f5dfdef158,'Merge pull request #8008 from pavelbulanov/master\n\nfix compiler issues with intrinsics under Windows for Build Tools for VS2017'
db755169e4c3ca8fc08b89bfefc3f2fa55608ebf,'Fixed a bug in Estimator.Predict\nChange: 149796694'
3526f3d8a72c43de4471bf3199cb476decfc5973,'Merge pull request #8111 from zifeitong/fix_doc\n\nFix broken links to g3doc/get_started/os_setup.md'
0afcebe69b42d68b0743fcbf66eab82de1393515,'Merge pull request #8140 from vladfi1/init-checkpoint-fix\n\nFix tf.contrib.framework.init_from_checkpoint'
8cb231ecfac89fa5d2ab50053d4970b91b55cf50,"""Improves error message when users give a filename for a V2 checkpoint.\n\nV2 Checkpoints are common, now the default from all TFX\npipelines.  Users of this tool, when filling the 'file_name' flag are\nlikely to submit an actual filename, rather than the required\nprefix.  This error message should catch those cases where the user is\nvery likely to have meant the prefix.\nChange: 149781964"""
87ed88a7a0187e47b452052d729673b4e2e98716,'Merge pull request #8272 from hsiaoyi0504/patch-1\n\nFix the initializer and make global variable specified in word2vector example'
28ae789f21cd6e2d67809f9fd9521725b4f42254,'Fix XLA build breakage on Mac OS X.'
88b3a8bf0ae1934c29633c5f5a0cbe328f9d7df2,"'Merge pull request #8258 from tensorflow/revert-8206-fix_xla_compiler_warnings\n\nRevert ""Fix compile warnings.""'"
b92f7aa6fea523fb3521da331dec43aba521ec81,'Fix FTRL to colocate constants with variables.\nChange: 149769532'
64f01235903f08ad403daab28f3bed6baed87033,'Fix the initializer and make global variable specified\n\n- Fix the initializer\r\n- Make global variable explicitly specified'
083aef03a02ec92d5adc97b8e9f7feaf8cfffbf0,"'Set `set +e` in generate.sh (`go generate`) to output correct information\n\nWhile playing with go in tensorflow, the `go generate` will\nnot output correct information about missing protoc even though\ngenerate.sh contains the following:\n```\n  PATH_PROTOC=$(which protoc)\n  if [ ! -x ""${PATH_PROTOC}"" ]\n  then\n    echo ""Protocol buffer compiler protoc not found in PATH or in ${PROTOC}""\n    echo ""Perhaps build it using:""\n    echo ""bazel build --config opt @protobuf//:protoc""\n    exit 1\n  fi\n  PROTOC=$PATH_PROTOC\n```\n\nInstread, a non-informative error is displayed:\n```\nroot@99829f070f46:/go/src/github.com/tensorflow/tensorflow# go generate github.com/tensorflow/tensorflow/tensorflow/go/op\n../genop/main.go:15: running ""sh"": exit status 1\ntensorflow/go/op/generate.go:15: running ""go"": exit status 1\nroot@99829f070f46:/go/src/github.com/tensorflow/tensorflow#\n```\n\nThe reason is that `set -e` is at the beginning of the script and it exit\nimmediately at `PATH_PROTOC=$(which protoc)`.\n\nThis fix sets `set +e` before `PATH_PROTOC=$(which protoc)` and restores `set -e`\nback, so that information about missing protoc outputed.\n\nBelow is the new output:\n```\nroot@99829f070f46:/go/src/github.com/tensorflow/tensorflow# go generate github.com/tensorflow/tensorflow/tensorflow/go/op\nProtocol buffer compiler protoc not found in PATH or in /go/src/github.com/tensorflow/tensorflow/bazel-out/host/bin/external/protobuf/protoc\nPerhaps build it using:\nbazel build --config opt @protobuf//:protoc\n../genop/main.go:15: running ""sh"": exit status 1\ntensorflow/go/op/generate.go:15: running ""go"": exit status 1\nroot@99829f070f46:/go/src/github.com/tensorflow/tensorflow#\n```\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>'"
612513ff3d1ad2d3097580f7f1950eb350c35d7a,"'Revert ""Fix compile warnings.""'"
adc0929686e6f7f147add821f348aa51a9a4fc26,"'Windows loadlibrary (#8217)\n\n* cmake versions > 3.6 will quote -D__VERSION__=\\""MSVC\\"" as -D""__VERSION__=\\""MSVC\\""""\r\nwhich nvcc stubles over. Since this is only used by version.cc we apply this only\r\ncore/framework so nvcc will never see it.\r\n\r\n* - support for tf.load_library() on windows\r\n- support for linking against tensorflow.dll to access c/c++ api\r\n- switched contrib/rnn to use .so\'s\r\n- added add tests in contrib/rnn\r\n\r\n* Address review feedback. Changes:\r\n- Some style changes\r\n- TF_COMPILE_LIBRARY define controls exports from the tensorflow.dll.\r\n  If TF_COMPILE_LIBRARY is defined we compile tensorflow, if undefined\r\n  we compile a user op.\r\n- On windows user ops have now a .dll extension. The resource loader will\r\n  take care of finding it.\r\n- pywrap_tensorflow_internal.lib that is needed to build a user op on windows\r\n  comes with the wheel\r\n\r\n* fix linux build\r\n\r\n* fix linux build\r\n\r\n* keep //tensorflow/tools/test:check_futures_test happy\r\n\r\n* add copyright'"
80e4af15473e90e68ca9b824e9f6012ac2260fb4,'fix docs for pool and convolution functions'
43c2d687153a42fe91f8f93fb571cf0f4a15be3e,'Expose SKCompat. (#8254)\n\nFixes #7287'
eccd9fcc1518a8aaf4d00c4509c2d84b0196bc88,'Merge pull request #8013 from tomergafner/fixes_ios_camera\n\nFixes ios camera'
575f6d07e8d7430e2cedefeb6821d5e2511f67b8,'Merge pull request #8237 from erfannoury/patch-1\n\nFix documentation in dynamic_bidirectional_rnn'
c8183de023e13e8f5f185a0538e3d37822f009bc,'Merge pull request #8210 from nirajpatel/patch-1\n\nFixing built jar location in readme'
d4c411e46bff2c4fde749d635052d040fec161ab,'Fix documentation in dynamic_bidirectional_rnn\n\ndocstring for `dtype` was defined twice.'
168e8dacba0f59ba3810ff279697c64081ec131c,"'Add sparsify_gather op to reduce linear model memory footprint.\n\nAlso fixed typo: ""obsfucate"" -> ""obfuscate""\nChange: 149627297'"
62be492ef40bdfbc10c574d48a1305fbc639302c,'Fixed bfloat16 integration of LIBXSMM sparse mat-mul.\nChange: 149617825'
89df2a1b413ef3f444a8e12c61d0d2a66029e892,'Fixed invalid header and incomplete strings in samples.\nChange: 149615375'
100552f943c78cbf90aad521f9981df9b5e3c738,'Merge pull request #8206 from conqer/fix_xla_compiler_warnings\n\nFix compile warnings.'
096e963eff2f9f96b265d19d323482169ec1b85c,'Fixing the Windows links in the README.'
25290780329e3e95d76357d12fafc9cf54b1f7ba,'Fixed buildifier error'
d82a39d5a347ab7cde2a94e0f0db95a5eb6d6f64,'Fix Makefile.in to build .so file\nChange: 149578822'
3e1ad1c84a48a320cb3de8f9ddd53d3923c90564,'Add a function to initialize a tensor and a utility function to add a prefix to the node name.\nChange: 149576194'
79b6914fc5e57e86c727bb1248a33b2b3ee1a8ef,"'gmock update: fix tab issue, add mirror'"
dbd7db29bd5d2c7c75f99a2db49009e5897ef5f2,'Merge pull request #8099 from senden9/patch-1\n\nFix link in documentation'
83cd3fd279037c242017cd0ab8c825f30c375564,'Merge pull request #8106 from Jiaming-Liu/patch-1\n\nFix a bug of initializing'
99e30bc6b22b259ddc6a2cfc6aec1d9ebc635da4,'Merge pull request #8212 from gunan/docs_fix\n\nUpdate installation documentation for v1.0.1.'
4ce3574b78b1dd04705ce591ed66c982199828bd,'Fixing built jar location in readme'
52c2c6bed91f9f6a3e59fc8e38f49101829b07a6,"""Fix compile warnings.\n\nFixes instances of comparisons between 'signed' and 'unsigned'."""
d3573033f8818308b4dbbd10d0a96efdd3262153,"'Make health pill text round ints.\n\nAlso fixed the check for whether valid values exist (in deciding whether to show numbers on top of health pills). Previously, the indices were off.\nChange: 149511724'"
6f00d6a8fff6a32e7cf95449420e340ce8fa8f21,'Add missing unit test case for tensordot and fix typos in implementation.\nChange: 149498198'
ea4eb2da5f314aa474eacfb98f40f548dfa1aed8,'Fix broken links to g3doc/get_started/os_setup.md'
fbcb58b422f9bf2c2a23ac33d21b87daf5f31d49,'Go: Fix #7175\nChange: 149490754'
95df7a3ddb9c3b5449164e6e1225147c45037153,"""Fix the bug that zero-sized tensor usually doesn't have an alloc id.\n\nRemove unnecessary temp memory recording which belongs to OpKernelConstruction instead of OpKernelContext.\nChange: 149488690"""
c82894c596620c37b72afbb9020f97eca82eece7,'Fix Linux pip install paths and instructions (#8067)'
19fa47be99ea96888ad0a59e602f7de9849c80b7,'Cleanup iOS Camera Example (#8015)\n\n* Retain pixel buffer\r\n\r\n* Unlock pixel buffer\r\n\r\n* Update to recommended settings\r\n\r\n* Fix deprecation warnings\r\n\r\n* App requires full screen\r\n\r\n* Convert to Objective-C ARC'
258d0a92c2816ec8850fb6460ed04e87dbcc44c8,'Fix confusing backwards error message in tf.cond.\nres_t corresponds to fn1 and res_f corresponds to fn2.\nChange: 149461652'
b7adae6c967618a6a40f396552e1892ce16386f3,'Add description how to generate ops wrapper (#7626)\n\n* Add description how to generate ops wrapper\r\n\r\n* Go: Typo fixes in README'
4c3bb1aeb7bb46bea35036433742a720f39ce348,'Merge pull request #8155 from fanlu/master\n\nfix tf.Saver to tr.train.Saver after api changed'
df76066dc795809117cba4641518e61dd306b73d,'Merge pull request #8157 from guoguo12/functional-ops-typo\n\nFix typo in map_fn docs'
bb5cae6c43fc23e825320dfff15f3d1c535e3104,'Add note to new op and source build doc (#6473) (#6997)\n\n* Add note to new op and source build doc (#6473)\r\n\r\n* Add install source note\r\n\r\n* Fix note style'
ceb7fc1b64611b09a1d03490f5f0a9c155a93137,'Fix timeout for matmul_op_test in Windows.\nChange: 149423117'
3f8a6c2e08c7e7e327dace724fb6e39a96bcbdb9,"'Add support for the matmul (@) operator. (#8032)\n\n* Add support for the matmul (@) operator\r\n\r\n* Rename _MATMUL to infix_matmul\r\n\r\n* Add test that a @ b is a MatMul\r\n\r\n* Use operator.matmul instead of eval(""x @ y""), and add test that infix_matmul == tf.matmul\r\n\r\n* Fix indentation (now 2 spaces instead of 4).\r\n\r\n* Replace test.TestCase with test_lib.TestCase'"
ab9ab8937f13a98e13ee531d56999473099a373c,'[Windows/CMake] Enable tf.contrib.factorization.\n\nAdds missing MaskedMatmul kernel to the CMake build.\nAdds trivial shape functions for tf.contrib.factorization ops.\nEnable testing for tf.contrib.factorization in the CMake build.\n\nFixes #7935.\nChange: 149391496'
b41aae2be8b20a3cfb26fd7772ef308e118c9396,'Fix typo in map_fn docs'
a61ee76e17304ec830e2d8a8e4426ad83a9f8062,'fix tf.Saver to tr.train.Saver after api changed'
78d658ee2f27f06dd6c8389c4f0211ae6a099f78,'Merge pull request #8104 from yongtang/8044-g3doc-how_tos-examples\n\nFix broken links in documentation adding_an_op.md `g3doc/how_tos` -> `examples`'
eaffcab3a4af34ef08cc489e73d445db9af61424,'Update install instruction links. Fixes #8142.\nChange: 149364578'
96c0d2c9146ebb5f31ae82ebc206643fc8049ea0,"'Fixes the treatment of collections=[] to be consistent with the documentation, so GLOBAL_VARIABLES is used only when collections==None.\nChange: 149357125'"
529ae88f092a55fbee0e4ee3c519b3e3503537bb,'Fix loading to root scope.'
d41077c04717f96d5d86827d98cde1d661229d3b,'* Fixed multiple formatting bugs.\n* Changed URL of in several installation examples.\n* Added the URL for Python 3.6.\n* Clarified the fix for protocol-dependency issues (Github issue #7940).\n* Fixed link to Docker documentation (Buganizer issue #35347827)\nChange: 149340618'
19dd9342e7bc55c877367b7474caf41e819e38c3,'[TF:XLA] Add support for 3D convolution to XLA bridge.\n\nGeneralize common backward convolution dimension computation code to support > 2 dimensions.\n\nFix crash for zero-element Tensors passed to Conv3DBackpropFilter on CPU.\nChange: 149329330'
540e8d8a7e2c78c2aea366bf6e8af2ade8b74b2d,'Fix link in import error message.\nChange: 149308271'
e6f547e4645f4922c50abb7d0506b1f9a6bd81c7,'Merge pull request #8128 from yjmade/patch-3\n\nfix a typo in tf.cond docstring'
5416faa262b655026dc0ae5cf178451ba7e54c4a,"""Embedding Projector, minor fixes:\n- Sprite visualizer in 2D mode: Make the point size be the thumbnail size, since in 2D mode we only allow semantic zooming.\n- Support '~' (homedir) for the sprite_image_path in the projector_config.pbtxt\nChange: 149303375"""
a1584b1383363b2753447c37fd0ced5767efd039,'fix a typo in tf.conf docstring\n\npref->pred'
2ea1fbbb2362fb01389387d6cf878467e726fa70,'Merge pull request #8081 from conqer/fix_build\n\nFixed build error.'
fd46c335481d432e6cd95bbf1542bc1188a19ffb,'Merge pull request #8028 from cberner/fix_num_servers\n\nFix local_test.sh to respect --num_workers and --num_parameter_servers'
3fbfdd5b9a0ddd86104a3bc696746f2d386463be,"'Fix a bug of initializing\n\nPrevent the exceptional illegal call of ""initializer.__init__(shape, dtype, partition_info)"" appears when the param ""initializer"" is an init_ops class instead of its instance.'"
ff9682b5f493ae7ad912da29789668dbf50d5e1f,'Fix broken links in documentation adding_an_op.md `g3doc/how_tos` -> `examples`\n\nThis fix fixes broken links in documentation adding_an_op.md with\n```\ns/g3doc\\/how_tos/examples/g\n```\n\n*There are still other broken links related to `g3doc` scattered around.*'
5b4bb03244d7ff27acbc18ba6b575fa85b0ac7fe,'Merge pull request #8097 from jhseu/r1.0_fixes\n\nr1.0 python 3.5 fixes'
35489ec9b6b5c30dc3b73ca9971e5817a81d1896,'Merge pull request #8007 from qjivy/qjivy-pr\n\nfix the filter position cacluating for the VALID padding mode'
ac639cfc72740a6c1a542ffd27a3665abe715d4f,'Fix link in documentation\n\nFix a link in the documentation. The anchor of the URL was not spelled correctly.'
e8b9bd928d20edd565e2898766beb7eb21def7e0,'Install numpy from source for Python 3.5 to fix the nightly build.\nChange: 147395987'
f9a2c1d8cb337e7de809421592e76f1d99d1d0e0,'Merge pull request #8086 from yongtang/03042017-docs-typo\n\nFix some typos in the documation (tensorflow/docs_src)'
c19dda08fce45ac23df20fa0ef55374516105fa6,'Fix some typos in the documation (tensorflow/docs_src)\n\nThis fix fixes some typos in the documentation (`tensorflow/docs_src/**.md`)'
94634a8c2d2c6c0102a5faa20f7a6893b1bb4f44,"""Update retrain.py\n\nFixed path to retrain.py in description (removed unnecessary 'third-party' from path)"""
1f8eae975b16940d60041065b08d15d47af6c820,"'Fix broken link in code example, pointed out by:\n#8041\nChange: 149202172'"
e69c83da381263b98935895055f6b4a89776d6ef,'Fixed build error.\n\n  The errors were introduced in commit d97f45ba949b11d721aa5b81c12d655a8487aa38.'
ef7d75baec1b0b3861acef52f1973bbe379ae881,'Fix code that ignores tensorflow::Status.\nChange: 149170109'
16a4bc203b90f0eff07df369d9d8fe6260c99aef,"'Make bidirectional_dynamic_rnn sequence_length argument optional (Fixes #5588).\n\nIf the argument is not provided, the time reversal is applied to all batch\nentries the same: time is reversed from 0 to max_time for each entry.\nChange: 149155863'"
3a0924bc29940f334711d096cd10737af30cff43,"""Fix the error message returned from _init_from_args function in QueueRunner to state that the input argument queue_closed_exception_types, if passed, should be of type 'tuple'.\nChange: 149149270"""
2924e923a0ca3705e551511a9f69b6da65e43e5a,'Fix merge'
96950778d529ec7f410ed8770ec02412139a3151,'Change pip.sh to take Bazel flags directly so AVX packages are built properly. (#7797)\n\n* Fix flags for the pip package\r\n\r\n* Remove condition\r\n\r\n* Add shift\r\n\r\n* Small nit'
88c9fb09bd667df03cdf7e9f75ff225853ad01e1,"'Restore the adding_an_op code examples that used to live under\ng3doc/, now under examples/.  Partial fix of #8029.\nChange: 149142119'"
20af1b7baa0452256c761a5961966a82b796162a,'Fix python paths in windows cmake build.\nChange: 149132162'
1f09d0c1ee7648288b3454d64e72e8760b9acc9c,'Merge pull request #8018 from calpa/patch-1\n\nFixed broken link to Community'
13521e15758ae722f6fde7cbcd6098c443974612,'Windows: Fix error in release script for C library\n\nBug in 8777d9a15614b65271d25401f488b70b6b3dca1e'
26df62c2ab8853bd1df5a1e469301a4e8b501abf,'Merge pull request #7981 from Conchylicultor/master\n\nFix Inconsistency in the seq2seq documentation.'
d8e5efadd4b8bb3973a38af6b217c4cb01497bd7,'Fix the cmake failure: ambiguous symbol\nChange: 149072356'
3fe917bfb116ecebdd73de632c18cef6a1a04d9c,'Fix bug in matmul gradients for complex types.\nClean up matmul gradient test code and improve test coverage.\nChange: 149057186'
37b4005ca2237a4e59302d590904494be2672e3e,'Fix typos and inconsistencies in layers docstrings.\nChange: 149050553'
54c0ff4a73789ce42d71433b79e5db21b5d6c7a2,'Add BenchmarkType to TestResults proto and fix logging of C++ microbenchmarks.\n\nC++ microbenchmarks results are now normalized by iters (like python benchmarks).\nChange: 149045367'
87d3f8fbca3459d19a3f1a5f8318d95f248d8046,"'Fix local_test.sh to respect --num_workers and --num_parameter_servers\n\nPreviously, 2 workers and 2 parameters servers were always used,\nregardless of the value of these flags.'"
ab49d4c449d11ebe2a8531d8eafaa2a0ca981e41,'tfdbg CLI: a bug fix and a UI improvement\n\n1) fix bug where command triggered by mouse gets truncated if length exceeds command input box width\n2) add waiting toast message so that the user knows TFDBG is crunching number on time-consuming operations.\nChange: 149022490'
f9694e876e56c8e4f46e355e8686d7174fdc3b69,'Fix metagemm quantization offsets in matmul.\nChange: 149021831'
a0db2664a4051b98ab90db94bfe86b17379dbef4,"""Clean up matmul test suites and make sure that complex tests set the imaginary part. Fix a bug in test util function assertAllCloseAccordingToType, which wasn't picking up the right values for complex64.\nChange: 149016078"""
ceb04626090e19f2ea7fd6661dfdb3e5d0a9d3c4,'Fixed broken link to Community'
67b0672d5a473fdad73d63d2003d849c0ccf03d8,'fix compiler issues with intrinsics under Windows for Build Tools for Visual Studio 2017'
cac52fdebb292bc7706383d07c7987be66882085,'fixed the filter position cacluating for the VALID padding mode'
2520eaea326adaff65d5cdd14748ed68bf6d8d75,'tfdbg: fix source_utils on Windows\n\nUse os.path.normpath to normalize backslashes in paths to forward slash before comparing paths.\nChange: 148960384'
8cac382a5425d64f3083cb5adec525baa163e18e,'Merge pull request #7985 from ClarkZinzow/ClarkZinzow-patch-1\n\nFix typos and minor issues in Docker README.md'
a73a7e5bbb834a977f283e1a0fb30273737445e9,'Fix TF issue that prevented compiling it as a submodule. (#7984)'
5ce1f684d2bb6e9220f68b9541d33342b5452918,"'BUGFIX:  MultivariateNormalLinearOperator was not broadcasting ""loc"" when\ncomputing mean().\nChange: 148951756'"
d97f45ba949b11d721aa5b81c12d655a8487aa38,'Fix compile warnings (#7752)\n\n* Fixed compile warnings.\r\n\r\nMost of the warnings are related to comparison of signed vs unsigned types.\r\n\r\n* Addressed code review.'
51331365b60dd042ebc0849ea4e1ab6a396b60fd,'Fix TensorFlow compilation errors with KNL optimization flags (-mavx512f) (#7963)\n\n* Fix compilation errors caused by intrinsic function and argument mis-match for AVX512 when -mavx512f is used\r\n\r\n* More fixes for AVX512 compilation.\r\n\r\n* Fix _mm512_ternarylogic_epi32() function to mimic masked blend functionality'
076cb52c34efe33771be0ea97940f201565d9390,'Fix DeviceNameUtils::ParsedNameToString to render non-CPU/GPU devices correctly.\nChange: 148939552'
8391470a8f3aa4e170ddfc65eb52747a5bda180a,'Fix layers documentation to not lie about the data format used.\nChange: 148936943'
5726c6cb1d45d38e2836247528c0cff5ac64074d,'fix merge conflicts'
02d769cb2268f443b2c0e733ea777b43a7614661,'Fixed broken links in Installation guides.\nChange: 148922978'
6d8cb080fe46586b3063c0e50dc659c42c31f7f5,'Fix cmake windows build.\nChange: 148919678'
4e4a2b3ff37f38a79f35e3cea72b22913e4d0e3e,"""Fix typos and minor issues in Docker README.md\n\nFix typos, company/product name capitalization, and other minor issues.\r\n\r\nTypos:\r\nrecomended &#x27F6; recommended\r\nnighlty &#x27F6; nightly\r\n\r\nCapitalization (changed to capitalization that's most consistent with rest of TensorFlow repo):\r\nubuntu &#x27F6; Ubuntu\r\nNvidia &#x27F6; NVidia\r\nCuda &#x27F6; CUDA\r\n\r\nNote:\r\nThe change from three Docker container images to only two being listed happened in [this commit](https://github.com/tensorflow/tensorflow/commit/60796d7c0d401e5e7b7a139f165e78ce778583be)."""
ccd7ca1fd6f4fa479f0c34e9b8499cfeebc02451,'Fix metagemm offsets in quantized matmul.\nChange: 148905332'
2d64339bb2e1b5cd761aced7bfcb57534f326dd3,"'histogram_ops BUGFIX:  Float64 was not previously handled.\nAlso removing unnecessary tests.  Some tests checked proper use of state, and were added at a time when histogram_fixed_width created an internal Variable.  Since histogram is now (and has long been) TITO, this is not necessary.\nChange: 148891639'"
a230417c58c258b2417225c739a1e5f0890491e6,'Second derivative computation in softmax xent op (#7948)\n\n*  Added second derivative computation in softmax xent op\r\n\r\n* Review fixes\r\n\r\n* Yet another review fix\r\n\r\n* PEP8 indentation fix'
f424ca38712a87aeaf614af454d96b5d155592ca,'[TF:XLA] Add implementation of tf.one_hot to the XLA bridge.\n\nFix crash in normal OneHot kernel for depth < 0.\nChange: 148881102'
9560e4163c256fc828c2047c2435ae0ef32f44f9,"""Fix TF-learn eval_evalset/eval_evaltrain job failure due to race condition.\n\nTF-learn creates two jobs for evaluation: one uses evalset data and the other uses train data.\n\nBoth job call\nExperiment._continuous_eval()\n-> Experiment._maybe_export()\n-> export_strategy.export()\n\nFor TF-learn, the export function above is created by\nsaved_model_export_utils.make_export_strategy() which calls\ngarbage_collect_exports() after calling Estimator.export_savedmodel()\n\nThe two jobs might trigger a race condition where they both try to delete\nthe same dir. Then one fails with `NotFoundError` which isn't caught.\nChange: 148843701"""
718812c9e4df55b8b3275aa4db7bb6833ed03111,'Fix the dlopen contrib test hack by making a pywrap_tensorflow module that imports\npywrap_tensorflow_internal with RTLD_GLOBAL.\n\nFixes #6568\nChange: 148843302'
4e63540076921d2c08d03aa9efb76fd483920593,'Fix typo spooted by #7906\nChange: 148842430'
3e6c638727c3274908a7c9c6bbf4474c014511fe,'Fixing a bug in GetMatchingFiles when the top level directory is null. There was an inconsistency in which we translated the directory and all the patterns etc. that were being matched. As a result ./<pattern> worked but <pattern> did not.\nChange: 148836014'
4c0bd97d6855e4175a48a0fef6aa79b3cbc2f991,'Fix user ops test broken by doc file move\nChange: 148833774'
676f94a952df76d36a134a5e3b92285fabb72cc8,'Fixes XLA open source build.\nChange: 148831489'
749e6b62cf4844c608204c30a356ee7e6ddfecdd,'Fix broken tensorflow-cl-windows-cmake\nChange: 148805879'
5e1dce96a67088b8caa9dc437184cc0e9339be42,'Fixing variables typo in part of the code sample\nAnd param order in nce_loss in the code sample\nChange: 148732811'
95109f6d9d9395d67e920f4208a7ebe173fc1b6c,'Users can pass a list of class ids to multiclass/multilabel heads where we compute some per class metrics. The per class AUC had a bug where we were using logits rather than probabilities. This CL fixes this bug.\nChange: 148727736'
1092bfd98c1533a8f04cdc4178d1dea15137599e,"""Java: Memory leak fix and Windows friendliness.\n\n- Delete memory allocated for exception error messages.\n- Use vsnprintf instead of vasprintf for allocating exception error messages\n  since the latter doesn't seem to be easily available on Windows.\nChange: 148687623"""
95a7c5e06d7c4a74041b8cc882386265b0a243ed,'Fix the estimator import error on windows cmake build\nChange: 148684190'
b436f4130b54f0f422774d06f9affac417b9363e,"'[TF:XLA] Improvements to resource variables:\n* enable compilation of VarIsInitializedOp.\n* fix deprecated variable initializer in variable_ops_test.py\n* simplify variable logic in XlaContext, move intelligence into XlaOpKernelContext.\n* add resource variable support in the contrib layers library.\n\nCleanups and refactorings:\n* merge XlaCompiler::CompileSubComputation with XlaCompiler::CompileFunction.\n* pass XlaCompiler arguments consistently via XlaCompiler::Options.\n* split the two roles of XlaCompiler::CompilationResult::input_shapes into input_mapping and xla_input_shapes.\n* initialize the numpy and Python seeds to a constant for XLA test cases.\nChange: 148683645'"
23e99cf11c1be75b48fde2076a738add77cce18c,'Fix assert error in evaluation_test on windows.\nChange: 148681573'
3fb9948bc5954b7b3de7ed9d1cb41581768f983f,'Bugfix: Ensure tf.random_gamma can never return 0.  Fixes #7474.\nChange: 148678769'
f8838fabb0a18ea8ad852718e3c1ded4dcc5917d,'Fix spelling errors.\nChange: 148678164'
79098e13efe58ef3e56025c93761f4d7bb02dfbe,'Fix a bug where queue_parsed_examples fails for single tensors.\nChange: 148676738'
db8ea4ff07ad75cf5f0220428fbe4b84fcf68f4a,'- Upgraded libxsmm to 1.7.1.\n- Applied LLVM optimization patch to libxsmm\n  (https://github.com/hfp/libxsmm/commit/0e412d5d2769a8754cace64e56e26e14093f887d.patch).\n- Limited outstanding libxsmm sparse matrix multiply handle counts to limit\n  memory usage for temporary space.\n- Added extra logging to libxsmm handle management in TensorFlow.\n- Added support for running multiple sparse matrix multiplies simultaneously in\n  performance benchmark to match some practical use cases.\n- Added more size combinations to sparse matrix multiply benchmark.\n- Fixed dependencies for xsmm_conv2d_test.\nChange: 148672973'
b4d091d5a372f97af48192cb431985b20b447158,"'[TF:XLA] Silence a number of compiler warnings, in particular warnings repeatedly issued by code in headers.\n\nFixes #7919\nChange: 148670735'"
fef0a212ef0250aff269d203137709aed0f38a9e,'Exclude evaluation_test.py on win till contrib to core move fixed.'
8bfeefab09712d1c18702cb575b85c50ac2815cd,'Fix missing estimator modules on win-cmake'
9a53aa3a05305aaea2c280c36e7a0b8751a7e4e3,'Fix contrib/training protos in win-cmake.'
1f42290dcd92058cac1314b2d75b3b06bdf53a27,"""Fix typo in tf.contrib.layers.batch_norm, which wasn't adding gamma to custom variables collections (when supplied).\nChange: 148488709"""
dc00fe6cf27c59fc78783735375a05ff720333f4,"'Update module docstrings to (consistently) link to the guide in the\nbody instead of the title (consistently).  Also fix some malformed\n@{$...} references and titles starting with ""##"".\nChange: 148476930'"
904510eeaa40b0c8f982fbb679d827688cb35b01,'Merge pull request #7834 from tensorflow/terrytangyuan-patch-1\n\nFixed typo in _DNNEstimator doc and minor reformat'
10fb49abd8a5cfebfedf6e95026a683e4fa3ed46,'Fix the open source test.\nChange: 148470369'
321d38ee0ff76d749a8578f37128b02bf033ce76,'Merge pull request #7802 from mgharbi/master\n\nfixes erroneous collection in contrib batch_norm'
437bd6170791c7086ace6157a9202ad3806cefd1,'Merge pull request #7852 from dpwe/patch-1\n\nFix missing backquote in tf.norm description.'
faf4b341ddbe03e6b120a2257c05626ef5df995f,'Fix missing backquote in tf.norm description.'
8c69e002426469a5b040da3066a03584d5888336,"'Docs: Typos and link fixes.\n\n- Point C++ API links to the ""Guide"" page instead of the page that lists out\n  every API function/type\n- Point Java API links to the Javadoc instead of github code\n- Fix a typo\nChange: 148430624'"
dcf25e6c02b98c8f75d10d4983811d10274eeb3b,'Fixed typo in _DNNEstimator doc and minor reformat'
f65d5edbdcb4cb6151ddbd2735262081278af460,"'When TensorBoard has >10 runs, it only enables the first 15 by default.\n\nFixes #7654\nChange: 148414445'"
c64b5e13c63bf1a66222b8ecd90cfd52ca62d800,'Make var_list to accept both list and tuple. Fixed the doc.\nChange: 148407210'
e9786df5e89f0345b2eb32d688c7be31c5259ba0,"'Fix tf.set_random_seed(0) to be deterministic for the first op\n\ntf.set_random_seed(0) caused mostly deterministic behavior except for random\nops with op._id == 0, which were nondeterministic.  This has been fixed so\nthat the only nondeterministic case is tf.set_random_seed(None).  The random\nbits for tf.set_random_seed(0) change as a result.\n\nThe same goes for seed=(2**31-1)*k for any integer k.  Good times.\nChange: 148395936'"
96d930927e82bc18b94c2585c656eec661e4695f,'Fix use of `std::iota()` in MSVC build.\nChange: 148380039'
7cb9e365eea2f1585921ad22fb6f4bc7abab9435,"'Refactor TensorBoard plugin system to improve testability & clarity.\n\nMoves all the business logic for setting up TensorBoard (e.g. plugin config) into application.py (which as test coverage).\n\nNow tensorboard.py (which is hard to test) just has simple server configuration, and flag parsing.\n\nAlso:\n\nEnforce normal BUILD rules on the plugin directory (i.e. every directory has a BUILD file).\n\nRename plugin files to avoid name collisions and aliases (projector/projector_plugin.py instead of projector/plugin.py - scales better as we have more plugins)\n\nDrive-by fix of bug where server would ignore KeyboardInterrupt while processing a slow request (set daemon_threads=True)\n\nDrive-by fix of an annoyance where the server prints tons of garbage to console (set higher werkzeug logging level).\nChange: 148374425'"
8b44423d25f55ef0e83c1613c0d21bd3b4b3037a,"'Add text proto support to summarize_graph, and fix crash on variables\nChange: 148370696'"
7b8115f34febc2a5a59f59a9851f1f6f601e93d5,"'Fix tf.test.compute_gradients to exercise imaginary parts\n\nPreviously, if x_init_value was not specified, it was set to a random real\nvalue.  This is bad if the dtype is complex, since the imaginary part is left\nzero.\nChange: 148368889'"
29a6b4661258ef99842904d7c54993c963a8c2c0,'Merge pull request #7790 from jendap/fix-debian-jessie-build\n\nfix debian jessie ci_build'
d82e42ca3a0b06d768a439d84ff74741de7e092d,'Fix tfdbg in windows cmake build\nChange: 148361216'
6518f3830097ec7837bbd3d69ce764904e981b33,'Enable tf.scatter_nd on GPU.\n\nFixes #7026.\nChange: 148360558'
417dd3793a648406feb8668cad2e341fe979c391,'[XLA] Fix opensource build breakage caused by undefined int64.\n\nInclude xla/types.h in versioned_computation_handle. int64 was\npreviously not defined in this file in the opensource build.\nChange: 148357352'
74cf4d232ca081263bbc975c982f1916a395fa11,"""Merge branch 'r1.0' into fix-debian-jessie-build"""
ed6357cbd4f6e47ab87b219a0e0840739c92c970,'Added missing definition for the Packet16q16i.\nFixed a couple of bugs in the implementation of max reductions for\navx512'
4ac9c09d5ca57a03b8daa5fb9e295947b1619854,'Change pip.sh to take Bazel flags directly so AVX packages are built properly. (#7797)\n\n* Fix flags for the pip package\r\n\r\n* Remove condition\r\n\r\n* Add shift\r\n\r\n* Small nit'
91d2cc5cb4cb2d2463e3ed7ea323fc627c4a2098,"'Avoid merging adjacent XLA compilations from different scopes/functions\n\nThis is part 2 of the bugfix.  It implements the xla chain breaking mechanism\nbased on different coloring of the graph (as represented by different XlaScope\nstrings).  In part 1, we modified both experimental_jit_scope and Defun to\nmark their ops as having different XlaScopes, so this is the final change that\nactually enables the fusion breaking.\n\nAlso fixed a bug where xla_enabled was not True for rnn_cell_tests (the XLA benchmarks in that test were not actually being run with xla enabled).\nChange: 148286731'"
8d42d1e0b8b00c04d34ea585d360fd54206f6cbb,'fixes erroneous collection in contrib batch_norm'
81d8255cb5064fe76238b749c06f84ec405cf1e6,'fix debian jessie ci_build'
f1dd0e32522bd183d422bdac75137ebba2375327,'Fix documentation on the offsets input to ExtractGlimpses.\n\nFixes issue 7681.\nChange: 148273572'
bd7f1f4955cee1df4f6dbd0baba783fbcf845bc3,'Fixing the broken Candidate Sampling PDF link.\nChange: 148273378'
767fd866fed00701f3e0eb6e268d0f27ecdc96fd,'Fix nccl when referenced from a different repo (#7798)'
b0006cef925d0588cc53a57951c370c83d8e5de9,"""Fix recovery from failed PS tasks in the gRPC implementation for\nMonitoredSession. Also satisfy the constraint that close() doesn't throw in\n_WrappedSession, as mentioned in its docs.\n\ngRPC internally throws UnavailableError, which we convert and propagate.\n\nFixes #7767 and #6780.\nChange: 148269127"""
f2843b0831653020ca6e1ceb7011f916e2e8f706,'Also export `tf.contrib.rnn.stack_bidirectional_rnn`.\n\nFixes #7569\nChange: 148260465'
9cf7bb30fee1cbaf920391b7c0111a762e64fd82,'Update BUILD file to fix test failures due to missing MKL libs'
313eb4f284dc8c7247d4df8991653cecdc26498e,"'Fixed the comment to indicate that assign_moving_averages returns a Tensor, not an op.\nChange: 148237610'"
90b9641b7e7da44343644e5b4e221478594a959d,'Fix bug in buffer forwarding for BatchNorm.\nChange: 148234275'
719476a70fb823a8ac1200e1fc6825c982fcc7d3,'Fix polynomial decay doc.\nChange: 148233830'
64690a46f07e1f7be4b01ba2c79900847c245778,'Fix export scope handling in saver.\nChange: 148231524'
ffaaa3ea8d922c758036086276eebde933ff114c,"'Merge pull request #7780 from alanwang93/r1.0\n\nfix some documentation style faults for dynamic_rnn, dynamic_rnn_decod\xe2\x80\xa6'"
a292a3047d1a4f6cec30ba6c6cc7a56dcb98262a,"'Fix windows cmake build by adding missing bijectors python directory\n\n""tensorflow/contrib/distributions/python/ops/bijectors""\nChange: 148222936'"
be9bed13c1a2b2b4e400cc31ba963384df1cd42f,'Fix the bug in numpy_input_fn that could return more data than expected epochs.\nChange: 148219297'
e5ea838f5371231ab1b14ccc0d004b246d7bea5d,'FIX: missing cat keyword'
d7950e02630459e8e4b51c5c16224ee29fb1cbf6,"'fix some documentation style faults for dynamic_rnn, dynamic_rn_decoder and tensordot'"
69638e5f09e3854d50b44de5ea72dd28ccaf795e,'Merge pull request #7676 from yaroslavvb/variable_shape_fix\n\nAdd .shape property to Variable object'
4c4772397e7683f6c7ba80f560fca98357ba8be4,'Fix an assertion issue in executor.cc when running on 32bit CPU\nChange: 148180335'
fa19f2f86d2ba53fdea895efbcc372d87d037008,"""tfdbg: Fix a bug in DebugNumericSummaryOp's min / max calculation algorithm\nChange: 148178117"""
94b431cd416eea7b3113794cc30bda4c56483a65,'Fixing grammatical error in docstring.\nChange: 148171398'
672535f348795ad4c982647e72347f31403128a3,'Fix GPU device placement for sparse gradients with int64 indices.\n\nAdds a fake int64 GPU kernel for Unique to complement the fake int32 kernel.\nChange: 148160291'
1968de77667c56f9045c35062e1aa231fae5b6da,'Update LLVM release to @295711 to fix build breakage.\nChange: 148158849'
aa23ad048819531186dc1503f31c8b9eb599c7d8,"'tfdbg CLI: fix click-triggered command with existing text in textbox\n\nPreviously, if the command textbox is not empty when the user clicks a hyperlink in the tfdbg curses CLI, the hyperlink command will fail because it is append to the existing text in the textbox. This CL fixes that by erasing existing text before appending the hyperlink command.\nChange: 148156874'"
cd8d0bf58ad554588012898161c91fa453bbf7f0,'contrib/android: Fix bug.\n\nAddress edge case where runStats is null and the interface is closed.\nChange: 148139848'
9c0eb9739c8e54ad104fbfc6f186f1955458767a,'Merge pull request #7674 from jsawruk/bugfix/retrain-print-misclassified-images-python3\n\nFix bug #7647 in image retraining example retrain.py so that the --pr\xe2\x80\xa6'
2c8d0dca978a246f54c506aae4587dbce5d3bcf0,"'OpenCL Improvements (#7596)\n\n* OpenCL improvements\r\n\r\nAdded Tile, Transpose and Range Ops double support for SYCL device.\r\nMoved gpu_device_name() to test_util.py so now it can be used in force_gpu to pull either GPU or SYCL depending on what is available in the system.\r\n\r\n* Improvements to the SYCL device support\r\n\r\n - Registration of Type Traits required for stride slice op\r\n - Registration of ConcatOffset, _ListToArray, _ArrayToList\r\n   Pad, Reverse ( CPU ), ReverseV2 ( CPU ), Size, ExpandDims,\r\n   Squeeze, StridedSlice, StridedSliceGrad, StridedSliceAssign,\r\n   TileGrad, InvertPermutation, Transpose\r\n - Registration of Sycl kernels only for essential data types\r\n - Floor_div_real has been disabled for SYCL device\r\n - Device in control_flow_ops_py_test.py needed to be lower cased\r\n\r\n* SYCL support improvements (#31)\r\n\r\n* Improvements to the SYCL device support\r\n\r\nThis commit reduces number of failing tests when TensorFlow compiles\r\nfor OpenCL support.\r\n\r\n - Registration of Type Traits required for stride slice op\r\n - Registration of ConcatOffset, _ListToArray, _ArrayToList\r\n   Pad, Reverse ( CPU ), ReverseV2 ( CPU ), Size, ExpandDims,\r\n   Squeeze, StridedSlice, StridedSliceGrad, StridedSliceAssign,\r\n   TileGrad, InvertPermutation, Transpose\r\n - Registration of Sycl kernels only for essential data types\r\n - Floor_div_real has been disabled for SYCL device\r\n - Device in control_flow_ops_py_test.py needed to be lower cased\r\n\r\n* Fixes & Version bump (#33)\r\n\r\n* Fix Unbuntu typo. (#38)\r\n\r\nunbuntu -> ubuntu\r\n\r\n* Add problem descriptions and solutions (#35)\r\n\r\n* Add ComputeCpp lib folder to LD_LIBRARY_PATH\r\n\r\n* Add ImportError problem + solution\r\n\r\nIf you get the error message ""ImportError: libComputeCpp.so: cannot open shared\r\nobject file: No such file or directory"", make sure you have added the\r\npath to ComputeCpp\'s lib folder to your `LD_LIBRARY_PATH`.\r\n\r\n* Add another ImportError problem + solution\r\n\r\nIf you get the error message ""ImportError: cannot import name\r\n\'pywrap_tensorflow\'"" you may be standing in the TensorFlow directory.\r\n\r\n* Improvements to the SYCL device support\r\n\r\n* Registers FloorDiv, FloorMod and SoftMax Ops for SYCL device\r\n\r\n* Workaround for 0 bytes allocation for SYCL device (#42)\r\n\r\n* Sycl improvements (#44)\r\n\r\n- Eigen version bump\r\n - Extends Cast and Cwise ops benchmark to cover Sycl device\r\n - Extends device_lib_test.py to cover Sycl device\r\n - Registers int32, string and ResourceHandler to run on host for\r\n   Enter and RefEnter Sycl Ops\r\n - Enables RecudeMax op for Sycl since Eigen implementation is ready\r\n - Registers Less op for Sycl device\r\n\r\n* Improved the formatting of the SYCL code\r\n\r\n* Fixed compilation error.\r\n\r\n* Made sure that using test sessions with force_gpu=True forces the\r\nplacement on a gpu device even if none is detected.'"
28b90fa283ac30065537bd80409a5d8488cbb05d,'Fix documentation on applying quantization to graphs:\n   - add_default_attributes must be called\n   - newlines should not be part of --transform\nChange: 148096948'
8f8182a96561ccf52e624d43a7fd4b10799366a2,'Update doc string to indicate clip_by_value accepts tensors as min and max arguments too (#7692)\n\n* Update doc string to indicate clip_by_value accepts tensors as min and max arguments too\r\n\r\n* Fix typo'
06be849aa2bbd0208c0a2f5eb0fd0b7719e84774,'Error message improvement (#7678)\n\n* Error message improvement\r\n\r\nSee https://github.com/tensorflow/tensorflow/issues/7675\r\n\r\n* Spacing fix'
7e2bbf3043cc993ca40b993eb992bb57c54c10d3,'Fix #include of moved LLVM file.\nChange: 148010876'
195b3063e48e089cceeeb165e50eef90122f3344,'Merge pull request #7673 from aldanor/bugfix/example-mnist-layer-import\n\n Make learn/mnist.py work again'
cb4f6337a583bb0f745d0a7319cf4d8256fdb3ea,'Fix bug #7647 in image retraining example retrain.py so that the --print_misclassified_test_images flag now works properly in Python 3'
fd87896df545baf1ba4ff1c6983680af3829fdc0,"""make training compatible with python3\n\nIn python 3, ints cannot be compared with None, raising an exception.\nThis fix avoids the comparison when 'max_number_of_evaluations' is None, thus\nmaking it compatible with both py2 and py3"""
2c3469018589ffece9938797f618e5b3228074fa,'Fixed the logic for winograd_nonfused for cudnn v>=5100\nChange: 147945193'
029a1708c1804ddbdb6396b3df6d8b3541d77f0d,"'Fix for #7204 with unit test.\n\nDistributions Mixture may have a partially known batch shape; and there was no\nunit test checking this case, and a bug in the code.  Bug fixed, unit tests\nadded!\nChange: 147936123'"
998cb32c4f69c0a71faaa8d7ca5cc5bcd48a0585,'wrong code fix (#7627)\n\nmaybe slip of a pen'
fddf1cf244c99250d36dfe790d1652c534eda2fc,"""Bug fix for ReaderBase in which if the GetNextWorkLocked call fails, we don't go forward and do OnWorkStartedLocked.\nChange: 147904873"""
4c2cfa7ebb05e7323bea47d36d8b36649c454335,"'Fix build error, where nccl requires -lrt link option (#7271)\n\n* Fix build error, where nccl requires -lrt link option\r\n\r\n* Remove config_setting defines in nccl.BUILD and curl.BUILD\r\n\r\n* Fix typo in curl.BUILD'"
807f449bf53d2ac3f07e6853a3d783f7cc9ca68d,'Update shape checking logic in einsum (#7387)\n\n* Update shape checking logic in einsum\r\n\r\n* Fix typo\r\n\r\n* Make modifications on einsum be more structured and simpler\r\n\r\n* Remove unnecessary parts\r\n\r\n* Fix indentation'
0be5c4a395b44a5e1e01160e3703798d67bb814e,'fix windows build (#7617)'
50881c81fee5677909b8f46c773ec59e1ade501c,'fix typo (#7603)'
8af17ac49c2f6c02907778c185af2f498b9b0e7f,'Add std:: prefix to STL non-type names.\nChange: 147779725'
393d3d92d71f195ecbd60ea5bb0885071c6a20c9,"'Workaround FlatMap windows build breakage.\n\nWindows builds break on the following simplified example:\n\n  template <typename Key, ...>\n  class FlatSet {\n   public:\n    typedef Key value_type;\n\n    class const_iterator {\n     public:\n      typedef FlatSet::value_type value_type;  // Fails on windows\n    };\n  };\n\nThe build succeeds by adding \'typename\':\n      typedef typename FlatSet::value_type value_type;  // OK on windows\n\n<simplified log of compiler error>\nflatmap.h(110): warning C4346: \'difference_type\': dependent name is not a type (compiling source file ...cancellation.cc)\n\nflatmap.h(110): note: prefix with \'typename\' to indicate a type (compiling source file ...cancellation.cc)\n\nflatmap.h(161): note: see reference to class template instantiation \'tensorflow::gtl::FlatMap<Key,Val,Hash,Eq>::iterator\' being compiled (compiling source file ...cancellation.cc)\n\nflatmap.h(376): note: see reference to class template instantiation \'tensorflow::gtl::FlatMap<Key,Val,Hash,Eq>\' being compiled (compiling source file ...cancellation.cc)\n\nflatmap.h(110): error C2061: syntax error: identifier \'difference_type\' (compiling source file ...cancellation.cc)\n</simplified log of compiler error>\n\nThis is a bug in the windows compiler. It is true that FlatSet::value_type is a\ndependent name, but it also refers to the ""current instantiation"", so \'typename\'\nshouldn\'t be required.  For details see:\nhttp://en.cppreference.com/w/cpp/language/dependent_name#Current_instantiation\n\nBut it doesn\'t hurt to add typename; it is simply redundant.\nChange: 147776071'"
75110127affb0a9d12e34e5bd72605b88a70f948,"'Set a more descriptive error when a Run() call is cancelled due to session closure.\n\nAlso fixes a potential memory leak, where the worker-side state of a failed Run() call\nwould not be cleaned up.\nChange: 147752067'"
094138347fb75d5c079e9993d62c35b7d1430c7c,'Fix code that ignores passed in tensorflow::Env while creating GrpcServer (#7564)'
63b082171afb7cb7739db6f67c2d60fea93a6e70,"""Make FlatSet and FlatMap behave more like the std equivalents.\n\nThis fixes a collection of annoyances that prevented Flat{Set,Map} from being a\npure drop-in replacement for std::unordered_{set,map}.  I haven't exhaustively\nensured compatibility; I started with stuff I've actually run into:\n\n* Construction via std::initializer_list\n    FlatSet<int> set({1, 2, 3});\n    FlatMap<int, int> map({{1, 10}, {2, 20}, {3, 30}});\n\n* Define an iterator_category for compatibility with std algorithms.  E.g. the\n  code below would yield a compile error with the useful bit truncated, and\n  you'd need to find and set --cxxopt=-fshow-overloads=all to figure it out.\n    FlatSet<int> set({1, 2, 3});\n    vector<int> vec(set.begin(), set.end());  // used to fail, now works\n\n* Defining the iterators with forward_iterator_tag requires postfix ++\n  Admittedly I haven't actually run into this, but it's easy to add.\n\n* Previously FlatSet::iterator allowed mutation of the set keys, which would\n  corrupt the internal representation.  I've taken the standard approach of\n  defining iterator as an alias of const_iterator, so that we'll now get a\n  compile error if you mistakenly do this.  I haven't actually run into this\n  either, but it seems like a worthwhile change.\nChange: 147731813"""
cfd9a1ceeb232f35de2ce82506f18350d7b0e7c1,'Fix: typo in README.md (#7584)'
82a0f347baf7284345cbf9e830310604da9b1b73,'added missing fclose(infile); (#7548)\n\n* added missing fclose(infile);\r\n\r\n* fixed tabs; added missing fclose(infile);'
37a564be46759d6e25bda725edc46fc9c4b7788e,'Fix: typo in README.md'
7742632d02a595bc99fd41f11e8f62a334d3d1d2,'Fix typo in Release.md (#7567)\n\nintead \xe2\x86\x92 instead'
448e99d210097c1ebe61e1c6de2534db17f8d364,"'Fix broken links in ""defined in"" lines.\nChange: 147666965'"
f1b565b5ec3c53684d9f23f49a49b7748838e861,'contrib/android: Fix bug.\n\nIntroduced in commit 1a9769dc79fdd27c347633df210ff64f48de8d07\nChange: 147666474'
7314d0853e2ee7d64526ad3b1dcaa08591199bfb,"'Make CNN input float32 (#7318)\n\nFixes #6342, fixes #6647.'"
657dca6747077af556ec6f6781650009c8606a6f,'Fix geometric_test.py.\nChange: 147628659'
1b87fec1180fbf5c13ccafaa39beda0e618cda74,'Make subsection level consistent across all distributions and fix other markup errors.\nChange: 147626730'
b875419c9455e6d1d1b3e757fa159011487da2bd,"""Fix tf2xla for select ops with scalar 'cond'.\nRELNOTES: n/a\nChange: 147610473"""
1849946c09ad93bc2e4f49c658049223e1efe908,'Fix tfprof to count scalar parameter\nChange: 147610329'
b058d3d1bae01468a9deda000847f6ddfc69f8f1,'Fix a bad reference.\nChange: 147610135'
e259821c18ebfb2b531a565695c29eaba4ac62ce,'[XLA] In BufferAssignment always combine temporary allocations.\nAlso fix alignment to a constant value.\nChange: 147609349'
323e232a70ce54dad74bae012c5cc0f19c07be2c,'Fix GetDsoHandle segfault (#7528)'
50575a87d4369d75cdccd11b26458cc3ef8ecc50,'Small fix to test for dynamic_rnn_estimator_test::testGetOutputAlternatives\n\nError introduced during CL/147543432 touchups.\nChange: 147594098'
02703f9525696f4788496745f6756585c1c546a3,'Fix crash in range sampler by adding a range check in the sampler op.\nChange: 147562709'
872a4200f33c1645f7989b699da754c45c3e83f7,'Fix for:\nRuntimeError: Modules nested too deep:\ncontrib.graph_editor.reroute.subgraph.select.tf_ops.dtypes.np.core.fromnumeric.mu\nChange: 147558652'
1af29d452b2582a275c8944c194f70594d778e93,"'Fix link in CONTRIBUTING.md from ""contributions welcome"" to ""stat:contributions welcome"" (#7513)'"
da8758be2ef167461f9abd325306ba08f2041558,'Manual documentation fixes.\nChange: 147514603'
40ec3db0bf1033ca435aa5b488868b29235fcf7c,'Fix links according to new convention.\nChange: 147499520'
b9db1ff1bf3552cbdb18c6b0c7735a297525adcc,'Make range sampler non-crashing when input arg to FixedUnigramSampler::Probability is too large.\nChange: 147539715'
6148bd461a17603c9639cda6b6ae5241930b73d8,'resolve #6762 on ldconfig only available on root PATH (#7279)\n\n* resolve #6762 on ldconfig only available on root PATH\r\n\r\n* break no backward compatibility on ldconfig PATH\r\n\r\n* fix indenting\r\n\r\n* Update configure\r\n\r\nbe silent on error when ldconfig is not detected on PATH'
6c4fd8c6b150a4825f4ec1c62acc38a0447b1bd6,'fix docs formatting of tf.while_loop (#7273)'
e75c0fc9254ab7c2741c29ec229cc4cc33f3d543,'FreeBSD compatibility (#7073)\n\n* Adding FreeBSD compatibility (non-breaking changes)\r\n\r\n* Adding FreeBSD compatibility (BREAKING changes)\r\n - FreeBSD has libdl integrated into libc so -ldl is not available\r\n\r\n* Adding FreeBSD compatibility (BREAKING changes)\r\n - FreeBSD has libdl integrated into libc so -ldl is not available\r\n\r\n* - Define FreeBSD config\r\n- Clear -ldl linkopts for FreeBSD only\r\n\r\n* Clear -ldl linkopts for FreeBSD only\r\n\r\n* Changing to local condition just as previously done with darwin\r\n\r\n* Removing one indentation for syntax validation\r\n\r\n* Removing one indentation here too\r\n\r\n* - Changing new config name to lowercase\r\n- Fixing buildifier warning'
71f7b620fc3a6bdf30facd7b6e63c789e90567e0,'Fixed off-by-one error in L115-116. (#7437)'
00bada09944983bb298444d221dd472d86cb3f13,'Added native architecture option to Linux makefile to fix test breakage\nChange: 147538352'
156da397dc2e354baeac10804c5e9c1b3af8b7eb,'Tell fix (#7479)\n\n* Parallelizing GetMatchingPaths\r\n\r\n* Fixing tell()\r\n\r\n* Fixing tell()\r\n\r\n* Fixing tell()\r\n\r\nFixing tell()'
fa3d574d42f7f669bcd88789093b255b26f796c1,'Manual documentation fixes.\nChange: 147514603'
53a246127b29da3d1af425e58412d388b5930aa4,'Re-enable shape_test failing tests after fixing issue that shows up in\nnumpy 1.12 only.\nChange: 147512538'
020fd6a91ea2bbe008ef6dd55fa45f16503a9312,'Merge pull request #7506 from tensorflow/martinwicke-patch-1\n\nFix hooks/BUILD for custom py_test rule'
67963e70f992ce2b46986b63483a676d68e0266f,'Passing commandline arguments to this script was broken with migration to\nargparse. Fix a bool flag and also pass only unparsed flags to the test.main.\nChange: 147508611'
e7f333b5f8b3c53b21d149d8d14c0cebbde431aa,'Fix links according to new convention.\nChange: 147499520'
2b2f26b08874524a913cfd8cb3d416d6d48ee156,'tfdbg bug fix: avoid hanging while watching Enter and NextIteration ops in while loops\nChange: 147488620'
4dc7484e6d12cd298daf6a5c48291af789bb3325,'Fix hooks/BUILD for custom py_test rule'
6b0a5aa102ec193e37f3f522860182381a3f872b,'Seal ffmpeg interface and fix document generator to use ffmpeg build target.\nChange: 147420392'
c926b7569d9c4b52314c65de29420ceb25d0e352,'Doc fixit task 2.\nChange: 147404726'
83d49ba627eb867f104132985acd88e49378bb17,'Merge pull request #7502 from petewarden/master\n\nAdded native architecture option to Linux makefile to fix test breakage'
3ca23bbdb07cbdc6a759968c448a8f633860ccda,'Added native architecture option to Linux makefile to fix test breakage'
e4c4f4b9045d71571fdc3e088625f58821ba49cb,'Doc gen changes:\n* Skip @@ lines in docstrings.\n* Do @{...} conversion in brief docstrings.\n* Fix a doc linking bug.\nChange: 147473081'
d96c3b7d4089ca49892ec5000ddb6e1a3b90c6c3,'Fix documentation and guide for graph_editor\n\n-Seal and expose reroute\n-Remove unavailable aliases from guide\nChange: 147429891'
582fc4a3bc02b160844c03c2155f206aa07d7e6e,"'Fix broken links for unsealed contrib API guides\n\ncontrib.learn.monitors will not have an API guide, since it is deprecated and unsealed.\n\nFixes sealing for tf.contrib.training.\nChange: 147424947'"
78c491caaf34f308ce77a61f34770af5f04f8c2a,'Seal ffmpeg interface and fix document generator to use ffmpeg build target.\nChange: 147420392'
c3c31f6475796b16054d48b0fff872629fa6811c,"""Make FlatSet and FlatMap behave more like the std equivalents.\n\nThis fixes a collection of annoyances that prevented Flat{Set,Map} from being a\npure drop-in replacement for std::unordered_{set,map}.  I haven't exhaustively\nensured compatibility; I started with stuff I've actually run into:\n\n* Construction via std::initializer_list\n    FlatSet<int> set({1, 2, 3});\n    FlatMap<int, int> map({{1, 10}, {2, 20}, {3, 30}});\n\n* Define an iterator_category for compatibility with std algorithms.  E.g. the\n  code below would yield a compile error with the useful bit truncated, and\n  you'd need to find and set --cxxopt=-fshow-overloads=all to figure it out.\n    FlatSet<int> set({1, 2, 3});\n    vector<int> vec(set.begin(), set.end());  // used to fail, now works\n\n* Defining the iterators with forward_iterator_tag requires postfix ++\n  Admittedly I haven't actually run into this, but it's easy to add.\n\n* Previously FlatSet::iterator allowed mutation of the set keys, which would\n  corrupt the internal representation.  I've taken the standard approach of\n  defining iterator as an alias of const_iterator, so that we'll now get a\n  compile error if you mistakenly do this.  I haven't actually run into this\n  either, but it seems like a worthwhile change.\nChange: 147415868"""
e62619519b788a73393ca64651b8a081ec9c63c1,'Doc fixit task 2.\nChange: 147404726'
bc225bfaa534acc25047fe844f19edc333b7a76a,'Fix code that ignores tensorflow::Status.\n\nAdd a new tensorflow::Status::IgnoreError() method to mark call sites where a Status has been intentionally ignored.\nChange: 147402405'
c9d5a8ffdedf25a3a92107c3ff616eec3ce7e9a6,'Fix shape_test which complains on non-integer slice.\nChange: 147399432'
1cb144ad3fd550aeda417f072ff2a1d235f92960,'Install numpy from source for Python 3.5 to fix the nightly build.\nChange: 147395987'
37ba47810867abe769199cc46d5b8e3b6fe11069,'Fixing example strided_slice (#7347)'
d758e6dc346eadee5d71482415ad9a0095bfb591,'Fix TensorFlowYoloDetector issues with RGB preprocessing and confidence calculation. Resolves #7452\nChange: 147369341'
f1cbf8f0645dc802dc573e5da5a174fa39957643,'Bump the Eigen version to fix Eigen::VectorXf indexing with int64 on g++ versions > 4.8.\nChange: 147369186'
32e4c38ffee4d14a8ee94d63f3c3bc5bbc3e7ee1,'Fixes bug where assigning a zero-sized Tensor to a string variable can segfault\nChange: 147365276'
02b8cbf4dede81933bf6adf0c463794542640f4f,"'[TF:XLA] Implement Placeholder on XLA_ devices using the common Placeholder kernel, rather than via a dummy op. Implement PlaceholderV2 as well.\n\nExpose the Placeholder kernel in the constant_op.h header file.\n\nFixes poor error message when a Placeholder on an XLA device is not provided to session.run().\nChange: 147360091'"
1bbb52426bd4f8046400731100b11e9ca767d303,'Fix: make sure to join all threads to avoid flakes in (#7429)\n\nsync_replicas_optimizer_test.'
9949045460ffb7bfc037f4b3a5396325791e0f09,"'Add ProfilerHook for capturing CPU/GPU profiling information with MonitoredSession (#6864)\n\n* Add ProfilerHook for capturing CPU/GPU profiling information with MonitoredSession.\r\n\r\nProvides a SessionRunHook that uses timeline module [1] to give trace files\r\nthat work with chrome://tracing [2].\r\n\r\n[1] https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/client/timeline.py\r\n[2] https://github.com/catapult-project/catapult/blob/master/tracing/README.md\r\n\r\n* Move ProfilerHook to new contrib.hooks.\r\n\r\nLet the new hook bed in in a new place for experimental hooks.\r\n\r\n* Move contrib/hooks/python/hooks to contrib/hooks/python/training.\r\n\r\nExperimental hooks will move to tensorflow/python/training if they prove\r\nuseful, so move files to reflect this.\r\n\r\n- Fixups after move.\r\n- Add hooks to cmake build.\r\n\r\n* Add hooks to pip package.\r\n\r\n- Also remove remaining changes to files since move.'"
099ef38a99d069b9a1f6d09a289b2df69eaee276,'Fix #7375 regression in TensorBoard'
e6c776d5e1ead6aa116fd27b9e8b8fcb33693dd7,"'Misc doc generator changes.\n* Consistently use <a id=""...""/> for anchors.\n* Repeat all the errors at the end.\n* Fix bug in replacing references in non-api docs.\nChange: 147259560'"
a5d79028e0a5c088a78a157cd9e255528349841b,'Fix backwards compatibility test.\nChange: 147235987'
246ac732b8a3b7737efc38914dd2280e5164d563,"""Update proto library reference and make curl forward/backward compatible\n\nI'm working on fixing https://github.com/bazelbuild/bazel/issues/1681, which\nwill change the way Bazel organizes the execution root.  This has two\nimplications for tensorflow:\n\n* The protobuf library needs to be updated to a version that works with\nold/new versions of Bazel (older versions won't be able to find\nexternal protos).\n* The curl library needs to use ../curl as an include prefix in new\nversions of Bazel and external/curl in old versions.\n\nThis patch should be forward/backward compatible."""
da686a41f23a8338e67a69138891950638411766,'Update Dockerfile.android\n\nUpgrade to Android NDK 12b for nightly builds. This will fix an issue with the arm64 native libraries on Android where the Inception classifier returns incorrect results.'
f3979c09fb96be09738890bc38286085c6f52394,'Fix transform for cyclic graph (second try). Deprecate in-place transform.\nChange: 145649225'
4e20b473c35994e507a4675fd1c5a2350559e0d2,'Fix transform for cyclic graph.\nImprove collection name handling.\nAdded helper to retrieve corresponding tensor/op.\nChange: 144824657'
29f7bfaf16d9f19f6c0197bbe34a9fc5ff79bd1d,'Java: Bugfix: Handle UINT8 correctly in elemByteSize.\nChange: 147221491'
4df56e1d03527cd1f61e66580015c9479371fd2d,'Merge pull request #7425 from jhseu/protobuf\n\nBump protobuf version to fix the mac GPU build'
9a2b6f40181d6f125e2764e4e26c69a6a4cfe1e5,'Add plugins/debugger to tf_python.cmake\n\nThis fixes @7352 by making the debugger Tensorboard plugin available to cmake builds.'
2d364afa2b0961ad82e48e9dc6e8db119da4b943,'Fix double evaluation of macro argument that was causing duplicate CUDA batched GEMM calls.\nChange: 147025110\n\n(cherry picked from commit f439016532a8b310bb4cc984eed1c331b4d3be8a)'
f1c03a9d47bac3948f538a646ffd9d5e8376be0c,'Merge pull request #7424 from theflofly/typo-cuda-error\n\nFix typo CUDNN_RETURN_IF_FAIL.'
500c96e482df8ff7470d417523c5252c5ed66c8a,'Bump protobuf version to fix the mac GPU build'
a6698972a48f1f4b7f1fad50a456e61be5cb333f,"'BUGFIX: ensure ""make batch ready"" shape utility function correctly handles static vectors.\nChange: 147185201'"
cfe5658ff910aefd0b8c693e004782b8f6d66c75,"'Set correct name prefix in cluster spec generated in k8s_tensorflow.py. Also, add a job label.\nChange: 147184814'"
d41279013e2d67144c13f9905b70fbee10311400,'Merge pull request #7335 from yaroslavvb/ge_fix\n\nFix typos in graph_editor add_control_inputs.'
7fc9bb7e265705854ddcb99278474852ae870f82,'Fix typo CUDNN_RETURN_IF_FAIL.'
033f87b7f4d54c9f981ef848f559d232dbcc8d34,'Fix transform graph parsing to avoid infinite loop\nSolves problem in issue #7150\nChange: 147177034'
468e2515301de568d47e84dc468c94ddd92ade81,'Fix bug in relative path computation for doc links.\n\nFix docstring for flags module.\nChange: 147128429'
3b7b39ac5dd2dceebe4b80b5e0b12316720a924b,'Bugfix to scatter_nd_op shape checking.\nChange: 147112118'
6177838467cda599a088b5dcc3cd6cde193b605f,"'Fixing up GraphTransferer to run shape inference to compute output shapes for each op in the graph.\n\nAdded a test that compares the sizes coming in from Dry run vs shape inference.\n\nAlso, fixing a memory leak in shape_refiner.cc.\nChange: 147110753'"
e6ed1758531cf3d3ec0bfc1a17a0066360f3aa07,'Minor fixes to Recurrent Models tutorial.\nChange: 147108407'
1fbdd3ff8705566cbb203b7e0c926777289c36b3,'Minor fixes to Seq2Seq tutorial.\nChange: 147106298'
d86cadcdf03ae6fef63f34c90150a4518a121de8,'Fix for non-hermetic build.\nChange: 147093777'
ff22cc977230160e0cd0c1f32356681230a2104f,"'LinearOperatorUDUHUpdate:  Fixed .shape and .shape_dynamic to account for broadcasting between base_operator and other args.  Since tf.matmul does not broadcast, it may or may not be possible for this operator to broadcast .apply and .solve in all cases.\nChange: 147059246'"
3c1187f072f3db2460ab8c07b5d5ac40cf14a28f,'Fix and refactor hexagon controller to catch up with latest hexagon_nn libarry\nChange: 147097908'
c0fc1b998ddbc838a479e295dfd9c0ad75d28f48,'Change TensorBoard to use a relative data dir.\n\nFixes #7382\n#7382\nChange: 147095442'
2180bb97de1fedfe249523bb8fcc2144d97fd00e,'Merge pull request #7360 from PhilJd/master\n\nFix unsorted_segment_max for negative floats'
3adf730ed3da609aea0a831c5eebf37122628fb2,'Fix for non-hermetic build.\nChange: 147093777'
0a04e7725e7afe12286afc0a9178de89d50cdbfb,'Fixed bad merge'
647a2f91372bd5cb819df5cca746ff04d257bbe1,"'LinearOperatorUDUHUpdate:  Fixed .shape and .shape_dynamic to account for broadcasting between base_operator and other args.  Since tf.matmul does not broadcast, it may or may not be possible for this operator to broadcast .apply and .solve in all cases.\nChange: 147059246'"
460b9700bf2e80553ba496bbdf32f4f09dfb71c4,'Fixed merge conflict'
f439016532a8b310bb4cc984eed1c331b4d3be8a,'Fix double evaluation of macro argument that was causing duplicate CUDA batched GEMM calls.\nChange: 147025110'
5a08f2496b3e2211c0e977f38b216cab314ca72d,'Fixing incorrect link for Wide & Deep tutorial in Additional Resources.\nChange: 147005303'
cb19b632873e5c95458e45bcff6abd4322cefcc9,'Update our version of protocol buffers. Use a new numpy and pandas in Jenkins. (#7338)\n\n* Update to protobuf 3.2.0\r\n\r\n* Add missing link dep\r\n\r\n* Fix\r\n\r\n* pip install numpy'
a5b7c0359301612ae8b65b7e211c553c74565f4f,'Fix merge issues.'
9b203959f33570a2e8618f6a486b874f882de10b,"""Merge remote-tracking branch 'gtf/r1.0' into fix_nccl"""
088b2d49e9dd0ce752b0019c7e543c249e0a8052,"'Only build with sse3 by default, rather than sse4.1 (#7349)\n\nFixes #6809'"
52691c5e829fa4a99cfb000954cf174acf175ee2,'Fix remote graph execute op to run inception on hexagon correctly\nChange: 146980413'
c87b17f996bde34027d515415b28514a38c41c9a,'BUGFIX: Bijector shape getters infinitely recurse.\nBUGFIX: Cholesky bijector incorrectly handled non-batch case.\nChange: 146975027'
370dd2c42a7f3a42cf3a7e49944a71f369035a7b,"'Fixing lint errors. CHECK(a == b) -> CHECK_EQ(a, b).\nChange: 146967578'"
06569522503f79fe950cab36ef00b23ddeaf8fe0,'Fix memory leakage of CheckpointReader\nChange: 146955950'
bd4a1c58d28734c77ecb17d719e72c45c6c33077,"'Improve docs for incompatible protobuf error (#7277)\n\nOn Mac OS X, importing tensorflow can result in the error: ""TypeError: `__init__()` got an unexpected keyword argument \'syntax\'"". As explained in the doc, this is caused by an incompatible protobuf version. The suggested fix, ""pip install --upgrade protobuf"", doesn\'t resolve the issue if the user has installed protobuf via Homebrew. This commit adds an example command to fix the error in this case.'"
00c2ae32880b8453e4d5e47d0648bcfed4a39c18,"""set correct target directory for tar extractall()\n\nfixes a wrong path when data_root is other than '.'"""
1536a84f32f1fe77efd3fee6e5933a1dfe4e10bb,'Bump the version of nccl for macos fixes.'
342d8b18f62778cb0d0b801041ff10fcfde19c2a,'fix unsorted_segment_max for negative floating points numbers'
81430dc9bdbcc89d909609f5a268ae3033d1722e,'Fix broken link to Session C++ API\nChange: 146877853'
38ac8aaaa0ac65a3505771351a3ebb714157e46a,'Split input related estimator tests into a new file to fix timeout issue.\nChange: 146735638'
7eb34751d7fb4a50fac992ad347b025aac8ee64b,"'CudaRoot() returns the configured CUDA toolkit path.\n\nFixes the problem of XLA being unable to find libdevice files if not executed\nthrough bazel. For example,\nhttp://stackoverflow.com/questions/41729019/notfounderror-running-tensorflow-xla-example-libdevice-compute-35-10-bc/41800414#41800414\nChange: 146329331'"
af37207ab601ebd70da62aef5ef79dcb8e1100fb,"'Fix for op placements when deduplicating sparse gradients.\n\nAdds a fake GPU kernel for unique, which allows the hard placement of other ops on the GPU.\nChange: 146432826'"
e69918f763e56c13d5d4ec8c99280dff99e86ec9,'Fix a latent memory corruption problem of tensorflow::tensor::DeepCopy.\nChange: 146870257'
0c68156ffcf918df905f9f39a632888724c66c3b,'Do not build with sse4.1 by default. (#7348)\n\nFixes #6809'
8b07605e45f55c942d1436116fd5b0cc83a29e1d,"'Add tf.random_poisson(shape, lam) to tf core.\n\nFixes #6798\nChange: 146861107'"
e946a6b63979a63f9e5a1d1603f6cc21d8aad1cf,'Float indexing test fix for Numpy >= 1.12+ (#7342)'
7734b20cefe20da220a151e900f2235dc26fa2b1,'Fix doc generator links.\nChange: 146854187'
e6bfaf47374b44bb688023904eac98576baf4cd4,'Fix cmake build: Exclude graph tranfser libs from cmake\nChange: 146852544'
bbb0edbc5834616ba763184d499870b2e17ac455,'Fix error in record_input_test due python2 vs 3 difference in writing strings.\nChange: 144786198'
33637df3eb7f5b99a3ca0783d7da54723a7f2b8b,'Fixes warnings in the input_fns tutorial.\nChange: 146836129'
fcae253c08a9f54d55cfa596402ab53c397089bd,'Doc fix for mandelbrot set tutorial\n\nFixes #7308.\n\ncomplex_abs -> abs and one bit of indentation.\nChange: 146834910'
b7f370e24222017ddc07af834ac1e99762e76e0e,'tfdbg: fix CommandHistory test sandboxing issue\nChange: 146831490'
fc8795f422516e348e82bb82b6e084d9adfd1512,"'[TF:XLA] Fix bug in BufferAssigner colocated buffer sets.\n\nThe bug is somewhat obscure, and discovered via code inspection. The problem is\nin AddSetToColocatedBufferSets, where the final ""remove overlap sets"" codeblock\nrequires overlap_set_indices to be in increasing order. The old code that filled\nin overlap_set_indices had a bug where the sets could be in any order, and even\nworse, the same set could show up multiple times. Added a test of chained calls\nwith tuple output; it wouldn\'t have caught the bug, but adds better coverage.\n\nAlso removed the colocated_buffer boolean argument from\nBufferAssignment::AddAssignment(), which wasn\'t useful. Note that it was only\never set to true in AssignColocatedBufferSets, but in that codeblock we\'re\nguaranteed that the allocation is reusable, so the colocated_buffer argument\nprovides no additional value.\nChange: 146831168'"
2934985855f132af83f1a0ed668d2885be7f76c6,'Propagate TF_BUILD_ENABLE_XLA environment variable into the CI build docker container from ci_parameterized_build.sh.\nFixes XLA continuous builds.\nChange: 145100608'
eca81d4d31dc083de5df2c722cd36662c561211b,'Better error message from trying to differentiate PreventGradient.\n\nAlso fix small lint error in gradients_impl.py\nChange: 146822514'
cf9e10dd0dd5898fc930a6c2b76a2d6da9920c0c,'[XLA] Fix parameter type of IsLiteralWithValue in algebraic_simplifier.cc.\n\nIt should match the param type of LiteralUtil::IsAll.\nChange: 146692488'
65dc8a85291c97c7d6f4671b844d1f008a5492b7,'Fixes a couple of mis-formatted error messages.\nChange: 146684854'
0ed5741c34d04adf20585be9ace0369bf51801eb,'Decrement initial reference to XlaDeviceContext object to fix memory leak.\nChange: 146278252'
c07a477a9811a23c6369a0fb4b6a31d3032aea95,"'[XLA] Fix uses of ShapeUtil::ByteSizeOf to use proper pointer size\n\nWe missed a few places, lets be more explicit and make the pointer_size\nparameter necessary for TUPLE shapes.\nChange: 146066214'"
81451636fbdfbeabde9dc831bfdde38a5cc1d60e,"""[TF:XLA:GPU] Fix HloSchedule to account for stream predecessors transitively.\n\nFor a given op X, the previous code only considered stream predecessors to run\nbefore X. The new code considers the transitive closure of stream predecessors\nto run before X. This is a tighter (and more correct) restriction.\n\nThis should lower memory usage, but the full effect won't be seen until sim-heap\nbased buffer allocation is implemented.\nChange: 145858339"""
cd158fd70a867591b1bb799baae3bb8f29463795,"""[TF:XLA] Fix tuple-shaped Call op.\n\nOne issue with tuple-shaped Call ops was that the hack in\nBufferAssigner::AssignBuffersForComputation to deal with kCall was only handling\naliasing of the top-level buffer.  That works fine for array-shapes, but breaks\nfor tuple-shapes.\n\nThe fix is to remove that hack, and instead use the colocated buffers mechanism\nto deal with Call ops, forcing colocation of the LogicalBuffers defined by the\nCall with the corresponding output from the computation.\n\nAnother issue for the parallel cpu backend was that CopyInsertion was run before\nParallelizationPreparation.  That doesn't work, since ParallelizationPreparation\nmay add a bunch of new computations, which might be missing required copies.\n\nThe fix is to run CopyInsertion after ParallelizationPreparation.  But now we\nhave a different problem - CopyInsertion might have added copy instructions to\nthe entry computation, which is required to only contain kCall instructions (and\nparams).  So we simply run ParallelizationPreparation again, to outline these\ncopies into sub-computations.\nChange: 145845046"""
1c316764e627fafad6cb2a3677dc53ecf6c1d14a,'Improve support for pad instructions with negative padding.\n\nDefine semantics of negative padding in the Pad instruction to be identical to padding inside of convolution operation ConvWithGeneralPadding. Also make negative padding work in the backends.\n\nSpecific changes:\n(1) Add transformation to algebraic simplifier which replaces negative padding with slices.\n(2) fix ReferenceUtil to properly handle negative padding and interior padding.\n(3) Add negative padding explanation to operation semantics g3doc.\n(4) Extend LayoutsInShapesEqual and CopyLayoutBetweenShapes to work with shapes which are not exactly compatible but have the same rank and tuple structure.\nChange: 145355127'
0348cff48e650ad2d886a5cd10d486c160ae10c7,'[TF:XLA] Make //tensorflow/compiler/tests:concat_ops_test medium size to fix Jenkins test timeout.\nChange: 145119936'
bd371a33810ecb7957fa952b2af0e6dc33f9341c,"""[TF:XLA] Mark _XlaLaunch as a stateful op since XLA's random-number generators are stateful.\n\nPrevents Tensorflow from constant-folding _XlaLaunch ops containing random-number ops. Fixes Github issue: #6854\n\nEnable RandomStandardNormal for the XLA CPU backend.\nChange: 144716342"""
58baf26c4fb012cc8688c1c80837704fd046f1f2,'Fix typos in add_control_inputs.'
67d5327f1e04dcd97f73ce1cf28ef9cb4d3e6b5e,"'Java: Bugfix: Handle multiple outputs of a session run correctly.\n\nAlso, plug a path where env->GetArrayLength() might have been called after an\nexception was thrown.\nChange: 146804085'"
ab0426e203cd81fb2247475eccdfcec0ddb8bf39,"""Improve performance of ResizeBilinear:\n- use pointer arithmetic instead of accessing data through eigen single-cell\n  expressions.\n- use only scale_down case, rename to resize_image. This simplifies the code,\n  at the cost of slightly worse performance for the scale_up case with one\n  channel (note though that special-casing single-channel case would make it 3x\n  faster than the AFTER times below).\n- pull some common arithmetic out of loops manually, so that more common\n  indexing operations don't require multiplication.\n- remove some assignments in inner loops.\n\n(the first of these had the largest effect).\n\nAdd some more test and benchmark cases. Also fix a typo in the ResizeArea test.\nChange: 146795860"""
ac9a3d93288db83a3177d4494ce7f8bb2e0f92ad,'Fix windows cmake build.  Excluding graph_transferer_test and hexagon\nChange: 146748131'
aa821fc99a5fe7cbb59971d1d139cf376ade4335,'Fix inclusion guards of quantize_and_dequantize_op.\nChange: 146441782'
9d01b154aa0d31fdea93f349abfb232b2a557327,'FileSystem directory creation fixes:\n- Ensure that CreateDir returns error::ALREADY_EXISTS if the dirname exists.\n- Ensure that RecursivelyCreateDirectory ignores error::ALREADY_EXISTS when\n  creating directories and subdirectories.\n\nFixes #6974\nChange: 145144720'
b67cec37e4700ddcc60a82fc193ae4a98a1004d8,'Split input related estimator tests into a new file to fix timeout issue.\nChange: 146735638'
44b11c4e9f0d778c5547b8b3d6b772b0fbed8079,'[Docs] Fix a few incorrect names and missing links in queues HOWTO.\nChange: 146718366'
25415963915dfca79d0300817ffa8c79a8d24935,'Merge commit for internal changes\n\nFixed merge conflicts by taking --theirs:\n\ttensorflow/core/common_runtime/executor.cc\n\ttensorflow/python/debug/cli/stepper_cli.py\n\ttensorflow/python/debug/cli/stepper_cli_test.py\n\ttensorflow/python/debug/stepper.py\n\ttensorflow/python/debug/stepper_test.py'
fb5aad0d7e02f637453daccf5568df493ffdd1bd,'Fixes a bug where we were trying to access weight tensor for inference. This broke export/inference for any classification model using weights.\n+ Added a test.\nChange: 146697049'
06429f50497ea709124d240eadd9dd14041b10d2,'[XLA] Fix parameter type of IsLiteralWithValue in algebraic_simplifier.cc.\n\nIt should match the param type of LiteralUtil::IsAll.\nChange: 146692488'
f02cce28dd4ac24b95f7c93e5714ce10d8922457,'Fix typo in documentation of KMeansClustering.\nChange: 146639240'
77f640212a6175fe97e9e073bb0553076dea6c1f,"""A few changes to get tf_cc_logged_benchmark's running under tensorflow/. Pass in benchmark argument to tf_cc_logged_benchmark. Also, add _gpu suffix to benchmarks.\nChange: 146552100"""
ec58d4042790e71172964383f737b249289d15af,"'Unit tests for logistic, OneHotCategorical, RelaxedBernoulli, RelaxedOneHotCategorical distributions. Fixed some bugs in the implementations that caused tests not to pass. Using numpy.finfo(np_dtype).tiny to prevent underflow issues.\nChange: 146548214'"
1991af6f5b0fef9a8d10135610a63c1a4df695bf,'Fixes a couple of mis-formatted error messages.\nChange: 146684854'
6bb3d98fe7218fac10eff360f242fde7e389c391,'Fix typo in documentation of KMeansClustering.\nChange: 146639240'
a544546c31edc97aaab31d77170911811f524306,"""A few changes to get tf_cc_logged_benchmark's running under tensorflow/. Pass in benchmark argument to tf_cc_logged_benchmark. Also, add _gpu suffix to benchmarks.\nChange: 146552100"""
644b2e57bd3f15b3cb7d6fc908aeb486eef6dd22,"'Unit tests for logistic, OneHotCategorical, RelaxedBernoulli, RelaxedOneHotCategorical distributions. Fixed some bugs in the implementations that caused tests not to pass. Using numpy.finfo(np_dtype).tiny to prevent underflow issues.\nChange: 146548214'"
19d932f4cb49182c111d646267ac6c0bbc4f2f00,"'Added Intel MKL graph optimization code and the ability to enable MKL when running configure. (#6921)\n\n* Added Intel MKL graph optimization code and the ability to enable MKL when running configure.\r\n\r\n* Fixed inclusion of MKL into build files.\r\n\r\n* Made changes to MKL graph optimization files based on review comments.\r\n\r\n* Adding support for MKL matmul op\r\n\r\n* Revert ""Adding support for MKL matmul op""\r\n\r\nThis reverts commit 20d6cdd865dbe790bd03765e82b709bd750d8823.\r\n\r\n* Changes based on Vijay Vasudevan\'s comments\r\n\r\n* Made format-related fixes to some build files.\r\n\r\n* Setting the execute bit (755) for tensorflow/tools/pip_package/build_pip_package.sh'"
084b37a00f3cf2cc89d433528ca63ec1d3b5b313,'Fix cudnn filename in configure script. (#7237)\n\n* Fix cudnn filename in configure script.\r\n\r\n* Revert unwanted change to build_config.bzl.'
ee770d990fec67ccb35831bcaab162ed9097dc8b,'make tensorflow/contrib/layers:feature_column_ops_test medium to fix Jenkins test timeout. (#6990)'
44bbf26ef8d6d1d3d37412a68860e275a6778e58,"'Fix by Josh Levenberg for cmake build (#7233)\n\n* Fix by Josh Levenberg for cmake build.\r\n\r\n* Cmake fix, take 2.'"
d47caf64727234296759149681e6196b40e8f974,'Fix inclusion guards of quantize_and_dequantize_op.\nChange: 146441782'
ef489fb30b374271da1b4a5ef549a9965737dcbb,"'Fix for op placements when deduplicating sparse gradients.\n\nAdds a fake GPU kernel for unique, which allows the hard placement of other ops on the GPU.\nChange: 146432826'"
64493cfda783162213592ff5042191a24e9e5316,'Fix bug with doc updates for ops with renames in the C++ API.\nChange: 146301808'
d72465ac66c14ad06c2609a674aa5ccabf7c1350,"""Add a mechanism for hiding, skipping, and modifying the generated op\nfunctions for C++.  A souped-up version of the hidden_ops mechanism in\nPython, the intent is to use this for most or all of the client\nlanguages, with a common list of changes to make in a common file and\nper-language overrides.\n\nAlso:\n* include the documentation for outputs in the generated comments\n* several updates to C++ API to match Python\n* fix C++ shape function for ConcatV2 now that we use it by default\n* split op_gen_lib out of core:framework, since it is only used by\n  the op generators, and I don't want to add another proto to\n  mobile builds\nChange: 146267344"""
e3ac98f25b9ff412453d2b7311e1bae58becf1da,'Fix another bug in computing shape for SDCA fake bias column\nChange: 146266321'
7c3d93b219f2e9de3b187ccc05faeb292882ac7d,'Fix bug in computing shape for SDCA fake bias column\nChange: 146238867'
05926e4000818f798a761b81f48929928768e771,"'Fix the handling of IndexedSlices with repeated sparse indices in optimizers\n\nThis changes the behavior of AdagradOptimizer and AdamOptimizer, among others, when dealing with sparse gradients (e.g. generated from embedding lookups), correcting it to be equivalent to the dense behavior. Previously sparse gradients with repeated indices would lead to sums of squares rather than a squared sum (AdagradOptimizer) or repeated momentum updates (AdamOptimizer), with related bugs in other optimizers which either do non-linear computations with gradients or apply momentum updates.\n\nAdds _apply_sparse_duplicate_indices which allows optimizers to manually deal with duplicate indices, but otherwise defaults them to first uniquifying the IndexedSlices.\n\nFuture changes will add checks to C++ optimizer implementations to prevent repeated index bugs when called from outside the Python interface.\nChange: 146010483'"
71ded9d0b42de8f8a4f4722da2b746915d7dbd0a,'Fix some bugs in saved_model_export_utils for classification.\nChange: 145704327'
97d4863c34392bb60d2cb0da28d43c7e153f34d9,'Bazel dependency fix of the llvm and jemalloc packages that cause issues when TensorFlow is linked as a submodule.\nChange: 144764356'
37132afd12661c243dc298d4034fde2b389a9f17,'Fix css layout issues in tf-audio-dashboard.\nChange: 146408671'
fe5a99a7ff63f0f68beb9ee89e80dd3fc42a20e1,'Fix cmake build to reflect recent changes to the C++ API generation script.\nChange: 146419788'
f5389b38cf148a73701660834cf44f58f8d28a4b,"'Fix by Josh Levenberg for cmake build (#7233)\n\n* Fix by Josh Levenberg for cmake build.\r\n\r\n* Cmake fix, take 2.'"
4ebaa6bcec0fadc2c10d73d0626bc92cdd34d6c1,'Fix css layout issues in tf-audio-dashboard.\nChange: 146408671'
edc1bf117b88059b92d7500953615f417122950a,'Make dependencies on CUDA SDK libraries only if CUDA is configured\n\nThis fixes the issue #7216 which was preventing XLA from working without GPU configured.\nChange: 146389949'
b47dc70e548e6958919f87864b83866919473a92,'Docfix: Document usage of --config=opt for SIMD instruction sets. (#7211)\n\n* Docfix: Document usage of --config=opt for SIMD instruction sets.'
afac90e16284db90de3bcf049c9942b9db2c33c6,'Fix another python3 issue in doc generator'
50187fc01108a3ad2a376a197fa48d72bbcabae8,'Fix doc parser for python3'
c1238db44e3344b661ae3e6aa17ff74898569b11,"'CudaRoot() returns the configured CUDA toolkit path.\n\nFixes the problem of XLA being unable to find libdevice files if not executed\nthrough bazel. For example,\nhttp://stackoverflow.com/questions/41729019/notfounderror-running-tensorflow-xla-example-libdevice-compute-35-10-bc/41800414#41800414\nChange: 146329331'"
2b6f2fefd8aedab5d3a230ce6bc2d4fc6eb0b157,'Fix possible flake sources in saver_test and supervisor_test. (#7182)\n\n* Make sure saver_test only uses testCase.get_temp_dir.\r\n\r\n* Make sure supervisor_test uses the TestCase get_temp_dir method.\r\n\r\n* Create class-level get_test_dir method for tests in saver_test.py.'
416887f8accf760c550aecbadf026a54df8097b8,'Further py3 fix in tools/docs\nChange: 146325723'
2bb78a7b257f40c94232a78a67931b36bd1e7a32,'Fix py3 failures in doc generator.\nChange: 146320441'
ffc667757c6c328e48d80c14f97e32cf6a9d0f53,'Fix broken test builds\nChange: 146316019'
0180c71dae4253474363e330ec6764fcfc72968e,"'Fix the Windows build by skipping the saver URI test on windows.\n\nThe better fix is to add Windows support to ParseURI, but that requires more significant changes, so leaving it as a TODO for now.\nChange: 146314223'"
1b35fa767bf06c4038cc2ec183e868170267d014,'Trivial fix to a path in the variables docs\nChange: 146308381'
3b5224be092da6dbbad6cf1bcc3d329a42286365,'Fix bug with doc updates for ops with renames in the C++ API.\nChange: 146301808'
5c8885e1f6f2601cfebf7e66b9ba9c846f007fe9,'A few fixes to TensorFlow variables documentation\nChange: 146298002'
82ee4b74b0c34f3f0fbbdc3b99c3a59453519af2,"'Sparse repeated indices optimizer fix for resource variables.\n\nResource variables are quite new, so this change should not affect any preexisting models. Follows up on the fix for Optimizers dealing with sparse gradients which have repeated indices.\nChange: 146279378'"
433e706bfe0145845911bce0d26e44c9a821b4d4,"'Remove errorneous squeeze in `tf.contrib.losses.sparse_softmax_cross_entropy_loss` (#7021)\n\n* Remove errorneous squeeze.\r\n\r\nThe tf.contrib.losses.sparse_softmax_cross_entropy_loss has an weights\r\nparameter which can be used to weight the individual batch elements.\r\nThe weights parameter can have various shape, which are all taken care\r\nof in compute_weighted_loss.\r\n\r\nHowever, the sparse_softmax_cross_entropy_loss methods contains an\r\nerrorneous squeeze of the weights. If some dimension of weights is not\r\nknown, the number of dimensions after the squeeze is unknown, which\r\ncauses the compute_weighted_loss method to throw an exception.\r\nHowever, if the squeeze in sparse_softmax_cross_entropy_loss is not\r\ncalled, compute_weighted_loss can deal even with unknown dimensions of\r\nweights.\r\n\r\nNote that tf.contrib.losses.softmax_cross_entropy_loss does not contain\r\nthe squeeze of the weights, even if it uses the weights argument in an\r\nequal way.\r\n\r\nShould fix #6846.\r\n\r\n* Add tests for #6846 (dynamically shaped weights).\r\n\r\nAdd tests for #6846 -- dynamically shaped weights of the\r\ncontrib.losses.softmax_cross_entropy and\r\ncontrib.losses.sparse_softmax_cross_entropy losses.'"
bb4407a5c1ceec6e08c478fb8254c297bfe27d8d,'Decrement initial reference to XlaDeviceContext object to fix memory leak.\nChange: 146278252'
fa4c9a73fc04c5026035684fec6604ee47034f96,"'Updates in preparation of LIBXSMM 1.7 (#8)\n\n* Fixed libxsmm_config_arguments: Fixed the incorrect value supposed to trigger auto-prefetch. Fixed the 0-threshold, which is now accounted for in LIBXSMM (by just populating the default threshold). The problem arised from the assumption ""threshold: fallback to BLAS if n*m*k above this"", which is wrong (the threshold populates an upper bound until which JIT code is generated). The previous configuration perhaps caused all sorts of issues due to other values derived from the 0-threshold. Note, explicitly JIT\'ting code is/was never subject to a threshold.\n\n* Upgraded to libxsmm 1.6.5\n\n* Enable the use of libxsmm for matrix multiplications\n\n* Enable the use of libxsmm to speedup 1x1 convolutions (which are\ncomputed using matrix multiplications)\n\n* Make use of TensorFlow\'s allocation infrastructure even when using LIBXSMM allocation functions. In particular, the (cached) libxsmm_spmdm_init now relies on TF\'s cpu_allocator().\n\nFor C++ code, one can use a libxsmm_scoped_allocator<kind> in order to (temporarily) setup a different allocation mechanism. For instance, using libxsmm_tf_allocator<libxsmm_scratch_allocator> changes LIBXSMM\'s scratch allocator to rely on TensorFlow. The libxsmm_tf_allocator provides two kinds of c\'tors: (1) the no-argument variant adopts TF\'s cpu_allocator(), whereas the one-argument form (2) adopts the allocator from the given OpKernelContext. Changing the allocator in LIBXSMM with pending buffers (from different allocators) is valid, and all other services in LIBXSMM\'s ""malloc domain"" work regardless of the allocation mechanism (e.g., libxsmm_malloc_size).\n\n* Simply renamed API items in order to follow changes in LIBXSMM 1.7. This is incomplete as more changes/adjustments are needed.\n\n* Account for removed non-check API.\n\n* Include libxsmm_malloc.h now that libxsmm_tf_allocator is used.\n\n* Renamed libxsmm_dnn_create_conv_handle to libxsmm_dnn_create_conv_layer.\n\n* Renamed LIBXSMM_DNN_CONV_FORMAT_* to LIBXSMM_DNN_TENSOR_FORMAT_*.\n\n* Renamed libxsmm_dnn_destroy_conv_handle to libxsmm_dnn_destroy_conv_layer.\n\n* Include missing header file (libxsmm_malloc.h).\n\n* Renamed LIBXSMM_DNN_CONV_KIND_* to LIBXSMM_DNN_COMPUTE_KIND_*.\n\n* Account for the fact that datatype_in/out is now only datatype (libxsmm_dnn_conv_desc structure).\n\n* Updated to new libxsmm_dnn_link_* functions.\n\n* Updated to use new libxsmm_dnn_bind_* functions.\n\n* Fixed calling libxsmm_dnn_transpose_filter.'"
723e85fc3649de276c8df75760964708c3e6c091,"'Fixed libxsmm_config_arguments in libxsmm.BUILD (#7)\n\n* Fixed libxsmm_config_arguments: Fixed the incorrect value supposed to trigger auto-prefetch. Fixed the 0-threshold, which is now accounted for in LIBXSMM (by just populating the default threshold). The problem arised from the assumption ""threshold: fallback to BLAS if n*m*k above this"", which is wrong (the threshold populates an upper bound until which JIT code is generated). The previous configuration perhaps caused all sorts of issues due to other values derived from the 0-threshold. Note, explicitly JIT\'ting code is/was never subject to a threshold.'"
afc7ea521c1ad14c217116a462cb77f2e8640b16,"'Java: Remind readers to run ""configure"" to build (#7192)\n\nFixes #7169'"
0eb6d8ff445922e8eb585534e3fb1deb927e011e,'Android: fix issue where mismatch between Inception output size and inception num classes could cause demo app to crash (due to recent CHECK added in inference interface).\nChange: 146268764'
760e7a07fd659994d6fa200a1b8c152908d69125,"'Fix the code that looks up the hardware node stats. If an op is implemented by\nmultiple GPU kernels, aggregate the time for all kernels for that op.\nChange: 146268331'"
8fe32029f77b287a207c3bc3e0127fb35a3e23da,"""Add a mechanism for hiding, skipping, and modifying the generated op\nfunctions for C++.  A souped-up version of the hidden_ops mechanism in\nPython, the intent is to use this for most or all of the client\nlanguages, with a common list of changes to make in a common file and\nper-language overrides.\n\nAlso:\n* include the documentation for outputs in the generated comments\n* several updates to C++ API to match Python\n* fix C++ shape function for ConcatV2 now that we use it by default\n* split op_gen_lib out of core:framework, since it is only used by\n  the op generators, and I don't want to add another proto to\n  mobile builds\nChange: 146267344"""
287e845c52d0cb5fb7f5b64658ef513883f66fc5,'Fix another bug in computing shape for SDCA fake bias column\nChange: 146266321'
667bf9879f2eb2ffb1f5757f2fc16af5ff5de379,'Doc generator fixes:\n- enable contrib\n- show __init__\n- remove core.protobuf module\n- fix bug in _get_arg_spec\n- hide contrib.learn.head\nChange: 146265365'
43af740fcbe161845f4f046e8e1699f2ffb51eaa,'tfdbg CLI: fix a bug RichTextLines.prepend that caused font_attr_segs to be None\nChange: 146260296'
cfdd541f3f4bae0d50dad528aebd406333d5af34,'Fix lookup ops documentation to use correct function names for index_to_string_table_from_tensor and index_to_string_table_from_file.\nChange: 146255499'
f3cbb17c8c1a6a23e02901db03d278cc2175246c,'improved and fix bug of getting next batch in mnist (#7071)\n\n* improved and fix bug of contrib/learn/python/learn/datasets/mnist.py:next_batch()\r\n\r\n* fix bug of error typing\r\n\r\n* fix bug: using numpy\r\n\r\n* normalized format'
5b0d0db56f64d2a7728e16d9e3334d8ad3bfa560,'Fixes bug in sparse resource variable optimization.\nChange: 146241206'
ff8e4dcee872e017cc8f2f23ed75b070e08382ff,'Fix bug in computing shape for SDCA fake bias column\nChange: 146238867'
7dfbb13c37ec414d6be45dcd94a5a454ef8233ed,"'Don\'t try to constant-fold operators that do not have a CPU kernel.\nFixes spurious ""Executor failed to create kernel. Not found: No registered \'...\' OpKernel for CPU devices"" errors from the constant folder.\nChange: 146188668'"
0e9cebfc8c35781127ff91246598b87ca8ce0aa5,"'BREAKING CHANGE: Standardize ""concentration"", ""rate"", ""total_count"" distribution arguments.\nBUGFIX: Correct undefined mode in dirichlet.mode.\nBUGFIX: Correct broadcasting in dirichletmultinomial.mean.\nChange: 146187147'"
2ddb9a0960af173cbc596be8436ec79bc7efb000,"'BREAKING CHANGE: Rename shape getters, e.g., ""get_event_shape()"" to ""event_shape()"", ""event_shape()"" to ""event_shape_tensor(), and same for ""batch_shape"".\nBUGFIX: *onehot_categorical.py returns vector not scalar.\nChange: 146182622'"
87c7c90541339bc93088de281ec37cd376897bb7,"""[Java] Don't strip symbols from C library when compiling in debug mode (#7137)\n\n* Java: Do no strip symbols from C library when compiling in debug mode\r\n\r\n* Minor changes after first reviews\r\n\r\n* Fix format errors"""
86dcacd0040ec91c90abdfe41e80fb541b745639,"'BREAKING CHANGE: Standardize ""low/high"" distribution arguments.\nBUGFIX: Uniform.prob was not zero @ ""high"".\nChange: 146146987'"
26460c8cef9028ad592f350388782c6f58679ee1,"'1. Always run the cancellation callbacks in the event of any execution error. Without the fix, async ops can deadlock when error occurs. This may fix some of the deadlock problems we have seen with queue, sync training, and async io.\n\n2. Remove the logic of captured rendezvous. The reason we needed it was actually a concurrency bug that got fixed a while ago. So, it is no longer needed.\nChange: 146140356'"
d117658489f1c9226e6e979e816ef23a7187f775,"'[XLA] Fix uses of ShapeUtil::ByteSizeOf to use proper pointer size\n\nWe missed a few places, lets be more explicit and make the pointer_size\nparameter necessary for TUPLE shapes.\nChange: 146066214'"
1adf9df185b808157db57813d9fabd729574848b,"'Fix the logic for skipping warmup steps in cost model.\n\nDetails: note that in the old logic:\nupdate_cost_model = ((executors_and_keys->step_count + 1 - build_cost_model_after) %   build_cost_model_every == 0), the warmup steps are not skipped when build_cost_model_every is 1, because a negative number % 1 is always 0.\nChange: 146065135'"
35b8855146617eb848ae3de8a878e4aa1bba87bb,'Fix python3 failures caused by change 145590579.\nChange: 146063650'
2bee7a66b5176ca51944344d8342b11d901ccb42,'Bug fix in sequence_queueing_state_saver.py.\nChange: 146059099'
c7e0b4dae4f91f25b56aa7f53d8cca6e7ee0e0e5,"'[Java] Bulk data transfer for Tensor class (#6577)\n\n* [Java] Bulk data transfer for Tensor class\r\n\r\nIntroduces bulk data-access pattern to `Tensor`, with tests.\r\n- `Tensor::create(DataType dt, long[] shape, Buffer data)` method\r\n- `Tensor::getDataByteSize()` method\r\n- `Tensor::readData(Buffer data)` method\r\n\r\nDetails:\r\n- rename `allocate` to `allocateNDArray` since it is designed for the\r\nNDarray scenario.\r\n- introduce a native `allocate` method that accepts the data size in\r\nbytes, rather than computing the size with shape information (which\r\nisn\xe2\x80\x99t always sufficient, e.g. TF_STRING).\r\n- introduce a private `buffer` accessor to access the TF data as a\r\ndirect `ByteBuffer`.\r\n- implement `create` and `readData` methods to read and write data\r\nusing a variety of `Buffer` variants.   Supports typed buffers and\r\ndirect buffers.\r\n\r\n* [Java] Bulk data transfer for Tensor class\r\n\r\n- rename readData to writeTo\r\n- implement writeTo overloads for typed buffers\r\n- implement create overloads for typed buffers\r\n- rename byteSize, add numElements\r\n- consolidate allocate methods, use static_cast\r\n- rework incompatibleBuffer helper\r\n- rename getBuffer\r\n- test improvements\r\n- formatting\r\n\r\n* [Java] Bulk data transfer for Tensor class\r\n\r\n- comment fix\r\n\r\n* [Java] Bulk data transfer for Tensor class\r\n\r\n- removed datatype parameter\r\n- strict check for buffer overflow or underflow\r\n- improved exception messages\r\n- moved source code for \xe2\x80\x98create\xe2\x80\x99\r\n- reworked tests for \xe2\x80\x98create\xe2\x80\x99'"
cf4714728052a648c953de92bf8df3a0b7b45810,'Bugfixes to some of the C++ kernel microbenchmarks.\nChange: 146028389'
0318cf082ee88ff0e226a5bf7da0487f44d82182,'Run convolution as GEMM if the input activations and filters have the same spatial dimensions. Fixes #7065.\nChange: 146025480'
1bc430427c21dd8429381617d60ff071d9017b65,"'Fix confusing CTC documentation (#5194)\n\n* Fix confusing CTC documentation\r\n\r\n* Another typo\r\n\r\n* Another typo of this type\r\n\r\n* Finally I greped all docs with this typo\r\n\r\n* Revert ""Finally I greped all docs with this typo""\r\n\r\nThis reverts commit 15bfc02f8f40aceefac038e115f05024d95a4055.'"
faa9298e163310d9d7fd2f3964d3e27aa035ba2c,'Fix a typo (#7148)'
dd5279829cb507647fda989526701045daa252e0,'Fix some BatchToSpace and SpaceToBatch examples. (#7080)'
f9f56f9dc7fe41ef1128290a77ac88e889ea5229,"'Fix the handling of IndexedSlices with repeated sparse indices in optimizers\n\nThis changes the behavior of AdagradOptimizer and AdamOptimizer, among others, when dealing with sparse gradients (e.g. generated from embedding lookups), correcting it to be equivalent to the dense behavior. Previously sparse gradients with repeated indices would lead to sums of squares rather than a squared sum (AdagradOptimizer) or repeated momentum updates (AdamOptimizer), with related bugs in other optimizers which either do non-linear computations with gradients or apply momentum updates.\n\nAdds _apply_sparse_duplicate_indices which allows optimizers to manually deal with duplicate indices, but otherwise defaults them to first uniquifying the IndexedSlices.\n\nFuture changes will add checks to C++ optimizer implementations to prevent repeated index bugs when called from outside the Python interface.\nChange: 146010483'"
4e1bb23975b30850e92b92b94eb04fec506c6058,'Cosmetic fixes.\nChange: 145994731'
2607cc67f0e4a6cd313399e1f68cc4b9857fe700,'Fixed error due to api changes (#7099)'
4148fd588de61020d81cf2018c2c7c334e05b568,'Fix python3 error string mismatch.\ns/assertEquals/assertEqual/\nChange: 145942888'
f1e82af032e33134364d3f978e6babd21d2d188b,'Fixed wording around TensorFlow white paper\nChange: 145901084'
c4824086310a284bd41c49e22f11274a224f68ea,"""[TF:XLA:GPU] Fix HloSchedule to account for stream predecessors transitively.\n\nFor a given op X, the previous code only considered stream predecessors to run\nbefore X. The new code considers the transitive closure of stream predecessors\nto run before X. This is a tighter (and more correct) restriction.\n\nThis should lower memory usage, but the full effect won't be seen until sim-heap\nbased buffer allocation is implemented.\nChange: 145858339"""
333b7ce7299a0a46f7c22810527160bb115fe0f8,'BREAKING CHANGE: Use `Covariance` where appropriate.\nBUGFIX: Fix broadcasting in DirichletMultinomial.mean.\nChange: 145851311'
afaa0ae6cbc4161009d034fe1b77e256ff786530,"""[TF:XLA] Fix tuple-shaped Call op.\n\nOne issue with tuple-shaped Call ops was that the hack in\nBufferAssigner::AssignBuffersForComputation to deal with kCall was only handling\naliasing of the top-level buffer.  That works fine for array-shapes, but breaks\nfor tuple-shapes.\n\nThe fix is to remove that hack, and instead use the colocated buffers mechanism\nto deal with Call ops, forcing colocation of the LogicalBuffers defined by the\nCall with the corresponding output from the computation.\n\nAnother issue for the parallel cpu backend was that CopyInsertion was run before\nParallelizationPreparation.  That doesn't work, since ParallelizationPreparation\nmay add a bunch of new computations, which might be missing required copies.\n\nThe fix is to run CopyInsertion after ParallelizationPreparation.  But now we\nhave a different problem - CopyInsertion might have added copy instructions to\nthe entry computation, which is required to only contain kCall instructions (and\nparams).  So we simply run ParallelizationPreparation again, to outline these\ncopies into sub-computations.\nChange: 145845046"""
c3df5d40ef8240ede980ccb740d6af87837d8eef,'Add cwise_op_pow.cc to default Android kernels for Bazel build (was already included for Makefile build). Fixes #7088.\nChange: 145839627'
c8b3fc11e04ea0a77348be5542d08937818193e3,'Fix TensorBoard tag.\nChange: 145832229'
43c2f2f3058d56fad95aa32d0efb30b06ab24758,'Enables all optimizers for dense resource variables.\n\nAlso fixes small bug with saving partitioned resource variables.\nChange: 145828125'
35b6d27c7b87414db42fd2e397c665c6354df301,'Fix comment on update_op of streaming_concat() (#6498)'
e60e72435f0dfebe6424ab4c525523486006d47a,'Fix windows bazel build by excluding unsupported sources. (#7082)'
03099d010046c8cddd48ae2fbe64904755e0d8c9,"'Added absolute path expansion of parent directory check in saver.py, \xe2\x80\xa6 (#6601)\n\n* Added absolute path expansion of parent directory check in saver.py, so as to correctly handle saving files in current directory\r\n\r\n* Added testSaveToCurrentDirectory(). This should fail on Windows according to https://github.com/tensorflow/tensorflow/pull/3695#r94327053 (not verified yet)\r\n\r\n* Added fix to problem with saving graph to current directory explained in https://github.com/tensorflow/tensorflow/pull/3695#r94327053\r\n\r\n* Removed all changes, bringing code back to state from 55b01593515817992821423fec19733bca91c918\r\n\r\n* Added testSaveToCurrentDirectory() that uses filename without ./ in front of it. Test fails on restoring graph\r\n\r\n* Added a fix to Saver.restore() to correctly handle restoring graphs from current directory when no ""./"" is prepended to path\r\n\r\n* Added fix to issue explained in https://github.com/tensorflow/tensorflow/pull/3695#r94327053 with graph saving failing when path is a file in current directory with no ""./"" prepended.'"
42318e0e71123b9e776f85fb2c397b3cbda3d596,'Minor fixes to SpaceToDepth and DepthToSpace error strings.\nChange: 145747120'
f21e1ff663dae066261298bbae8f7413dbf2ef24,'Merge pull request #7104 from tensorflow/terrytangyuan-patch-3\n\nFixed typo input layer -> input_layer'
0571ea532da31863c450835bde6946c2d8c7882c,'Fixed typo input layer -> input_layer'
a511cb646cb641376c3857d719cfd46741b40319,"'Fix opensource_build test breakage, use six.itervalues instead of dict.values.\nChange: 145741427'"
b80fce2f901ac393cd7edcbe484221c95ff5ba90,'Fixes a Python 3 specific bug.\nChange: 145731286'
493a75faad1289fcfef49d397080283d3e3ee6ab,'Fix links in multibox detector demo README.md\nChange: 145722859'
8f13f92202f51c996cb935677067afacd422923d,'Fix some bugs in saved_model_export_utils for classification.\nChange: 145704327'
5d01efff08bd80f1e6476a07c95c40edc2f0914b,"'Fix bug regarding a single output_alternative.\n\nThis ensures that a single output_alternative will be used as the default regardless of its name.  For this to work, default_output_alternative must either be None (the default) or match the actual name of the single output_alternative-- else an error is raised.\nChange: 145678645'"
9a9002f03ec922bc6b7b452616f2d6df6b0d449c,'Fix transform for cyclic graph (second try). Deprecate in-place transform.\nChange: 145649225'
870b7775b2538d78d9353eba53d7664021405013,"'Java: Improved Shape support.\n\n- Support fetching shapes of outputs of operations in a graph\n- Support setting a shape valued attribute of an operation\n\nAlso, bugfix for seting list-valued attributes which would have resulted\nin an UnsatisfiedLinkError prior to this commit. This commit fixes the bug\nand adds some tests for setting attribute values as well.\n\nAnother step towards #5.\nAlso addresses a follow-up request in #6781\nChange: 145640678'"
fb53109ad20b2e568246b05796296a047c271856,'A fix for a softmax failure when dim is explicitly set to the last dim.\nChange: 145631616'
5dfbeab6c01a5919324a94c0092d34e6be218c3d,"'[CMake] Fix the Python build with -Dtensorflow_ENABLE_GRPC_SUPPORT=OFF. (#7076)\n\nThe SWIG wrapper could not resolve the server-creation function, which\r\nis unconditionally referenced in server_lib.i, but not built when gRPC\r\nsupport is disabled. This change fixes the problem by building\r\nserver_lib.cc as part of tf_core_cpu, so it can always be resolved,\r\neven when gRPC support is disabled.\r\n\r\nFixes #7019.'"
1c1f9d537ecf2287752e11dd73caf6dacc7aa2e4,'Fix debian build. (#7074)\n\nChange: 144738033'
33a40038c8e7c3c2c12cbf81332bcb99e3a7bef0,'Fix cell creation logic for num_layers > 1\nChange: 145580705'
a597bfe6630ce094eedd99a69c04473b3b1b29d2,"'Fix breakages in Python 3.5 tests by using int type in indices (#7003) (#7070)\n\nPreviously, float and np.float64 types were used in these places,\r\ncausing a certain version of Python 3.5 + NumPy to error out.'"
6ed5eaaac13540c1b9d5a7549b2c82aac91ba318,'Upgrade highwayhash\n\nThe updated version contains a fix that makes hashing consistent when CPU\nendian changes.\n\nFixed #6823\nChange: 145563886'
14a41dc135b79cbd809436fbd6942667099ef15f,'Fix a bug where TensorBoard histogram visualization is broken if the incoming data is all zeros.\n\nPreviously the histogram would log an error to console and display nothing.\nChange: 145563671'
881b24703ad482dbfe0ec33316cf1c08dc4bba70,'Bugfix for copying DT_RESOURCE tensors to/from protocol buffers\nChange: 145553446'
7fc6d776e44deac9fcdcb847f1ac1550615eccc8,'Fix docstring typo.\nChange: 145552469'
a12c7dc3d83049e10c1dca8903d73cc71d3cb7b2,"""Enable denormal test in open source (#7016)\n\n* Enable denormal test in open source\r\n\r\nThey seem to work fine; not sure what changed since ages ago.\r\n\r\n* Fix denormal flushing on Windows\r\n\r\nSince Windows doesn't define __SSE3__, we use EIGEN_VECTORIZE_SSE3 and\r\nset that manually in cmake."""
05592ffd0683df2dd571992b4728d99fe5949d09,'Fix TensorBoard projector plugin reading tensor file in python 3. (#7017)'
7b81b8c2ec8abf3e93401c8f55b46fb876b44a9c,'Fix docstring for C++ cumprod kernel.\nChange: 145492182'
65ae07c30aa2a031c65cc16f1d90f8bf7f88620c,'Fix wrong order for op_name/summary_name in range_input_producer (#6813)'
d6fef08166b3bd0c394103cfc1a59a0297396f9d,'Fix batch_norm_benchmark to only compute moments when Train=True.\nAdd missing dependencies.\nChange: 145484524'
5147b75ea8cb3fdc6b864f842ca48c65b2bf2c64,"""Windows: Attempt to fix #6931\n\nLooking at http://ci.tensorflow.org/job/tf-master-win-bzl/303/,\nit seems that the ./configure script isn't finishing.\n\nNote that there seem to have been other failures as well,\nsuch as http://ci.tensorflow.org/job/tf-master-win-bzl/302/\nChange: 145024905\n\n(cherry picked from commit 135729a045538335aefe4404581d793590ec975a)"""
e561aaa2dc87ecbf47a967a092fc6ceabc05d3e2,'Fixed issue in _call_location() when 2nd frame is None (#6995)'
d1cc162253641d0c9229dfdc8efc8af366d88e54,'Fix: Rename the reference to http_test in tf_tests.cmake.\nChange: 145436800'
7f79424f63c5684a43d47de216ae152144ddeecf,"'Disallow gradients of complex tensors unless grad_ys is set\n\nPreviously the gradient of a complex tensor would silently be the gradient of its real part.  This is sufficiently nonsense to be declared a bug, not a feature change.\n\nFixes #2818.\nChange: 145432311'"
feb0553387bb2b75520b06e0a37d8e3c88b9b2e5,'BUGFIX:  Bijector.forward_log_det_jacobian was mathematically incorrect.\nChange: 145391759'
67c4e3daed28e22fb3977327cac14a1b7b230f04,'Fixes for python 3 tests:\n - string/bytes compatibility in bundle_sum_py_test and graph_transforms\n - Fix http_test (tensorboard) by renaming http.py to http_util.py.\n - Fix some linter errors.\nChange: 145375395'
f7d07f5d9683a7d5ce91b108c6c31a47e1372eaa,"""slim.learning.train and slim.evaluation.evaluation to handle OutOfRange gracefully (#6028)\n\n* Handle OutOfRange gracefully in tensorflow.contrib.slim.learning.train()\r\n\r\n* Add test for OutOfRange handling in tensorflow.contrib.slim.evaluation, fix streaming accuracy computation\r\n\r\n* Update punctuation\r\n\r\n* Update count ops location\r\n\r\n* Add comment about OutOfRangeError\r\n\r\n* Fix test, guard update_count_op = state_ops.assign_add(count, num_values) with control_dependencies for both branches, because num_values = math_ops.to_float(array_ops.size(values)) doesn't seem to evaluate values."""
5aed36230aaa8e727990f1b8e37c82bed8b5356f,'Improve support for pad instructions with negative padding.\n\nDefine semantics of negative padding in the Pad instruction to be identical to padding inside of convolution operation ConvWithGeneralPadding. Also make negative padding work in the backends.\n\nSpecific changes:\n(1) Add transformation to algebraic simplifier which replaces negative padding with slices.\n(2) fix ReferenceUtil to properly handle negative padding and interior padding.\n(3) Add negative padding explanation to operation semantics g3doc.\n(4) Extend LayoutsInShapesEqual and CopyLayoutBetweenShapes to work with shapes which are not exactly compatible but have the same rank and tuple structure.\nChange: 145355127'
0f4ee80c378ab3a05e5581cb8a15af40848b46dd,'Added graph transform tool to cmake to fix Windows build\nChange: 145333208'
f21800b34789a3499e3cde174659a054c898eca1,"'Merge pull request #7018 from tensorflow/symbolic-gradient-fix3\n\nreplace is_real with is_floating, remove is_real'"
08d5fdbe466d2a1a90d5772c7c6565bd933f3411,'Fix: Fix timing flakiness by mocking time object in (#6944)\n\n* Fix: Fix timing flakiness by mocking time object in\r\nbasic_session_run_hooks_test.py\r\n\r\n* Use the redirected mock class from TF test libraries for py3 safety.'
24e0b3cc2422cfb5121460040a7de11c76b06f08,'Fix bug introduced in cl/145211380 and add unit tests that would have caught it.\nChange: 145217386'
6c7f605531644fa14a8b43719ab10baed1eb2330,'Fix windows compilation of env_time.cc\nChange: 145215593'
1084748efa3234c7daa824718aeb7df7b9252def,"'Fix breakages in Python 3.5 tests by using int type in indices (#7003)\n\nPreviously, float and np.float64 types were used in these places,\r\ncausing a certain version of Python 3.5 + NumPy to error out.'"
06be70ef317162e334e62ee128205d42551cf3b2,'Merge pull request #6991 from samjabrahams/sparse_dense_matmul_docfix\n\nClean up code block in sparse_tensor_dense_matmul'
cd1fe4072b43e650d47187838b7a37b050ec3d75,'make tensorflow/contrib/layers:feature_column_ops_test medium to fix Jenkins test timeout. (#6990)'
6e492242317c6940f0d7fd8948b14c9d38245cbc,'LogMesssage now includes a timestamp as beginning of a message.\n\nBefore:\nI tensorflow/core/kernels/logging_ops.cc:79] [3]\nI tensorflow/core/kernels/logging_ops.cc:79] [4]\n\nAfter:\n2016-11-15 21:01:25: I tensorflow/core/kernels/logging_ops.cc:79] [3]\n2016-11-15 21:01:25: I tensorflow/core/kernels/logging_ops.cc:79] [4]\n\nFix for #2076\nChange: 145150413'
723c4048790d6f0636f6c1df5f4fb793ef7a4ae6,'FileSystem directory creation fixes:\n- Ensure that CreateDir returns error::ALREADY_EXISTS if the dirname exists.\n- Ensure that RecursivelyCreateDirectory ignores error::ALREADY_EXISTS when\n  creating directories and subdirectories.\n\nFixes #6974\nChange: 145144720'
8d240deb3c3dee8ccc3aab667d1bd6330817fcc9,"'Fix bug instroduced by cl/145035853, only call report_benchmark once per test.\nChange: 145127746'"
177684c5002ae877c25b9a9d0654347ec6a27c9c,'[TF:XLA] Make //tensorflow/compiler/tests:concat_ops_test medium size to fix Jenkins test timeout.\nChange: 145119936'
3921ed26bf22c761a8a82d2c2736bf694158ad64,'Fix: Bump the grace period in queue_runner_test.'
e37496e001027ba8c1dd2bc41ee7d29d55fd2d40,"'tfdbg: fix a bug in run_info command handler + some cleanup\n\n* The ""list_tensors"" menu item should be there only for run-end CLI, not for run-start CLI.\n* Show tfdbg ASCII logo in the run_info output for the first run.\nChange: 145111440'"
3e42efe7f6f4b20314b3530994bff8b0bcfe507c,'Merge pull request #6907 from elirex/android-jni-bug-fix\n\nFix the error of erase session variables (Android JNI)'
448c0dc61c40a631bf5f1a9ec1327591a28e63e6,'Fix the bug that when cpu_allocated is called before session initialization memory cannot be tracked.\nChange: 145103741'
8499dc1ee56b40a6e1f16ccbf3073a12523a0f58,'Go: Support DT_BOOL tensors.\n\nFixes #6969\nChange: 145101014'
1b71d25167236617e2085c1a90f5be3d942cb22b,'Propagate TF_BUILD_ENABLE_XLA environment variable into the CI build docker container from ci_parameterized_build.sh.\nFixes XLA continuous builds.\nChange: 145100608'
964f978dd1a1674678e3346645439cb98d12297c,'Merge pull request #6947 from Mistobaan/feature/fix-warnings\n\nfix few signed/unsigned warnings'
f70a5f8c86e7aac1cf7ccf91bc952b2b14c32a86,'Merge pull request #6948 from tntnatbry/fix-doc-typo\n\nfix typos in tensor constructor docs'
4a070c0ba310672fab25aa3dbaa46d83cfd11fe0,'Bugfix: StudentT distribution is not reparameterizable.\nChange: 145046188'
0bff40449f50985c1c5a1cc812a87ad47bde1b8f,'Fix test names.\nChange: 145035853'
7c16e2e23c4d1234903db97ada36f870b724c71d,'Merge pull request #6966 from tensorflow/fix-cuda-file\n\nFix cudnn file name'
eb42abb8890c4aa7c5ae554b1612f0658b396103,'Merge pull request #6964 from tensorflow/nasm-head\n\nFix nasm URL'
5b3518112f4335b6af536c71b0fc90dc0ab4a0a9,'Fix cudnn file name'
145439824fc51476f3c8cd333279314a59c002b7,"""Update C++ API comments to be more Doxygen friendly.\n\nThis patch:\n- Updates // comments to ///. I manually reverted some comments that shouldn't be docs (e.g. TODOs), but may have missed some.\n- Indents code blocks so they get formatted as such in the docs.\n- Removes /* */ comments from example code since it messes up Doxygen.\n- Puts a space between {{ and }} since it messes up devsite.\n- Adds some // START_SKIP_DOXYGEN and // END_SKIP_DOXYGEN comments for functions that aren't part of the public API (incomplete)\n\nThis will likely require further small fixups, but this gets something to be generated.\nChange: 144749351"""
510560e9aa5e140c977122a17a0d40b0f084955e,"'Make ""Neg"" op hidden from Python.\n\nWhile this technically changes the API. This was in the TensorFlow 1.0 NumPy\ndesign, so this is a bug fix to that plan, rather than a new API change.\nChange: 144898546'"
8a01c642067ec76118ddd4589af11bf2213391e2,"'Change weight broadcasting for losses.sparse_softmax_cross_entropy to be the same as sparse_softmax_cross_entropy_with_logits. This means allowing greater than rank 2 inputs.\nAlso, fix some pydoc.\nChange: 144898465'"
135729a045538335aefe4404581d793590ec975a,"""Windows: Attempt to fix #6931\n\nLooking at http://ci.tensorflow.org/job/tf-master-win-bzl/303/,\nit seems that the ./configure script isn't finishing.\n\nNote that there seem to have been other failures as well,\nsuch as http://ci.tensorflow.org/job/tf-master-win-bzl/302/\nChange: 145024905"""
b1dbd4f75add4a9b9f37e3e38e62b99d49a9396c,'Fix nasm URL\n\nSee #6956'
d291f36b2ad3ec12bdf93e7218250a28e8d8ed7f,"'Update LLVM version to r292413.\n\nThis downstreams https://reviews.llvm.org/rL291211, which fixes\nconcat_test_gpu.\nChange: 145015614'"
acacd3fbe56e72910ab9ccf790edcb8b655e95c0,"""Fixed followings in LoggingTensorHook:\n  * none type error is logged in trace due to logging duration.\n  * In some platforms where (None==0) (which I couldn't reproduce) leads not logging the first iteration.\nChange: 145000948"""
14c20c7d65f4d8eee66b1d8f79f6fc1346e2f7ed,'Fix Python 3 compatibility bug in test\nChange: 144998717'
8cb517fdb6e84aae1c699219479b23f67fa0dc40,'Merge commit for internal changes\n\nFixed conflicts in by taking the latest from internal:\n\ttensorflow/core/kernels/sparse_matmul_op.cc\n\ttensorflow/workspace.bzl'
4f76939d3648cb4b956960fbacf2221421e958d6,'Merge pull request #6940 from Mistobaan/features/fix-mnist-xla\n\nuse context to cleanly close the file descriptor'
d4a6e85867f96fc868b5638696b900741f811ac6,'fix typos in constructor docs'
d50bbe803d665b81dcf64599bb5dd3abee8ea2d4,"""TESTFIX in distribution_util_test.\ntestInverseSoftplusGradientNeverNan actually doesn't check the gradient.\nChange: 144908604"""
49bab39b2a1be64879ba95515ab6130b7b951be0,'Fix: Fix timing flakiness by mocking time object in (#6944)\n\n* Fix: Fix timing flakiness by mocking time object in\r\nbasic_session_run_hooks_test.py\r\n\r\n* Use the redirected mock class from TF test libraries for py3 safety.'
2ca9721da40c9b5c29e5291230cd2c6038d354b9,'fix few signed/unsigned warnings'
08f60700547903975a2e2b3f1f9848a87895f509,"'Make ""Neg"" op hidden from Python.\n\nWhile this technically changes the API. This was in the TensorFlow 1.0 NumPy\ndesign, so this is a bug fix to that plan, rather than a new API change.\nChange: 144898546'"
91a6f2f4d6b4cc74726021c084454bf576af4f76,"'Change weight broadcasting for losses.sparse_softmax_cross_entropy to be the same as sparse_softmax_cross_entropy_with_logits. This means allowing greater than rank 2 inputs.\nAlso, fix some pydoc.\nChange: 144898465'"
518f1463ee2867488322b84405720d69a788a184,"'Fix variable name (it\'s ""dimension"" not ""dimensions"") and move adverb.\nChange: 144892401'"
b39773478542bf812a12715f7f753f9a88e5e86c,'Fix gradients of Categorical.entropy (#6717).\n\nBug was: softmax_cross_entropy_with_logits does not provide gradients with\nrespect to the labels argument.  We instead use log_softmax + reduce_sum.\nChange: 144891353'
1288301651c2e9610202a8657ff569ac4bf5392f,'Merge pull request #6916 from bostelk/patch-2\n\nFix warning initialize_all_variables is deprecated'
e28da73a92273748c768abbb72502f56e93b9ce3,'Fix transform for cyclic graph.\nImprove collection name handling.\nAdded helper to retrieve corresponding tensor/op.\nChange: 144824657'
27fca7d322f1d293daff478263a85bb213d1b45f,'[Windows] Enable tf.contrib.tensor_forest in CMake build and tests (#6908)\n\n* [Windows] Enable tf.contrib.tensor_forest in CMake build and tests.\r\n\r\n* Add tf.learn datasets to PIP package for testing.\r\n\r\n* Disable hybrid tests until the load_library issue is fixed.'
c4af3d26683abde94f0cb50f241586a3a64921ab,'Fixing typos in README (#6915)'
64ce45728c19c1058196dd64b19b2d10b7af42a3,'Fix error in record_input_test due python2 vs 3 difference in writing strings.\nChange: 144786198'
781ccc8e4b9f2dc4fd676e05933d57f5735d0b57,'Actually use eval hooks in Experiment across all usages.\nFix bug with not copying hooks in est.evaluate (leads to updated eval_hooks in Experiment and crash second time).\nChange: 144777878'
012b4ebd66a2d7e51a427964d1956dcd71140268,'Fix warning initialize_all_variables is deprecated\n\nReplace initialize_all_variables with global_variables_initializer.'
0ee1301dd2eb7cc3671f88f5e25bb1795faf87fe,'Bazel dependency fix of the llvm and jemalloc packages that cause issues when TensorFlow is linked as a submodule.\nChange: 144764356'
c058a01d99621c7220c57e4f8c5ee6efd163ed03,"""In ./configure, only ask about jemalloc when running on Linux.\n\nAlso add functions to test whether we're running on Linux or macOS, and convert\nevery check over to them.\n\nFixes #6869\nChange: 144761341"""
5aafe24d7290c824cfd4c34f4218e0fd5defcbfd,'Remove overly restrictive check on gradient types. (#6868)\n\n* Remove overly restrictive check on gradient types.\r\n\r\n* Add a check that backprops are numeric.\r\n\r\n* Remove additional place with extraneous check.\r\n\r\n* Add is_real property that checks if type is real.\r\n\r\n* Add complex/real-valued gradient checks\r\n\r\n* change dtype check fails to raise TypeError\r\n\r\n* Fix pylint white-space'
f8d75baaf4c92e76837de6bb64adccf8127a21d6,'Go: Support setting shape valued attributes.\n\nFixes #6833\nChange: 144752893'
7a0d788c2697af366c6814396ce07cfed7c4bd60,"""Update C++ API comments to be more Doxygen friendly.\n\nThis patch:\n- Updates // comments to ///. I manually reverted some comments that shouldn't be docs (e.g. TODOs), but may have missed some.\n- Indents code blocks so they get formatted as such in the docs.\n- Removes /* */ comments from example code since it messes up Doxygen.\n- Puts a space between {{ and }} since it messes up devsite.\n- Adds some // START_SKIP_DOXYGEN and // END_SKIP_DOXYGEN comments for functions that aren't part of the public API (incomplete)\n\nThis will likely require further small fixups, but this gets something to be generated.\nChange: 144749351"""
dbf4e01d6fbb7beb1ff2aed6d847da6605cb49e2,'Fix error message in direct_session.\nChange: 144749245'
add5946a95455371a72e44f1b31cad839bc27406,'Fix debian build.\nChange: 144738033'
88499af956956a11f8daa309881952f2fcba7120,"""[TF:XLA] Mark _XlaLaunch as a stateful op since XLA's random-number generators are stateful.\n\nPrevents Tensorflow from constant-folding _XlaLaunch ops containing random-number ops. Fixes Github issue: #6854\n\nEnable RandomStandardNormal for the XLA CPU backend.\nChange: 144716342"""
8f831572761ddeb16271c4a90268244b286082e4,'Fix the error of the map of session variables cannot erase the session\nvariable according id.'
76d596002f9e4685bdbb8974b3b6afb34b4a9897,'fix comment misspell (#6886)'
26201f59386ffa7479d809eb4a79a0d73110689b,'Fixed string formatting and valid task listing.\nChange: 144656658'
9830ed87d46245a72a9d0c2dce854e6732c5542a,'Fix quantize_graph invocation in docs (#6867)\n\nFixes #6181'
6987e97e1161cdfcfa10977fecd38fb53a7d4863,"'Adding nav entries for Layers tutorial, and making a few small formatting fixes to it.\nChange: 144588235'"
a704573e37defa141e3ecd548b14d2d2f85a458d,'Fix a breakage in python3 test\nChange: 144584357'
73bc428901dfd6507bbea1315c8813f2048233ff,"'Make placement of constants follow consumers if they are all on the same device (#6615)\n\n* Make placement of constants follow consumers if they are all on the same device.\r\n\r\nA generator node (for instant a constant) will now go to the same device\r\nas its consumers, when those consumers are all on the same device.   Previously\r\na constant would only follow its consumer when there was only a single consumer.\r\n\r\n* Update after review comments from vrv\r\n\r\n* Further change after review comments.\r\n\r\n* Update variable name.\r\n\r\n* Fix up test to match the new fake CPU/GPU names'"
11fbea4ccf3ec0b354c5a31a109ac35cb457fc8e,'Propagate seed in parallel_read to readers. Fixes #6735 (#6853)'
5ab7874f70143b7f67361a012b056308aadbbc52,'Fix breakage by recent changes in tf.summary.\n\n- Rename gradients in the summary s/:/_\n- tf.summary.histogram_summary -> tf.summary.histogram.\nChange: 144544329'
cf9818e1725d8f6229c1865eb26549725c04959a,"'Disable building the MatrixDiag and OneHot kernels for GPU on Windows. (#6822)\n\n* Disable building the MatrixDiag and OneHot kernels for GPU on Windows.\r\n\r\nThis is a temporary workaround for issue #6509, while the root cause\r\nof the runtime errors is under investigation.\r\n\r\n* Handle not-found target properties.\r\n\r\n* Fix typo that caused everything to be built twice.\r\n\r\n* Re-disable MatrixDiag test for now.'"
63a2673aef7bfeb04d056a126648593a83af891c,'Set NDK_ROOT in android_full.sh to fix Makefile build (#6840)\n\ntensorflow/contrib/makefile/build_all_android.sh disagrees about the environment variable to use. This seems the easiest fix with the least chance of breaking anything else.'
d06e6695cca01f9a10454adce210f0a55bf40a96,"""Bug fix in SavedModel shim's named signature up-conversion for classification signatures, where the value was not actually being set.\nChange: 144505027"""
34ac4e16c7710f1cc4d8137b825fb98711d53659,'Merge pull request #6 from taknevski/master\n\nfixed bugs introduced by renaming'
6b4dd84acffe16579e4dd5c20109c91378b2b2de,'Fix documentation sample code (#6836)\n\nSigned-off-by: Norman Heckscher <norman.heckscher@gmail.com>'
3c24ab7ca59f9474e6da0eb18535926fd27a1995,'fixed bugs introduced by renaming'
152f9fc2afe436b8165bdcc08d982fe3ec19172d,'Fix some bugs in tf.Learn SavedModel APIs.\nChange: 144480955'
c8472639d4fefe8f915a52215a1bd2fbd38d95c0,'Enable record filtering while still allowing for downstream queuing to yield fixed sized filtered batches.\nChange: 144477390'
1c5120141b2043c4e0721774c183cb01d23b0682,'Fix SavedModel export when predictions is a single tensor and output_alternatives not given\nChange: 144470271'
8f893368fc572f63da83666ca22722cea265a6c8,'Fix issues with shape inference during graph import.\nChange: 144464718'
8f2579a94f76b20879649fcc8854e7a5952e0c13,"'Fix a bug in windows_file_system.cc for reading file (#6805)\n\nWhen read_result is TRUE, result should be set to bytes_read.'"
b6671e4c87a17fd7157b676c96eb12e58f148b0e,'Fix reference to now-deleted function field.\nChange: 144410076'
04b30700fea43a8a5f47e6d189333f5b38644116,'[XLA] Add a flag do_prefix to hlo_graph_dumper::DumpText()\nChange: 144402914'
00f1d4369aacf0dde22c5866674de424b95639e5,"'Merge commit for internal changes\n\nConflict tensorflow/contrib/layers/python/layers/layers.py:\nPreserved both indentation on ""decay"" change and doc fix on ""center"".'"
2cf39e00c9c506f92696b8dbdfe3001f845f0dee,'Fix the Windows cmake build.\nChange: 144394762'
4f6e6eb285e0e925271d632cc688811ca4e8c5a2,'Temporary fix of bazel dependencies when including TensorFlow as a submodule. Undo change when this use-case is supported in native.http_archive in Bazel.\nChange: 144390772'
a6d1f1a9e6a10eb2f4de0e5c78bdaabf92f53830,'Fix chaining of Estimator.fit when SKCompat is used.\nChange: 144378661'
f7240d8ee4f9ca8b8725d3c9ced221e9789edb6c,"""Fix bug in shape inference for set operations. It errantly had been setting first dim of output indices and values to first dim of inputs.\nAdd logic to infer the output rank of DenseToSparse ops from the 2nd (sparse) input arg, even if the 1st (dense) arg's rank is unknown.\nReplace explicit rank checks with InferenceContext.WithRank* and InferenceContext.WithValue.\nChange: 144344168"""
e8f2aad0c0502fde74fc629f5b13f04d5d206700,"'Java/C API: Make them Android friendly.\n\nMake the C library and JNI shared library targets Android friendly by linking\nwith the smaller android runtime when building with --config=android\n\nRelatedly, strip all but the JNI symbols from libtensorflow_jni.so\n(regardless of build configuration) to trim its size down (by roughly\n50%).\n\nLink in the Java libraries in the Android examples. The longer term intention\nis to encourage use of the TensorFlow Java API in Android and do away with the\nTensorFlowInferenceInterface class (and related JNI code) currently used in\nAndroid. This will provide a single, more thoroughly tested API for use in all\nJava settings - Android or not. An update to the Android example to switch\nto this will come in a follow up change.\n\nNOTES:\n- For expediency of this change, the C API call: TF_LoadSessionFromSavedModel\n  is not available when building for Android. I will look into fixing that\n  separately.\n\n- Linking in the JNI library required by the TensorFlow Java API results in\n  a small increase (0.7%) in binary size of libtensorflow_demo.so\n\nAn unrelatedly, rename libtensorflow-jni.so to libtensorflow_jni.so\nto be consistent with other shared libraries created in tensorflow.\nChange: 144320074'"
2abef5cebb7d8771f610d213bc900b7ab7aea47e,'Go: Bugfix in generated functions for operations.\n\nFixes #6799\nChange: 144288761'
91685f833be5b63e91bb6fbc504f17ab6065af8d,'Fix documentation of rows vs columns of confusion matrix.\nChange: 144271336'
81a444337124a83942d7d27e88871e1c0b8556e5,'New feature: Total Variation (image_ops) (#6662)\n\n* Added total_variation()\r\n\r\n* Added unit-tests for total_variation() in image_ops\r\n\r\n* Make symbol available in the image_ops namespace.\r\n\r\n* Small fix: Changed capital letters in comment.'
07f2e51446aeb8bb75cd5c516d2d514f9872d668,'Fix to correctly identify dtype and shape of inputs in StreamingDataFeeder.\nChange: 144230407'
e1d4c5522e125f933db593a9362beafdba817731,'Fix additional merge conflict\n\nFix array_ops_ -> array_ops.'
f25907ec4f823028adbaa675d9a1fe476202795e,'fix documentation of center argument in BN layers (#6792)\n\nfixes #6736'
1e4d6f1c32be198a682518f1afce03c017c0aa11,"""Fix build errors on AVX2+ hosts with -march=native. (#6759)\n\nthird_party/eigen3/unsupported/Eigen/CXX/FixedPoint and\r\nthird_party/eigen3/unsupported/Eigen/CXX/Tensor use different paths to\r\nreach into unsupported/Eigen/CXX/src/Tensor. The former's paths cause\r\nthe build errors documented in GitHub issue #6558. This commit removes\r\nthe includes from third_party/eigen3/unsupported/Eigen/CXX/FixedPoint\r\npointing into third_party/eigen3/unsupported/Eigen/CXX/FixedPoint,\r\nbecause they do not appear to be necessary."""
8022c5d66a58c91117e36fa0045d8c3ac244a4b2,'Remove --icf=all flag from benchmark_model to fix build for Android arm64-v8\nChange: 144158100'
ca6131130a25e00646972dfed2256ad2d633743c,"""Allow tf.divide's name argument to be honored.\n\n- Prevent tf.divide from using operator overloads which cannot pass names\n- Use dummy python class to properly delegate to the right division mode\n  (i.e. python2 vs python3 vs from __future__ import divide)\n\nFixes #6741\nChange: 144140254"""
1732f8e94458b7264a1cc833fc3536a53075f370,'fixed libxmm.BUILD'
687bae4f54ee6f3c98b7c0640ca33af03e6908b8,'Match new softmax_cross_entropy_with_logits api (#6771)\n\nFixed mnist_softmax_xla to match TF 1.0 Alpha API for tf.nn.softmax_cross_entropy_with_logits.'
d73a2668b5e7b65d54576be461e1107f27ea1365,'Java: Add package-info.java for package-level javadoc.\n\nAnd fix a typo.\n\nAnother step in the journey that is #5.\nChange: 144100664'
cb881e048214d411fba094e79fd1228c11b4a723,'Fix pip filenames. (#6757)'
c9c8ea475a7588b6d628c93b44f8b0a7ad03f071,'Fix breakage in estimator_test\nChange: 144094154'
1d2414e6bf46b060e5c079eb73d76902d6e040b2,'Fix test under python3.\nChange: 144038144'
61d0f1572c7701aa0e73c0bedd5c57b3f80f22e7,"""Fix bugs in StreamingDataFeeder, introduced in adding dict support:\n - last batch didn't properly work for 0 dim\n - last batch didn't work at all for dicts.\nChange: 144030918"""
7c97f13ace37ac73bb820dec941c55ae4d538581,"""Allow Student's t-distribution to take negative sigma.\nMiscellaneous style fixes.\nImprove numerical stability by using log1p.\nChange: 144029985"""
2413caa54f08a64d128a558a521c31da21e18d60,'Fix bug in BaseEstimator that called .shape on SparseTensorValues.\nChange: 144016026'
6b76d072ce307b540135953646d014af4b5f669c,'Minor documentation fixes.\nChange: 143981932'
294a17ee2e051bd20af727a49e3a6be45be61f64,'Fixed string formatting and valid task listing.\nChange: 143912820'
2691c1260f792e85a40f598809e84aa60d19e227,'Fix a bad comment.\nChange: 143889993'
367078ab8c0ca8feab1ca88e871279df150639d5,'fix tensorboard plugin pip issue\nChange: 143877115'
7ccb6048f966d34ed8d79451be2057262fc8a431,'Fix typo ci_parameterized_build.sh'
b1938c5cd834b1fe37ede6ae9729e4a47ad5e835,'Fix flakiness of estimator_test on GPU.'
01d99022a51cafd5eaf58a8496dff9247d818f56,'Fix basic_session_run_hooks_test flakiness.'
2255bc2c1ada8a300adfc8a9a1e68d59c5df4296,'Fix: Check bazel version before trying to setup the workspace. (#6707)'
e1bbd12902e0a39230974b997c9df095c3aca19b,'Merge pull request #6637 from inflation/fix-supervisor\n\nUpdate deprecated function SummaryWriter.'
b5b60b566b8241d49a9f933eddd3879c24e094c1,'Merge pull request #6703 from gunan/debug\n\nFix basic_session_run_hooks_test flakiness.'
78b12941db2e1b9baee785dce1edf1e557377acc,'Merge pull request #6704 from gunan/estimator_fix\n\nFix flakiness of estimator_test on GPU.'
b0f78194d265e79f69d7ad2bc3e9a565985ad4e9,'Merge pull request #6705 from gunan/android\n\nFix typo ci_parameterized_build.sh'
c3978a98d9d6811e547b7068e6c15fc7290c8371,'Fix typo ci_parameterized_build.sh'
1683c7b9e4d93fe7388a7dd5f8eabc5abb8f7f4a,'Fix flakiness of estimator_test on GPU.'
fb4d0f967a970d51937322098e33f829c7b389c3,'Fix basic_session_run_hooks_test flakiness.'
20dcc0fe773700217a39103f523248153564f9de,'Merge pull request #6641 from pwnall/fix_configure_2\n\nconfigure: Handle existing TF_CUDNN_VERSION correctly on OSX.'
8561fee1fc6d1765fc2ea6b6384d26e3485de3cd,'tfdbg: fix syntax errors in example py files\nChange: 143809411'
f3d5990d6971faf9b15f5e6fa53e2e640742b8e0,'Add support for gradient calculation for concat_v2 with negative axis to fix github\nissue #6377.\nChange: 143804485'
088a5df5bb46a1dca0f6a36f28e9dfaf000696a7,'Small fix for named arguments in SparseFeature parsing.\nChange: 143799509'
0baf10bd907ed12066f17a7f986dcd02dc65866f,"'Fixed incorrect return type description.\n\nUsing a list of tensors in the input results in a single batched tensor being\nreturned, not a list thereof.\nChange: 143779916'"
67450721ea8614b3536b1c0b31c6cd76b5327088,'Fix input image handling in hvx execution test\nChange: 143764515'
6eee29255161678d6c9ea2c0ebae18d82349f115,'Fix url to dbpedia to be downloadable archive in tf.learn.datasets.\nChange: 143750328'
f64c288ffd20819e264b80a4977b2ca8f33bfd98,'fix documentation (#6676)'
786974f1c9462d28dab912925e7bd1c311b5ff72,'Merge pull request #6672 from gunan/merge\n\nMerge master into r1.0 to fetch all the fixes.'
1628abf84345777ee9f4cd4746d4e74a2de68b18,'Fixing problem with restoring scope with partitioned variables.\nUpdate tf.contrib.framework documentation to contain checkpoint utils.\nChange: 143624505'
02d2385b8c33e89b53e49bc89e646b54de920bad,'Include stream_executor headers in pip package include directory.\n\nFixes #6602.\nChange: 143600453'
d3822f06ca4440bf33d9034022e81ba4620f99c1,'Merge pull request #6628 from pwnall/fix_configure\n\nRemove unused TF_NEED_SYCL from ./configure.'
ea296160bc5b7b2c9920a7487650f12d47029338,"'Fix parsing of Python command-line arguments in tests.\nPreviously command-line arguments to Python tests were ignored. However, since we accept command line arguments to Python binaries, we may as well accept them as arguments to tests too.\nChange: 143549767'"
843974d3f7d34d1b19f8a7adaf1ab32a1d209a3e,'Fix typo (though --> through) in tf.placeholder_with_default().\nChange: 143533177'
99125e71f2ab31a7d9c619deb4ce261b3a66e375,'tfdbg doc: minor fix re. command-line flags\nChange: 143511343'
8a6014b073aa92c724f5ece7fa1296212f7585af,'Fix usage of tensorflow namespace in graph_to_dot\nChange: 143504172'
35f8b1fe2c097ce97b5b465a67f312e92a62f162,'Fix freeze_graph.\nChange: 143497500'
74edc58b5d4244d28e8abeb10d8767e63b8471fa,'Fix a bug in sparse_softmax_cross_entropy for weights of unspecified shape.\nChange: 143494460'
7f62ba6e7fa475ab4aa2f99ef899a07dac835a2c,'Update documentation for parse_example vs parse_single_example.\n\nFixes #390\nChange: 143476115'
50d065138eb279e11e927960dc6c3538ffd30b89,'Merge pull request #6516 from rasbt/udacity_nb3\n\nfix spelling/insert correct reference to udacity notebook'
1514d36258256ad535e88dc7cc7b9e5b136f4270,'Fix `sample` shape hints and remove `sample_n`.\nChange: 143469030'
fafbb331f352a9936c24b249fdda9e2a01917847,'Merge pull request #6571 from gunan/android\n\nAndroid nightly fixes'
6a04c105a2cf5ecc6981040b3943668edd0dc2e4,'Fixed incorrect example for tf.while_loop().\nChange: 143466670'
55b01593515817992821423fec19733bca91c918,'Merge pull request #6588 from terrytangyuan/run_config_flag\n\nFixes #6549: Added missing keep_checkpoint_every_n_hours flag'
eeb13cdbac643014674940324465a78307d81a86,'Fixes #6549: Added missing keep_checkpoint_every_n_hours flag'
9f360c9ae4822b1082580f396b53637ce7ade3a0,"'tfdbg CLI: fix bugs related to terminal size\n\n* Bug fix 1: Previously, if a wrapped line has a mouse-clickable link, the wrapped link in the first line will disappear. This CL fixes that.\n* Bug fix 2: Previously, the open-source version will crash on mouse-wheel scrolls, because it is an unsupported mouse event type in the external version of curses. This CL catches such exceptions (curses.error).\n* Bug fix 3: Previously, on terimnal resizing, a sufficiently long main menu bar on the top can cause the CLI to crash. This CL fixes that.\nChange: 143271319'"
e133c0650fd5c3f66718777a8395948922e4fe9f,"'Fix complexity problem in transform node iteration\nBefore this change, graphs with a large number of output ports per node (for example quantized graphs) would hang during processing.\nChange: 143216742'"
b720a8d26be266d6e4fe641be88a06f839643c04,'Fix: Android_nightly build uses android docker container.'
8738a9337a86abec147b35046ff82305b3e33419,"""Fix 'import test_ops' error.\nChange: 143197072"""
5ecc54750d0cb97a046719d42f1f5514b86bf633,'Merge pull request #6559 from gunan/android\n\nFix: make sure android_nightly is a recognized container type in ci scripts'
5883a0f8bb6a501e5ceee5798cd3cc2595343797,'Fix: make sure android_nightly is a recognized container type in ci scripts.'
a081f4b06f89273c67c832a94314b124ed7fdda0,'Bug fix: Make `get_local_variable` accessible in the opensource Tensorflow namespace and update doscstring.\nChange: 143149885'
d322c0533d5ac10d48d305e0dcb1b3649283e7f6,'Add missing std::fixed in StatSummarizer to ensure integers get sorted appropriately.\nChange: 143149150'
a1e475c39440ae0352c69faf6097e5f13e7d1f37,'Fix: Create a unique temporary directory everytime a test runs.\nChange: 143135973'
4dfc5d68e97ec4fa62d13af445a5a122f90c60f1,'Minor fix: allowing min_object_overlap to be 0.\nChange: 143134173'
8a23c40b6e0dcd66d3f6a00de0f505cfb2296787,'Merge pull request #6543 from gunan/windows_fix\n\nReenable building depthwise_conv_op and depthwise_conv_grad_op on windows.'
567973f7f6423c01d4826ae5569dd88a07203fd9,'Fix: run buildifier on tensorflow/core/kernels/BUILD'
ea6ef4432086431ba4364f9c08e0ed1dd4c34f24,'Fix an error in depth_to_space doc (#6535)\n\n* Fix an error in depth_to_space doc'
e1fa22852fd24b91020c3ed9b05c51f91e44ac0a,'Merge pull request #6536 from tensorflow/master\n\nPull in test fixes and API changes to 1.0 branch.'
814c4012084e533a3f81b5fa72c3d29e803b3dc4,'fix a typo.\nChange: 143104273'
bb890ea5fa4c8a2100a295e93c5bf37b3c88b55a,'Make TensorFlow build libcurl from scratch\n\nGoogle Cloud Platform support is now available for everyone by default.\n\nFixes #5349\nChange: 143077241'
11fe7f20a52e906056fb1fa6d4dce8d490872600,'Provide a Maven POM (#6529)\n\n* Provide a Maven POM\r\n\r\n- POM file for installing libtensorflow into a Maven repository.\r\n\r\n* Provide a Maven POM\r\n\r\n- add instructions on using the POM\r\n- fix build instructions (refer to correct target)'
c72d891418c326794a913cc13382c104255fe1f2,"'Merge pull request #6526 from yaroslavvb/release_docfix\n\nUpdate release to document breaking change 141725777, fixes #6202'"
88d776bfd43266ffaf1b573933479116df3ba308,'tfdbg CLI: add node traceback to node_info output + a bug fix\n\nThe bug was related to getting a string representation of feed_dict keys when the keys are str/unicode (in cli_shared.py: get_run_short_description()). Unit tests added.\n\nAnother hitchhiking change:\nAdd command mouse-click shortcut to help output on TensorFlow runtime errors (in cli_shared.py: get_error_intro())\nChange: 143055926'
13f9309ccb063a58b0ce34aafc23f93a49e33733,'Merge pull request #6525 from gunan/windows_fix\n\nDisable some of the failing windows tests.'
dc8e55e1feb3ebd1fe6d6148807bfc35d69073d3,"'Update release to document breaking change 141725777, fixes #6202'"
a27bd6ec9ead86cf25059abf8e0003bbaadd442e,'Bump up size for //tensorflow/python/kernel_tests:fft_ops_test from medium to\nlarge until it is fixed.\nChange: 143046132'
2852ae057b6b0ef2a0b30b34df43a562cc00acf4,'Merge pull request #6522 from mrry/fix_win_build\n\nFix build error on Windows.'
e1362157e33a6fd6a66caefd083bd4afc27dc030,"'Re-enable operation timeouts when using the in-process master.\n\nThe previous version was ignoring the timeout (if set) in the\n`CallOptions*` passed to the server method, and blocking indefinitely\non the completion notification, instead of cancelling the call if the\nnotification was not set before the timeout.\n\nFixes #6742.\nChange: 143042703'"
8c576cec0c0ae53b24feff78d4b88acd2502f6bc,"'Fix build error on Windows.\n\nMSVC cannot resolve the type of `nullptr` in `CHECK_EQ(nullptr, ...)`,\nso we use a static cast to make it explicit.'"
81a61a7087508dda4a251d21fe52f8cb9955b337,'Merge pull request #6521 from tensorflow/fix-dbpedia\n\nChange dbpedia URL'
d2a5b7c8f9bd789423566c56c01d1f92cc94d74d,'Change dbpedia URL\n\nFixes #6174'
1a5611504766e5f58311e5b19b270b7230facff2,'fix spelling/insert correct reference to udacity notebook'
f991800a64862f283d2d805d2becfd7ae49ed9a1,'Merge pull request #6462 from gunan/windows_fix\n\nWrite rules to construct headers for jpeg-turbo using existing templates.'
03d0b6c1c5533036a54c4a5366caa629832a02f5,'Fix: Run buildifier on build files under third_party.'
0ff314b3ec34d6ceb2f01d2ae7439457291001fd,'Fix: Address style issues and review comments in third_party BUILD files.'
388dc2dea47a5d1822a8a1f9059ff792041f8800,'Fix documentation formatting for tf.matmul.\nChange: 142849285'
e27bc777939ba93458f14bc67721c593cbe40ac9,'Fix for quantized convolution optimization\nChange: 142809066'
bd493dffc85671dc622b9670a23ed6f369cc78c3,'Fixed a typo'
6c6be9d2d20fa997b03292ae09621f6c7795499a,"'Fixing typo in doc string, and improve documentation.\nChange: 142727588'"
93e7380e5f830718e7e11f928cea30082d984f12,'Minor doc fix.\nChange: 142517940'
05d6f02f8d2c00723d2df83fbf9d343dedc11ed0,'Fix type deduction error triggered by gcc 4.8'
3f2493b0d6e0aba31401038672c010070492ef2d,'Fixed libxsmm build file'
68f945f7f03d1c7c69419690b89fc73608650745,'Fixed include paths'
ab7aa2eae614732194bc23c64ed944078da8fb9c,'Fix argument name in docstring.\nChange: 142790604'
c07731da48ebcf206a4dc2cebe0dfe15949c07cd,'Fixed include paths for libxsmm'
acf0dc6e77784c88daacff8f79c3aa6a23a81876,'Fixed include paths'
401833bc58e22b0027ff1e09410992c998638e8b,'Fixed libxsmm.BUILD:\n  * Removed illegal dependencies\n  * Generated libxsmm_dispatch.h'
000a218ba41b9ff1ddd32e8a57fbeba208c0d931,"""Fix dependency issue: a kernel cannot depend on a genrule. Since that\ndependency wasn't necessary I simply deleted it."""
fd35d2bb2ea4804a83bc9b27399dd89e9ceba929,'Fix Windows cmake build by excluding newly broken test.\nChange: 142778020'
b542970f1a5c5d452a3b844c35724f924348fd97,'Fix how error message is generated when running configure (#6445)'
c1e7b1580a48c06a7345fe8ff218feafa56a1425,"'Fixing typo in doc string, and improve documentation.\nChange: 142727588'"
8fedbb924ce3bb91c19af70d724493cb901241e2,'Fix a typo in the split function comment.\nChange: 142724724'
4f4b21309b105a6b4854c4d7784bb660706985b3,'Fix tf.contrib.training.resample_at_rate for float64 dtype\nChange: 142673866'
fdb4213357d10f66d5cffd229976c8042e8f9af7,"'Fix flaky SparseMatMul test. Test uses uninitialized variables, which can occasionally be NaN.\nChange: 142669425'"
82594d38f66aa86c37ea1deb8d0631efb7d9ba96,"""Bug fix related to a corner case in evaluate_once. Corner case:\n* if user defined an init_op which should not run after restoring. Current implementation caused to run init_op since session_manager thinks nothing is restored.\n\nRemoved variables_to_restore argument since it's usage is conflicting with Scaffold.saver. If user defined a saver and variables_to_restore, current implementation silently ignores variables_to_restore.\n\nUsed specific checkpoint file feature of session-manager which is recently added.\nChange: 142669254"""
f793d1544706ad8e5d2e3b40c3a2a4a604fc2174,'Fix TF_CONFIG example in ClusterConfig documentation (#6430)'
2145b44339642796dc382153d26b434c2cc18559,'Fix two bugs int the Graph editor;\n- compute_boundary_ts was sometimes adding spurious inputs\n- sgv.consumers was returning op inside the subgraph\nChange: 142645987'
f7048fc88b44102e745def51a8b2610c4aacb139,"""Fix Student's T flaky tests.\nChange: 142643418"""
653bdbd4ffefb008a4074617cae518ab143420ed,'Fix potential use-after-free of `worker_cache` in NewRemoteDevices().\nChange: 142623343'
81036cdcd3e43172b805de5e4eedef37e2307c45,'Fixed include paths for libxsmm'
32c9ec555ae483eeaa6d6edee72921087410b7be,'Fix LOG() message that logged a pointer to a Status instead of the Status itself in tensorflow/cc/framework/scope.cc\nChange: 142615345'
34bb3e61575f527eea535b3d8300a2257635efd7,'Fixed include paths'
26d26b37be10a6df66ab450889fd197bd6317a56,'Fixed libxsmm.BUILD:\n  * Removed illegal dependencies\n  * Generated libxsmm_dispatch.h'
22c21abceab94b647e7db530c16768136a41313a,"""Fix dependency issue: a kernel cannot depend on a genrule. Since that\ndependency wasn't necessary I simply deleted it."""
27497af1072193def43080e5d07b40535652fd2f,"""Change parameter 'order' to tf.norm to 'ord' for numpy compatibility.\nFix incorrect spelling of 'euclidean'.\nChange: 142607588"""
c82cf616509b7ea089ab3f14670d94755051f694,"""Added Student T CDF as per 5413 (#5524)\n\n* Added CDF for Student's T RV\r\n\r\n* Fixed to work with multi-dimensional tensors\r\n\r\n* Made changes in response to code review\r\n\r\n* Removed unnecessary _log_cdf function\r\n\r\n* formula for student t differs depending on t < 0 or t > 0. Fixed resulting bug.\r\n\r\n* Changed tests to incorporate jvdillon's suggestion\r\n\r\n* Removed erroneous import statement\r\n\r\n* Update student_t.py\r\n\r\nTrying to figure out the correct syntax for the select/less command.\r\n\r\n* Update student_t.py\r\n\r\nChanged tf.select to tf.where."""
1d1a98d0001480a28f21be18b17746695f8fa24a,'Fix typo on exception message (#6372)\n\n* Fix typo on exception message\r\n\r\n* make exception message clear'
9afdc871aea284f351537f98d5df4d7b1d9ccd31,'Fix broken links for examples (#6410)'
d2b92f24e072d0bb39584a9e6bee049edb49f905,"""tfdbg: fix a bug in graph-dump causality validation algorithm\n\nThe bug has to do with how node vs. tensor names are handled by the pending input tracker. The issue was as follows: suppose a node called A produces two outputs on two slots, A:0 and A:1. B receives inputs from A:0 and C receives input from A:1.\n\nSuppose only the two following tensors are watched by the debugger: {A:0, C:0}, then there is no guarantee that the debug tensor for A:0 is dumped before the debug tensor of C:0, because C doesn't receive input from A:0 (it receives input from A:1!). As a result, during causality validation, the debugger may sometimes see that C:0 is dumped before A:0, thinking its a causality violation.\n\nThis CL fixes the bug by tracking the inputs down to the level of output slots, instead of just at the level of nodes.\n\nHitchhiking changes:\n* Minor change in title style of the offline debugger.\nChange: 142593110"""
790019de92c77300766375e81cfc36329fe78d7b,'Fix a bug that cased calls to pandas_input_fn to alter its parameters. Split the tests for finer granularity. Allow the read queue to be automatically sized in a way that provides better guarantees that the input will truly be shuffled.\nChange: 142576906'
2f5604ffe74d3d4160930cbb036ca7ffa3261338,'Fix bug where it would revert to the old function code for functions\nwith no nodes (empty function bodies).\nChange: 142573865'
894be820c352ae72a0313412e4b687f29e802850,'Minor doc fix.\nChange: 142517940'
1466d8a4f039284532998ef3020a039e38304741,'Fix initialization order problem for mutexes on Mac GPU opensource build.\nChange: 142508618'
7952c48c8db6e82d9fa91991f062549892bf52ce,'Fix test flakiness on GPU by bumping the threshold.\nChange: 142481024'
2d8a826b0056eba8d54d315b167332709a20a8d9,'Fixed a typo'
a8436c649855f07f906130af9bd4583b0228fed0,'Fixed merge conflicts'
54b23869f95d74e5db172f710056d5010f7d490a,'Merge pull request #6380 from gunan/windows_fix\n\nFix issues seen in TensorFlow GPU cmake builds.'
542ebcdbf545a5c57aeb3e973223f0bae719f083,'Fix issues seen in TensorFlow GPU cmake builds.'
545cb55c30c44dc3ae5c8bab350996fb81c5f65a,'Fix Eigen download for cmake\nChange: 142328374'
a737d3bd56b4ed72458ddaa94b412f01d62e88b4,'Fixed merge conflicts'
002f81848fb2abb712432a9e1d4ea06d779f18bc,'Fix download_dependencies.sh with Eigen downloads\nChange: 142319870'
a7dd5a228a4c7dffc0a8f062833b31d5eb9db916,"'Add missing word2vec op registrations to the Python extension.\n\nFixes a warning about missing op registrations for kernels ""NegTrain"" and ""Skipgram"".\nChange: 142318607'"
595e0eabf80fa21e3eb2a0be9561691169dd4b21,'Fixed windows test failure'
e749859df1aafc8ffc90766cee546112692fba7b,'Fixed indentation'
a5a1503c636cca8fae78eaaa6c34b739392cfaf2,'Fixed the SYCLDevice memcopies'
1666551945cff7091672e32dd5fb8d4390f7c77a,'Additional file path fixes to several TensorFlow tutorials (master version)\nChange: 142300574'
81265ec5a53d2497ca2d9d4613687cb4f44e3ee7,"""Fix the protobuf build to work with mac.\n\n- chmod +x\n- Build in the directory in which the script is run. $WORKSPACE isn't set when in docker, so we can't use that.\nChange: 142289411"""
7f65a77b86b15876bc019f85fc7031981e191306,"'Fix matmul() 3-D tensor example code (#6049)\n\nIt is necessary to specify an int32 dtype because the code as written\r\nwould use int64 dtype by default, and int64 is not currently supported\r\nby matmul().\r\n\r\nThe ""2-D tensor"" example code is fine.'"
efb668810727ecf06961c2e4d683d4877375f357,'fix sample code of embedding_viz (#6075)'
14c2776c8f9472df2c61e4754c56a99cb4de6d3a,'Remove unnecessary os.path.join on fixed strings.\nChange: 142269251'
46b7b6bc9e202a66b69c62c5be27bedbcc1cd77b,'fixed the argscope example (#5969)'
f63ee319e0dd8bf9ec578e8d3d5c9890cde01841,'fix the number on ImageNet classification validation error (#6060)'
ef0477674e6f6d6e7b5ea6a48ac8f6f291922b51,'Fix CUDNN extension error in configure for MacOS (#6350)'
81eae9ac713e02b6d36785de8b7f29258601592b,"""fix 'ImportError: cannot import name synthetic' introduced in #5315"""
a276e0999ab4223ac36d75221028d3e8835c60ae,"""Clarify about 'SAME' padding in docs (#6127)\n\nFix #5203. Also use `//` instead of `/` to be consistent with Python2/3."""
153582083c739cd4e33a5a4007836f4c4caa34e8,'adding cupti_wrapper error solution (#6317)\n\n* adding cupti_wrapper error solution\r\n* Applying changes and fixing typos.'
d6b0c4e392a0c6e471a59c862a91556d0965cca8,'Fixed path typo in tutorial (#6321)'
56ec66c4c5a1157f5ebb1f96785757203a54917f,'Fix split_ops_test for new import convention (#6344)\n\nFixes bad merge earlier.'
1e6f5b6d269716116a1ce3239d0cd8a6c56b4d74,'Remove obsolete comment in tf.abs docstring. tf.abs now delegates to\ncomplex_abs for complex tensors. Hide generated complex_abs kernel\nin preparation for deprecation.\n\nFix a few unrelated Python linter errors that have been getting on my\nnerves lately.\nChange: 142188440'
548b3a416b54e5c07c762ff269178c30c1e60241,"'Fix bazel fetch in ./configure on Windows (#6335)\n\nOn Windows, `$(bazel query //...)` hangs when running in a new workspace.\r\n\r\nFixes #2248'"
abd3190d329385776e92baaaaf605d3371010486,"'Fix use-after-free bug when closing a MasterSession.\n\nA concurrent run call could continue to use a MasterSession that had\ndeleted itself (in `MasterSession::Close()`). Change `MasterSession`\nto be an explicitly shared, refcounted object; and modify the `Master`\nso that each call that uses a session will acquire a reference to that\nsession, then release it before calling the callback. Add a\n`MasterSession::closed_` bit to ensure that no call uses a session\nafter `MasterSession::Close()` has succeeded.\n\nAlso fix a null-pointer access that could occur if a ReffedClientGraph\nwas partially constructed. If\n`ReffedClientGraph::RegisterPartitions()` failed, some of the\n`Part::worker` fields would be uninitialized, and\n`ReffedClientGraph::DeregisterPartitions()` (called by the destructor)\nwould attempt to invoke a method on that object. Fix this by only\nattempting to deregister partitions that have been successfully\nregistered.\nChange: 142185174'"
00cbc32344572d97d8d51eefb657f6dcdecbb051,'Fix cmake build for legacy_seq2seq'
0daa5a0a2ce3c695b94a7008b191780343010bdc,'Fix prefix path'
5462618b916cad9aec46a9d1fd04ef353e9696b9,"'Mutes warnings for some deprecated arguments with default values.  Fixes a bug.\n\nUsers were getting log warnings even when using the API correctly,\nbecause of argument passthrough within tf.learn.  This change mutes\nwarnings for calls to fit, estimate, and predict if the deprecated\narguments receive default values.\n\nAlso fixes a bug in the deprecation tool where ""=="" was used instead of ""is"" to compare objects, which was at times yeilding a non-boolean.\nChange: 142162193'"
b8e47b00507d2e9783821c13063e4d94c5cd9809,"""Add tensor contraction op 'tensordot' to opensource TensorFlow. Original implementation by Moritz Hardt (mrtz@google.com). Fixes Github issue #5231.\nChange: 142161582"""
c4b7609a78cf2db84077a0e3bf72147931943523,'Fix merge failure'
95195bd0ef742f2876a1694ebb4c018f858af062,'Added support for AVX512 to fixed point instructions. (#6323)'
e23dd8d00fb0e573a7883ea050b157f6a8ba1872,'Fix linter errors left over from PRs.\nChange: 142149043'
da40d08e10a891cc15ddae4d22c730845fafa342,"'Fix python3 bug where dict.items() is not an appendable list, unlike python2.\nChange: 140734296'"
67274a9db60fafa8c307802a4c96cd246e3e625e,'Fix the typo in dnn_benchmark_test.\nChange: 142140440'
e86e1b023a6a4ce79fea3fb0b65201eb1ad52d24,'Fixed a compilation error'
60dafbaae5a8b2c6af961da2cad7e6c7b1c43bb3,'Fix failures because of SparseTensor.__init__ signature change.\nChange: 142084456'
8c943af3b139f07aa1f3ba5c976e2f0765e75960,'Added support for AVX512 to fixed point instructions.'
1deb03e643cf9d7993b748d4f7c84851d16c4f3f,'Fix a typo in the docstring of init_from_checkpoint.\nChange: 142065387'
dd10e62378b9ab7e557e6756cf0dec7f6d30ee83,'Fix erroneous references to tf.summary.histogram in deprecation string for non-histogram summary ops.\nChange: 142063275'
5adafddfbe0628e4de9ecf72c204ae8828539dfb,'Fix a typo in the docs for set_random_seed.\nChange: 142015956'
5a1498ac002ec367fa29e9ba2d6d6c68e327b152,'Fix initializer dtype problem'
06ae1e25be1f92301f428e5b812c624a03964a0a,'Fix initializer dtype problem'
c236f27cfb61f32f8031e6babf3cd0350cf4bdc3,'Fix linter issues'
8d05819e0c37de72175edfc5bb7acf767e5b3d75,'Fix slowdown in graph building introduced by repeated calls to `inspect`.\nChange: 141961231'
2b771b9fc34190d0acea439f9a930a078e54c37a,'Fix use-after-free in the DirectSession timeout handling code.\nChange: 141934447'
0085d31d2f695f2ea8b8a3ecd116519739c7833b,"'For extra safety, add `abs` to `log` calls in `OperatorPD` `det` functions.\nAlso fixes a small shape bug; Jacobian in Affine was picking up the padded shape. This cl results in correct squeezing.\nChange: 141925891'"
45c15590eabefc995b33f9d301ef8ca95f5a0de0,'Merge pull request #6293 from caisq/fix-tutorial-tests-1\n\nDisable tutorials test in docker builds'
48dfd2efc61b5aa85a04b06c92eb2e72021798e6,'Merge pull request #6291 from caisq/fix-tutorial-tests-1\n\nFix tutorials test'
e078e1f5440f78d4df6234450cc0ba29b1a8947e,"'Fix tutorials\n\nTemporarily disable the testing of models that have recently been moved to a\nseparate repository, e.g., cifar10_train.\n\nAdd two tutorials in tensorflow/examples/tutorials:\nword2vec_basic\nestimators/abalone'"
af318c946db96ba4265ab4bc26541f8619270628,'Fix MonitoredSession markdown formatting.\nChange: 141916392'
b077486cc6df62715883725ff148adfcbda9e16e,'Add load method to tf.Variable (#5860)\n\n* Add load method to tf.Variable\r\nAllows loading new value into variable without adding new operations to the graph\r\n\r\n* Add unit test for `load` method\r\n* fix `load` test to not use random values\r\n\r\nThere was a chance that two random sequences will be the same.'
ca29fa3cc16663a8dddf5968b5600c60e2dc71a8,"""Add synthetic datasets (#5315)\n\n* Started synthetic\r\n\r\n* Added circle synthetic dataset. partially resolves #5314\r\n\r\n* Implemented CLs to resolve #5314\r\n\r\n* Adding py_test srcs to BUILD\r\n\r\n* Added spiral generation and test\r\n\r\n* Remove test split from this PR\r\n\r\n* Fixed reviews by @ilblackdragon\r\n\r\n* Fixed copy-paste contamination in BUILD\r\n\r\n* Fixed python 3 issue with 'iteritems'"""
12940319ebf08e2fb1bb92b82e309c20759e44a4,'Fix t-sne bug (division by 0) when there are duplicate points.\nChange: 141818266'
5343d0382febaa8a43f99d92efa78b8a7685cca5,'Fix typo in master_service.proto documentation\nChange: 141803185'
65a5a35fb0291304f9010b8cc5462b1582080396,'Fix typo in debugger howto.\nChange: 141801951'
684e62b536e7db2bad9557c945141c4eaab116f3,"""Disable antialiasing, implementation across browsers makes it impossible to\nguarantee that interior point pixels won't preserve ID for picking. Alternative\nis to instantiate and maintain 2x WebGLRenderer, one with AA enabled, one\nwithout, but that's a bigger change and this is a quick fix.\nChange: 141761283"""
86afb786bcca54d42283367e109e359dacd4fe67,'Switch tf.Learn to CheckpointV2 and fix tests.\nChange: 141703677'
6c8fbf6bceeed17745cc01b670694a77c2bdc7d3,"'tfdbg: fix a dtype-related bug in debug_data.is_inf_or_nan\n\nPreviously, is_inf_or_nan errors out if the dtype of the tensor (numpy array) is not float, complex or integer. This CL adds guard against such data types.\nChange: 141671477'"
e246abcdf0aa3e3f86b8c610fe918c61e672cbba,"'Revert ""[CMake] Fix support for custom kernels in `tf.contrib.metrics`.""\n\nThis reverts commit b5e6d667d28f8dd1ea21ed428fa560b0d4720afa.'"
dac939b1fb4776fdfaa3dbb5dfbb33c8ea818d01,'Add image module to fix cmake build'
1da7d8a635ad2fe110410e7ed7a77365a03c154b,'Fix documentation link in SavedModel.\nChange: 141611156'
996d477b412eadcebf067951379c542c912ba86f,'boolean_mask BUGFIX.\nMust compute dimension size explicitly rather than using [-1] in order to deal with all multidimensional Tensors with dimensions after first equal to zero.\nChange: 141601835'
d4f0c52f2485cf0c4370b9832397fe70fae63f3c,'Fix for flaky dequantize test\nChange: 141580230'
0cfa416b31961a3941381ba16e951c5cd816d809,'Fix Args in sparse_softmax_cross_entropy_with_logits for doc generation.\nChange: 141569747'
bc885f9c3b232422ead294a2686e35e975449165,'Fix a TODO in dynamic_rnn_estimator.\nChange: 141564248'
98e448532789e6f65659fa3b752c1ba467a3872a,"'tfdbg: two small bug fixes\n\n1. Make the BaseDebugWrapperSession class capable of working as a context manager, as the non-debug Session. Also let the wrapper class support the close() method.\n\n2. Handle the case in which a fetch is an object without the ""name"" attribute, e.g., a SparseTensor.\nChange: 141308246'"
1cb96893a64f59b7265f9def9968f7bed1e57662,'Merge changes from github.\nAdditionally:\n- change single quotes to double quotes to make path rewriting easier\n- guard windows lib reference with PLATFORM_WINDOWS\n- fixed failing kmeans test\nChange: 141515942'
9d66dae6fc5d1b964a03498ddabb97a78a999015,'Merge pull request #6135 from Mistobaan/features/fix-nvcc-option\n\nfix relaxed-constexpr warning'
f3ef3cf3ba721640433d51b49359e946f190a872,'Fix legacy Reverse gradient\n(need to change from array_ops.reverse to gen_array_ops._reverse)\nChange: 141512722'
936ae38243fbb58f5d12515a7209be134e87ee17,'Fix tutorials failures. (#6200)\n\n* Fix ptb_word_lm tutorial.\r\n\r\n* Fix failures in cifar10_train example.\r\n\r\n* Update cifar10_input.py\r\n\r\nCorrect shape for read_input.label'
2d00e6f17df644077af331e5bcb47a0e8a0fa1b7,"'Re-enable the NodeDef version of functions, fixing issue where Python\nfunctions create signatures with duplicate output argument names.\nChange: 141500446'"
5196a1bda42f9262ad65678c33b8ce4f190d079b,'Fix some summary imports\nChange: 141498781'
99ce664f0f7ad2b3157faf12387861846e487afe,'Fix bad unpack in error message generation when no gradients are provided\nfor any variables in apply_gradients().\nAdd tests.\nChange: 141480285'
0e1ff10ec3c4dd3f44cd312fa392aa04e9f3c662,'Check for error status after NodeBuilder::Finalize.\n\nFixes #5871\nChange: 141475958'
7b94349a7ea79ab63ad9ab931bd2c52c8e645911,'Fix bug in handling of explicitly specified num parameter of split_v\nand also add associated test case.\nChange: 141469479'
6fc0a4185867e80b025e33d10df9268dfd62632c,'Bump the tolerance in linear_equations_test.py to fix the AVX build on macs.\nChange: 141467544'
3d64e20de90baf0dab3de1ed9efc15eeae6fb41a,'Negative axis support for argmin and argmax (#6042)\n\nFixes #6022.'
1ac9cf460e4b76e99a67be9003870ca18c0853df,'Fix FileIO.read() to match file.read() behavior and not raise an exception on EOF\nChange: 141466762'
2d76eb34df71906eb66446ad113829b3a5a85559,'Fix inference execution on HVX\nChange: 141420253'
a1d06460f56d7b2f5b7a8317c1aeba6a587b104f,'Merge pull request #6173 from ppwwyyxx/patch-2\n\nFix bug in docs of summary.merge'
c03eaab0230b48bf7d50e49047e8f10c7361c17f,'Merge pull request #6086 from AnishShah/issue5917\n\nfix broken link in tools_developers docs'
202f77420beb8a556c6a3d685e8f5daab0a8275c,'Fix static initialization based registry patterns with shared libraries when built with --config=cuda.\nChange: 141406402'
52842acd76f853f2a17140144d0e650a9f764fcf,'Merge pull request #5980 from evancofer/master\n\nfix broken link in docs'
e527a56892d6ddfbb882d0e0ea1ca25dc160682a,'tfdbg core: remove unnecessary construction of DebuggerState when there is no watch\n\nHitchhiking change:\n* A typo fix\nChange: 141386349'
b09842e89870fe68f0017e1e48570d3315c35612,'Bug fix: Allow int64 inputs to tf.sequence_mask.\nChange: 141385792'
30d2a2235a66e158757b13b6dd0bab7bf5e60492,'Fix bug in tf.einsum() when input is placeholder.\nChange: 141378762'
fe5740fef35b3dae53d40f59451523cd5360c6ba,'Fix iteritems break in python3\nChange: 141377833'
ba8b1b4c082557abadab0bb720c493604134eef4,"'Extend half-plus-two saved model to have an additional execution path, for testing models with multiple signatures. Also fix its existing signature.\nChange: 141371192'"
a0f9ccc0f86302f9c6513a1b61b2ffecb2ea5b1f,"'Fix bug in docs\n\nFrom the code, the default collection of `summary.merge` should be `[]`.'"
123a0f9a421af8a7b40d9cbf9b2905e86218bac3,'[CMake] Add missing Python packages to build scripts (#6145)\n\n* [CMake] Add tensorflow.python.ops.losses.*\r\n\r\nFixes Windows PIP tests.\r\n\r\n* [CMake] Add `tf.contrib.compiler` Python package\r\n\r\n* Add `tf.contrib.input_pipeline`.\r\n\r\n* Add `tf.contrib.legacy_seq2seq`'
2bd3b11d87a6658aa0f25f26c5ce7d88bdec547d,'Fix wrong deprecation in Experiment (causing lots of spurious deprecation notices).\nChange: 141356741'
fc6a0b5269763c07bfe8b0eb25c0dab8a09b3fba,'LinearOperator new classes/test improvements.\n* LinearOperatorComposition:  Compose a list of linear operators.\n* LinearOperatorMatrix:  A linear operator from a [batch] matrix.\n* DOCFIX:  Small documentation fixes in other files.\n* Some test consolidation\n* Caching shape Op results.  This avoids adding too many boring shape Ops to the graph.\nChange: 141353827'
f2f007cb5e53de14b436a9649030fc028fe124b6,'Add -lm to the LLVM FileCheck tool to fix a link failure with --config=cuda builds.\nChange: 141352525'
c5fb76889307e6dae92312ea68383d8ae8f47277,"'Adding solution for pip error with Anaconda (#6167)\n\n* Adding solution for pip error with Anaconda\r\n\r\nIssue #6136.\r\nAs this is not a Windows specific problem I added the instructions on ""PIp Installation Issues"".\r\n\r\n* Fix Anaconda typo'"
f65c8ce0241b3e23e38fb208fd6a61eb2c1b8239,'Merge pull request #6139 from gunan/cp\n\n[CMake] Fix support for custom kernels in `tf.contrib.metrics`.'
3cc27cfe9c99c01f8b7f35e9b5c6d5ae2d46a763,'Fix set operations to allow dense vs sparse tensor args in any order. And improve documentation.\nChange: 141315755'
507376940d14fa56e0292c3122b4e9c3ada385af,"'tfdbg: two small bug fixes\n\n1. Make the BaseDebugWrapperSession class capable of working as a context manager, as the non-debug Session. Also let the wrapper class support the close() method.\n\n2. Handle the case in which a fetch is an object without the ""name"" attribute, e.g., a SparseTensor.\nChange: 141308246'"
f01c06a35a57b87b4fdf21846fbca6b45014be3b,"""Fix Windows CPU CI link (#6157)\n\n* Fix Windows CPU CI link\r\n\r\nThe Windows build badge doesn't link to the CI Job page.\r\n\r\n* Use https."""
9e6a70a141c4eb6ce904d920d61b45ee36869914,"'Provides a _MultiHead class that combines multiple _Head objects.\n+ Also, uses the legacy API with an explicit tag to generate the training loss summary. This fixes a regression where training and eval losses were showing up in different graphs in tensorboard.\n+ Also, renames the eval keys to group them better in tensrboard, for example, all AUCs are not grouped together.\nChange: 141276860'"
9ff4b1a423783299d88565ece61ad2f4d133805c,'[CMake] Fix support for custom kernels in `tf.contrib.metrics`.\n\nFixes #6115.'
49c0c1726420a3c1d73b7130d6b14c10dcac22af,'Fix bug introduced in split_v during name change\nChange: 141241224'
19a9a9c33178a5993664883017662ce11b711256,'fix relaxed-constexpr warning'
9d0677fb7627fee74554fd10a1064d82f4b1e288,'Fixes bad substitution in argmin/max docs\nChange: 141222201'
6d63f670a2bcdb636662f3c2b1713c2c49313bef,'Merge pull request #6121 from mrry/setops\n\n[CMake] Fix support for custom kernels in `tf.contrib.metrics`.'
db43c0961d324c506db65581f2bf0615c25bf68a,'Fixed the signature of the Sdca*::Compute() methods\nChange: 141203556'
6de612e7767c4114d65cb06fc6606436e3081dc3,'Force fix documentation causing open source blocks.\nChange: 141201358'
b5e6d667d28f8dd1ea21ed428fa560b0d4720afa,'[CMake] Fix support for custom kernels in `tf.contrib.metrics`.\n\nFixes #6115.'
2d9b6421ac89790b9f404cded0e4a9831bfac0fa,'Fix LogisticRegressor to work with checkpoint_path.\nChange: 141123073'
6ce657d8b0146d9626c31612f4da8f028b53a0af,'Fix experiment arg for evaluate.\nChange: 141102565'
067ae827544480476c6ea4df7be8f55d3a26b5a4,"'Fixed incorrect use of NamedTemporaryFile\n\nSee http://stackoverflow.com/questions/23212435/permission-denied-to-write-to-my-temporary-file\n\nThis was causing ""PermissionError: [Errno 13] Permission denied"" on Windows when urlretrieve() attempts to open the already open temp file.'"
1f7526b732f5b08090447d4d89b871ff6020db71,"'tfdbg: stepper: allow multiple fetches + fix a bug\n\n1. Previously, the constructor of NodeStepper supports only a single fetch. This CL extends the support to potentially nested lists, tuples and dicts of fetches, as in Session.run().\n\n2. The topological sort algorithm in _dfs_visit() was previously wrong. This CL fixes that.\n\n3. Added new methods handle_node_names(), output_slots_in_closure(), and is_placeholder(), along with unit-test coverage.\n\n4. Fixed the way cont() calls on Placeholders work (with unit tests).\nChange: 141094319'"
bdf7103dfe51c6f6ee19a704c9405426baddc98b,'Embedding Projector: Fix bug with loading sprite image hosted on external site.\nChange: 141092961'
502675bc775700fb1fa53edde377ba65de6d2897,"""Java: Bugfix: Avoid segfault when a Tensor is used after being close()d.\n\nThere were two bugs:\n- The string constant kNullPointerException had a typo in its value\n- The scalar value accessors weren't checking for a valid handle\n\nFixed those, added tests and moved the utility function throwException\nto its own file since I plan to use that in JNI files for the other\nJava classes in the future.\n\nAnother step in the journey that is #5\nChange: 141091613"""
bdfb8ffdf956046ee8bc21f9b5bafa20c5bd8035,"""Fix ValueError('... %s', s) to ValueError('... %s' % (s,))\nChange: 141091124"""
c60bbbb3ee8be5210e3561006a7a4ccf67bbb620,'Merge pull request #6098 from caisq/build-fix-1\n\nAutomated rollback of change 137917462'
e088c887200ab3cb1ae4f501e11ba2b14456ef11,'[Windows/CMake] Support compute capability 3.0 by default\n\nFixes #6083.'
a5b2298d042f228aed02c31fac6220b61da9d876,'Fix variable_scope.get_variable to ignore partitioner for scalar variables.\nChange: 141066511'
669b2cc9fa02527c87e9f82bd4ac7d76e715d2a8,'[Windows/CMake] Support compute capability 3.0 by default\n\nFixes #6083.'
4994b51de6c1156ff8deb105b45be68cbc458b69,"'Fix failures in introduced by adding model_dir to Evaluator, checkpoint_path to Evaluator.evaluate.\nChange: 141054792'"
29b65d3d2c72c914b58faa544e0bf3ed6a8255d0,'[issue #5917] fix broken link in tools_developers docs'
778539ce3cb4a0effabe46e7674c22602cb08dc0,'Merge pull request #6043 from chadkennedyonline/master\n\nFixed incorrect use of NamedTemporaryFile'
32b584d2bad23b9393111ca8ec28888f888bdf18,'Fix typo in executor.h (#6004)'
7bf6c8474b3f62b0e2db5ddf13c75681199afc13,"'Update build status name and URLs (#6053)\n\nThe previous build name ""tensorflow-master-gpu_pip"" was not accurate\r\nbecause the build is not a pip build. The name has been corrected to\r\n""tensorflow-master-linux-gpu"". This change fixes the broken link in\r\nREADME.md.'"
1e7ab942ea0ada6d3c7bcf3c513fa1b5dff4503e,"""Fix decorator_utils.add_notice_to_docstring's way of dealing with indented docstrings.\n\nThis makes it take into account any indentation that the docstring might contain\ninternally, and should fix the way docs are eventually converted to Markdown and rendered to HTML.\n\nFor example, the docs for tf.contrib.losses.sparse_softmax_cross_entropy [1] are\ncurrently badly rendered , with the args list left unformatted. This CL should fix that.\nAlso note that the existing deprecation_test.py was actually enforcing the broken\nbehavior until now.\n\n[1] https://www.tensorflow.org/versions/r0.12/api_docs/python/contrib.losses.html#sparse_softmax_cross_entropy\nChange: 140912534"""
a073c764fcaccc2bcf26b82064edff881bf4ba57,'Merge pull request #5973 from gunan/docs_fix\n\nFix #5946.'
48fb73a1c94ee2409382225428063d3496dc651e,'Merge pull request #6047 from meteorcloudy/fix_cuda_configure\n\nFix cuda version detect on Windows'
d5d654ca711e550788458243ccb8ab39813a2985,'Fix bugs in configure and cuda_configure.bzl re. lib paths (#6044)'
873e5d023ae55695b04a0121cc4efabe2c62f125,"""Merge branch 'r0.12' into docs_fix"""
f7ff20eef840ffbd028544a3a97b383b7db4e1ed,"'Fix cuda version detect on Windows\n\nOn Windows, the name of the shared libraries is like:\ncudart64_80.dll and cudnn64_5.dll'"
d74c338957c345d4519e4bfeabb5ce2e535ccabc,'fix deprecation date (#6016)\n\n* fix deprecation date\r\n\r\n* revert markdown changes (they should be autogenerated)'
605bf2a513eb71828aeabc5accfa790661cce78a,'Fix issue #6036 (#6038)'
2324a5cf21bc58b41f71fcd460c697f7014d0e44,'Fixed a memory leak in the device lib swig wrapper.\nChange: 140871440'
0770878c5680aa165405c92789172f20b04fde7d,'Fix update version script.\nChange: 140864110'
9f2bc83209c4a4f2f57697716f4509e3aa7dde8e,'Backwards compatibility bugfix for deprecated TensorArray C++ op.\nChange: 140859776'
19de978a0fbb8d1653a8f6c6589df67ed2303af4,'Fixing errors in comments. No dropout in the custom model example.\nChange: 140858933'
dd4f0ec013f4e1b72b594b7cfab52804bc82f3cd,'Fix metric definitions in SavedModel.\nChange: 140854331'
5edc960ab2ae91a977033721f922012a2a5a33cd,"""Fix cache exception condition. When caching it is sometimes the case that we dont know both of x,y. I.e., if there's a direct implementation of the {forward,inverse}_log_det_jacobian then we won't bother computing the x or y.\n\nAlso made several style fixes.\nChange: 140851970"""
fba60d1f504b651f0fc7c4c7741469164235c7f5,"'Fixed incorrect use of NamedTemporaryFile\n\nSee http://stackoverflow.com/questions/23212435/permission-denied-to-write-to-my-temporary-file\r\n\r\nThis was causing ""PermissionError: [Errno 13] Permission denied"" on Windows when urlretrieve() attempts to open the already open temp file.'"
1357e01839e3413cf94574f7fc2a01a43cbcffb3,"'Add ""-lm"" to LLVM link options for llbm-tblgen. Fixes bazel build with --config=cuda.\nChange: 140807677'"
e9fb0a9c497c0fd3a451a7c66f8803c377d8acdf,'Fix doc typo\nChange: 140807620'
4b5bbcbfd65e89a880a048e56b0cbc48383e56d2,'Attempt to fix head_test'
a1e064fc6d738a66b9104306505e8a1a7e49c752,'Use gather on floats instead of int32 to keep the kernel on GPU when possible.\n\ngather() on an int32 type forces the op to go to CPU.\r\nFixes #6027'
48b17b04462ae16f32af3c5e38cfb59a89d0376f,"""Merge branch 'r0.12' into docs_fix"""
00954adfe5c7334de56a6cae1f0ad2f83988fcf3,"'LinearOperatorTriL, a lower triangular linear operator.\nlinear_operator_util.py added as well\nUse linear_operator_util in LinearOperatorDiag, and a couple bug-fixes.\nChange: 140770818'"
b52307ca3f507508860ad2e5188cbdf87f9429e2,'Fix Tensor boolean evals; these are now errors.\nChange: 140769904'
3ca795bc7ffad431a69c1f55401562e53eb6df1a,'Update to the latest version of Eigen to get fix for __half default constructor.\nChange: 140754388'
f4f497d2283bbbc6030d5e53c41d071a20bfd758,'Fix memory size calculation in GraphTransferer\nChange: 140751451'
a7b4f636d50b6fcb9cd1f7f138cc50b720fc86dd,'Fix a bug which repeated variable creation in optimizer when using bucketing (#5813)\n\n* fix a bug in optimizer when using bucketing\r\n\r\n* add name_scope in create_slot function in slot_creator.py\r\n\r\n* replace name_scope to variable_scope in create_slot function in slot_creator.py\r\n\r\n* remove op_name += / + slot_name\r\n\r\n* modify real_slot_name in slot_creator.py\r\n\r\n* add comments for previous modification'
f23401f8bd3ac3871f8b64b39b1824fca67b0d15,"'Unload the existing dataset before loading a new one. Fix resulting fallout. Remove the label accessor, replace with a string. The projector adapter knows how to reach into the dataset, which is ok for now.\nChange: 140748823'"
8a525f61668d5eb98af680e0f4735b70401f71b3,"""Merge branch 'r0.12' into docs_fix"""
fb1dc111f34bc7ab15c79ce79475d6fab2285a86,'Fix incorrect version string in gcs_test/Dockerfile (#6013)\n\nAlso avoid hard-coding version string in the Dockerfile.\r\nThe pip wheel is now specified as an argument to gcs_smoke.sh.'
a1f2e1ebe0b371714e164addd79e651b1786c5cd,"'Fixing null-pointer dereference on parsing of invalid TensorProto.\n(If the number of entries in the proto was zero, but we asked for\nmore, the code incorrectly dereferenced a pointer to the data before\nthe check to see if it was empty, resulting in a crash.)\n\nBug spotted by libFuzzer.\nChange: 140736570'"
0cbf1f0955af2ea9a2f106c4f82460f7531d9ed1,"'Fix python3 bug where dict.items() is not an appendable list, unlike python2.\nChange: 140734296'"
afb3e3e1b26e33b52fc2e7b6516b0f6e3f3efdd7,'Switch FIXME to TODO\nChange: 140733125'
62477265af2b495bfedc984bfb892c7ad841514b,"'Fix: Do not use perl in configure, use only standard bash tools. (#5993)'"
db490561b3d093a4eac952be8d4607234b6ef9f1,"""Add decode_image Op (#4222)\n\n* Add decode_image Op\r\n\r\n* Update decode_image to use tf.substr\r\n* Update JPEG magic numbers\r\n* Add GIF functionality\r\n* Add GIF tests, documentation\r\n* Rearrange imports to be alphabetical\r\n\r\n* Adjust decode_image, tests\r\n\r\n* Tests now use files in tensorflow/core/lib\r\n* decode_image now uses `cond` operations instead of a `case`\r\n* There is now only one substr Op for the header of the image contents\r\n\r\nIt's not clean yet- we're still getting errors- just want to push this\r\nbefore I start making more changes.\r\n\r\n* Move from image_ops.py => image_ops_impl.py\r\n\r\n* Add gen_image_ops import\r\n\r\n* Clean implementation, add rgb_to_grayscale for gif\r\n\r\n* Prevent GIF channels being set to 1, add test\r\n\r\n* Add test for invalid channel value\r\n\r\n* Update args/returns documentation\r\n\r\n* Make changes to try and fix Windows build"""
77cfa97ac784212130e97bc6fa9e6f8acfc86c08,"'Bugfix in tf.contrib.distributions base class, which enables more flexible subclassing of Distribution.\nChange: 140659334'"
1ce7b3338ce0782343c46136d1fc78eafe6ceed3,'Merge pull request #5955 from tensorflow/mrry-docs-fix\n\n[Windows] Adds note about the MSVC DLLs to the instructions'
68172c8e584fb1ffd85287e674231bddca78a10e,'Fix comment'
3ec3deff8d0b1e16b4d343dedda9ec8091995a04,"""Merge branch 'r0.12' into mrry-docs-fix"""
eb1512096a9344633ad93e981579c12761eaf91d,'Fix util semver_test to allow head.'
b9915472dd41369b59a1fe244278f7670f9a2ed4,'fix broken link in docs'
689f7a0b8468c8feec4d2a6db54bb6bc3759fbe2,'Fix #5946.\nFix error in documentation about global_variables_initializer.'
267cbb43f75861f0c8da7dd06315ee950b76b59a,'Small fixes to logging and stacktrace platform libraries.\nChange: 140533246'
8940018192090c072ad50b81b36969d71ffb2c21,"'Fix C++ shape function for Concat with concat_dim=-1.\nUse concat_dim=-1 in crelu. This lets shape inference infer the output shape\ncorrectly; until shape inference is driven completely by C++, the value of\ntf.Rank(...) - 1 is not inferrred as a constant.\nChange: 140529371'"
95c3a4bbed35ae9b2461ea1f167b7bdb3628323a,'Merge pull request #5749 from hholst80/feat/docfix-tf.train.replica.device.setter\n\nUpdate documentation for new API #5669'
9b8bc9a06564c351b396278ca62044e890d7a698,'Merge pull request #5897 from llhe/el-doc\n\nFix params docstring of embedding_lookup'
b411492dd0fc0d56dca5cc18ed4e358b05857abd,'Fixed a typo in the variables class description.\nChange: 140525356'
517aed699d7f59f7cfe86dd192e72f789210ce33,'Merge pull request #5911 from skavulya/fix-libhdfs-path\n\nFix loading of libhdfs.so when installed in non-standard directory'
103da758edb600de111a365221b0b89f0892fe2d,'Fix error in metric definition in session-bundle.\n\n- Description should come before the labels.\nChange: 140516812'
cd7557ea573b72cc07f8b0805705f8095b9b52cb,'Fix links to public UCI Census datasets in Wide & Deep tutorial.\nChange: 140515674'
a51863d3ee28fcda605ec60baeacab309c86daed,'Fix a bug in the default cudnn workspace size.\nChange: 140426975'
90a48581c7be22e38fbd528de6be56ee66cd1b80,'Fixes label parsing bug in Timeline.\nChange: 140418283'
fd6a1f3f9d3c186e51a4f665685ab4c2f199eeaf,'Fixes breaking Makefile build\nChange: 140404186'
e9cbb005028873e5254ae9a29f75ce0e48ccc65c,'Embedding Projector: Fix bug with PCA sampling.\nChange: 140397614'
9c95b03ea7f94bb85c345813d848d0b95d5e05a1,'DOCFIX:  Remove html formatting from distribution append docstring.\nChange: 140392176'
e83d3f68aca4d4348d2b1c25c4d62ee2c0141637,'Small typo fixes.\nChange: 140389905'
641281657bc66d9c1d68ddf64193d42437b89fb0,"'Assorted fixes to dynamic_rnn_estimator:\n\n- Assign names to predictions, probabilities and final_state.\n- Use swap_memory by default.\n- Use tf.sequence_mask from TF core.\n- Change default gradient clipping from 10 to 5.\nChange: 140385008'"
2a8cf9d79bd4bb772303fdfc6ab2d8056e595387,"'DOCFIX:  Make it clear that TransformedDistribution takes an instance, not a\nclass.\nChange: 140377053'"
f806cfea46f45b80e0232e51c5f9651cfb829df0,"""Merge branch 'master' into fix-libhdfs-path"""
5657d0dee8d87f4594b3e5902ed3e3ca8d6dfc0a,"'Add support for dict Input to DataFeeder, StreamingDataFeeder and allow for different TensorSignature for each of ModeKeys (#5546)\n\n* bug fix when iterators stops at multiple of batch_size\r\n\r\nFor more information on the issue see\r\nhttps://groups.google.com/a/tensorflow.org/forum/#!topic/discuss/ZEzEa1TyYuE\r\n\r\n* Edge case handling _feed_dict_fn() of StreamingDataFeeder\r\n\r\n_feed_dict_fn() raises StopIteration when iterator stops at the multiple of batch_size\r\n\r\n* reverted changed back\r\n\r\n* Update graph_actions.py\r\n\r\n* Added changes to DataFeeder.__init__() to accept dict as x and y arguments\r\n\r\n* Modified DataFeeder.input_builder to allow using dictionary of Nd arrays as opposed to just Nd arrays.\r\n\r\n* updated DataFeeder.get_feed_dict_fn to allow use of dictionaries\r\n\r\n* StreamingDataFeeder.__init__() support for dictionary inputs.\r\n\r\n* StreamingDataFeeder.get_feed_dict_fn() support for handling dictionary input.\r\n\r\n* Raising ValueError for DaskDataFeeder in case dictionary is passed in.\r\n\r\n* updated doc strings in datafeeder.py\r\n\r\n* Updated the doc string for evaluable.py and trainable.py\r\n\r\n* removed obsolete code from data feeder.py\r\n\r\n* bug fix\r\n\r\n* bug fix\r\n\r\n* bug fix\r\n\r\n* updated _batch_data  function to support dictionary of iterables.\r\n\r\n* updated tests to include dictionary inputs in data_feeder_test.py\r\n\r\n* bug fix\r\n\r\n* updated estimator_test.py\r\n\r\n* Adding support for different feature and target signatures for training and evaluation.\r\n\r\n* Improving Typography: making mode values clear during debugs and ValueError.\r\n\r\n* replace mode string to ModeKey enums\r\n\r\n* replaced "" ( "" to ""("" and there of to thereof\r\n\r\n* removing redundant assert statement\r\n\r\n* fixing doctoring 1) confirms < 80 chars per lines. 2) semantically makes more sense\r\n\r\n* docstring update.\r\n\r\n* updating doctoring with requested changes. Mainly adding back ticks to code symbols.\r\n\r\n* bug fix, refactor, Adding support for self._labels_info for ModeKeys.INFER model\r\n\r\n* bug fix estimators_label. renaming output key to labels\r\n\r\n* bug fix to allow single element of y to be list.\r\n\r\n* refactor fixes multiple tests.\r\n\r\n* adding pylint changes.\r\n\r\n* reverting back indentation changes\r\n\r\n* python3 compatiblity fix (dict.keys/values/items casted to list)\r\n\r\n* bug fix'"
a31752e88407507df2a6d61b6a0d7c940d63ecc5,'Merge pull request #5900 from martinwicke/master\n\nFix sandboxed build'
91b24215fdde351e43588a4a414ea4022384ffaf,'Fix comments.\nChange: 140334954'
61618ea427948662c88060e03fe57b0de7a29663,"'Simplify tf_proto_library rules, fix sandboxed proto build'"
c757bf4455db3709bba07da9d36ba68a64e3f946,'Add missing headers to GRPC target (in order to fix sandboxed build)'
7f5d8853d8cf1d51c78e95af2d854dcbd2d86ef5,'Fix parameter doc of embedding_lookup'
d6b25985ac219a6e58d186a2beb74d5e8d9e4533,'Fix typo (#5881)'
186ddd0c491b85ab9ad77150270fff53b77028e1,'Typo Fix (#5891)'
f568deff5697891d6c6ca0d09490359cf96fe7a1,"""Fix an error in 'Adding a New Op' example code (#5846)"""
58816eb0989bc09646b5d2eaa3ac1d0e8f964e5d,'Fixed documentation on ctc_beam_search_decoder about condition for equivalency to ctc_greedy_decoder (#5864)'
c1bf10f9c62d3c62cf7aed95aab248dd0ead2cf1,'Fixing bug in Adadelta implementation (#5835)\n\n* Fixing accumulated gradient in Adadelta\r\n\r\n* Cleaning up\r\n\r\n* Updating the precision of AdadeltaOptimizerTest so it could test the accum bug.\r\n\r\n* Remove accidental blank line.'
527311b3f6c4a9a1d3c5eb7a3c7c660cf55ca2c0,'Fixing scatter_nd validation code to handle indices tensors with extra outer dimensions and adding a test.\nChange: 140222390'
eea96fc81bb1ae22eeb1d2141e47e182cecb7608,'Merge pull request #5851 from tweksteen/patch-1\n\nFix typo in tutorial'
ab72af809b1d04b7a389e460ee3c0cd885569a09,'Fix typo in tutorial'
32d0b0719a9e6abcc2b9bd08676ec6ccad0a91a2,'Merge pull request #5841 from RustingSword/master\n\nfix typo in `ScatterUpdate` doc'
d93d526cb804896004c1c20a41586ce0e2415b9c,'fix typo in `ScatterUpdate` doc'
d69c9a69ae44221adf15bb0a3049e9ec718dde25,'Merge pull request #5826 from vit-stepanovs/cmake_cc_test_fixes2\n\n[Windows/CMake] Some more C++ test fixes'
e5d44ffa3d78271e2619c577f8240e530538bb61,'Merge pull request #5836 from gunan/fix_cwise\n\nFix: remove the leftover delta addition in cwise_ops_test.'
101ca9e5530ca47d81d36ba99c1bd800a969d90c,'Fix: remove the leftover delta addition in cwise_ops_test.'
911cfd0f46950ce609df066e4d1024230dcb7dcf,'Fix duplicate CUDA kernel definition in cwise_op_floor_div.cc'
d8a90163c8dffa07b92ad5711da108ffb2592128,'Fix search path for libhdfs.so for non-standard Hadoop installations'
16499fc73dad07e292040744ce0c404e68d08e2a,"'Make windows gpu build project name tensorflow_gpu. (#5794) (#5821)\n\n* Make windows gpu build project name tensorflow_gpu.\r\n\r\n* Update tf_python.cmake\r\n\r\noops, fixed :)\r\n\r\n(cherry picked from commit f8037317ba5e772f59086e3ba098d07cf83363cf)'"
3f5a6244c0b3f133fcb9a0fdc6cc4af841240d14,'Fix a bug in gradient computation that got the control flow context wrong in a corner case of nested cond and while loop.\nChange: 140083287'
516e4d1b4cf0bcc4b245ac74e5148aa946840077,'Fix typo'
0d805b42bdddf23527d35d434cee07d836894d28,"'[Windows/CMake] Enable DepthwiseConv2DNative.\n\nFixes #5818. Also enables saver_test, which was previously disabled.'"
f8037317ba5e772f59086e3ba098d07cf83363cf,"'Make windows gpu build project name tensorflow_gpu. (#5794)\n\n* Make windows gpu build project name tensorflow_gpu.\r\n\r\n* Update tf_python.cmake\r\n\r\noops, fixed :)'"
d893263fbb59fcbef34774ec3d460d30e59eacdf,'Fixes bug with recent change on ResourceVariables.\nChange: 140073799'
b5c22c1c201fd4b3d4359331f61728e715724274,'Clearer error for unsupported types.\n\nFixes #5738.\nChange: 140072838'
18af08feafad32b44fd9f1a20e143b716c82f21b,'Comment fix.\nChange: 140054781'
8b05a13054d5a89f962190ad61ffc8b0ea083c9d,'Fixed the indentation'
51ae55c4e782c7577e10e51ee54721593204f396,'Relax Pool3D shape function when some dimensions are unknown.\n\nAdded test.\n\nFixes #5807.\nChange: 140042698'
542c0d6fd433d50f6558bfcc1ed2cab3cc52a4e5,'Fix RemoveNewDefaultAttrsFromGraphDef() for graphs with functions.\nChange: 140034297'
910fd4206a5bc9d41932013c30e2280c16b55d6c,'Fix maybe_donwload() to close tmpfile before using it.'
e297257e458654c7743c59c7f37154b7f6118c16,'Merge pull request #5800 from llhe/tb\n\nFix file system regex pattern in tensorboard server'
7b09effb8f1cef48c075bd282b305d0ab8a1eba6,'Fixed merge conflict'
686db9555de383eded0b4fe58382e8bf4eca090a,'Fix file system regex pattern in tensorboard server'
39d4e8ed6ce4f80319c6560ff5fe31ffa5a280af,'Fix maybe_donwload() to close tmpfile before using it.'
983d8931b4ea1a5ee81a63b5a2d393bb82f2fa0b,'Fix typo.\nChange: 139974629'
55dbc54192a378c5e685c52595f42503f037320e,'Merge pull request #5793 from tensorflow/mrry-cmake-proto-race-fix\n\n[CMake] Build Python protos after core protos'
cd0b40b57f6c799fc88b0ed12fe216f8ec9efd0f,'Fix imports.'
eeb2632cd6bb77a88fdb6d2d20bfda23ad3381b8,"'Switch function definition hash to NodeDef, fixing a TODO.\nChange: 139963371'"
dced1fa6d3edf9fe3da46e9732d19a2aaedb7d82,"'Merge pull request #5641 from darrengarvey/fix-projector_api_test\n\nFix projector_api_test, ensuring it runs.'"
cff53408cb8bb5072ba5d5847a50b1cde31af82f,"""Fixing bug in which the 'trainable' argument wasn't being passed to the bias in convolution2d_transpose.\nChange: 139925626"""
a26a5925b0500d0e9cd259989fc0e113fa29e27f,'Merge pull request #5750 from b0noI/lin_regression_constructor_fix\n\nDefault optimizer initialization in the LinearRegressor fix'
be3e778ff6911685f8da64e1c774e68ec9f671d7,'Disabling evaluation_test pending bug fixes.\nChange: 139915810'
da6fde1b963b850c53f54210dc65c265f5d3cb3e,'fixed typo tf.nn.(sparse_)softmax_cross_entropy_with_logits\nChange: 139913751'
92a2758efd65bef7f49acd6a7d8b162a2c9d0806,"""Remove assertion that evaluation ops aren't differentiable since top_k is differentiable. Fixes #5726 .\nChange: 139909212"""
68a2bce8aacd6ea8412207117aa06645a108c1fb,'Merge pull request #5784 from abhitopia/minor_fix_ci_build.sh_#5759\n\nFix to ci_build.sh id command (fixes #5759)'
7544aeec4886e430690f2ef5a44d04cacf2e44cd,'fixes #5759'
dcc414587f50673271a31ab767909ec89c956324,'Merge pull request #5739 from vit-stepanovs/cmake_cc_test_fixes\n\n[Windows/CMake] Fix some C++ tests'
833c706edb05089c4fedadac15ef572d4faa9f68,"'tfdbg CLI: A few improvements and refactoring\n\n1. Refactor the code in local_cli_wrapper.py for generating introductory messages about the run() call and the TF runtime error to functions in a new python file: cli/cli_shared.py\n2. Make the introductory message-generating functions capable of handling nested lists, tuples, dicts and namedtuples as the fetches of run() calls.\n3. Use bold font attribute to highlight suggested commands in the introductory messages.\n4. Minor tweaks to the title bar color.\n5. Minor doc fixes in examples/README.md.\n6. Add new font attribute ""blink"" to curses_ui.py and let the error title message use that attribute.\nChange: 139866031'"
7dcb059780fefc4608bd2618660b928a30d3c763,'bug fix.\nChange: 139861812'
da7c07f4694923e1f5743e71d981fd03fde21da7,'Merge pull request #5766 from gunan/testfix\n\nDisable the failing test case in conv_ops_3d_test.'
9d6078b25778aabf50af23f4b6ddfa89ccd589e2,'fix failed copy for op without outputs but with control outputs (#5451)\n\n* fix failed copy for op without outputs but with control outputs\r\n\r\n* fix failed copy for op without outputs but with control outputs\r\n\r\n* add tests\r\n\r\n* minor fix'
fff98d1db9648269e3dda1958dcfb3d76120dfd3,'Fix the dependency in quantization/Makefile.in for parallel build\nChange: 139853310'
ecae26fb5cb32a1703ecb3862410878e35242945,"'Fix SubProcess Communicate() for macOS.\n\nOn macOS, poll(2) may return POLLNVAL for a valid file descriptor that was\nclosed on its remote side (by the other process) before this process calls\npoll() the first time.  Treat this case as an error.\n\nRe-enable the SubProcess tests, one of which (StdinChildExit) appeared\nflaky on macOS depending on the timing of the child process exiting and\nthe parent process first calling poll().\nChange: 139850066'"
095277c09bc6b4f22d1d5b3c7c188e84143dbd70,'tfdbg: Fix an OSS breakage in stepper_test\nChange: 139840257'
a0b935d762b5ac3c883f4d17d31e2d2b261d15e0,'Fixed empty saver_def in CheckpointSaverHook.\nChange: 139836620'
8bfb4cdaab8f21e4104c735aeb4efb9ad5c08622,'Merge pull request #5756 from danmane/r0.12-fix-plottable-css\n\nImport Plottable css file so that TensorBoard works in FF/Safari'
5a50a6d5a1639867976b19c6eeaa2278047c04c2,'Fix dependencies for tf_cc library.'
6759f77d735c9c87a9b57756700333289aa3bd81,'Fixed expand_dims docstring.\nChange: 139828406'
2dbf1d823c74aeb7610ea599c05d60039ee4dc4b,"'Fixed incorrect link to state_ops.md page from ""Variables: "" section.\nChange: 139823495'"
1e13525301e8f7232b8def4dec306e1e355a4f35,"""Merge branch 'r0.12' into r0.12-fix-plottable-css"""
c80be35454a418c18b3fd57614bfcb5265274c33,"'Go: Support for String tensors.\n\nAnd use this support to simplify the Inception example as it can use the\nDecodeJpeg op.\n\nAlso fixed a bug in generated op functions - A TensorFlow ""int""\nis a Go ""int64"".\n\nAnother step in #10\nChange: 139809489'"
57da3ea98269cb499341214dab3fc7d27d2a690d,'Merge pull request #5753 from gunan/testfix\n\nDisable evaluation_test from CI.'
2800e4d47be9078d2688057722f1385276aae8b7,'Minor headers fixes.\nChange: 139804256'
72d7cf54385e766fdc17005613a20dd4e23e369a,"""tfdbg NodeStepper: cache output tensor(s) when calling cont() on an op\n\nThis is a fix to the following bug:\n\nBefore this CL, if you call cont() on an op (instead of a tensor), even if the op has outputs that fall into the stepper's transitive closure, the tensors' handles will not be obtained. This would lead to repeated execution of the op when the user later calls cont() on an output tensor of the op.\nChange: 139797331"""
d512548eac4e7de0be00c9752e77a0510402a18e,'Fix test timeouts for tf.contrib.labeled_tensor\nChange: 139786915'
f28b3534a8237747f9f8637297acddfed8cff2b8,'Bugfix: distribution.util.gen_new_seed incorrectly regards seed=0 as being None.\nChange: 139741806'
495e2911e4f0b51c2e031eb16d99d83556ea9231,'Merge pull request #5734 from tiriplicamihai/fix-precision-mnist-fc-example\n\nForce precision to be float for the MNIST fully connected example.'
41285cf7a11fa3a2c2ead6b6e9adcec4232b18ad,'Merge pull request #5727 from b0noI/fix_documentation_of_control_flow_ops\n\nFix for the code in the tf.cond example.'
c36d4a5592c99605d555a45d493302266af96891,'Merge pull request #5685 from MikalaiDrabovich/patch-1\n\nFix integer overflow error'
abbb4c124649fefc65e2147c729a9f90af17852d,'Fix CMake to build successfully on Windows when C++ tests are turned on.'
0d6681cd27fa5a14dff2c38bd186d35d24812c32,'Fix versions_test to accept new version strings.'
3e00a53893547f3ceb7f0e87a1c0df24988ee9a6,'Fix for the code in the tf.cond example.'
e537b07a931dfef1f995ee23ea1a01ac0eb65047,'Merge pull request #5725 from foreverfaint/master\n\nadd Pillow installation into Dockerfile for fixing scipy.misc.imread \xe2\x80\xa6'
05c4ad28212f2d10b86ceef8799801b8c6f061ea,'Fix: make pip convert the semver compatible version on the fly.'
712158fb6a6156554352fb744e1067ff87168001,'add Pillow installation into Dockerfile for fixing scipy.misc.imread missing dependence issue'
3272fd70a4ae789295e17d6eec77e52008b0b3f2,'C API: Fix typo in header file\nChange: 139650642'
ef7c17d85a400fc44818b5b4172def1a9c42247c,'Fix internal distributed client logic\nChange: 139640161'
43346a1c81d503f0f764e09bb2f12e31a793a168,"""Merge pull request #5703 from caisq/misc-fixes-2\n\nUntag scatter_nd_ops_test now it's been fixed by CL/139592087"""
bddd96c47e881d38bd57cb05bb23c85d46b2acc2,"""Ensure stochastic_tensor_test runs. (#5689)\n\nstochastic_tensor_test.py was missing a call to tf.test.main() so the\r\ntest wasn't actually running. This commit fixes that and the test\r\npasses."""
5c58ab5f8f868855a410b8158f68731b8b87d89c,"'tf.const now supports verification of a shape of values.  (#5687)\n\n* tf.const now supports verification of a shape of values. If shape that is passed via the argument is not consistent with the value in the shape variable ValueError will be raised. Example:\r\n""Expected Tensor\'s shape: (2, 1), got (1, 2)""\r\n\r\n* Bad indentation in tensor_util.py have been fixed.'"
1b531b9d88361a3b8506399d5edae155125c5371,'Fix git bug #5652 by removing unnecessary ExponentialMovingAverage from example.\nChange: 139612070'
af2184219a29e3591f92f9766fef862b18ae4329,"""Untag scatter_nd_ops_test now it's been fixed by CL/139592087"""
20517b942439d7d54839ec47293193b7b5703b85,'Some clean up in prepration for removing RegisterShape from python API.\n\nFixes #5627.\nChange: 139608751'
dca48e8b5adbb328c09a43b7d19300b52680d7ac,'Merge pull request #5698 from mrry/flakylockingfix\n\n[Windows/CMake] Avoid file locking race in protoc.'
78faf868e3a8ee5a2123f1736b0b6983b1776d1c,'Fix building for iOS #4640 (#5668)'
ca44165f473fdf839b4717fe6da9c12cde8a8dd5,'Fixes failing scatter nd pip gpu test.\nChange: 139592087'
dfc5cd48a095b133ece9caff663e3cc512e8a268,'Merge pull request #5686 from caisq/misc-fixes-1\n\nAutomated rollback of change 139483354'
bcdb8eb5ae21e57119404216f63ef4d078bedcb4,'Small tidy-up. Fix the comment on the combination of CSE and control flow.\nChange: 139540050'
096ab75275862f973b2fd1a369a9fd25952a6c37,'Fix integer overflow error\n\nThis sample crashes if used on big text files (>2B words).\r\nChanging corpus_size_ to 64-bit int solves the problem.'
6038c14614aaf127804a294b635cfded62692b4d,'Add extra_feed_dict args to the gradient checker.\n\nThis allows overriding e.g. Operations that generate randomness with\nfixed values during gradient checking.\nChange: 139529625'
edbddbd13edd7dc03389e09e7e6c56d48acf8d29,'Fix flaky test for orthogonal initializer.\nChange: 139527110'
8a5610cd9f0b7087c1a7e97071ba1cf9b885315a,'Fixed a bug so that xavier_initializer and variance_scaling_initializer can now handle [] for scalar shapes.\nChange: 139515181'
f271fc196d49cfdb4c2c8bdc22bf85a14bba22d0,'Merge pull request #5675 from yifeif/master\n\nFix gpu-mac test build issues with test_installation script.'
6042d9fa962dcd0d50d44ca5e2d86eb672d894a2,'Fix for Markdown in the Python docstrings.\nChange: 139506551'
e6e8d8715552d8890c0dd10f49ec3dff931a9926,"'HDFS: Reopen the file when reading if we reach EOF.\n\n- HDFS requires readers to reopen the file to get updated contents when reading. See the context at #5438\n- Also switched to HFlush(), which is the non-deprecated Flush() call.\n- Fixes #5438\nChange: 139503549'"
4c094d15b23cb2166bf53c1c722866f6a7b396bb,'Add Windows GPU support with Bazel (#5644)\n\n* Fix cuda configuration on Windows\r\n\r\n* Some fixes for gpu build\r\n\r\n* Add build:win-cuda in tools/bazel.rc.template\r\n\r\n* Exclude depthwise_conv_grad_op on Windows\r\n\r\nThis change will also exclude it from CPU build\r\n\r\n* Format BUILD file\r\n\r\n* Format BUILD file again\r\n\r\n* Some changes after review\r\n\r\n* Reformat BUILD file'
f12b8253d632298719e5352e553049ae661144dd,'Fix bug with control deps in (experimental) NodeDef function bodies.\nChange: 139494948'
1492d53b0a80a61d2c807172f6c866dc90423a67,'Fix gpu-mac test build issues with test_installation script.'
5729571e6f6ef07c0303b6c1a4df2615dc0ed0c5,"""[CMake] Avoid common pitfalls in CMake build.\n\nFixes a couple of issues that have cropped up:\n* Fixes #5576 by not looking for pthreads on WIN32 where we don't need it.\n* Fixes #5670 by rebuilding the SWIG wrapper on each build."""
9a48456cc35f1887faa7cdc910b3fac98bad69d8,"""TensorBoard: Fix 'gulp server' by redirecting requests from tf-... to tf_...\n\nThis brings back fast development environment for the oss users and (temporarily) for internal google users.\nChange: 139468410"""
0a4676ed1fcdc5a7c4122d5feb21e37372eb5f75,'Merge pull request #5654 from mrry/trainingtests\n\n[Windows] Fix GetMatchingPaths for use on Windows.'
34919fdb5ce7d5a41bc750a8cfe58c3b338a8bfa,'Merge pull request #5656 from gunan/fix_win\n\nMake windows test script version independent.'
95d2a35ff60369775992879389648fa401e1dab8,"'Publish Trainable, Evaluable docs. Fixes #5622.\nChange: 139400242'"
7e8728662120df0a80720bb7527613f96d58271e,"""Rename `Tensor` to `Output` in all Python docs\n\nGenerated by running:\n$ find . -name '*.py' | xargs sed -i 's/a `Tensor`/an `Output`/g'\n$ find . -name '*.py' | xargs sed -i 's/A `Tensor`/An `Output`/g'\n$ find . -name '*.py' | xargs sed -i 's/`Tensor`/`Output`/g'\n$ find . -name '*.py' | xargs sed -i 's/`tf.Tensor`/`tf.Output`/g'\n$ find . -name '*.py' | xargs sed -i 's/`Tensors`/`Output`s/g'\n$ find . -name '*.py' | xargs sed -i 's/#Tensor)/#Output)/g'\n$ find . -name '*.py' | xargs sed -i 's/#Tensor\\./#Output./g'\n\nManually fixed up lines that exceeded 80 characters after the change.\nChange: 139400135"""
425a1c1e965c70baddb8885f916f45ba95621642,'Merge pull request #5653 from benoitsteiner/master\n\nFixed several bugs in the OpenCL code'
4919aee13732911ce9214360a3740e62ea18db02,"""Fix a bug where a selection and isolation points does not work by removing the\ncheck for the size of neighbors in the inspector panel. It's unnecessary.\nChange: 139395143"""
4b4f14defeaf11569b15ebddd3f6b716202e6118,"'[Windows] Fix GetMatchingPaths for use on Windows.\n\nThe existing implementation is not compatible with paths containing\nbackslashes. Use a workaround on Windows only (converting backslashes\nto forward slashes).\n\nAlso enable several tests in python/training, and fix io_ops_test.py\nand saver_test.py to work on Windows.\n\n(saver_test.py and some other tests are disabled until #5634 is merged.)'"
369ecca2bc931ef8fbd60317931031b878d8c6f8,'Merge pull request #5651 from caisq/disable-scatter-op-test\n\nDisable scatter_nd_ops_test in OSS python tests until the bug is fixed'
658cf67a9afd12bc1716a357a4346f4187020b00,"'Fixed the OpenCL implementation of the Switch, Merge, and NextIteration ops'"
116061e53e183bc4a743332de9843b0f06cba6f8,'Disable scatter_nd_ops_test in OSS python tests until the bug is fixed'
f8573271af6d5d4907709cd570320fec0db33780,'Clear SummaryWriterCache at the end of training. Fixes #5401.\nChange: 139378246'
8c46bff60dc32d7708653f023556b6d30bd85277,'Fixing global step based delay.\nChange: 139364536'
f137144bd761bb33d542db4a26055270bc6ea577,"""Fixed a race condition in direct sessions: we shouldn't call RecvOutputs if the\ncall to Run has been cancelled otherwise RecvOutputs may block forever.\nChange: 139352917"""
df0ba56a87b03d3cdea94ab087c45ca0b9f46116,'Fix LoadSavedModelFromLegacySessionBundlePath() to return error if LoadSessionBundleFromPathUsingRunOptions() fails.\nChange: 139348875'
634790044c81521c438799b558d33b8440fa9e23,'Fixing a bug in the MutableDenseHashTable implementation where the difference in shapes between the Insert and Import functions was causing issues with a vector key and scalar value input.\n\nFixed by splitting the LookupInterface CheckKeysAndValueTensors method into one for Insert and the other for Import.\nChange: 139346138'
8f32013de36fe259be7d5536778550dbc9cca8a4,"'add Rint operation (#4113)\n\n* add rint op\r\n\r\n* wip on custom rounding op\r\n\r\n* fix Makefile build for the rint op\r\n\r\n* rebase, add test, fix examples'"
9b50ce5ea08076dbb08716182f1992d6637022e7,"'Fixed the OpenCL implementation of the Switch, Merge, and NextIteration ops'"
9f672ec99badcad5c2b1a21567c8cb0b49e35aa9,'Fixed bad merge'
8e5b8a14219ddf55d00536022d1a33f0a9929444,"""Make integer check Python 3 compatible\n\nFixes `NameError: name 'long' is not defined` error thrown in Python 3."""
3b6cccabe786a0b604edd69df28666cee5e2b1ad,'Fixed the OpenCL implementation of _HostRecv'
256a6fcf5f733f33c5c8e4c4c02445cc5c921b69,'Fixed bad merge'
af50cfee5c043d23975a43fd16417c4a89fefe1d,'Fixed bad merge'
48c75c2aa592d2b1a790c753ee13f1dc0b5a9162,"""Fix projector_api_test, ensuring it runs.\n\nThis test was missing a call to tf.test.main(), so the test wasn't being\nrun.\n\nThis commit also fixes the test with s/embedding/embeddings/."""
52ffc792fdef41de20ac60dc61d4e809d83b558d,"'Migrate TensorFlow to libjpeg-turbo\n\nThis makes JPEG go 2x faster on x86_64 (k8), arm7, and arm8. On all\nother CPU targets, e.g. x86, JPEG performance should be the same as it\nwas before.\n\nFixes #4807\nChange: 139295768'"
c9e2516eb65b5e418bc7305e598ae4850cf2430b,'Fixed merge conflict'
5fda668fac8147f0afc9622785f4b3d00c3989e9,'Fixed bad merge'
7123f03042cb0ac13a2a11eba33d3f4058a72e80,'Fixed bad merge'
723b76d45168ee3b63cb0f7bcd869caf88064c08,'Fixed bad merge'
8946424a2c0bd5e7f5ea832be84553f857281f3d,'Fixed several of the cwise_op tests'
c9cd348e7c842094913a99d9051dfbc7804789b6,'Fixed a typo'
50d247494d5af78c377a63fe405824c5071e251d,'Fixed a typo'
c8f0b1ad3e7e3a4719e2079fd3d4e3c8007ecb44,'Fixed formatting.'
7059c6cd0ec0440700ee3edfedcf483ce9181f17,'Fixed merge conflict'
0cbe6813956dd7098fab24c6d684288f2c5351be,'Fixed merge conflicts.'
fa1a4c44ed6f9b511d8261e744d83355eadf7641,'Fixed a typo'
584d4a193c41918d33d0d43c0d13b055dfb5b254,'Fix: replace deprecated nvcc flag with its replacement. (#5256)'
f250389872ac7d282268fa69dda5f5b2e6268063,"'tfdbg: improvements and fixes to tensor display in CLI\n\n1) Enable scrolling to next regex match with command ""/"" following ""/regex"".\n2) Enable scrolling to tensor indices with command such as ""@[1, 2]"" and ""@100,30,0"".\n3) Display tensor indices at the top and bottom of the screen, and in scroll status info bar.\n4) Handle invalid regex search commands, e.g., ""/["", without crashing.\n\nDoc updated accordingly.\nChange: 137518091'"
2392f4d355ee83205afd37f9e7f8602548d05829,"'If run in an interactive python environment, log to stdout (not stderr) and set default logging verbosity to info. Fixes #3047.\nChange: 137464619'"
bad3fe0aca8542084ab270d1ac5147b8e4a68d6f,"'Set a max number of collected NodeExecStats in StepStatsCollector.\n\nThis fixes an issue where nodes in a while loop were accumulating a very\nlarge amount of stats, exceeding the protocol buffer limit.\nChange: 139277518'"
e9d253b56160209b4566ce16cf2d688f0142206b,"'Fix dnn_test, which was cause by a bad sync/merge.\nChange: 139259251'"
8852b0032ad49acbc59009776665c60f86c06f91,'Orthogonal initializer (#5164)\n\n* Add orthogonal initializer.\r\n\r\n* Update documentation.\r\n\r\n* Fix tests.\r\n\r\n* Use tensorflow operations.\r\n\r\n* Add gpu support.\r\n\r\n* Update tests and svd.\r\n\r\n* Use random_uniform rather than random_normal.\r\n\r\n* Update initializer tests and check shape.\r\n\r\n* Update docs.\r\n\r\n* Remove relu from gain.\r\n\r\n* Fix indentation.'
cace91e815242074852606367e6e2a09f09eedd2,"""BUGFIX:  Softplus bijector inverse did not work with small values 'y'.  This\nchange does a 1st order Taylor expansion to solve for small values.  Also add a new assert, assert_bijective_and_finite, and corresponding tests for some Bijectors.\nChange: 139250783"""
f97cd45c6b95c6049244842183732aef8c079f8d,'Fixing a bug related to using a string piece after the inner data is destroyed.\n\nThe string piece holds a reference to the internal buffer_ when this class gets destructed the buffer gets destructed but the stringpiece can still be used outside (it is an input parameter). The fix is to first copy into scratch (which is an input parameter) and then put the scratch in the stringpiece (result).\nChange: 139236445'
f09cae541f915e458b68ec1bf9a1b51c7fd196e1,"'word2vec: Create directories for saving summaries, if necessary. (#5542)\n\n* word2vec: Create directories for saving summaries, if necessary.\r\n\r\n* Fix bad indentation.'"
3842d31e89e7c4ceef8920f1f209bdee4d9c190d,"'Switch Windows CI for CMake to use manually installed SWIG.\n\nThe choco-installed version of SWIG did not include the fix to\nhttps://github.com/swig/swig/issues/567, which caused some Python\ntests to fail on Windows.\nChange: 139206577'"
a8a1958bbc871bb5c5f634897cd777b9bb839ef0,"'[Windows/CMake] Use a more recent version of SWIG\n\nThis fixes `reader_ops_test.py`, which was suffering from a bug in older versions of SWIG when using Python 3.5 and a SWIG-wrapped generator object.'"
4140e0362ad32a8b089d0325f9f33ed2dac4d242,'Adding a test for bug that was fixed in a previous CL.\nChange: 139137524'
0cb6d0438728d552ad98b718e2e0d8fd433b689f,"'ResourceGather & ResourceScatterAdd use dtype attribute name.\n\nThey now follow the convention of implicitly specifying the type of\nthe resource variable as an attribute having a fixed name ""dtype"".\nChange: 139136489'"
7f3d8e1f8736f4c812e4a0a96154af3bd3750180,'Merge pull request #5567 from dtrebbien/patch-2\n\nFix syntax error in UnchangedShape example code'
c7a49f9fededb98a7c57ac6acfccddc43dd2f8ed,'Fixing a bug related to copying to the scratch buffer after read.\nChange: 139135051'
299bf578217ff13b54081648ce4829a140017051,'Fix bug when looking for a checkpoint in parent directory.\nChange: 139116176'
786938758a39940ae0154834bfed9e21894afa28,"""C API: Stick to a convention around use of size_t and int.\n\nThe types size_t and int were being used inconsistently\nacross different functions. This change documents the\nconvention and fixes a few functions up to ensure that\nall functions adhere to it.\n\nNot quite sure if this convention (in particular using\n'int' for array indices, as opposed to say 'size_t')\nis the best choice, but at least the choice has been\nmade consistently.\nChange: 139100887"""
2ee6a412733fd94e6f11f35ad816d26b6078b0e6,'Fix external compile and release new version of TB.\nChange: 139100164'
c6063490aee2276c17e84a6e18bcee9fc4fa3e36,'Fix markdown formatting.\nChange: 139075656'
ce6068bb7062b057e6fc16bc525854ef2c886365,"""Fix CMake config if used as a subproject (#5581)\n\nWith this fix we don't assume that the tensorflow project is the build\r\nroot. Instead CMAKE_CURRENT_SOURCE_DIR/CMAKE_CURRENT_BINARY_DIR is used\r\ninstead of just CMAKE_SOURCE_DIR/CMAKE_BINARY_DIR, which now builds\r\nsuccessfully, if it is built inside another, larger project."""
4745af79f2971d5f8ab0663e1256a40a068fafff,'Fix bug when looking for a checkpoint in parent directory.\nChange: 139070284'
02858e09a39b219ecb5be21440f8c1fa83952b59,"""Fix CMake config if used as a subproject\n\nWith this fix we don't assume that the tensorflow project is the build\nroot. Instead CMAKE_CURRENT_SOURCE_DIR/CMAKE_CURRENT_BINARY_DIR is used\ninstead of just CMAKE_SOURCE_DIR/CMAKE_BINARY_DIR, which now builds\nsuccessfully, if it is built inside another, larger project."""
91e4e129f2f0adb69b29105ccba3ba0c2398cee6,'Fix typo in embedding tutorial\nChange: 138976669'
61e373925e04b6602f9aad939185d2d2bac3762d,'Fix syntax error in UnchangedShape example code'
77bb8d4c20ecb87a3988b24cf4c3f39e6dd78a34,'Fix syntax error in UnchangedShape example code (#5566)'
ade851e9805ab0b0820fdc3ec0ba7f98209572df,'1 char typo fix in rendezvous.h.\nChange: 138974804'
e0c782167f0e616f1147397cbbfcee490bc2459f,'Fix class docstring example to be dataset independent.\nChange: 138942464'
225152bd3a392d71e8c33f82f0209d158a04ef56,'Fix tf.learn classifier doc-strings to describe that the TF classifiers expect class labels as indices (unlike scikit-learn which can accept arbitrary values as labels).\nChange: 138941065'
e3209bd34e12238f6993f104ef55d2aef618fe1a,'Document caveats about `tf.py_func()`.\n\nAlso fixes a race that could occur if two threads called `tf.py_func()` concurrently.\nChange: 138937024'
ea26dae5de6be94126fc1744294872b3859d8ac4,'Fixed checkpoint restore conditions to work with both V1 and V2 checkpoints.\nChange: 138921188'
a8967c15a45be5517dec8c2c343f84e36b001b7b,'tfdbg: example for debugging tf-learn Estimator.fit() & minor changes\n\n$ blaze build -c opt third_party/tensorflow/python/debug:debug_tflearn_iris && blaze-bin/third_party/tensorflow/python/debug/debug_tflearn_iris --debug --train_steps=1\n\nMinor changes made in this CL:\n* Fix a bug in local_cli_wrapper related to computing fetch and feed summary strings.\n* Minor tweaks in debug/examples/README.md\n* Curses CLI: Add scroll direction information for UI clarity\nChange: 138910196'
94eabc8eec1caeedce7b3e96db8d28a6ee671022,"""Fix inconsequential compiler warnings (#5535)\n\n* Use the same integer types in 'for' statements and other comparisons\r\n\r\n* Initialize unused values on failure to avoid compiler warnings\r\n\r\n* Add dummy returns on failure to avoid compiler warnings about missing return values\r\n\r\n* Removed line-continuation tokens from commented-out code\r\n\r\n* Avoid unused variable warning for 'parsed_colon'"""
dae137d94b01ac4f3b46f482ec8d37b0083ec87f,"'Fix pca tooltip, which falls off the screen.\nChange: 138895487'"
df4ef50932de18d904e13f8ea4dbdcc4d5be2281,'Fix QuantizedConcat shape function.  Enable it from python as well.\nChange: 138895028'
ac69852a397e16e3a3c52554d64d06b8ef4d45d4,"'Fix another TODO: Enable gradient tests of matrix_triangular_solve for float32, which now passes (with a slightly larger tolerance) after setting the initial value properly.\nChange: 138881184'"
093a9fabc74e89b82f6a3c54a9f3f2d9b4468e8b,"'Bookmarks save and restore the current data set filter (""Isolate N Points"").\nInspector panel restores its UI state from bookmark. It also uses hover + selection contexts so the projector doesn\'t need to forward events to it anymore. Eventually it will be able to forget entirely about the projector, and just use the to-be-built DataModel.\n\nFix unrelated bug in the newly-refactored orbit controls code: restore left-button-click to pan when orthographic projections are enabled.\nChange: 138872537'"
8eadfadba54fff373da822554b94f5e280e5eab5,'[Windows/CMake] Enable avgpooling_op.cc.\n\nFixes #5517.'
ef23d57e777fae714f3c9d42bd944a091bb4bcf8,'Fix bug introduced in manual merge.\nChange: 138793949'
036c2c3e720ba65a975eb2db8e2b2dbc71417b74,'Fix incorrect gradient w.r.t. A for matrix_solve_ls in the underdetermined case.\nAdd missing name to gradient test that caused most tests for matrix_solve_ls_grad to be skipped.\nSet proper initial values in linalg_grad_test and tighten test tolerances for float64.\nChange: 138725515'
f8cf3fe8c6abb9737f5e0629164b1ba1e30d4c2a,'Merge pull request #5497 from uschmidt83/master\n\nBugfix in gradient code for tf.image.resize_nearest_neighbor'
e01b641fc26a39ae62dc6a0a1379571e5857d8c8,"""Restoring the camera from a bookmark requires restoring the orbit controls as\nwell, otherwise the orbit controls will try to 'look at' the target of (0,0,0)\nand introduce an undesired rotation. This is extremely non-obvious in the 2d\n(orthographic) projection case. Fix is to always initialize position0, zoom0,\nand target0 in the orbit controls when creating a camera.\n\nExtract makeOrbitControls out from duplicated code in makeCamera2D and\nmakeCamera3D.\nChange: 138710960"""
38aec869681e0ac964e33bf44aef57016c5960c5,"'Fix metagemm crash, make sure scratch memory is aligned to 32 bytes.\nChange: 138701878'"
0f81e91137e305a545f070815099f24ae217640f,'Fixed formatting and lint issues introduced with the last pull from OSS (cl/138675832)\nChange: 138699007'
eefac7c3aadb5e7803df611c3d83473f0c449d3d,'Fix byte_size_load_fn for scalar variables\nChange: 138680427'
f46fe646a26f0514fdfbfcea3882fd0120f24388,'Enable reuse of a DirectSession after a run times out.\n\nFixes #5115.\nChange: 138676008'
f86d96d2b2e1765b8bcd3aabef09d22181f9b573,"""Fix call_cpp_shape_fn's option for comparing to python (needs to convert result\nfrom proto TensorShape before comparison).\nChange: 138668146"""
e72dfcc36abcc6ece7fca63d089591bafdf03584,'Fix minor documentation in iOS build instructions. Thanks @JosiahKane.\n\nFixes #5324\nChange: 138659892'
0f7492801b0e9ab645c9c5ee7caa79e35ac10864,'Fixes bug in _ResizeNearestNeighborGrad\n\nPrevents `ValueError: Cannot convert a partially known TensorShape to a Tensor...` if any value of `image.get_shape()[1:3]` is None.'
cadb43c37a1806dd617233fab40330927289c89a,'Fix race conditions in tests due to using same folders for saver.\nChange: 138587097'
3cd41cf72a998ac800f91e1dc507e4e8638330ab,'Rename tf.Tensor to tf.Output\n\n- Swap the alias direction and fix tests broken by the swap\n- Export Output in tensorflow.__all__\nChange: 138583261'
6e53bedeb8f4e05a47307ce92ba584144243f52e,'Minor fixes to tbdbg codelab to improve clarity.\nChange: 138571194'
75366c60ad45b70656a6902cf8f5d00283b16bce,'Minor formatting fixes.\nChange: 138569121'
4b5131f918b1b28dcc200e62bd1c269db21896af,'Fix forward reference.\nChange: 138549657'
ace92bd0b3fc5c08913683f6df8a1c0a6e4163a3,'Fix typo in comment.\nChange: 138518927'
66e69e28ca912a9f379e8dc8aa9445986001945f,"'Fix MetricSpec errors for non-functions as metrics.\n\nThis fixes a failure where a non-function is used as a metric, fails, but raises an exception during error logging, hiding the real exception.\nChange: 138488393'"
0c4e1d45d7f33cf4d19585265b085349909e3b36,'Switch Pack and Unpack to use gradient checker.\n\nThis uncovered a silly bug during idx calculation in the gradient checker which is fixed in this CL.\nChange: 138471470'
9bd79fd74925df5f4ff9a105429e2b1482723b24,'Fix a typo in export meta graph sample code. (#5472)'
a54a3137bb6dadc3fe867bcf2a4fe7561f26b662,"""fix windows gpu build (#5421)\n\n* msvc does't support unroll. for now let the compiler take care of it\r\n\r\n* fix windows gpu build\r\nambiguous / operator (doesn't know if it should use float, double ...)"""
374f3ce9528217b4176af1a3fafc02bb3af00e96,'Fix Conv3d with unequal strides on CPU (order of dimensions got mixed up\nbetween TF and Eigen). Add tests covering the unequal stride case.\nChange: 138421428'
e1c7e510a569cd5898f08015352bbdc8bef2ff7e,"'[Windows/CMake] Remove dependency on zlib.dll. (#5456)\n\nInstead, use the static zlibstatic.lib, as originally intended.\r\n\r\nFixes #5275.'"
4c782b58ee2912f7e51978961ef1883bf3ae045f,'Fix windows cmake build by replacing enum class by enum\nChange: 138409704'
691f30655d15c0d50650547e45769cc7e75b55d2,"""Pylint `disable` fix (#5418)\n\n* Started synthetic\r\n\r\n* Added circle synthetic dataset. partially resolves #5314\r\n\r\n* Implemented CLs to resolve #5314\r\n\r\n* Adding py_test srcs to BUILD\r\n\r\n* Added  to fix #5309\r\n\r\n* Removed accidental contamination from\r\n\r\n* Moved the 'enable=wildcard-import' closer to the 'disable'\r\n\r\n* Added more of the 'enable=wildcard-import' and removed unused ones"""
1975e41fd13ca0fe09c091704f26c0d882007e3a,"'Fix selection of the very first point in the dataset.\n\n0 (index of the first point) evaluates to false in JS, which resulted in the false conclusion that there was no selection\nChange: 138387835'"
9d045888a3b565e856287381b581eed02750f976,'Merge pull request #5420 from XuesongYang/patch-1\n\nfixed the equation of the sequence increase'
faed431a57a415ae215e7d93027e869fc8d1f024,'fixed the equation of the sequence increase'
163357b7f3e02ef9b68cd5f107285e27a7f16c8c,'Fix windows build. (#5411)\n\n* Fix windows build.\r\n\r\nAdd resource_variable_ops to cmake\r\n\r\n* Update the document of windows cmake build.'
4160019d84dce5cb6cccbff998c62c6849eb3ca7,'reduce_logsumexp fix for reduction_indices.  Fixes issue #5291 (#5292)\n\n* Fix issue 5291\r\n\r\n* Update #5291\r\n\r\nUpdate from comments\r\n\r\n* Add unit test\r\n\r\n* remove extra space\r\n\r\n* Update math_ops.py\r\n\r\nRevert back to initial approach\r\n\r\n* wrap to 80 cols by restructuring'
374322eb6a26934b4d7a3736fcb13fcaa019ac5d,"'Fix a bug that in cost model manager, graph ptr is used as key of map but memory allocator returns same addresses for graph objects when the graph mgr is being used repeatedly.\nChange: 138251588'"
8842777dbb7a7a48906b8f1930b017c2bc58fe91,'Fix dependency in SavedModel py.\nChange: 138246915'
197230147c7636c28ebf1a49c51706cf5c1eb9f1,"'Ignore tools/git/gen and fix a bash error in python_config.sh (#5405)\n\n* Ignore tools/git/gen\r\n\r\n* Avoid bash error in python_config.sh\r\n\r\nWithout this change, I get\r\n\r\n    Please specify the location of python. [Default is /usr/bin/python]:\r\n    Do you wish to build TensorFlow with Google Cloud Platform support? [y/N]\r\n    No Google Cloud Platform support will be enabled for TensorFlow\r\n    Do you wish to build TensorFlow with Hadoop File System support? [y/N]\r\n    No Hadoop File System support will be enabled for TensorFlow\r\n    ./util/python/python_config.sh: line 124: [: : integer expression expected\r\n    Found possible Python library paths:\r\n      /usr/local/lib/python2.7/dist-packages\r\n      /usr/lib/python2.7/dist-packages\r\n      /usr/local/buildtools/current/sitecustomize\r\n    Please input the desired Python library path to use.  Default is [/usr/local/lib/python2.7/dist-packages]\r\n\r\nThe problem is that -eq is valid only for integers on both sides.'"
8f9493858a5a89fcda5ace0b86b0f964dc470d20,"'C++ QueueRunner: Bug fixes.\n\nThree bug fixes:\n(1) There was a thread-unsafe access to runs_ which could result in the\n    queue close operation being invoked multiple times.\n\n(2) The Run() loop would not exit when there were multiple threads\n    and the queue was closed (i.e., the enqueue failed with a\n    queue_closed_exception_types_ error).\n\n    Without this fix, the changed QueueRunnerTest.QueueCloseCode\n    test would fail with a timeout since qr->Join() would be blocked\n    on the never-exiting Run() call\n\n(3) Errors in invoking the close operation were being ignored.\n    Without this fix, the added QueueRunnerTest.QueueCloseFails\n    test would fail as Join() would return OK instead of NOT_FOUND\n\nTwo other minor changes:\n- Slight simplification to QueueRunner::Run() so that\n  runs_ is manipulated only once and the body of the loop\n  is clearer\n- Avoid starting an extra thread which will not be used\n  when there is no Coordinator. (Though in practice I\n  suppose we always intend to have a coordinator).\nChange: 138228243'"
d74307b89b5ae635f948a675345c1d4220657268,'Fixed error with NaN elements (#5024)'
879e0accd1c833771c8058d3eb5f2d4f06f895d4,"""Change FileExists to return tensorflow::Status.\n\nAlso done separately by @llhe at github.com/tensorflow/tensorflow/pull/5370. We needed to do this change internally to fix all callers.\n\nMotivation: The existing FileExists interface doesn't allow callers to distinguish between file not found vs. filesystem errors.\n\nSemantics changes:\n- gfile.Exists in Python now throws an exception for filesystem errors. It continues to return true/false if it can accurately determine whether a file exists.\n- RecursivelyCreateDir now returns errors for filesystem errors when calling FileExists.\nChange: 138224013"""
9cdbfa1f80ebefeb82594ae1d3011c9ae61abe3c,'Fix class docstring example to be dataset-independent.\nChange: 138215557'
93990f0177cb561202b2be9df396fc5930c975ea,"'In word2vec tutorial, fix word choice to ""Section"" rather than ""Chapter"" when referring to the paper.\nChange: 138213623'"
2accf327f77fa30d531df83da2a26495ab156653,"'Add Substr Op (#4338)\n\n* Add initial code for substr op\r\n\r\n* Fix naming of substr\r\n\r\nConflicts:\r\n\ttensorflow/core/kernels/BUILD\r\n\r\n* Add complete substr op, tests, and documentation\r\n\r\n* Update date 2015->2016\r\n\r\n* Remove unnecessary header includes\r\n\r\n* Add dtype specific tests\r\n\r\n* Add element-wise version of Op, comments for bcast\r\n\r\n* Removed cheeky line break in string_ops.py\r\n\r\n* Change commented `int` vars to `size_t`\r\n\r\n* Add case statements for static template dimensions\r\n\r\n* Clean substr_op, update shape function, more tests\r\n\r\n* Adds info about pos/len needing the same shape\r\n\r\n* Remove #include of bcast statement\r\n\r\n* Add working broadcast code with tests\r\n\r\n* Clean line widths and comments\r\n\r\n* Add broadcasting note to string_ops.cc\r\n\r\n* Add print_function __future__ import to tests\r\n\r\n* Add comment in to shape function in string_ops.cc\r\n\r\n* Add SubtleMustCopy wrapper for scalar pos/len\r\n\r\n* Add SubtleMustCopy to element-wise path\r\n\r\n* Add SubtleMustCopy and FastBoundsCheck, tests\r\n\r\n* Add examples to documentation in string_ops.cc\r\n\r\n* Avoid repeat accessor calls to input tensor\r\n\r\n* Reorder variable declarations in loop\r\n\r\n* Reorder python imports to be alphabetical'"
70f826c5d5508762623cec1bd6a588047744dfb7,'Fix class docstring.\nChange: 138209941'
3b13cfdb8970fab86d5923d47791004eca92d4ff,"""Small fix to C++ gradient checker.\n\nSome ops forward the input tensor's buffer to the output. This was causing\nan incorrect centered difference calculation.\n\nAlso added RefIdentity Op and converted IdentityGrad Test to use the gradient checker.\nChange: 138207419"""
83559ee1d8cce32dd80cb017cd8bb76880790b23,'Add Kerberos support for HDFS file system (#5398)\n\n* Add support for Kerberos-enabled HDFS\r\n\r\n* Fix HDFS DeleteDir caused by HDFS-8407'
9653eebf387ee9c2758bb8dfc81d0452fd8488d1,'Fix config that makes file not json parseable.\n\nVerified by loading file using python json.'
9ec30b9727196b816baa6d9c6d9b19c66d765c19,"'tfdbg: Fix a bug related to regex search and scrolling when there is line wrapping\n\nThe issue: Prior to this CL, if there are is wrapping and you do regex search and scrolling, the output pad will scroll according to line indices in the original (unwrapped) text lines instead of the wrapped text lines, which misses the actual matches. This CL fixes this issue.\nChange: 138191265'"
59daeca31528ad20932921e687d2a3ae042991a1,"'Fix performance issues with the Embedding Projector plugin.\n\n- Setup data handlers in the class c-tor instead of on every GET request.\n- Use only 1 instance of the plugin, instead of creating a new instance on every GET Request.\n- Memorize readers, and other data, and share it across the multiple threads of TB server. Previously # of checkpoint readers = # of GET requests, ups.\n- Checkpoints can be big (order of 1G). Reading it takes a while. Only start reading checkpoints if someone explicitly opens the embeddings tab. Previously the checkpoint was read on TB startup, which slows down TensorBoard.\nChange: 138187941'"
cfccd7ce1b9092eec98bb0989eb55a11e9d2b894,"'GPUDevice: if enabling peer access fails, log a warning but do not\nreturn an error.\n\nOn some systems and GPUs, the driver may report being able to enable\npeer access between two devices, but trying to do so still fails.\n\nThe system can still run, though possibly slower than if peer access\nwere enabled.  Since we cannot disambiguate between supported\nand unsupported cases in which this happens, we demote this\nto a warning, with the exception being that if *no* device\ncould enable peering even though it should be possible, we\nstill return an error.\n\nFixes #5362, hopefully.\nChange: 138141024'"
742ec63b9d714cf7b203cabb4f91e5eb32cacfb2,'check_ops BUGFIX:  Call convert_to_tensor on args before doing anything else!\nChange: 138138065'
ee520b4cabfce385cbd253932885304fb177f909,'Adds feature column functions to exported docs. Fixes #3622\nChange: 138137511'
c74c7c166281dd92cab48d1ec7c43f337e41c9e2,'Fix: add debugging and fail-on-error to windows bazel build script.'
14bc025ffb79a224d027ca29ca5a8ab128ff6646,"'Revert ""Fix: replace deprecated nvcc flag with its replacement. (#5256)""\n\nThis reverts commit 988b53e1ba38900d1cac0fe49357d7fbeab8925a.'"
b725df4aaf4fde1139f7204bae31650a25348e0f,'Add :core_cpu headers to pip package to provide\nsession.h/session_options.h and some other headers that are supposed\nto be publicly available.\n\nFixes #5380\nChange: 138104302'
cd46a4702bb0c1786874500f5b24b46f389a59b0,'Fix typo in ImageUtils.getTransformationMatrix()\nChange: 138103022'
5904c0e5f2631b198d47a1f4229bf93991daf3f7,'Fix windows build.\nChange: 138101249'
afa129793b748968ba0ca8f92693ba7d19b1298a,'Fix instructions for installing cuDNN to preserve symlinks.\nChange: 138090265'
d131c5d35b9ef01b6cc5776ca6b0725f83ad35b6,"""Update the misleading comment for cifar10.py's softmax_linear layer (#5259)\n\n* Update the misunderstanding comment for cifar10.py\r\n\r\nA fix for the issue #5251, make the comment more meaningful.\r\n\r\n* Update comment to be a bit more precise.\r\n\r\n* wrap to 80"""
df93da5fa07987dc0612a857922134fdf874c9df,'Fix a potential bug for android demo (#5382)\n\n* fix bug for android demo\r\n\r\n* fix bug for android demo\r\n\r\n* fix bug for android demo'
81743e74f45f0c846c86c34b2a00e48a687b0640,'Delete obsolete comment.\n\na) EIGEN_USE_NONBLOCKING_THREAD_POOL no longer exist. The non-blocking threadpool is the default (It can be disabled by the symbol EIGEN_USE_SIMPLE_THREAD_POOL).\n\nb) An eigen_initialize.cc file is no longer needed due to recent fixes for thread safety in Eigen.\nChange: 138074328'
5ea3f1830ce723990ec64c3848d8171bfeaa7341,'Fixed formatting of the BUILD file'
56dfac5948641aca58db1c7f5950475fd93aa135,'Fix capture expression of scatter_nd_op* files\nChange: 138030455'
9113b25790bfc4e2da1876a78d74382f776bf02a,"""Change path functions to operate on URIs rather than paths.\n\n- Move the URI parsing and creation functions to path.h so that we don't\n  depend on core/platform from core/lib/io.\n- Fixes https://github.com/tensorflow/tensorflow/issues/5316\nChange: 138023841"""
f9b6d55ffd630082efd088fca927f7d991fdf3fa,"'Move the last skflow examples into learn examples. Remove skflow examples folder. Fixes #2606. Deleted usage of learn.models.logistic_regression, learn.ops.*.\nChange: 138010275'"
7b7c02de56e013482b5fe5ab05e576dc98fe5742,'Add log1p (#5356)\n\n* Add log1p.\r\n\r\n* Use log1p in cross entropy.\r\n\r\n* Register log1p in math_ops.\r\n\r\n* Update copyright.\r\n\r\n* Fix tests.'
66926f3f06af2aa579be46b51df0a06a212a2a28,"'Fix: to avoid flakes, make sure GenerateTestData picks a new folder every time.\nChange: 138008252'"
a93234a60244ffe843312c3f49ee495d1524dd48,'Clarify when you need to use Makefile\n\nFixes #5360\nChange: 137993461'
e1d1167b641f72ed6d31a4c17c970f539d63c678,'Changed reference from eigen-latest/ to eigen/ in order to fix the following error: ./third_party/eigen3/unsupported/Eigen/CXX11/Tensor:1:42: fatal error: unsupported/Eigen/CXX11/Tensor: No such file or directory (#5307)'
5dd28f34f31d6e6a18637bd217ec9f715e551705,"'Hessian with respect to one-dimensional tensors (#5329)\n\n* Add hessian op.\r\n\r\n* Add test.\r\n\r\n* Fix typos.\r\n\r\n* Fix tests.\r\n\r\n* Revert ""Fix tests.""\r\n\r\nThis reverts commit 8ef3abfc40a312c301bc25ceba2fdc90a5527eb0.\r\n\r\n* Fix tests.\r\n\r\n* Support multiple tensors in xs.\r\n\r\n* Fix docstring formatting.\r\n\r\n* Add hessians to training docs.\r\n\r\n* Remove gpu loop.\r\n\r\n* Add test and bugfix.\r\n\r\n* Add name scope.\r\n\r\n* Update error messages.'"
9641703e2ecba49a218c30ac24c3d14fa843fbe2,"'Clean up the Bookmarks UI:\n\n-Update the help text to not use ""bookmarks"" as a noun and a verb\n-Change the download icon to the save icon\n-Disable the save icon if there are no bookmarks\n-Change visible nomenclature to save and load instead of upload/download\n-Fix the radio button edge-click bug that selects the first bookmark\n-Do some basic checks on the shape of the dataset and the bookmarks.\nChange: 137943270'"
a901819bb7974a9bb7b6be759e1477674658b70f,'Merge pull request #5346 from gunan/master\n\nFix sourceforge links for TF external dependencies.'
54760a10b6a0a0dedf196337eebf51c543b53181,'Register QueueRunner threads with coordinator at creation time not start time.\n\nThis fixes a race condition in coordinator.join(). Removed workaround in\nQueueRunnerTest.\nChange: 137933187'
3d20eae72b8e4a85acbc236d0664190166fad117,'Fix: Replace sourceforge URLs with debian ftp urls.\nChange: 137917462'
78f221d2549eb35d8b1f3414f0497bd8b91ce3ee,'Fix: disable memory sanitizer for quantized_matmul_op_for_hexagon_test.\nChange: 137914787'
127f7ba31311d057442f64662042355e7552783d,'Fix sourceforge links for TF external dependencies.'
5d19de37e85d58217afbb92ae4ab70d4eaf222b6,'Fix a missing sparse column in wide_and_deep example code\nChange: 137908539'
07ae2d1d606fa3f8f3fb09bcf65b570b3c606173,"""Fix issue where we wouldn't descend into subdirectories when listing GCS runs\nin TensorBoard.\n\n- Fixes GCS so that it still includes prefixes even if items is empty.\n- Change list_directory to use GetChildren() instead of GetMatchingFiles.\n  GetMatchingFiles in GCS has a quirk where, unlike other filesystems, it\n  doesn't include directories. There's no obvious fix given the GCS API.\nChange: 137885363"""
4968483784211e58a0fa1e6e4f020b760060fc81,'Fix race conditions in tests due to using same folders for saver.\nChange: 137881303'
4c85e1cd6c6d432265a566e058b7389f23ec4aa5,'Fixed merge conflict'
8e06a6e655c1d97496fa29e1b4435f8f0fb913aa,'Fixed merge conflicts.'
f4325776061a31283f2a377ffa6f5de329b9903a,'Fixed a typo'
b00e940445a03dd5edbe47ff34762ec8ff4087fb,'Fixes #4226: Allow to specify partial shape in sparse_placeholder.\nChange: 137854718'
6d4956edb02c5a2d0a9bdeb919a4c4c0e55fd882,'Allow passing constant_value_as_shape from call_cpp_shape_fn to the C++ shape\ninference. Delegate to C++ shape function for Reshape.\n\nFix reshape to handle attempting to infer unknown dim when product of known\nelements is 0.\nChange: 137837591'
0385e47dba67d26ad4c86cd88c873245f37cede6,"""Fix picking bug in fragment shader. Since we're not doing a camera-relative\ndepth sort, we can't do 1-bit alpha correctly. Revert to using discard in the\npicking shader until we do a global camera-space z sort (if ever).\n\nAggregate [PointAccessor, PointAccessor, PointAccessor] as a new type,\nPointAccessors3D.\nChange: 137823236"""
d85fb4940a74663932e3029e2311435fd97f4fb0,"'It seems extremely unlikely that the fragment being shaded lies /outside/ of\nthe point sprite to which it belongs. Because of that, delete a\npoint-on-side-of-line-segment test and simplify the analytial triangle\nrenderer.\n\nAdditionally, fix the ""vampire teeth"" effect when rendering the letters M, W, V in canvas labels by setting a very conservative miter limit.\nChange: 137776328'"
337d4a60b8e3f6666b79cb60e83ca297ae28c67d,"'ScaleAndShift Bijector updates/fixes:\nDOC:  Clarify that (for the ScaleAndShift bijector) scale * X is matrix\nmultiplication, and that scale must be triangular and non-singular.\nCODE:  Check that the conditions on scale are met.\nChange: 137761917'"
af9695fa3995c2fc7513f3cf1c92da00f08fc50d,"""Fixed failed building of /pi_examples/label_image. (#5204)\n\nIncluded <stdio.h> before including <jpeglib.h> because jpeglib.h implicitly requires it.\r\nCast 'usage' variable to 'const char*' because tensorflow::port::InitMain() function requires C-style string instead of std::string."""
01948f6bcaf6805e98be0b7194fac9fd6e41b2ef,'Fix nvcc non-opt build of fake quant ops by avoiding use of std::tuple\nand marking Nudge as a device function.\nChange: 137753029'
8ff9640405dbee7a15935640ac3d8f242dc86dc9,"'Fix ThreadSanitizer warnings on std::vector<bool>.\n\nEach worker thread in the thread pool writes to its designated entry in\nthe std::vector. The entry must be of a size that the CPU can write to\nwithout stepping on the adjacent entries. Moreover, std::vector<bool> is\nimplemented using bitwise operations. The assignment operator sets or\nclears a bit in a word, which requires both a read and a write and is\ntherefore not atomic.\nChange: 137749423'"
1dd44f3ecc38cdb3df95cb3599f7b843f6d5062a,"""Fixes for shared queue read functions:\n . fix typo in call\n . re-export the functions so that they be accessed from outside code\n . do not create a new graph for the dummy placement variable. The new\ngraph doesn't have the device setter applied, so the variable was not\nactually placed on the PS.\nChange: 137745823"""
5df7d742dd26a474c783c18972fbcfd2531d96ca,'Fix deprecated usage of variable_op_scope (#5271)\n\n* Update docs to deprecate variable_op_scope in favor of variable_scope\r\n\r\nvariable_op_scope was deprecated in commit 3d1ee95.\r\n\r\n* Fix deprecated usage of variable_op_scope in linear estimators'
0c7aa3d40887359c2e9ec73bcc38281f5cfd4ce6,'Fix a Jenkins-only checkpoint existence test (cifar_10).\n\nV2 is turned on: so test for the .index files.\n\nExample failure: https://ci.tensorflow.org/job/tensorflow-pull-requests-cpu/2379/console\nChange: 137734944'
ca57b39db2a005059fccd9d937fd8b24b18fe1cf,'Add shader support for analytical equilateral triangle rendering. Fix picking\nbug where alpha was incorrectly disabled.\nChange: 137734683'
fe954af593facdfaeb2304055108b23f9c853450,'Fixing sparse_ops_test string comparison failure. Fixing embedding_lookup_unique to support >2d params as per description.\nChange: 137730923'
443fea9b7360c7be93a56bb1f8eb2a6f7fc68051,"""fixes a memory corruption on windows/gpu (#5288)\n\n* use port::aligned_free() to free allocations from port::aligned_alloc().\r\nThis was resulting in memory corruptions on windows.\r\n\r\n* windows doesn't use LD_LIBRARY_PATH so don't print it.\r\nit was actually crashing instead of printing the error message since getenv() returns null."""
e7066fb9c15412d3f9aca43ccf991c62833f8291,'Fix too long sentence (#4962)\n\n* Fix too long sentence\r\n\r\n* Make previous commit more idiomatic\r\n\r\n* Fix missing logging import'
7cd00438e70519563c4ce5efb952d6a4b7b18d17,'Added list functionality to registry object (#4946)\n\n* Added list functionality to registry object\r\n\r\n* Fix indentation\r\n\r\n* Punctuation fixes for comments.'
3ccdb2b695586201cde65e079806c5941ae542b6,'Use canonical cuda include directory path in CROSSTOOL. (#4096)\n\nFixes #3985'
396513e0a0296827e98032489b65c05cb7068498,'Merge pull request #5298 from Haroenv/patch-1\n\n[example] fix typo'
b84caeaaf85c130ea461ff21bb302e0e5923cb73,'[example] fix typo\n\nMay be --> maybe'
20592a448090cbf9acd5e655626ae0153ca7efa5,'Fixing python3 issue for sparse_ops_test'
5e71c517800eb096bbeba2b8749ff0b44b5a045e,'Fixing tensorboard/backend/server_test.'
6bf2cc7e618ef16ab36b903752d51316ce99ad99,'Merge pull request #5269 from raix852/fix-minor\n\nFix minor error in os_setup.md.'
428a2813f2aa5703f8ecdee0f175a13d59707ed5,"""Fix broken tensorboard/backend:server_test in OSS.\n\nIt failed because:\n- assertSameElements doesn't exist in OSS\n- json_format.MessageToDict doesn't exist in the OSS.\n\nReplaced with the correct ones.\nChange: 137602799"""
c82f4962b9b8ba871880958a459d6d4f3587111b,'Fix minor error in os_setup.md.'
ad5a583e7b9f095d1d0151fd24f9e5055d5dd6ab,'Linter fixes.\nChange: 137566553'
988b53e1ba38900d1cac0fe49357d7fbeab8925a,'Fix: replace deprecated nvcc flag with its replacement. (#5256)'
7993cb5745657fbb8903a87d217441338303ac25,'Use consistent naming for `labels` and `weights` args.\nFix asserts to pass expected before actual values.\nChange: 137544983'
27e116b85cccb016a380f8977b89c4e3638d5b25,'Fixed a typo'
1fdcca3403531a61c937bd944b1728a525038896,'Deflake test by specifying a fixed random seed.\nChange: 137541047'
82a034e8a5c0927804f4688acbcc7127da23b7eb,"'Fixes for TestSessionInterOpThreadsImpl:\n- Force to run on CPU, since running on GPU fails.\n- Crash if session->Run fails. Otherwise, the test hangs if session->Run fails.\nChange: 137519956'"
a304f0a1e430be84fcbe4ffc6bd80e26fcf08393,"'tfdbg: improvements and fixes to tensor display in CLI\n\n1) Enable scrolling to next regex match with command ""/"" following ""/regex"".\n2) Enable scrolling to tensor indices with command such as ""@[1, 2]"" and ""@100,30,0"".\n3) Display tensor indices at the top and bottom of the screen, and in scroll status info bar.\n4) Handle invalid regex search commands, e.g., ""/["", without crashing.\n\nDoc updated accordingly.\nChange: 137518091'"
92c8c6969eb8b2378eb6886d9c443f2d6f2f2ba6,"'If run in an interactive python environment, log to stdout (not stderr) and set default logging verbosity to info. Fixes #3047.\nChange: 137464619'"
66f979714c9a8582059f383ec1505d13c9e8c523,'Merge pull request #5246 from gunan/master\n\nFix graph_io_test flakiness.'
c15bb7b6f64fbc4bfd19aeccfd8b8df99012b74c,"""Speeding up GetMatchingPaths by\n  a) parallelizing the IsDirectory() call\n  b) bailing out on candidates if there wasn't a prefix match.\n\nAlso moved all the GetMatchingPaths tests from env_test to file_system_test as that logic now resides in FileSystem.\nChange: 137452166"""
dde4e3caff94e3c47b4868615365936883cb31a1,"'fix for issue #5169 (#5207)\n\nin nvcc -gencode we need to specify both sm_ and compute_, else we can not\r\nfallback to a lower compute capability.'"
838312242534f725d45ecfbc9f01e36598440485,'Fix graph_io_test flakiness.'
32d1dcc10e1fdf33dc6742337c6e0869f7b3c557,'Merge pull request #5108 from temporaer/cumprod-docfix\n\ndoc: fix possible copy&paste error in cumprod docs'
5c1ca717e8ddd16b0be8410a798dc174380a600d,'Merge pull request #5227 from gunan/r0.11\n\nFix: For mac non-docker GPU builds fix handling of test concurrency. \xe2\x80\xa6'
d48f91d4dfbb964be2e7da6bf852db79f3cc0856,'Fix: For mac non-docker GPU builds fix handling of test concurrency. (#5218)'
eb64b92917070676c5cf110055a24033b4f2d34a,'Fix windows build.\nChange: 137350342'
2cbb9b529a6723ebbe07663156b18c04fbaf4531,'Fix: For mac non-docker GPU builds fix handling of test concurrency. (#5218)'
d504109ebd3eec14fac92d404e9d3352e7b52615,'Fix gulp vulcanize/regenerate.\n\nThis enables us to release new versions of TB to the OSS world.\nChange: 137298993'
6dfe75d703fc0c84d185a2cab0b7ebfded538f10,'Merge pull request #5211 from gunan/master\n\nFix: also include dirent.h in cuda_diagnostics for compilation on mac.'
9cb1a4a3abf7a559de34ffa6bcabb9eda34a64ad,"'Fix SparseMatMulOp when for [m,0] x [0,n] multiplications. This change\nalso includes a test exercising this behavior.\nChange: 137290372'"
242291e011cbf28675552b530054004d44eccc98,'Fix python test-on-install issue in model_analyzer_test.py\nChange: 137283632'
e3b26be9fc6bd55a70d6100d880f739cac49b275,'Merge pull request #5215 from caisq/tutorial-fix-1\n\nFix test_tutorial failure due to d9d7fa'
c8929e2e6e1dcb7e8e0feda6f917bf9b61d851b1,"""Remove testonly attribute that breaks builds with newer bazel versions.\n\nIn bazel versions beyond 0.3.2, the testonly\nattribute will be more strongly enforced\n(https://github.com/bazelbuild/bazel/commit/5f026f96118e76c8a6357c61e5710e0bd1bf0f54)\nand builds will fail with something like:\n\nin cc_library rule //tensorflow/python:tf_session_helper: non-test target\n'//tensorflow/python:tf_session_helper' depends on testonly target\n'//tensorflow/python:construction_fails_op' and doesn't have testonly attribute\nset.\n\nIdeally, tf_session_helper wouldn't depend on :construction_fails_op\n(and construction_fails_op wouldn't make its way into\n//tensorflow/python:pywrap_tensorflow). Instead only the\npy_test target //tensorflow/python:session_test would.\nHowever, that results in errors like:\n\nin deps attribute of py_test rule //tensorflow/python:session:test:\n'//tensorflow/python:construction_fails_op' does not have mandatory\nprovider 'py'.\n\nI believe the correct fix involves some reengineering of bazel\nand/or the skylark rules we use. I'm punting on that for now:\n(a) to expedite fixing #5143\n(b) because this change is effectively a no-op since in bazel versions\n    <= 0.3.2 were ignoring testonly altogether\n    (https://github.com/bazelbuild/bazel/issues/1923)\nChange: 137281711"""
6915e8611638bfdaaf468bf29b620922f0757e0a,'Fix test_tutorial failure due to d9d7fa28a069eb34c829c1a0d4221e73a7677d5a'
c27d1561bd89f1062e4cbb19262905e609daef80,'example_proto_fast_parsing now parses directly into the pre-allocated Tensor buffer for fixed length features.\nChange: 137250896'
8a30178b509ca43dbcc2e9303dc084a241c72235,'Fix: also include dirent.h in cuda_diagnostics for compilation on mac.'
2db795810b71dcdea17af43f8f5c61a0b4d50ddf,'Fix test_installation to skip using parallel_gpu_execute when not using GPU. (#5186)\n\n(cherry picked from commit 446b1cbb81058e921512ecd566ec883184c7bbd4)'
7c6059c3086378db483dc5aa35bc97f43ccd8ab4,'Merge pull request #5192 from oskopek/train-docs-typo-2\n\nFixed typo in train api documentation'
4d0b2a57fa883bf8b80ee1d08fd3bd45e3625f53,"'Package up all headers in pip package using the transitive_hdrs\nrule for lib/framework, instead of manually curating the filegroup.\n\nNote that this has to expose ""internal"" headers, such as\narray_slice_internal.h, because array_slice.h includes array_slice_internal.h\nand thus needs to be in the package to build.  This does *not*\nmean that array_slice_internal is public, just that it must be\nin the package.\n\nIf users start depending on internal headers, we can break them.\nThe policy is that only those headers that are visible in bazel\nusing ""//visibility:public"" are actually public (that is what\nbazel can enforce).  Furthermore, this policy extends to\nwhat we do for python: only documented headers/functions are\npublic, even if they are \'includable\'.\n\nFixes #4996.\nChange: 137219132'"
b89e30eff7602e9789e2ec7acb73fb758225fd8d,'Fix layout in nearest neighbors list.\nChange: 137214463'
9e474f8de5d567f97f2eae1ca98ec97f701aa48d,'Merge pull request #5185 from djones/master\n\nFix broken link to creating a Docker group'
cc71e3a0045dd88ccc5886264e745e91e09c4488,'Merge pull request #5177 from b-3-n/master\n\nBugfixes'
6f3a668f7cf008be614bc22eaf7f8f39d88b68bd,'Merge pull request #5165 from meteorcloudy/fix-windows-code\n\nRemove conflict include statments in port.cc'
e6dfe5bc83b8fe386b81b4beb67faa008a7b51e0,'Merge pull request #5124 from willdzeng/mnist_data_fix\n\nMade mnist tutorial data storage folder consistent'
e3c67f5a6f601b25284f48e9e505e9ec444d2a44,'Fix reversed sense of #ifndef NDEBUG in definition of TF_DCHECK_OK.\nChange: 137194210'
8f1a20913066157daffaae5386503daddafd5093,'fix 2d tsne\nChange: 137190849'
446b1cbb81058e921512ecd566ec883184c7bbd4,'Fix test_installation to skip using parallel_gpu_execute when not using GPU. (#5186)'
6f259612b6763444df59f8229e14b5127ec40b75,"'Fix shape function for the Variable op.\n\nWell, almost. The shape function cannot distinguish\nbetween an unknown ranked variable and a scalar variable.\nThis is for historical reasons, as the Variable operator\n(like the Placeholder operator) has been in existence\nsince a time when an empty TensorShapeProto used to\nimply an unknown rank.\n\nThere is a plan to ""fix"" this by introducing and transitioning\nto PlaceholderV2 and VariableV2 operations (see https://github.com/tensorflow/tensorflow/commit/5e176998d92a64d78df57e9fb78582e5e7e4ebb6)\n\nBut until that happens, make the shape function for the\nVariable op work for all but scalars.\n\nAn explanation of the changes to python:\n\n- state_ops.py: This is done to keep the in-memory representation of the graph\n  in python (which resulted in an unknown shape when set_shape=False)\n  is consistent with what any C++ code thinks about the shape of the Variable op\n- variable_scope_test.py: When an initializer is provided to tf.get_variable,\n  it ultimately calls state_ops.variable with set_shape=False. Because of the\n  change to state_ops.py, the shape attribute wouldn\'t end up with [73].\n  My understanding is that the use of the shape attribute wasn\'t the intention\n  of the test, so switching to another attribute maintains the intention.\n\nFixes #5106\nChange: 137179498'"
e49d2c74691f036e3561d4599248a6aa54b78ba4,"'t-SNE bookmarks now restore properly after re-running t-SNE. The bookmark state\nstructure held references to the projected points, so the values were\noverwritten when the data set was reprojected! The fix is to do a deep copy of\nall of the projections per point.\nChange: 137163394'"
9358c059a9dc1c7207dc9706a4efce255b9f044f,'Fix predictions eval metric in TensorForest.\nChange: 137145475'
c7e1fd63104595e7939a74116cb6e1031e6d1593,"'Fixed typo in train api documentation\n\n""It `True`"" -> ""If `True`""'"
f49aca4532c155597c669cf2189f211cafbebf96,'Merge pull request #5175 from gunan/master\n\nFix string comparison issue in py3 for export_test.'
af3e307bb9d058b644898cf3ef3d31dfb46994e6,'fix broken link to creating a Docker group'
3de83620bc01f318878062bcf9d38c65f9d5f59f,'fixing typo'
d9d7fa28a069eb34c829c1a0d4221e73a7677d5a,'fixed the consistency of data storage in tutorial'
ab9d1c480a6b5131e0225752ca8c055eac2e70d1,'Update instructions to point to Docker image 0.6.0.\nFixes #5070\nChange: 137092810'
48548068432d337fd5c9a97bf0b69870309cec82,'Switch Accumulator ops to use C++ shape functions.\n\nFix ones that output a handle to output 2-element vector.\nChange: 137092080'
e7d1327895f6a3fcf5d0e35e4d0817d2178171f4,'Bugfixes\n\n- Align start of learning rate decay with documentation.\n- Use correct configuration for creation of test inputs.'
5a3032b1f7c00c89ca8c177a681641f1e7d03def,'Fix string comparison issue in py3 for export_test.'
4a465522c1023ae13ea89f729fa6fb1ad7989eb7,"'Explicitly only skip the zeroth iteration of t-SNE update when sending new\npoints to the scatter plot. This fixes t-SNE bookmarks where the reprojection\nwould occur, but not be sent to the scatter plot for rendering.\nChange: 137080345'"
ec3f4d62979ef1e70e8e12e2568b13dad45fd39e,'Fixed the paper reference for the AttentionCellWrapper to a more appropriate paper.\nChange: 137070739'
7dc07d29af79c722b6849337b3a6451b9a70fe9c,'1. Fixes typo (convolutional -> convolution).\n2. Adds image size after first max pool to help readers understand why\n   we end up with a 7x7 image after second max pool.\nChange: 137066216'
eb3bb471145534b23d84bdb3bd64f3ab41a9b137,"""Basic fix for t-SNE bookmarks. Only access the 'componentDimensions' field on\nthe state if the bookmark is restoring a PCA projection.\nChange: 137065239"""
85a2e357cbbf6ea4969324dbc9fdbda2f99ef6c6,"""Fix bug in TensorBoard UI where switching tabs causes the line charts to become unusuable.\n\nThe cause is subtle: switching tabs causes a hash change, which caused every property not specified in the hash (e.g. show data download links) to be re-assigned, which triggered Polymer observers, which caused the charts to redraw when they weren't on the screen, which caused the viewboxes to be set improperly.\nThis fix will also improve UI performance by avoiding extra work on events that trigger a hash change.\nChange: 137049538"""
b5a169f3e307e18b959d4a7fd9d4315ac1eb802a,'Fix symbol duplication on Xcode/clang (#4504)\n\nFollowing linker error happened on Xcode:\r\n\r\n```\r\nduplicate symbol __Z14tf_git_versionv in:\r\n    /Users/admin/tmp/tensorflow/tensorflow/contrib/ios_examples/simple/../../makefile/gen/lib/libtensorflow-core.a(version_info.o)\r\nduplicate symbol __Z19tf_compiler_versionv in:\r\n    /Users/admin/tmp/tensorflow/tensorflow/contrib/ios_examples/simple/../../makefile/gen/lib/libtensorflow-core.a(version_info.o)\r\nld: 2 duplicate symbols for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\nThese functions are defined in `tensorflow/core/util/version_info.cc`.\r\nIt seems an object file for it is added twice in Makefile:\r\n(`$(wildcard tensorflow/core/util/*.cc)` and `$(tensorflow/core/util/version_info.cc)\r\n`)'
bac7faa9a3eb5b60687a83336202cd3493de5385,'Merge pull request #5167 from villasv/master\n\nFix bad var echoing introduced by #5135'
91d7b70a51ed58cf07c976f8b8c4a177383e71bb,'Merge pull request #5166 from wangyum/incorrect_link\n\nFix incorrect link for Building a Random Forest Model'
c6398454f04fa6ec8372e9574d753556fc3c0afb,'fix echo PYTHON_LIB_PATH variable'
a759e6e6d26dd45e97c6f02505dcb68ed392ac5f,'Fix incorrect link for Building a Random Forest Model'
a320ea4b7b143be683b8095db015bcedcc636a62,'Fix various warnings exposed by current versions of Clang.\nChange: 136975423'
425f49e1ab6a32500a3c40b0a441d167ece70007,'Fix types in create_vocabulary (translate model) (#4793)'
40d28e24df77130792dc20408e45dda3154b9bc2,'Merge pull request #5116 from caisq/r0.11-fixes\n\nFixes and improvements to docker build script and dockerfiles'
ec7f37e40fedb23435bfb7e28668e5fa63ff52f3,'Add data_format option to convolution2d_transpose (#4986)\n\n* Add data_format option to convolution2d_transpose\r\n\r\n* Fix typos\r\n\r\n* Fixed docs and style\r\n\r\n* Add tests cases for conv2d_transpose python ops and layers for NCHW data format\r\n\r\n* Delete some redudant copies\r\n\r\n* replace get_available_gpus() with is_gpu_available and add use_gpu=True\r\n\r\n* Test conv2d_transpose layer on GPU only for NCHW data format\r\n\r\n* Fix one more test'
37851f4abdf4991fde654264f56a2bd8a2762551,'fixes https://github.com/tensorflow/tensorflow/issues/4903\nChange: 136924290'
1fd04bcd8d01bc5d161aaaa1b10cd64f189f6de1,'Merge pull request #5131 from gunan/master\n\nFix cmake build by restoring changes from commit c25f125.'
2775130b04db48bb74c8399b05f6602aa7a88f13,'issue-4737 (#5088)\n\nFix issue 4737 (gradient for elugrad)'
d7e01941ea5c4a6db524c2cd58690449a8f1a4ac,'Merge pull request #5132 from jart/swigfix\n\nFix SWIG compilation across repositories'
08c73994c90cc4e9f2ce055913669d86b1949c79,"'Change C++ shape fn for Reshape to match python; in particular, make it return\na partially inferred shape if there is >1 missing dimension in the shape\ntensor.\n\nFixes #5059\nChange: 136897179'"
192309634b9240da32fba46acef8db8fb83cda65,'Fix SWIG compilation across repositories'
a10445b0a26a25e85c245c0fbec942098459a626,'Fix cmake build by restoring changes from commit c25f125.\nChange: 136895329'
4c1893ca3bba66eaed85b51aaf5b855ed188208b,'Fix cmake build by restoring changes from commit c25f125.'
987f36c4b235a01e520ba1178807e79ea8bd332e,'Revert back to CPU when KNN on GPU fails.\n\nAlso fix a small bug where the metadata card label was wrong when the data was filtered.\nAlso fix leftovers from the vz- to vz_ naming.\nChange: 136871663'
09dff29029d087bd007c050e36b8ff84a014d4d0,'Merge pull request #5075 from meteorcloudy/update-protobuf\n\nUpdate protobuf to get fix from mrry/msvc_fix'
2888907bfd83cbba7046bee7c6847f88a09bf3db,'Update\n\nfixing and clarifying instruction on GPU build.'
f41daaa2d1c4c89424a688c8735c5f7fc58df4fd,"'Fixes and improvements to docker build script and dockerfiles\n\n1) Clean up large Bazel build cache. Total filesystem size reduction as seen by du -sh /:\n  devel image: 1.5 GB (Before: 2.9 GB; After: 1.4 GB)\n  devel-gpu image: 2.3 GB (Before: 4.7 GB; After: 2.4 GB)\n2) Using nvidia-docker for GPU docker build.\n3) Upgrade Bazel version from 0.3.1 to 0.3.2.\n4) Add missing libcurl3-dev build dependency to devel images.\n5) Add scipy and sklearn to Dockerfile.devel-gpu to enhance consistency with other image types (e.g., Dockerfile.devel).\n6) Remove the obsolete and unnecessary --recurse-submodules flag for git clone.\n\nRelated to GH issues: https://github.com/tensorflow/tensorflow/issues/4116 and https://github.com/tensorflow/tensorflow/issues/4117\n\nHowever, not using the ""git clone --depth 1"" suggested by issue #4117, because the size of the git repo is only reduced by about 50 MB by the ""--depth 1"" flag. This space saving is small compared to the space saving due to bazel cache removal. The complete history of the git repo can be useful for certain development purposes.\nChange: 136302103'"
0ce14afbd49bf76aa48605da3f15a84d4483e91e,'Fix bug identified by address sanitizer.\nChange: 136828001'
954a5d68849c2560bf5c8eb16722a586e101c843,'doc: fix possible copy&paste error in cumprod docs'
dc46a47f48690a2d8a30ca99144fbde47661771c,"'Refactors linear classifier/model_fn and svm estimator to use head. Also,\n+ Supports model_fn returning ModelFnOps in Estimator (needed for the refactoring)\n+ Fixes a bug with unintended weight broadcasting.\n+ Fixes PedictionKey->PredictionKey\nChange: 136790906'"
7231d01fcb2cd9ef9ffbfea03b724892c8a4026e,"'Fix out-of-bounds read discovered by libFuzzer.\nlocale_independent_strtonum returned str-1 incorrectly if there was\noverflow, because s.fail() was set, which causes s.tellg() to return -1.\nChange: 136790139'"
7b4af07b7424d76d460ea1afc999532f77ee8386,'Rewrite TensorFlow EditDistance implementation to be based on true GTL; fixes a bug in the calculation.\n\nThis fixes the EditDistanceOp.\nChange: 136788609'
550bd6d4e855d06faee89bb3745bf39a930183df,'Merge pull request #5035 from llhe/hdfs\n\nFix hdfs scheme parsing issue in tensorboard'
65e31297f51af85ee4bfa4817a0d4d1773728ab6,'Fixes making specs and ndlstm accessible through tf.contrib\nChange: 136781876'
671f4c6519b4d82d3e97ab96825e0a748fae8e5d,'Temporarily remove tests that fail running with a single GPU. (#5100)\n\n* Temporarily remove tests that fail running with a single GPU.\r\n\r\n* Fix tags order according to buildifier'
d0e0d530b6fe69848af242b09446c1dd834a947e,'Fix TransformedDistribution so that it does not assume the event shape matches\nthe event shape of the base distribution.\nChange: 136775957'
b09ab769296f361435aa1401db14f302937b6fec,'Fix crash in _make_metrics_ops in estimator.py when using a MetricSpec metric and targets are defined as a dict with a single key.\nChange: 136768627'
7d8ce2ee5f3b444a39be5eebf05496209292dc72,'Fix freeze_graph.py and freeze_graph_test.py to work with Saver V1 and V2.\nChange: 136743848'
35468a360e35a6ff4e982e60c62fc1892bc40c2f,"""Fix aspect that checks for hdrs by allowing the struct to\nnot have 'hdrs'.\nChange: 136723996"""
c1beb006f7b2a201d5c2345a0f3d708ae54a61c5,'Merge pull request #5079 from Quarazy/conv2d_typo\n\nFix typo in conv2d doc'
46110c5aecfafcce220252bb8455b6188389b91d,'Fixes and improvements for Windows platform code (#5020)\n\n* Fixes and improvements for Windows platform code\r\n\r\n* Addressed CR comments\r\n\r\n* Added comments regarding the use of GetSystemTimePreciseAsFileTime function'
3c44556cebd836be2bef54d6deaeb63fbd893842,'Updates OSS Eigen version to get bug fix for negative arguments to sqrt.\nAdds unit tests for handling negative arguments to tf.sqrt.\nFollowup to cl/135111959.\nChange: 136665526'
465ce3dd8a6e4006bd802b73f2ec09f6fd169272,"'Remove framework_headers filegroup, replace use with just collecting\nheaders from ""core:framework"" target like we do for framework_headers_lib,\nso that it is available in the pip package consistently.\n\nTested by building the wheel with this change and validating that\nthe files were in site-packages/tensorflow/include/tensorflow/core/framework,\netc.\n\nFixes #4996.\nChange: 136664737'"
004bbce3d9669c71dd0862ac2d53b228bc1016b9,'cmake changes to enable gpu support on windows (#5074)\n\n* cmake to enable gpu support on windows\r\n\r\n* fix typo'
7e8050ce34fa639af93af8ec239f826e8dd68077,'support for gpu on windows (#5071)\n\n* gpu support on windows\r\n\r\n* changes after review:\r\ncuda_driver.cc: changed FIXME to TODO\r\ncuda_rng.cc: removed stray include\r\ngpu_device.cc: use  std::generate() for all platforms to avoid ifdef\r\n\r\nwhen building for linux I found:\r\nload_library.h: added FormatLibraryFileName() back - linux still needs it'
7e17e4719bd30d8351663ee6868a47bd5235babf,'Fixed raced condition in MonitoredSession test.\nChange: 136645313'
383e252d0212f976ee54b14069c320198c89bd16,'Fix typo in conv2d doc'
663853842239653fae90d2ca7f1f6afd90441b72,"'TensorFlow summary API migration.\n\nCreate tf.summary.{image, histogram, audio, merge, merge_all}\n\nThese duplicate tf.{image, histogram, audio, merge, merge_all}_summary.\nWe will deprecate the existing versions in a future change.\n\nThe APIs for the migrated summary ops are almost the same. Here are the changes:\n- The first argument for each summary op is now ""name"" rather than ""tag"". The ""tag"" argument is removed entirely. The name will be used to construct the op name per standard TensorFlow naming conventions, meaning there is no longer a need to do manual name-prefixing to get re-usable summary ops.\n- The image summary ""max_images"" argument was renamed to ""max_outputs"", for consistency with the audio summary and other future summaries.\n\nA future change will migrate existing usage where possible, and remove the duplicated implementations in logging_ops.py\nChange: 136636253'"
80b323b3fd9dd22b323106a8579f7d28585420b1,'Update protobuf to get fix from mrry/msvc_fix'
80907dfcdb23a8e066bb6a75eda5ead53372085d,"'Minor fix to an std namespace issue in ffmpeg_lib_test.cc\n\nThis fixes a build failure that surfaced in nightly builds after CL/136212902 such as:\nhttps://ci.tensorflow.org/view/Tensorflow%20Jenkins%20Monitored%20builds/job/nightly-matrix-cpu/TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/261/console\nChange: 136622955'"
cd65f2567b79ba7a707566bd18c6d6b260335a52,'Merge pull request #4919 from thuyen/fused_bn2\n\nFixed fused_batch_norm gradients'
7b1a86de26b096741f95e10009a24f9d592cbb54,'Merge pull request #4870 from haosdent/4749_fix_comment\n\nFixed the wrong comments of `tf.scan`.'
418b506be9b5436d10936c0391abf1a60a36a8ab,'Fix a compilation warning\nChange: 136597998'
47ef3c5eca776a2d10249f987cca406577389db5,'Merge pull request #5015 from wujingyue/master\n\nFix typo in xla_prerelease.md'
1912b1fde4858efe99f00f4fdee814489c6b1d37,'Pre-allocate expected vector size when parsing fixed line [Float|Byte|Int]Lists.\nChange: 136596757'
10aef94244144fb29f1e883c18b9afbc127f8978,'Fixed merge conflict with upstream.'
5d11853c948a0f366c6ab374930c020b71d67086,'Fix santiy check failure'
b62d4a88476f853a0ff87b7a1ee62b351aabba54,'Fix copying protobuf and eigen3 headers'
39ef4219b693d13272eba92b0e38ffa9c8383472,'Make swig fix simpler'
a3eeaba56a4f92376d9403d120c4fe63d15cfe5d,"""Fix //tensorflow/contrib:contrib_py by excluding targets don't build on Windows"""
7fbf7aa135ce55f3121a692a0487a4ceef4ef8c2,'Merge pull request #4837 from nikhilmishra000/einsum_fix\n\nupdates to einsum'
8fa9b949dcfad2c3fd271fb87ac8b94869453be4,"'Add data_format support for N-D convolution and pooling.\n\nThis adds support for ""NC*"" data layouts for N-D convolution and\npooling (including atrous convolution and pooling); previously, only\n""N*C"" data lyaouts were supported.\n\nThis also adds support for 1-D pooling (by forwarding to the 2-D\nimplementation), and fixes the broken data_format support in\nconv1d.\nChange: 136556507'"
9ebc0b428b28c64984b0a38270aae0e9974969ea,'Merge pull request #5057 from mrry/mpfix\n\nCMake: Set the /MP flag correctly on Windows'
ed56c843a7364d8ce6b39042f15e997fb91f143a,'fix error in documentation of confusion_matrix\nChange: 136528360'
ffca44e327e02a38bdaab56b8c5ebd6f4b2ab69c,'Fix tf.nn.log_softmax documentation. (Missing `log` in normalization.)\nChange: 136520720'
7a1eff1afc4d0f28d723833cdb236b7efcdb4110,"'Adding an atomic_write method to file_io which uses a temp file and renaming to ""atomically"" write to a file.\n\nFixes this in training_util.py which is used by saver.py\nChange: 136519920'"
0280f9ad704ab2dfd66ce3be554f43df3d22da39,'Fix certificate issues in bazel for ci build.\n\n(cherry picked from commit 923c999d6e910d7566f10a852d2ff12c4a88fad8)'
58db8411d93e277f129143a2647484e768128182,'Added template keyword for post fix expression where left hand side is a dependent expression.'
b53b9ddae1f011cd97d332a2d00bf449059c9afd,"'Merge pull request #5041 from gunan/master\n\nTo fix continuous build, install ca-certificates-java in docker images.'"
923c999d6e910d7566f10a852d2ff12c4a88fad8,'Fix certificate issues in bazel for ci build.'
080b2b8dc2ca7775d3964f5f1555b2842179aaf3,'Fix indentation error'
d0031aae86e12811ce7303b9107ebb9a60828932,"'Fix bookmarks: Disable reprojection-from-UI-event in the projections panel when\nrestoring a bookmark. Introduce CameraDef, the serializable data that defines a\ncamera. ScatterPlot now uses a CameraDef when recreating a camera, useful for\nsaying ""loading a dataset is asynchronous, so the /next/ time you create a\ncamera, create it with these parameters.""\nChange: 136468317'"
ea05070d5db8d853135c09768b18802926850b73,'Fix hdfs scheme parsing issue in tensorboard'
a4acaebdec684156446242757dac1d8dce467b3b,'Fix typo and add comments'
fbb9062653b439fbc9d5567e3ea8bb94be3ca76b,"""Fixed a typescript compilation error by using 'as any'.\nChange: 136402522"""
0c8ecb5c0b435689970640fd231e3909727ce588,"'To fix the memory leak, make sure to delete the swig wrapped status object\nafter use in file_io.\nChange: 136389148'"
7b719a3c247b67a260ff8e117dcba433822bd60b,'Fix typo in xla_prerelease.md\n\nTLA => XLA'
12eb9b8a21805b17514ba6745c13af4b4e5d6547,'Fix import order\nChange: 136382518'
f8eacce55ef684f98644a8ee63a3b3a87b4b5131,'Fix ge. swap with repeated tensors.\nChange: 136356845'
9e79af1af8785ce89072e3ffcc1685f3f5e63e57,'fix bug in python3 einsum'
8a724211a9d4871338afe874276abf1d358f799b,"'Fixes and improvements to docker build script and dockerfiles\n\n1) Clean up large Bazel build cache. Total filesystem size reduction as seen by du -sh /:\n  devel image: 1.5 GB (Before: 2.9 GB; After: 1.4 GB)\n  devel-gpu image: 2.3 GB (Before: 4.7 GB; After: 2.4 GB)\n2) Using nvidia-docker for GPU docker build.\n3) Upgrade Bazel version from 0.3.1 to 0.3.2.\n4) Add missing libcurl3-dev build dependency to devel images.\n5) Add scipy and sklearn to Dockerfile.devel-gpu to enhance consistency with other image types (e.g., Dockerfile.devel).\n6) Remove the obsolete and unnecessary --recurse-submodules flag for git clone.\n\nRelated to GH issues: https://github.com/tensorflow/tensorflow/issues/4116 and https://github.com/tensorflow/tensorflow/issues/4117\n\nHowever, not using the ""git clone --depth 1"" suggested by issue #4117, because the size of the git repo is only reduced by about 50 MB by the ""--depth 1"" flag. This space saving is small compared to the space saving due to bazel cache removal. The complete history of the git repo can be useful for certain development purposes.\nChange: 136302103'"
93763d60644117596ed90e8f4a79c277b59986e0,"'Fix AttributeErrors in CheckpointSaverHook and SummarySaverHook.\n\nWhen CheckpointSaverHook is not given a saver or scaffold an AttributeError will be raised by _save because it will try to access self._scaffold.saver. Similarly, when SummarySaverHook is not given a scaffold or a summary_op then an AttributeError will be raised in before_run because it will try to access self._scaffold.summary_op.\nChange: 136282986'"
644c98306ab3e4b10f027e1f9150cb94741aa051,'Moving InitMain to the beginning of main. This seems to fix the currently timing-out tests.\nChange: 136276011'
0c09f806b32bc0d3d9d6929033de70ac602a85c4,'Fixing SaverUtilsTest to make sure that the temp dirs are created and deleted cleanly after each run.\nThis test fails when run repeatedly because it checks for non-existence of a file which is actually created in a previous run.\nChange: 136231860'
1e324a0f2a67cfa651677bd381bf1bf2adc3e2f8,'checkpoint_reader: fix VarToShapeMap V2 impl.\n\nThis change makes it adhere to the original semantics: all slices of a\npartitioned tensor are grouped under one entry.\nChange: 136229541'
c20da148738df38c589fefc6287b64194b0ddbee,'Update protobuf to get the fix from upstream (#4967)\n\nThis makes TF build with Bazel at HEAD again\r\n\r\nFix https://github.com/bazelbuild/bazel/issues/1929'
5c1821be018d4a626efd0a9cee7844aaa8c69366,"'Account for the case when GCS Resumable Upload returns a Range header prefixed with ""bytes="".\nChange: 136211474'"
bdf16f94fc402dd49eef0bdef5dcad5f7d39dea0,'TensorBoard: Fix IOError message when file is not found.\n\nLet the user of the load_resource method decide whether to log or not.\nChange: 136052944\n\n(cherry picked from commit 9352b2ee9157baf76c2e382a9dab7fc717c4b89d)'
ef527ab8d3295c2a8213c9788ac41be7a2e7f0bc,'Write tests for sparse metric_ops with out-of-range labels or class_id and fix documentation.\nChange: 136178519'
9e707cf5123a9fd5ca0de13a9d87bf5be8c4aafc,"""Fix bug with modal dialog when the app is vulcanized.\n\nBefore this fix, d3.select('#wrapper-notify-msg') will return null in a vulcanized app because the paper-dialog is encapsulated inside vz-projector. After this fix, the logger has access to the internal dom of vz-projector.\n\n* Remove async.ts and move methods to util.ts (runAsyncTask) and logging.ts (user logging)\n* Make vz-projector register its dom element to the message logger.\nChange: 136170367"""
185557db2461c27bea1f7c65eff76f270abd9aae,'Fix bug when the number of metadata lines is bigger than the number of points.\nChange: 136156106'
4c00822dd5258d3c32bf7363fc3152821b867c94,'Small MonitoredSession docstring change to fix markdown rendering.\nChange: 136139385'
0223e10e40810b0c86c2e670676b5a08cf3853f2,'Update examples using removed load_csv()\n\nFixed #4923\nChange: 136137446'
f6e0f64f1c0d3bdeaade0b7114896a88374a1a56,'fix some prompt error (#4959)'
a17530df0807ea9365e3145e9f6b6a36d3338420,"""Merge pull request #4948 from davidzchen/swig\n\nFix error handling for when swig isn't found."""
7c79d528f43c69b6719da0c7846cd3aa56df57ef,'Add sklearn to Dockerfile\n\nFixed #4861\nChange: 136089187'
60d54d6b8524bcaf512f53384b307fae47b953d2,"""Fix error handling for when swig isn't found.\n\nCurrently, if swig is not found, then the configure script fails but\ndoes not print an error because we are redirecting the stderr of `type -p swig`\nto /dev/null, which results in this command failing the configure script\nimmediately and silently before the subsequent error handling code can be\nexecuted.\n\nThis script adds a `|| true` clause so that if swig isn't found, we will\nuse the error handling code below to print an error message.\n\nFixes #4928"""
3b14418c77b73da5b4fb774a2f244ddcf59ee159,"'Fix Beta, Wishart and Mixture sampling to use different seeds per random draw.\nChange: 136075925'"
8e63535abb29af6f62e65dab624f4a4d3f5581cc,'Fixed documentation after constant_initializer.\nChange: 136073454'
3d84306711eaf2441867900f86ff3c5f175abb47,"'TensorBoard stores regex groups in url bar.\n\nThis also causes the regex groups to persist across tab switches.\n\nI also cleaned the code and UI a little; I removed the activation toggle for\nthe individual regex groups, which is redundant because it\nduplicates the existing system for opening/closing tag groups.\n\nAlso found and fixed a bug in the TF.URIStorage module.\nChange: 136070622'"
ddc2967a993abf5a282c32b4a3abb6cc5f7d9ea5,'Fixed bias_add dimensions'
fcab4308002412e38c1a6d5c6145119f04540d45,'Merge pull request #4936 from MrQianJinSi/master\n\nfix comment error in mnist_softmax.py'
24aa8786cf3a3f787bd435d2d3705d89e41e34cb,'Fixed commnets in nn.fused_batch_norm'
9352b2ee9157baf76c2e382a9dab7fc717c4b89d,'TensorBoard: Fix IOError message when file is not found.\n\nLet the user of the load_resource method decide whether to log or not.\nChange: 136052944'
f291c179f06bd12804e53d4afb8c6e1edf577c5c,'Fix bug with text opacity and implement a more realistic (exp) fog scale\nChange: 136042385'
df5b588b7808013ac689fec559128ed7a5c94211,'Fixed another typo'
329b059b4b08ea2bb38a9ab36eddcf5bf814d0ce,'Fixed typos and `epsilon` settings'
57566b58e1ff3ce81f853e59f43a99bdf931259c,'TensorBoard: Sort runs in graph tab\n\nFixed #4844\nChange: 135985689'
55cb1b37133e6c0409a708a763fccf566580a90a,'Merge pull request #4916 from haosdent/fix_md_links\n\nUpdated the links in docs to match the markdown sytnax.'
3ad76b9bef965890a4ea4497036f12594a763104,'Merge pull request #4918 from barnjamin/master\n\nfixing go get and var name'
a999f5ef88ea2f6a04d00b732e39ebcf44e19898,'Fix bug when switching the projections.\nChange: 135960450'
76978dd1e89340273d83b7f69d10f61c4fdb782c,'docker: Fix broken link for OS X installation in README.md\nChange: 135959388'
5826a9703eeba43c640aa38b09c05a3579d50802,"'Get rid of testing constructor for InferenceContext, fix TODOs.\n\nMakes shapes owned by a private subclass of InferenceContext called\nShapeManager (for lack of better name), friend classed\nShapeInferenceTestutil so that conversion from string to shapes is\nprivate.  Cleaned up extra arg from constructors by changing\nthe two places that also do that to use a simple helper function\nto convert to TensorShapeProto.\nChange: 135956508'"
55bd9ccdb21a41b7c4046a1c1f2115066ed1f9bc,"""Fix skflow resnet example to work on v0.10.0 (#4684)\n\n* Fix skflow resnet example to work on v0.10.0\r\n\r\n`tensorflow.contrib.learn.ops.conv2d` was deprecated and has been removed in #4373 .\r\nSo changed to use `contrib.layers.convolution2d` .\r\n\r\n`classifier` wasn't created if no previous model existed in `models/resnet/graph.pbtxt`,\r\nbut it was failed to run at first time.\r\n`TensorFlowEstimator` creation was removed in #2863 ,\r\nso revert the code removal.\r\n\r\n`TensorFlowEstimator#restore` raises `NotImplementedError`,\r\nso remove model restoration.\r\n\r\n* Add resnet example to test\r\n\r\nTo avoid breakage, add resnet.py to test.\r\n\r\n* Use Estimator instead of TensorFlowEstimator in resnet.py example"""
8c82f2e8b3b900608bdaae981ae3a5edc773e07c,'Fixed fused_batch_norm gradients'
1cfb95ff0b9d85c18cf99f737a591d7b70e19587,'fixing go get and var name'
319251f11e9defcdbc76fb600d355c01e9032639,'Merge pull request #4900 from LiamHe/r0.11\n\nFix a the bug in the doc of a tutorial for training linear model'
39d0932c8796802a15663d3b59f559ab36244ece,'Fix https://github.com/tensorflow/tensorflow/issues/4903\nChange: 135921307'
0dda3d7d56b64c22d05d78a97f5d2a8dfeaf273f,"""Fixed and improved ./configure on Windows (#4874)\n\n* Fixed and improved ./configure on Windows\r\n\r\n1. Make the script work with path containing spaces\r\n2. On Windows, disable bazel clean --expunge(it's broken)\r\n3. Create junctions instead of copying python lib, include, numpy folders\r\n4. fixed symlink creation in gen_git_source.py with python3\r\n\r\n* Fixed typo and opt out GCP, HDFS, CUDA on Windows\r\n\r\n* Fix python path split on OSX"""
6b14fa2eca569949cfe566a634ec0529ee5a36c7,'Fix typo in documentation for transformed_distribution.\nChange: 135894744'
963889bc22f1900feb27d88d48a7180931127d74,'Merge pull request #4905 from caisq/fix-mac-lib-path\n\nFix Mac CUDNN library path issue in configure script'
e7e01d2e1b25efc344217e37284e46aab893c61a,'Clarify and fix tf.case documentation.\nChange: 135877482'
ddedb9e094fe3c0e942fdf9d70c21d4df87f8c35,'Fix Mac CUDNN library path issue in configure script'
e83f1088ddd19b4bd277c3a4820a471786f1375c,'Fixes deprecation date for target column.\nChange: 135872646'
652313a89197a9750bf02a1384715396ecc1c5f5,'Re-implement the fix originally submitted in cl/133599817. Core change is identical but following API change policy with old argument deprecating warning. Unit tests are also added.\nChange: 135872257'
b47c49a065c32a89c19ae383405d67d5d1b6f223,'Fixing doc comment of high level feature_column functions.\nChange: 135842485'
004bb533abf70785b4f164c3d897ee77e14b21b4,'Fix a the bug in the doc of a tutorial for training linear model'
3efecc1be1b2bdd4e6cbdcdeabfaf873f677d438,'Fix broken test.\nRemove unused logging mocks.\nChange: 135832964'
6c3ec5600ae85857fa2b41326d994d498b473e39,'Fix the third_party/tensorflow/contrib/session_bundle/example:half_plus_two genrule to correctly delete /tmp/half_plus_two_ckpt_v2 instead of /tmp/half_plus_two_v2. This bug causes the genrule to fail when run multiple times.\n\nTESTED:\n  - opensource_build\n  - unit tests\nChange: 135828145'
b72ae0cb9c900a306698d987062d4c8454c42183,'Fix deprecation_test broken by @experimental change.\nChange: 135827763'
c485bb6dffa48299bf9d1bd37dece36d12726c36,'Fix logit generation to use tf.log in the case of multidimensional probabilities.\n\nAllow Categorical to take in probabilities.\nChange: 135826352'
406b606d39f3bb4cd4855fa843433f5b21175cb5,'Create the bookmarksPanel variable outside the getDataProvider call to fix\nan undefined bookmarksPanel bug when setSelectedTensor is called.\nChange: 135823049'
b718fd6ad8cebc470fcc7e53bb6902168edd5587,"'Fixes ""Shapes are incompatibe"" error in DNNClassifier https://github.com/tensorflow/tensorflow/issues/4715 and adds tests.\nChange: 135814833'"
a3d726ae8246371515a0f666c38668e9da7765f9,'Fix a bug in the CUDA implementation of centered RMSProp. Reordered the sum (ms - mg^2 + epsilon) to add epsilon last for numerical stability both on CPU and GPU. Added use_gpu=True to test sessions used in rmsprop_test.py to ensure that the GPU code is tested too.\nChange: 135812233'
3914f94055d98aeba6c6c439ab02b3cd4fb7eb7f,"'Fix LogisticFractionalLabels test for LinearClassifier.\n\nThe minimum cross-entropy loss depends on the targers, so comparing losses for different targets is the wrong comparison. In particular, the existing test fails for `steps=200`.\nChange: 135806466'"
d7465561694b4d6376c0ca3a76acfef654e41f97,'Add reduce_nnz python op to get number of nonzeros / non-false in any Tensor.\n\nAlso fix an issue in the transpose code that allows simplifying the reduction\nC++ kernels.\nChange: 135805688'
f11da014806f3c2c4429e23e88812d824cb592f6,"'Fix MasterSession so that it properly ignores the place_pruned_graph option.\n\nThe solution is to clobber the unsupported option, add a\nbelt-and-braces check for unsupported invocations, and add a test that\nexercises this path.\nChange: 135803655'"
d1ff8a893604e795a17517951ee94b3cdd21052b,'Fix documentation for Relu6Grad.\nChange: 135800767'
3fedc66fa3004162c9bea8f979c35854112b7305,'Fix another typo in cuda_fft.cc.'
964a956abafab5bb1bd07256e75c89c57693b997,'Fix typo in cuda_fft.cc.'
70c90e752fd2b50166220e5027202c40ce1d5904,'Fix copy-paste error in cuda_driver.cc'
dc594dac3b1056e90b7dc8370d525ebd8528b9f0,'Fix typo in dso_loader.cc'
1975cd1e9d539e75a1b85b56f16448c91ef88d90,"""Make tutorial_example_trainer build on Windows with Bazel (#4796)\n\n* Make //tensorflow/core:core_cpu build on Windows\r\n\r\n* Fix platform.bzl for cuda configuration on Windows\r\n\r\nI am not sure about the naming convention of the dlls, but I did see some dll name like\r\ncurand32_42_9.dll or cupti64_65.dll.\r\n\r\n* Fix //tensorflow/core:core_cpu again after sync to tf/master\r\n\r\n1. Excluded load_library.cc\r\n2. Fixed logging.h\r\n\r\n* Exclude common_runtime/gpu/ and stream_executor on Windows\r\n\r\n* Using #pragma to include necessary library\r\n\r\n* Add windows specified sources\r\n\r\n* Exclude some ops on Windows\r\n\r\nIncluding debug_ops, immutable_constant_op, sparse_matmul_op, fact_op, cswise_op, depthwise_conv_op, svd_op, summary_audio_op\r\n\r\nThis makes //tensorflow/core:tensorflow build on Windows\r\n\r\n* Add /DLANG_CXX11 in tf_copts for Windows\r\n\r\n* Fix example trainer build after sync to windows-20160915\r\n\r\n* Re-enable svd_op, cwise_op, summary_audio_op, on Windows in Bazel Build\r\n\r\n* Fixed lib_proto_parsing by adding 'copts = tf_copts()'\r\n\r\n* Reformat BUILD files\r\n\r\n* Refactor BUILD files and make it work on Linux"""
51cd022ef6450225510fd64ad3e4cd3f0f1591d1,'Merge pull request #4819 from meteorcloudy/windows-patch-7\n\nFix /WHOLEARCHIVE linking on Windows in Bazel build'
781603968c60bb14a40cf00653f9b31be7826f20,"'Merge pull request #4879 from daj/troubleshooting-advice\n\nAdd tip to fix ""RuntimeError: Broken toolchain""'"
13700159b96f832b9230e79524693862df793840,"'Fix QuantizeAndDequantize GPU segfault.\n\nThe issue is that the previous\n   input_min() = input_min_\nlines are dereferencing GPU memory pointers.\n\nAlso added: simple microbenchmarks for CPU/GPU, as naive sanity checks.\nChange: 135736169'"
36bd543b51018c0f1c2b34e88a80eec23b31f30c,'Merge pull request #4866 from mrry/zlibfix\n\nAdd zlib to the CMake build.'
7a6dd5f72c9ccf14578d13af70729d806c83c3c2,'Merge pull request #4845 from benoitsteiner/master\n\nFixed a compilation error with gcc 6.2'
0ea28c550a8d432b09055d5e2288dc3d18dd7c7e,"'Add tip to fix ""RuntimeError: Broken toolchain""'"
d1518c26530daaee854e73365bd7dfb9a2f69dbd,'Minor comment fix.\nChange: 135696138'
4aa47ec3ce849df9a307ae36c199782e819be438,'Fix ZeroInitializerOp when building with -c opt (for --config=cuda).\nChange: 135690266'
d90b4535e5bca23dc9e058c0f748bc51965dd39a,'Fixed the wrong comments of `tf.scan`.'
aa5e959b8908e79e21cc9b545ceea74477abb6a3,'Supported `tf.float16` in `tf.decode_raw`.\n\nThis fixes #4782.'
c8de8bd0bf2777ba14ab67d1f224b44ad56ce52d,'Fix for incorrect variable sharing (occurred during porting).\nChange: 135581836'
1b15ffb53c1bbdac1e52a350bbafdb2150cd9207,'Fixed a compilation error ith gcc 6.2'
36ebbf1ddc3ed820b7a5572ff4ed8e9bc707b8e5,'Fix types in create_vocabulary (translate model) (#4793)'
492cfaa63586f498552899357a4a50d019dc00d6,'updates to einsum:\n-- fix bug where output indices are expected to be in alphabetical order\n-- add to docstring'
2c8d270735176df1a59b5a80885b2e14b4f06953,'Fix bug when switching to gradient color map and back to no color map\nChange: 135513292'
30af85c57b975924943a1c41bef9f1ae0dfb7e85,'Fix the benchmark test for sdca ops.\nChange: 135512266'
a82508c040c70ab6b0456bfd6fe15e732bda6f45,"'Fixed a Graph ownership bug. test::Benchmark takes ownership of the graph,\nso passing it a heap constructed graph instead of a local object.\nChange: 135509506'"
b4a22b84c4a71db29d0d8c47295d249a4f760b26,"'Fix tensorboard plugin multi-threading bug.\n\nThe problem was that we had 1 shared instance of a plugin per app, but it should be 1 instance per thread/request.\nChange: 135508929'"
cae3713cd4a2a191f10012a8efab19c721d41742,"'tensor_bundle: tighten Lookup() semantics, add LookupDtypeShape().\n\nThis fixes a subtle allocation issue in CheckpointReader.\nChange: 135503615'"
85f1a740f0b6d6e6a394fe47e4e966a79b91f621,'Add a bit more documentation to RMSPropOptimizer and fix a typo in a docstring.\nChange: 135489351'
412dc376801291a1eb56e1865306f22daf0ec238,'Fix halo problem on devices with device pixel ratio != 1\nChange: 135484302'
2be44363efa50f5f8c809aabeebfcb0dd54bd6f8,'Fix /WHOLEARCHIVE linking on Windows\n\n/WHOLEARCHIVE has a bug linking static library compiled from empty source file.\n\nFixed related source files by adding some include statements as placeholder.'
066b4b8aff27d222d407069ddd9b91d098050b9a,"""TensorBoard: Generalize sending HTTP responses\n\nThis change introduces handler.respond() which is a general-purpose API\nfor sending HTTP responses on the TensorBoard backend. It abstracts the\ndetails of encoding, content encoding, caching, compression, and\nserialization.\n\nAs a result, a local caching bug has been fixed where stale data could\nbe displayed when users switch between log directories. Furthermore\nthe performance of TensorBoard should be noticeably better because many\ntypes of textual content which previously weren't compressed, now are.\nChange: 135459464"""
9d10a653d80b8dbdd4dda182ffd0efaad62d085e,'Merge pull request #4806 from davidzchen/readlink-fix\n\nFix configure script readlink incompatibility on Darwin.'
3d062c36e2894be59bcbc2dbab7f8dac648057c2,"""Fix several bookmarking bugs:\n\n- Fix loading colors by loading the name only (rename labelOption to selectedLabelOption and the same for colors)\n- Don't run t-SNE when loading a bookmarked t-SNE for the first time\n- Auto load the first bookmark when uploading.\nChange: 135436451"""
0fdc00cade87e41c557d0a0ab7969e8220d308eb,'Fix typo.\nChange: 135430127'
d26c33bd3720fe492c023e368c68f56b763fa1d3,"'Adding an optimized implementation of concat on GPUs.  Large efficiency gains\nover current code when there are many tensors that are being combined.\n\nOne piece of fixing b/30377985.  The next step is to implement a split that\ncan output variable sizes, then the gradient of concat will be one (fast) op\ninstead of many slower ones.\nChange: 135429927'"
154c55f33c3160aab59156a2307b03f266455f67,"'Support extracting input weights from data for tensor_forest.\n\nFix error checking in sample inputs, need to check value in sparse shape instead of the shape of the shape.\nChange: 135428154'"
5396ee3ad3f3f8d5314556a004578d65ea68a07a,'Fix configure script readlink incompatibility on Darwin.'
c6899c721f3a4b4f2e71ae4e6d1767341112ff93,'bug fix when iterators stops at multiple of batch_size (#4777)\n\n* bug fix when iterators stops at multiple of batch_size\r\n\r\nFor more information on the issue see\r\nhttps://groups.google.com/a/tensorflow.org/forum/#!topic/discuss/ZEzEa1TyYuE\r\n\r\n* reverted changes back as were unnecessary\r\n\r\n* _feed_fn() edge case fix in StreamingDataFeeder\r\n\r\n* Update graph_actions.py\r\n\r\n* Update graph_actions.py\r\n\r\n* Added space around `==`\r\n\r\n* Removed `else` for legiblity\r\n\r\n* reusing previous StopIteration to preserve stack trace'
b21222ba0aecb48cc87f25a7502a86c9e3947561,'Fixed the tensorboard demo for Firefox by adding a meta tag that sets the charset to UTF-8.\n\nSee https://github.com/d3/d3/issues/1195 for the related d3 issue.\nChange: 135417926'
b6ab74756f171e599e62b1fe16617ebed115d172,'Fix hover over the point with picking id 0.\nChange: 135416192'
8acc9eb46e9b2aa88d90dac77f37cfc98a4a739c,'Fixes https://github.com/tensorflow/tensorflow/issues/4673\nChange: 135397388'
9e16b3048c534fadb0f791c0cbdfa756ade6490a,'UI fixes.\n\n- Improve status bar\n- Open wikipedia links in a new tab\n- Allow isolation of points + neighbors when the point is selected\n- Do not show down-sampling messages when not needed\n- Move status bar from footer to header since it is important. This creates new space for the scatter plot.\nChange: 135395583'
2936aa3f1f4cf21814bdb34a469fce2deae91fb7,'Remove variables_test from OSS test until it is fixed.\nChange: 135388177'
8f65d5e6cde2dabb2ef56ffb7c1f06e699f08304,'Fix pip test-on-install failure re. contrib/ndlstm\n\nSee failure example at:\nhttps://ci.tensorflow.org/job/tensorflow-cl-gpu_pip_full/1201/console\nChange: 135383996'
996ea134da6b672e603d215ba3137140ae36cb90,"""Fix for issue #4588: TensorShape behavior differs from Python 3.4 to Python 3.5.\n\nThis fixes a bug that didn't allow unknown time dimension in dynamic_rnn\nin Python 3.4\nChange: 135382982"""
77c8a03c3b398a95cd01ef3a1c7f5bed4935432b,'[Windows] Fix build by avoiding use of non-standard 0-size array. (#4801)\n\nFixes #4798.'
d5de4949883313fac8c1cf3550fbe82073994ea5,"'Updated the links in docs to match the markdown sytnax. (#4800)\n\nRefer to [markdown syntax](https://daringfireball.net/projects/markdown/syntax#link),\r\nthe `[` should come after `)` without spaces or new line character. This fixs\r\nthe broken links when generate PDF/EPUB books by Gitbook.'"
7cf4d9542fc0e4172980e9b8f825101e27fb56e4,"'tfdbg: CLI search and highlighting\nScrolling to matching lines is not supported yet and will come later.\n\nOther minor fixes:\n* Add ""help"" and ""h"" to top-level tab completion context.\n* Use default color pair when specified color pair is unavailable.\nChange: 135367712'"
780a4336d8f26edb6a283f956b26b3913f1b9ba6,"'DOCFIX:\n1. Add `@@` callouts for new distributions to __init__.py.  Without\nthese, the distributions show up under ""other functions"".\n2. Remove a level of indentation by removing a ""#"" from the markdown headers\nChange: 135360388'"
fca5240081c02d77c50756ec549a867ffc4504a8,"'Allow for overwriting existing UI message boxes.\n\ne.g. knn progress message should use the same box.\n\n- Also fix a bug by making sure we call metadataChanged after datasetChanged, not before\n- Moving ColumnStats and MetadataInfo to data.ts where they really belong\nChange: 135358248'"
5b9e924b65480c34f6d1e5ad2bb10a8b6f80ebfe,"""Fix nvcc build breakage from ZeroInitializerOp.\n\n- Fix name clash for TensorZero with the lstm op.\n- Move ZeroInitializerOp to the .cc file so nvcc doesn't compile it.\nChange: 135327887"""
f7c17021ae26e0ab65a76beb230994ffafd22ff2,'Fix: Update nightly links in readme.md. (#4783)'
9333d198b896dbb6dabd016cf6c924a4b8bea03d,'Compile Eigen GPU code for variable_ops under gpu_srcs. Fixes undefined\nsymbol issue when using --config=cuda on open-source TensorFlow.\nChange: 135291033'
28535334404bf544fec85c44f79b17cf44ca7834,'Make loading message unique to the task since the app can run several tasks at once. E.g. parsing metadata text while also fetching the sprite image.\n\nAlso fix a bug by resetting the hoverIndex when switching datasets.\nChange: 135290331'
856613e34b39111f8fb88a23a8443d99e78633e4,'Fix buffer error due to unintialized colors and update dataset only after metadata has been fetched.\nChange: 135252630'
8f32c3cea297f7d22064241cd473d8e82a4a3bfd,"""Change the default of callImmediately to false for the ProjectorInput component.\n\nThis is causing the searchbox to its onChange event immediately, which unecessarily\ncalls selectionChanged listeners, and other code that's not necessary. This fixes\nsome jank on load.\n\nThis only affects the searchbox.\nChange: 135246834"""
8393726ee314a956d391c0b467647162617f0774,'Fix BUILD file to correctly identify accumulator ops.\nChange: 135242836'
2098b9abcf20d2c9694055bbfd6997bc00b73578,"'Branch 135176011 (#4771)\n\n* Adds a test tf.Assert inside a function.\r\nChange: 134855633\r\n\r\n* Remove non-batch methods from operator_pd_cholesky if they have been merged with batch.\r\nRecent changes to tensorflow linear algebra Ops merged batch/non-batch Ops.\r\nThis makes their separation un-necessary in OperatorPDCholesky.  Note that OperatorPDBase will still ""dispatch based on batch""\r\nsince [non]batch-specific implementations still exist for matmul, and will probably\r\nexist for some subset of Ops/Operators.\r\n\r\nOperatorPDBase calls the _batch* method if the non-batch method does not exist, so this change will leave the _batch* methods as-is.\r\nChange: 134859101\r\n\r\n* Allow tf.py_func to have no return values.\r\nChange: 134873490\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 134874339\r\n\r\n* Allow graph to be passed in to write_graph.\r\nChange: 134894910\r\n\r\n* Update generated Python Op docs.\r\nChange: 134896141\r\n\r\n* Increase tolerance in resample_test to reduce flakes.\r\nChange: 134906739\r\n\r\n* Clean up of _inner_flatten.\r\nChange: 134977904\r\n\r\n* Update typings version, definitions for polymer and fix `gulp compile`\r\nChange: 134979996\r\n\r\n* Move inspector panel to its own component.\r\n\r\nThis reduces the complexity of `Projector` by delegating work to the `InspectorPanel`.\r\n\r\nAlso related:\r\n - Add an option to search by other metadata fields.\r\n - Introduce shared css styles used by every component.\r\n - Move data querying methods (findNeighbors, queryByField, etc) to data.ts. These methods are used by anyone that has access to the dataset (e.g. both the projector and the inspectorPanel use it).\r\nChange: 134989405\r\n\r\n* Created a tensorboard endpoint data/logdir for obtaining the logdir.\r\nChange: 135001927\r\n\r\n* numpy meshgrid parity\r\nChange: 135002812\r\n\r\n* tensor_bundle interface: accept StringPiece everywhere.\r\n\r\nThis facilitates the callers in that when passing ""char*"", ""string"", or\r\n""StringPiece"" no explicit conversions are needed.\r\nChange: 135007288\r\n\r\n* tfdbg: 1st check-in of curses UI and a demo\r\n\r\nTo run the demo, do:\r\n\r\n./configure\r\nbazel build tensorflow/python/debug:debug_fibonacci && bazel-bin/tensorflow/python/debug/debug_fibonacci\r\n\r\nBarebone/backbone implementation of the curses-based command-line UI for tfdbg.\r\n\r\nThe fibonacci_network demo constucts a simple TF graph that computes the fibonacci sequence, wraps a tf.Session object with a CLI debugger wrapper session and calls its run() method. which leads to launching of the curses CLI.\r\n\r\nThe CLI debugger wrapper implements the BaseDebugWrapperSession.\r\n\r\nThe UI currently has only minimalist command set including\r\n  ni: inspect node info\r\n  lt: list all dumped tensors\r\n  li: list node inputs\r\n  lo: list node output recipients\r\n  pt: print tensor.\r\n\r\nCurrently supported UI features:\r\n  * command history navigation using Up/Down keys: with or without prefix\r\n  * scroll large output with PgUp/PgDown/Home/End keys\r\n  * terminal resize response\r\n\r\nSee CLI help output for more information.\r\nChange: 135010660\r\n\r\n* Add comment that argument can be either dense Tensor or SparseTensor.\r\nChange: 135010699\r\n\r\n* Move MonitoredSession and related utilities from tf.contrib.learn to tf.train\r\nChange: 135010812\r\n\r\n* Update generated Python Op docs.\r\nChange: 135011886\r\n\r\n* Documentation fixes for tf.contrib.rnn.\r\nChange: 135017686\r\n\r\n* Fix bug in pylint whitelist error check. Fix the pylint errors it missed\r\nbefore.\r\nChange: 135020083\r\n\r\n* Update generated Python Op docs.\r\nChange: 135021476\r\n\r\n* Fix bug when changing distance metric in the inspector panel.\r\nChange: 135023065\r\n\r\n* Expose MetricSpec.\r\nChange: 135032476\r\n\r\n* Fixing tf.gfile\'s file writing in append mode. Earlier, append was the same as write mode. Now we distinguish between the two.\r\nChange: 135033928\r\n\r\n* * Supports defining overloaded functions. I.e., defers the\r\n  instantiation of the function definition until all input types are known.\r\n* for convenience, adds more convert_to_tensor calls.\r\n* adds None checking for better error reporting.\r\n* cleanup function_test a bit so that it uses tf.logging.info consistently.\r\n* changes the convention for coming up a function\'s name:\r\n  * if func_name is explicitly given, stick with it.\r\n  * otherwise, come up a name based on the python function info and a hash of the\r\n    function definition.\r\n* uses __doc__ to fill in func\'s op def description in the proto.\r\nChange: 135036941\r\n\r\n* Adding a ConditionalAccumulator class, which allows us to accumulate non-stale\r\ngradients. Also adds SparseConditionalAccumulator, which supports IndexedSlices.\r\nChange: 135037419\r\n\r\n* Implement gradients for ndtr, log_ndtr. This avoids automatic differentiation going through several tf.select code-paths.\r\nChange: 135038724\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 135039308\r\n\r\n* Update generated Python Op docs.\r\nChange: 135039979\r\n\r\n* Add regression signature to half_plus_two model.\r\nChange: 135041920\r\n\r\n* Made _Transformer logging less verbose\r\nChange: 135048006\r\n\r\n* Add warning to os_setup for dev setup. Fixes #2844 (well, documents the failure at least).\r\nChange: 135050562\r\n\r\n* Use BlockingCounter to do some minor cleanups.\r\nChange: 135051470\r\n\r\n* Documented the `data/logdir` endpoint in http_api.md.\r\nChange: 135052793\r\n\r\n* Added a const version of the functors specialized to process complex numbers on CUDA devices.\r\nChange: 135053757\r\n\r\n* Parallelize AvgPool on CPU.\r\n\r\nBenchmark                          Base (ns)  New (ns) Improvement\r\n------------------------------------------------------------------\r\nBM_AvgPool_32_112_112_64_3_3_2_VALID_4 30417641  10925222    +64.1%\r\nBM_AvgPool_32_56_56_192_3_3_2_VALID_4 16509939   7054348    +57.3%\r\nBM_AvgPool_32_28_28_352_3_3_2_VALID_4  6494974   2527951    +61.1%\r\nBM_AvgPool_32_14_14_576_3_3_2_VALID_4  2050825    853309    +58.4%\r\nBM_AvgPool_32_112_112_64_3_3_2_SAME_4 31002019   9790387    +68.4%\r\nBM_AvgPool_32_56_56_192_3_3_2_SAME_4 17234631   6463952    +62.5%\r\nBM_AvgPool_32_28_28_352_3_3_2_SAME_4  7171668   3067244    +57.2%\r\nBM_AvgPool_32_14_14_576_3_3_2_SAME_4  2685654   1175420    +56.2%\r\nChange: 135053961\r\n\r\n* minor changes in tf.learn.\r\nAllow specifying saving checkpointing every N steps instead of every N secs, which is already supported by basic_session_run_hooks.CheckpointSaverHook but not supported by learn.RunConfig and estimator.\r\nChange: 135055051\r\n\r\n* Update generated Python Op docs.\r\nChange: 135057486\r\n\r\n* Cleanups to distributions tests.\r\n  - Remove hack for sampling in beta test. Gamma sampler does not emit 0s any more.\r\n  - Change tests to camel case..\r\nChange: 135065764\r\n\r\n* Show search results in the inspector panel.\r\nChange: 135104864\r\n\r\n* Get rid of vz-projector.ts\'s concept of \'highlighted points\' and \'color accessors\', moving slowly towards a model where we don\'t call accessors in inner loops. Visualizers have direct access to the selected points and neighbors, and can decide their own semantics for display. Projector now prepares a color array of unselected points, which the visualizers use to render. 3D labels are rendered with unselected point colors. Add the HoverContext for observing and reporting hover events.\r\nChange: 135109425\r\n\r\n* Migrating skflow examples to the tensorflow/examples/learn directory. Fixes #3364.\r\nChange: 135109832\r\n\r\n* tfdbg: CLI demo: debug_mnist\r\n\r\nTo run the demo, do:\r\nbazel build -c opt tensorflow/python/debug:debug_mnist && bazel-bin/tensorflow/python/debug/debug_mnist --debug\r\n\r\nSee the doc file at: tensorflow/python/debug/examples/README.md for more details.\r\n\r\nOther related and supporting changes:\r\n  * Move function ""parse_node_or_tensor_name"" from analyzer_cli.py to debug_data.py. Also moved related unit tests.\r\n  * Add title bar to CursesUI\r\n  * Add the predicate (filter) function has_inf_or_nan to module debug_data. Also added unit tests.\r\n  * analyzer_cli.py: Add methods ""add_tensor_filter"" and ""get_tensor_filter"" to support filtering of dumped intermediate tensors.\r\n  * local_cli.py: Add flag to on-run-start command ""run"", e.g., ""run -f has_inf_or_nan"", along with supporting logic for the run-till-a-tensor-filter-is passed mode.\r\n  * local_cli.py: Improved on-run-start summary lines for feed and fetch.\r\nChange: 135115989\r\n\r\n* Update left navigation for Python API.\r\nChange: 135121210\r\n\r\n* Fix ZeroInitializerOp for GPUs\r\n\r\nAlso changed it to use the C++ shape inference function.\r\nChange: 135123217\r\n\r\n* Use softplus in bernoulli.\r\nChange: 135125153\r\n\r\n* Automated rollback of change 135036941\r\nChange: 135125564\r\n\r\n* Get dnn_sampled_softmax_classifier_test to start running open source tests again. This change simply relaxes the testing criteria for a couple of tests so that everything can run in opensource tests regularly.\r\nChange: 135126062\r\n\r\n* Made the h2 in the graph panel only appear if there is a title. This removes a little white space at the top that is not draggable. Updated screen diff integration tests.\r\nChange: 135126088\r\n\r\n* Improved documentation of session_creator of MonitoredSession.\r\nChange: 135127073\r\n\r\n* Fix compilation error on some non-standard toolchains\r\nChange: 135127376\r\n\r\n* Add an internal-only C++ wrapper around function_ops.\r\nChange: 135130656\r\n\r\n* Move the left hand side projections panel to its own polymer component, vz-projector-projections-panel, and wire scatter plot updates through the vz-projector.\r\nChange: 135130797\r\n\r\n* Update generated Python Op docs.\r\nChange: 135131860\r\n\r\n* enable tile for complex inputs in gpu, github issue #2577\r\nChange: 135135194\r\n\r\n* Taking //tensorflow/examples/learn:examples_test out as it is too long for\r\n\'larget\' test and breaking OSS builds.\r\nChange: 135138752\r\n\r\n* Disable dnn_test.\r\nChange: 135139116\r\n\r\n* Fix missing close-quote in markdown for tf.contrib.distributions.Distribution\r\nChange: 135140486\r\n\r\n* Update generated Python Op docs.\r\nChange: 135142722\r\n\r\n* Convert sample_rate attribute for AudioSummary into an input.\r\n\r\nThis is helpful for graphs that consume or generate audio with variable sample rates. Adds an AudioSummaryV2 op and marks AudioSummary as deprecated. The same AudioSummaryOp kernel handles both AudioSummary and AudioSummaryV2.\r\nChange: 135148773\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 135152974\r\n\r\n* Update generated Python Op docs.\r\nChange: 135153503\r\n\r\n* * Supports defining overloaded functions. I.e., defers the\r\n  instantiation of the function definition until all input types are known.\r\n* for convenience, adds more convert_to_tensor calls.\r\n* adds None checking for better error reporting.\r\n* cleanup function_test a bit so that it uses tf.logging.info consistently.\r\n* changes the convention for coming up a function\'s name:\r\n  * if func_name is explicitly given, stick with it.\r\n  * otherwise, come up a name based on the python function info and a hash of the\r\n    function definition.\r\n* uses __doc__ to fill in func\'s op def description in the proto.\r\nChange: 135156837\r\n\r\n* Improve UI of inspector panel (neighbors + search results).\r\n\r\n- React when hovering over results\r\n- Improve layout for long text by overflowing text with \'...\'\r\n- On mouse hover, show the full text (title attribute on anchor).\r\n- Remove dead code in vz-projector-data-panel.html\r\nChange: 135165962\r\n\r\n* go: Add a README.md with installation instructions.\r\n\r\nThe Go API is still decidedly an ""alpha version"" and the\r\ninstallation process would ideally be much smoother. But\r\nthe instructions included here are at least functional.\r\n\r\nAnother step towards #10\r\nChange: 135166392\r\n\r\n* Add tf.contrib.distributions to API leftnav\r\nChange: 135167978\r\n\r\n* Change to use existing macros.\r\nChange: 135176011'"
686e29fcd6126f392883deb668c17f4504b47efa,'Fixing nits'
3b75eb34ea2c4982fb80843be089f02d430faade,'fix comment in notebook (#4751)'
48bc9cedcf81024975a3f1b68863690d44082793,'Merge pull request #4724 from viirya/fix-python-config\n\nFix python bath in python_config script'
9c4b2f5df01987f94db72396f5dd59b363524d3d,"'Fail configure script immediately on error. (#4699)\n\nFor lines such as `default_python_bin_path=$(which python)`, add a `|| true`\r\nexpression so that if the executable does not exist, the command will not exit\r\nwith a non-zero exit code, and the variable will be set to an empty string.\r\n\r\nThis change also augments the code in the configure script for resolving the\r\ncuDNN library to search both the case where libcudnn is installed to a lib/lib64\r\ndirectory (such as /usr/local/cuda-7.5/lib64) and when it is not (such as\r\n/usr/lib/x86_64-linux-gnu), as well as when the platform is Darwin.\r\n\r\nFixes #4662'"
c2aa7d19d71da5f6349a79275751b7ac0f7a9e52,'Fix missing close-quote in markdown for tf.contrib.distributions.Distribution\nChange: 135140486'
60afe603d1dbd580dff9c60e6d4868b3e2c734e4,'Fix compilation error on some non-standard toolchains\nChange: 135127376'
9df43bf16e11d622590a4c318f806b188b1665a6,'Fix ZeroInitializerOp for GPUs\n\nAlso changed it to use the C++ shape inference function.\nChange: 135123217'
f1ea256330f66345907db372d4142d3131514087,'Fixed state test in StackBidirectionalRNN (#4755)'
90d8377754b5847042660b962c15f7f367872f26,'Fixed some typos. (#4756)\n\n* Fixed typos in grad_op_registry.h.\r\n\r\n* Fixed typos in gradient_checker.cc.\r\n\r\n* Fixed typos in ops.h.\r\n\r\n* Fixed typos in c_api.cc.'
d74cc130dd0ce5ecd1421ef126e4446f337a856c,'Migrating skflow examples to the tensorflow/examples/learn directory. Fixes #3364.\nChange: 135109832'
781080a6c3b8dc78f665968755787f6782f3811b,"'Add warning to os_setup for dev setup. Fixes #2844 (well, documents the failure at least).\nChange: 135050562'"
a6c5b1568aea25fd7c703d51ee645f9c08e24877,"""Fixing tf.gfile's file writing in append mode. Earlier, append was the same as write mode. Now we distinguish between the two.\nChange: 135033928"""
8fb1685191625d75f7dba35b157e10d6cd56598a,'Fix bug when changing distance metric in the inspector panel.\nChange: 135023065'
f6da1d0ad3a1f4088d6c0030fa5604daeb1c9843,'Fix bug in pylint whitelist error check. Fix the pylint errors it missed\nbefore.\nChange: 135020083'
3a42a14e3a7a6cfa384857eb2153b9f47cccb904,'Documentation fixes for tf.contrib.rnn.\nChange: 135017686'
6700ef996f311a311ac468a0e488429e55d22635,"'tfdbg: 1st check-in of curses UI and a demo\n\nTo run the demo, do:\n\n./configure\nbazel build tensorflow/python/debug:debug_fibonacci && bazel-bin/tensorflow/python/debug/debug_fibonacci\n\nBarebone/backbone implementation of the curses-based command-line UI for tfdbg.\n\nThe fibonacci_network demo constucts a simple TF graph that computes the fibonacci sequence, wraps a tf.Session object with a CLI debugger wrapper session and calls its run() method. which leads to launching of the curses CLI.\n\nThe CLI debugger wrapper implements the BaseDebugWrapperSession.\n\nThe UI currently has only minimalist command set including\n  ni: inspect node info\n  lt: list all dumped tensors\n  li: list node inputs\n  lo: list node output recipients\n  pt: print tensor.\n\nCurrently supported UI features:\n  * command history navigation using Up/Down keys: with or without prefix\n  * scroll large output with PgUp/PgDown/Home/End keys\n  * terminal resize response\n\nSee CLI help output for more information.\nChange: 135010660'"
787ab22d490e79ea8c06511d60d6cddf1b2dd2c2,'fix spelling errors in comments (#4704)'
1926380f94731e97027bcb319813beaf3e9be499,'Fix typo in comment. (#4702)'
61843f169e9b9bb67748526352c718c4b9a2868e,"'Update typings version, definitions for polymer and fix `gulp compile`\nChange: 134979996'"
ae7de269bc95efc128662a01894cb4a830f89a31,'Fix python bath.'
3d35376a66cde4f3e614c746d3c8708d15caa1b5,'Merge pull request #4716 from ultraklon/patch-1\n\nsmall typo fix'
23c1156be395efbb40960857f9c133e636e30325,"'small typo fix\n\n""matlotlib"" should be ""matplotlib""'"
c396f147acf02e102fe982ba11691b4bf1ad9e28,'Fix: Remote the reference to GetChildrenRecursively in gcs_file_system_test.'
9628df1641f1c2cb0d0106e228e0faed1446b709,'Remove GetChildrenRecursively from retrying_file_system.\n\nThis function is removed from its header based on a reported merge\nconflict. Fix the same conflict here by removing the function.'
89d1d5c449b7575ca27815f425579767b212af95,'Fixed documentation for batch_normalization (#4689)'
be574cf93ae555e782a5b0814bfa0c1dcdd42ea6,'Merge pull request #4692 from gunan/r0.11\n\nSmall fix about cuDNN version in release.md.'
9b610f93e2d17ffc33d63750b3e608e897a9c504,'Small fix about cuDNN version in release.md.'
2dea76c0b8eb5b8302454137c055f9e7b7dcea39,'Merge pull request #4690 from gunan/r0.11\n\nSmall fixes to RELEASE.md'
bbac6ae8d7f07c3f45da74ab4a6a0e7fffeaac6c,'Small fixes to RELEASE.md.'
83c90e354a1977301287856aa47683a80dd7e746,'Merge pull request #4646 from caisq/dist-fix-1\n\nMake whl file URL in dist_test Dockerfiles configurable'
68a2fbe135ed960913e273843a280501bb5ebd79,'Minor cleanup of code from PR 3031. Ran g4 fix.\nChange: 134791744'
3332c8f72c6f075cdd8b1e8a6860796f5102643c,"'Fix image loading error, autocomplete with ipython in udacity Dockerfile (#4671)'"
128f2efbb438c8d6680fe51347a42e0c0e1ce327,'Fix RuntimeError: dictionary changed size during iteration in tensorboard.\n\nThis was due to calling .iteritems() instead of .items() which fails if the dictionary was modified during iteration by another process (python server is multi-processed).\nChange: 134780132'
605c76c0b80eb8121644fd7d77b3fd63f9362bbd,"""Merge branch 'r0.11' into dist-fix-1"""
510ed21e3dbb81aee8e31318990dff21163086d5,'Fix contrib/makefile/README.md.\n\nFixes #4628.\nChange: 134725883'
2a5a96976deba6b6bac007f237bd2665c0da184e,"'Update trace, matrix_set_diag, matrix_diag_part and their gradients to work for rectangular matrices.\nGeneralize trace to work like numpy.trace(x, axis1=-2, axis2=-1), including for rank > 2.\nFix bad doc string for matrix_band_part.\nChange: 134700928'"
0db279f16ce21568c414694ea55e2dec07ad6972,'Merge pull request #4647 from caisq/gcs-test-fix-1\n\nFix gcs_test issues'
8fb9663548e75872d0d2584151a49fb3a36717a7,'Documentation fix: markdown requires an empty line before ``` block.\nChange: 134690568'
add1b32303ac94e8d627cb3c60cd0bc44df493f3,'Fix gcs_test issues\n\n1) pip install issue related to recent numpy upgrade\n2) OutOfRange package issue caused by recent changes in TF Python code'
dd7d5dc68ec6b0bb07fa4fd7b9f427f84d348fc2,"'Fix broken lists in documentation, and back-quote more identifiers.\nChange: 134628004'"
1681cd91c2098bf67edd129140bdce307a174a19,'Add syntax highlighting and fix some lists in docs.\nChange: 134626795'
420ccb454a93acecf3a99650c660e7171d84ad3e,"'Fix spelling of identifiers.\n\nAlso, there was a serious indentation error in\nconfusion_matrix_ops_test.\nChange: 134624229'"
ac312069ab40ff49103fd1061706da7a0a9d3772,'Fix spelling in identifier name (hanlder->handler).\nChange: 134623246'
c672ae6c90f829eec7ab0dc593af8da15b90a363,'Fix spelling in docstrings.\nChange: 134622348'
8898d172f51d94cde33ad990f0c7804c07efcec4,'Fix symbol names in documentation.\nChange: 134620101'
190dae663519314a02cf9a506cedfa6b29a59cb7,'Fix comment in _SliceHelper.\nChange: 134618691'
bad7c50b9dc9789ad7dd0a62daca40b7269841ed,"""Branch 134608953 (#4645)\n\n* Make input_feature_key optional for users who pass in a custom signature_fn that does not use the first arg (examples).\r\nChange: 134479303\r\n\r\n* Add a fused batch normalization op, supporting both cuDNN and an Eigen-based\r\nCPU implementation.\r\nChange: 134479333\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 134482005\r\n\r\n* Update generated Python Op docs.\r\nChange: 134482366\r\n\r\n* Move contrib/quantization ops to tensorflow/core\r\nChange: 134501895\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 134503035\r\n\r\n* Update generated Python Op docs.\r\nChange: 134503299\r\n\r\n* Automated rollback of change 134501895\r\nChange: 134506649\r\n\r\n* Add seek to FileIO via RandomAccessInputStream and BufferedInputStream,\r\nby introducing a Seek() API to those implementations.  Seek is different\r\nthan SkipNBytes in that you can Seek backwards, whereas on a stream,\r\nyou can only move forwards.  While Seek() on RandomAccessInputStream\r\nsort of makes sense, Seek() on BufferedInputStream makes a little less\r\nsense.  I avoided adding Seek() to the InputStreamInterface because I didn't\r\nwant all implementors of InputStreamInterface to have to implement Seek(),\r\nonly those for which it made some sense.  However, I did have to add\r\na Reset() API to InputStreamInterface to allow reseting + skipping as the\r\nmethod of seeking backwards.\r\n\r\nAdds read(n) to FileIO.  Defaults to 'read to the end of the file' as\r\nusual, and allows reading n bytes.\r\n\r\nThis change is to help enable FileIO to be used as a fileobj for gzipfile,\r\namong other things.\r\nChange: 134542845\r\n\r\n* TF Checkpoint V2: make CheckpointReader work with the V2 format.\r\n\r\nIf the same checkpoint prefix identifies both a V1 checkpoint and a V2\r\ncheckpoint on disk, the V2 version takes priority -- which matches the same\r\nbehavior as the RestoreV2 op.\r\n\r\nTypical usage:\r\n\r\n$ bazel run tensorflow/python/tools:inspect_checkpoint -- --file_name=<V2 ckpt prefix>\r\n\r\nOther changes: add DebugString() and Contains() to BundleReader.\r\nChange: 134543092\r\n\r\n* Don't show dropdown options if there is only 1 possible option.\r\nChange: 134547683\r\n\r\n* Adds a method to resample tensors from of batches at either a per-item specific rate, or at a rate proportional to per-item weights.\r\nChange: 134548493\r\n\r\n* Backwards-compatible updates to TF Distributions interface; mostly\r\nsurfacing subclass-private-specialization docstrings.\r\n\r\n* subclass specializations now have signatures in Distributions class\r\n  (self-describing interface)\r\n* subclass docstrings of private methods are now properly appended\r\n  to the public methods (i.e., Normal.log_pdf.doc += Normal._log_pdf.doc)\r\n* modified places that return AttributeError to return the right type of error\r\n  (either NotImplemented, TypeError, or ValueError)\r\nChange: 134550708\r\n\r\n* Add sequence_length static shape checks to tf.nn.(dynamic_)?rnn.\r\nChange: 134551966\r\n\r\n* Automated rollback of change 134503035\r\nChange: 134560875\r\n\r\n* go: Add an example.\r\n\r\nAdd an example (that will appear in Go doc) for a real use of the Go TensorFlow\r\nAPIs - using a pre-defined image recognition model for inference.\r\n\r\nWhile at it a couple of minor tweaks:\r\n- NewSession now accepts 'nil' for options as the documentation says it does\r\n- Convenience accessors for the Outputs of an Operation\r\n- Ability to extract (possibly partial) shapes from an Output\r\n\r\nAnother step towards #10\r\nChange: 134560938\r\n\r\n* Add license header to file.\r\nChange: 134564823\r\n\r\n* Simplify and speed up shape inference code in tf.contrib.distributions.Categorical.\r\nChange: 134566685\r\n\r\n* Update generated Python Op docs.\r\nChange: 134567587\r\n\r\n* tfdbg: Debug session wrapper framework\r\n\r\nThe design is done with supporting the following use cases in mind:\r\n  1) A CLI debugging a locally running, in-process session.\r\n  2) A CLI debugging a remotely running session.\r\n  3) TensorBoard visual debugger debugging a remotely running session.\r\n\r\nThe wrapper provides the abilities to\r\n  1) Intercept a run() call to a wrapped session and insert debug tensor watches according to debug URLs.\r\n  2) Release control to an external object before and after the run() call, so that the external object can perform actions such as launching a UI to allow users to inspect the intermediate tensors and partition graphs from the run() call.\r\n  3) (To be implemented in a future CL) Intercept a run() call and give control to DebugStepper to perform stepping / continuing-to actions on the graph.\r\n  4) (To be implemented in a future CL) Enter an instruction loop to let an external object (e.g., remote client) launch run() and cont() calls remotely.\r\nChange: 134575545\r\n\r\n* Include new RestoreV2 op in android_extended_ops_group2.\r\nChange: 134576245\r\n\r\n* Move mutex when closing Android TF session to prevent deadlock.\r\nChange: 134576424\r\n\r\n* Add log loss metric for use in TensorForest, which is used for some datasets like Criteo.\r\nChange: 134578604\r\n\r\n* Centralize selection in Projector class. Add SelectionContext, an interface\r\nthat registers and dispatches selection events, to break a circular dependency\r\nbetween Projector and ScatterPlot. Remove selection listener from ScatterPlot. Remove 'points()' private property on vz-projector.ts. Add neighbors to selection awareness.\r\nChange: 134583197\r\n\r\n* Automated rollback of change 123445810\r\nChange: 134595813\r\n\r\n* Fix typo in estimator docs.\r\nChange: 134602527\r\n\r\n* Update TensorBoard TAG to 30.\r\nChange: 134603748\r\n\r\n* Add color legend.\r\nChange: 134604465\r\n\r\n* Update generated Python Op docs.\r\nChange: 134604749\r\n\r\n* Append the timestamp to each /individualImage URL, so the refresh\r\nbutton causes the browser to reload the image when it changes.\r\nChange: 134605115\r\n\r\n* Add tests for distribution_util.\r\nChange: 134608953"""
efffc23364490dd78f30981331a6a6392614959c,'Fix typo in estimator docs.\nChange: 134602527'
7d5011dcd4cbccf9116129c87b1b59df95fe3564,'spelling mistake of hight is fixed (#4625)'
281c2efd73a1c1e1dff8e6798ecd929a0bf0ae95,'fixed link to queues.py in slim (#4615)'
4e7d5508308a21517426ab2a2feee70f5bbbe8a4,"""Fix typo in 'normalization'. (#4618)"""
ecdf0b202a2bfcff7985e62da727397bd8c67a91,"'TF Checkpoint V2: make CheckpointReader work with the V2 format.\n\nIf the same checkpoint prefix identifies both a V1 checkpoint and a V2\ncheckpoint on disk, the V2 version takes priority -- which matches the same\nbehavior as the RestoreV2 op.\n\nTypical usage:\n\n$ bazel run tensorflow/python/tools:inspect_checkpoint -- --file_name=<V2 ckpt prefix>\n\nOther changes: add DebugString() and Contains() to BundleReader.\nChange: 134543092'"
78fbc21cc6f2dfbb0a50ee98f98039576b5d03f6,'Fix farmhashbuild on Windows (#4460)'
f34cb89415a8e24df6566401584294f373c0ee4c,'Fix to download eigen library (#4563)'
59f0f06393e6d2aa23b543d621eb97cdabc3ca7a,"'Fix pydoc reference, and add more tests for empty args passed to Session.run.\nChange: 134463578'"
ffc4dcb12cb64b14a8319ec8015ac74fbaa7ebc9,'Fixing issue in which allow_small_batch=True in batching crashes loss functions.\nTests added that fail without the fix and pass with the fix.\nChange: 134450477'
6da5d2140ef41cde0ca67275e5db08af416e1df9,'Fix nightly test failures by making gen_git_source py3 compliant.\nChange: 134426091'
c51a29a43a7c2b4a7bab39282b01b46bfceac498,"'C API: Follow naming conventions.\n\nIn particular, TF_AttrType instead of TF_Attr_Type\nand TF_AttrMetadata instead of TF_AttrMetadata.\n\nThis is more in line with other multi-word names like\nTF_OperationDescription and TF_SessionOptions.\n\nFixes #4595\nChange: 134423578'"
bf6270be2de71ca9570f3223cf3541759be62684,"'Fix python/kernel_tests/io_ops_test timeout by using the test temp directory.\n\nAlso fixed the other locations in which we used tempfile in tests.\n\nIt would otherwise try to match everything under /tmp, which results in a\ntimeout and flaky tests.\nChange: 134345468'"
c49ca80e708539f1336a6ebedf46815a68332fbc,"'Fix to resource leak caused by not explicitly calling Close on\nsessions upon SessionBundle destruction.\n\nThe included test crashed on my workstation after 1145 iterations,\nand after the fix ran to 2000.\nChange: 134366492'"
c9ead519464a2e377a98e68a8040f0822da9919d,'Fix header path of iOS examples for eigen (#4564)\n\nDownload path for eigen library is changed\r\nfrom `tensorflow/contrib/makefile/downloads/eigen-latest`\r\nto `tensorflow/contrib/makefile/downloads/eigen`.'
842c06524bd064255fbd87663aedd2087ee71ca3,'Fix file_io.get_matching_files() for GcsFileSystem.\nChange: 134141039'
89fd5060244112b2c99bfad04bdcf41b8f57b03f,"'Fix Env::RecursivelyCreateDir handling for URIs, fixing it for GCS and HDFS.\nChange: 134110801'"
82f516bff1b07b47105b5ac5579dba6135795575,'Fix usage of a temporary when passing the namenode as a c_str().\nChange: 134095364'
567b32eee72d8d01ce97d32d318f7ae343efab51,"'Parallelize inner matrix multiplications of BatchMatMul on CPU when appropriate.\n\n  * Uses simple heuristics to choose between parallelizing outer (batch), inner (matmul) or both.\n  * Adds benchmarks for BatchMatMul.\n  * Switches matmul benchmark to use real time so GFlops reported are w.r.t. walltime and measure the effect of multi-threading.\n  * Refactors the code to avoid a lot of extra instantiations of the Eigen contraction code, which bloats code size (size of test binary drop from 9.3MB to 5.5MB) and compilation time (time binary compilation time drop from ~210 to ~75 seconds).\n  * Fixes bug in cost_per_unit calculation. The old code calculated B*M*N instead of M*N*K.\nChange: 134138821'"
5b18edbf269027ead69fa55b784c228fadd68f3c,'Fix mnist_softmax tutorial to define the InteractiveSession and\nuse it instead of using .eval() and .run().\nChange: 134184723'
2dcd502fa4339788a8d7299e685a9432bbb51d0d,'Fix mistake in fine-tuning example docstring.\nChange: 134355513'
a112b988d0976493adab04b9cb2af771882a4904,"'Fix python/kernel_tests/io_ops_test timeout by using the test temp directory.\n\nAlso fixed the other locations in which we used tempfile in tests.\n\nIt would otherwise try to match everything under /tmp, which results in a\ntimeout and flaky tests.\nChange: 134345468'"
fb95627e1effdc376693ff459b997ba9febe33b4,"'Remove unnecessary Graham-Schmidt orthogonalization (or, remnants of one!). Fix\nwinding order in vertices, disable double-sided rendering.\nChange: 134324896'"
ff2bea2684ccce59547eb9acd02462cc0d2ba1e1,'Fix header path of iOS examples for eigen (#4564)\n\nDownload path for eigen library is changed\r\nfrom `tensorflow/contrib/makefile/downloads/eigen-latest`\r\nto `tensorflow/contrib/makefile/downloads/eigen`.'
4bfb0d949ca916a65b0e484a8a762f4e2bb88285,'[tutorials] Fixes code style (#4570)\n\n* modify /tensorflow/examples/tutorials/word2vec/word2vec_basic.py\r\n\r\n* modify word2vec_basic.py\r\n\r\n* fixed code format to match pep8'
dd9f539860d783907b1cda83ac5b27d42e6019bc,'Fix mnist_softmax tutorial to define the InteractiveSession and\nuse it instead of using .eval() and .run().\nChange: 134184723'
d2b51d87d7a2df2c627cad99feb2e7bf286410fc,"""Add the notion of `run` in the embedding projector to align with TensorBoard's `run`.\n\n- Add dropdown to select a run\n- Add run as a parameter to the DataProvider.\n- Add http handler for /runs in the standalone python server. (TensorBoard server already has that handler)\n- Further link the vz-projector to tensorboard, but don't show it as a tab yet.\n- Fix 3 references using global d3.select('') which don't work when the component is wrapped in another component.\nChange: 134167776"""
a476ea934a0b1d0a39abedd0f0554379deac1275,'Fix cmake/external to use new include paths. (#4558)'
6218ac2be3cc530da866ec32da4cb86c6ac5bb85,'Fix symbol duplication on Xcode/clang (#4504)\n\nFollowing linker error happened on Xcode:\r\n\r\n```\r\nduplicate symbol __Z14tf_git_versionv in:\r\n    /Users/admin/tmp/tensorflow/tensorflow/contrib/ios_examples/simple/../../makefile/gen/lib/libtensorflow-core.a(version_info.o)\r\nduplicate symbol __Z19tf_compiler_versionv in:\r\n    /Users/admin/tmp/tensorflow/tensorflow/contrib/ios_examples/simple/../../makefile/gen/lib/libtensorflow-core.a(version_info.o)\r\nld: 2 duplicate symbols for architecture x86_64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n```\r\n\r\nThese functions are defined in `tensorflow/core/util/version_info.cc`.\r\nIt seems an object file for it is added twice in Makefile:\r\n(`$(wildcard tensorflow/core/util/*.cc)` and `$(tensorflow/core/util/version_info.cc)\r\n`)'
fe90fdb6803903dd7c3555835b6f14c39af9a984,'Fix cmake/external to use new include paths. (#4558)'
afc1687339cbc618afb23b2abed3c13817c3c9b0,'Fix file_io.get_matching_files() for GcsFileSystem.\nChange: 134141039'
b06bc257f65539371f10121344e8d7317eed647b,"'Parallelize inner matrix multiplications of BatchMatMul on CPU when appropriate.\n\n  * Uses simple heuristics to choose between parallelizing outer (batch), inner (matmul) or both.\n  * Adds benchmarks for BatchMatMul.\n  * Switches matmul benchmark to use real time so GFlops reported are w.r.t. walltime and measure the effect of multi-threading.\n  * Refactors the code to avoid a lot of extra instantiations of the Eigen contraction code, which bloats code size (size of test binary drop from 9.3MB to 5.5MB) and compilation time (time binary compilation time drop from ~210 to ~75 seconds).\n  * Fixes bug in cost_per_unit calculation. The old code calculated B*M*N instead of M*N*K.\nChange: 134138821'"
a571e87993d3bf8e4c0370838f433ba1df6ed071,'Fix notebooks\nChange: 134138695'
38adca7ebb40b8cd56b841af2f6b8a44c71f2a82,'Fix Rank-0 StridedSliceGrad an Fix documentation of StridedSlice\nChange: 134127708'
7214b40f650788168abd3af7c69187613d2e3130,'Fixes an error in DNNLinearCombinedRegressor comment.\nChange: 134123074'
79d7ea98b59e7e0841186a6f31b85e8c4bbe5d62,'Fix pydoc for _safe_scalar_div.\nChange: 134115246'
d2c2d134dfc3e31f6d1296576f76e9abd4fc6c1c,'Fix CountUpTo documentation -- returns the value\nbefore the update.\n\nFixes #4424\nChange: 134113831'
d63243106a818a415dd9894f462a5cfc26081aee,"'Fix Env::RecursivelyCreateDir handling for URIs, fixing it for GCS and HDFS.\nChange: 134110801'"
1380cbd6c2310b0f1db53828303b5643914b7fe0,'Fix various issues with the git version tracking\n\n- Robust to .git not being present. Was regression from Windows fix.\n- Refactor the python code to only generate the file in one function\n- Properly include __VERSION__ unquoted\n- Make a shell script version for use in Make\nChange: 134102340'
f982313d3c32cf2c7018eae9ec49759ae111d407,'Fix Accuracy Metric for the weighted case.\nChange: 134096656'
e1de9ffa58ac03c44bfb6f0cc4e30960830d0f52,'Fix usage of a temporary when passing the namenode as a c_str().\nChange: 134095364'
bb717a69fc8e28af92d4a557f3f3f78f66de8129,"'Portability improvements for CMake build. (#4537)\n\n* Portability improvements for CMake build.\r\n\r\n* Adds WIN32 overrides for many of the external projects.\r\n* Makes building boringssl optional, to speed up the build.\r\n\r\n* Fix library path for jsoncpp.'"
b992ff69e2d803ea35143de6cf8ea1c2d07ce8a6,"'Merge and fix workspace.bzl for cmake, makefile use.'"
89553e9534b950acb272e2dd914708471d35b205,"""Fix bug when using the search box.\n\nPreviously searching in the search box won't update the metadata and reliably highlight the matched points.\nChange: 134069567"""
9c11fe2f1db1ccf5bcdb0724c18cc462ff5fbbd7,'Fix recently-introduced bug in ci_build.sh re. cmake builds (#4541)\n\nCommit 4316aeb inadvertently made cmake builds depend on bazel. This change set removes the dependency.'
eff6a3ab89bbf63176d7d8af27ccbf36c1916725,'Fix ambiguous operator overloading in ParameterizedTruncatedNormal op.\nChange: 134028114'
9ff9c1f6ce1a94e64bf764d42198998cbb969e5c,"'Parallelize inner matrix multiplications of BatchMatMul on CPU when appropriate.\n* Uses simple heuristics to choose between parallelizing outer (batch), inner (matmul) or both.\n* Adds benchmarks for BatchMatMul.\n* Switches matmul benchmark to use real time so GFlops reported are w.r.t. walltime and measure the effect of multi-threading.\n* Fixes bug in cost_per_unit calculation. The old code calculated B*M*N instead of M*N*K.\nChange: 134025273'"
929160abd520849f0280c7804a7915699ba3f547,"'Add a ParseURI function and remove the other URI parsing functions.\n\nParseURI provides all the functionality used by other filesystems right now, so we\'re able to remove their custom URI parsing code.\n\n- Use ParseURI for URI parsing in GCS and HDFS.\n- Note that this fixes a bug where FileSystem::TranslateName(""file://foo/bar"")\n  gives ""foo/bar"" as the path. ""file:///"" is the correct prefix in that case.\nChange: 134009580'"
916cea575fb634026d6619892cfdabfd6676ffe4,'Fix flags_test.py to remove test cases that cannot be supported\ninternally and externally due to differences between libraries.\nRenables test by default.\nChange: 134002723'
dffe0fa45bcca5ecd2e0513193921deb5fb5eedf,'This fixes a crash when CUDATimer::Init() fails for any reason.\nChange: 133992867'
194bce2768fb175cfd905174fe87455f63142b5b,'Fix cpu utils for android armv7a\nChange: 133983864'
f1d7b8fb1e99eb383f313d2ed9e7ca97d5f82612,'Fix external typescript compilation error due to different typing definitions internally and externally.\nChange: 133959781'
2451221e2a8f489dc0984e2095da2820ed1f72f8,'Fix path for `get_regularization_losses` (#4470)'
65038b084059cf934df50fa86dba5b0e765f9d65,"'Optimize Bazel external dependencies\n\nThis change does the following:\n\n- Always use {,new_}http_archive rather than git_repository\n- Make liberal use of strip_prefix\n- Clarify licenses() in BUILD files\n- On POSIX include headers like a normal C/C++ program\n\nThis change accomplishes the following:\n\n- Reduce download size >100MB: The biggest culprit is grpc which has\n  tens of thousands of commits in its GitHub repository.\n\n- Reduce disk size >200MB: On disk, grpc takes up 250MB when cloned even\n  though the tarball of the git repo is 3.2MB. By never using git\n  externals, we save on network.\n\n- Consume less cpu: Cloning git repositories is much slower than\n  downloading and extracting a tarball.\nChange: 133895791'"
e16dd877f5a784eb31ac44c98267aa8757385fc2,'Fix a typo in the Hadoop howto.\nChange: 133894207'
a5f8f42cb29d890650c4ca5fac6654884856a8e1,'Fix docs for tf.zeros and tf.ones (#4515)\n\nFixes #4514'
4316aeb4cb3f7867cf40f74020bd5d12f72d9f0f,'Force clean+fetch when re-running configure with different settings. (#4285)\n\n* Run bazel clean and bazel fetch in the configure script even when building\r\n  without GPU support to force clean+fetch if the user re-runs ./configure\r\n  with a different setting.\r\n* Print a more actionable error messsage if the user attempts to build with\r\n  --config=cuda but did not configure TensorFlow to build with GPU support.\r\n* Update the BUILD file in @local_config_cuda to use repository-local labels.\r\n\r\nFixes #4105'
c026b55c103786d53e21df3d3a3d0410c606a1b0,'Fix to third_party function in backward lstm pass.\nChange: 133862569'
214a94a354d391fc06f288e947c2b3d4a5fac97f,'Fix weights broadcasting.\nChange: 133860277'
ee73700d148a271dbe407ca092b2ae879febb1a9,'Fix AddressSanitizer build:\nRearrange proto dependencies so the protobuf.cc files are included once.\nChange: 133843215'
7a5d2d55709786b323ed4f771ee10b1911eb9d4f,'Fix typo in ResourceMgr documentation\nChange: 133828315'
5cae4a52edf9fe4951c51ee2352ca041e4ab9363,'Portability fixes for various kernels.\n\nIncludes the following changes:\n\n* Moving references to GPUDevice under `#if GOOGLE_CUDA`.\n\n* Moving references to C99 special math functions under `#if\n  EIGEN_HAS_C99_MATH`.\n\n* Moving `class Rectangle` into the `tensorflow` namespace to avoid a\n  name clash.\n\n* Adding `#include <numeric>` to cover uses of `std::iota()`.\n\n* Add explicit static casts in summary_op.cc.\n\n* Consistent array initialization in pooling_ops_3d.cc.\nChange: 133827052'
6333762303f2b858372ca779967d9fc1aa948b86,'More detailed error message when saver files are not found. Minor fixes in related code/comments.\nAdded test case to cover restoring from invalid paths.\nChange: 133819618'
3e53a75cd69d8ed82e2eb41355395f4b51e09d65,'Fix Make build under Linux (Ubuntu) (#4260)\n\n* Fix Make build under Linux (Ubuntu)\r\n\r\n* Add missing files to the list of source to build.\r\n\r\n* Add the -fPIC flag under Linux (ignored when no necessary).\r\n\r\n* Fix Make build under Linux (Ubuntu)\r\n\r\n* Add missing files to the list of source to build.\r\n\r\n* Add the -fPIC flag under Linux (ignored when no necessary).\r\n\r\n* Refactor Makefile change to comply with guidance.\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/makefile#fixing-makefile-issues\r\n\r\n* Refactor Makefile change to comply with guidance.\r\n\r\nhttps://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/makefile#fixing-makefile-issues'
fdcd01ea40b9d65a862cca8909432f0d8c1a6964,"'Fix gif build on Windows (#4489)\n\nUsing a genrule to remove ""#include<unistd.h>"" makes the build successful.\r\nIdeally, we want the include could be configurable, but that\'s not true in the source code yet.'"
de22d1abdb6add4db048f6e4a30f4ff67c0693e5,'Fix asan error with uninitialized variable in shape_refiner.cc.\nChange: 133753457'
0926dad745e11f3e27fcdb7a226c9884599f7bd9,'Fix bug in vz-line-chart in async callback cancellation.\nChange: 133725033'
3584eba95fe886dd3cea851e82c77e53e376931f,'Add session.h and session_options.h to framework_headers lib.\n\nFixes #4492.\nChange: 133724542'
e9f539b55c4dde8b97190740d816eafc5ec676ea,'Fix a bug in TensorBoard where ctrl+c does not shut it down after it serves its first HTTP request.\n\nThe problem was that socketserver.ThreadingMixIn was improperly configured to run its threads as daemons (so that it did not do so).\n\nSee https://docs.python.org/2/library/socketserver.html for more details.\n\nTESTED:\n- passed opensource_build\n- passed unit tests\nChange: 133724322'
d3757bd0fee0ab470e9db11913584fcafd787f13,'added einsum op and allow more broadcasting dims (#4378)\n\n* added einsum op and allow more broadcasting dims\r\n\r\n* fixes according to feedback'
b6813bd096ba9b8944d3506eb35056fd32d0425a,'fixes load_csv_with_header to respect features_dtype (#4295)\n\nremoves unnecessary code in load_csv_without header'
c9d60415ce2a4b7b1c7af7a38529a9d38df4a781,"'Improved iOS camera example and binary footprint optimizations (#4457)\n\n* Work in progress on memory-mapping example for iOS\r\n\r\n* Reduce the size of iOS binary, demonstrate mmap support\r\n\r\n* Updated documentation graph name\r\n\r\n* Remove unneeded gemmlowp from makefile includes\r\n\r\n* Fixed size calculation'"
422b17b34f4f1380d2e487b3509bb97ff726edca,'Merge pull request #4464 from DjangoPeng/Django-patch2\n\n[mnist]Fix the array type bug'
87b040bcdf94d3b0799ad433c97e636b55f2d27b,"'Free queues when Initialize() fails.\n\nAll queue ops except for RandomShuffleQueue do not unref correctly when\nInitialize() fails. Since the caller does not free the queue when returned\nstatus is fail, this is memory leak.\n\nFixing all other queue ops as done in RandomShuffleQueue.\nChange: 133673012'"
4b391aaa5baa23a81e5325dc36200e6cd0b4a61b,'Fix LinearClassifier.export and modify BaseEstimator.export signature to handle similar cases in the future.\nChange: 133665619'
dcba217498b5232cadbe36fd5c90aa0d2f8c8d23,"""contrib/quantization: Open file in binary mode (#4452)\n\nThis fixes the following error:\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 53: invalid start byte"""
aac469095726d9c710599ec572afb307a7b9615f,'Fixed cuda_configure.bzl for Windows (#4448)'
4c4fd65317daa739f6ef80a72d8884c894740382,"'Fix the unused variable warnings:\n\n./tensorflow/core/platform/default/protobuf.h:38:20: warning: \'tensorflow::kProtobufInt64Typename\' defined but not used [-Wunused-variable]\n static const char* kProtobufInt64Typename = ""::google::protobuf::int64"";\n                    ^\n./tensorflow/core/platform/default/protobuf.h:39:20: warning: \'tensorflow::kProtobufUint64Typename\' defined but not used [-Wunused-variable]\n static const char* kProtobufUint64Typename = ""::google::protobuf::uint64"";\nChange: 133645400'"
629c799660e3ae84f5318228bf639eda192bd355,"""Fixed ./configure on Windows (#4449)\n\n* Fixed ./configure on Windows\r\n\r\nBasically, symlink doesn't work on Windows\r\n\r\n* Fixed shebang of gen_git_source.py\r\n\r\n* gen_git_source.py: Replace os.popen with subprocess.check_output\r\n\r\nos.popen doesn't work with Bazel properly on Windows, due to this error:\r\n    RuntimeError: Cannot locate a COMSPEC environment variable to use as the shell"""
8a093f2501f830a734e16077d92a59aab38fd1f8,'update and fix problem in API doc. (#4404)'
5f176fb95880d34e4dd1bb883aeaba94598bdaab,'Fix bazel dependency failure for non-standard cuda toolkit path (#4233)\n\nBuild script was putting partially hardcoded path to cxx_builtin_include_directory.'
9b10d6e35be4c932426cc1dfda5686a5dc186773,'Fix RandomShuffleQueue initialization to reserve all queue components.\nChange: 133622066'
63f807989f8327f143a0ff21ce7a709cc9f97054,"'Fixes the issue in graph_io.read_batch_features where when large batch size is used and num_epochs is specified, the last batch sometimes is lost.\nChange: 133599817'"
2832fc4adb95e7e9144e423b50f4b6cb04a13fb2,'Fix reference-counting bug in SWIG wrapper for feed_dict.\nChange: 133598510'
19615c231ba3f0a5b1c1da558cbae58aee2f8921,'Fix the array type bug'
a6c5f8e4e013e54fed8dfcf49fb6de365f018022,'Merge pull request #4446 from caisq/fix-gcs-smoke\n\nUpdate artifact version in gcs_test Dockerfile'
a2b975bf2c5e6d1244bc1bd5a4c733b5c58e8d7a,"'Two tiny TF documentation fixes:\n1) For softmax: ""Computes log softmax activations."" -> ""Computes softmax activations.""\n2) For log_softmax: Adds a missing log operation in the documented formula.\nChange: 133492074'"
93423dfd7de7fe0b7f733784516617622578cba6,'Add a str_util::ConsumeSuffix() utility function.\nChange: 133476675'
76a1101eb3ca1138d0dba8621837a3929894a14f,'Fixed a bug in which a server was trying to start even when master was the empty string (and therefore a direct session was needed); the result was an exception.\nChange: 133464309'
2f97a7d516ef74f133eb5cb4071c92cb4e0664a0,"'Fix RandomShuffleQueue random seed when shared_name is provided.\n\nNot providing both graph seed and op seed must use a random seed value according to set_random_seed(). Current behavior chooses a fixed seed value when op seed is not provided, and also ignores the graph seed.\nChange: 133440862'"
69d67717f7b3da135b8904822838823658da183f,'[docs] Fixing formatting-related issues and addressing #2083 (#4410)'
37ec8e64ca72f2b7241a2222bf31b277a7ab203b,'Merge pull request #4418 from caisq/fix-dist-ver-2\n\nUpdate artifact version in tools/dist_test'
29988dd44e0d85164cf193fa2bb39344b9c67214,'Remove deprecated learn.ops (#4373)\n\n* Remove deprecated learn.ops\r\n\r\n* Remove imports of depr ops from models.py\r\n\r\n* Fix skflow example build'
bb2edd4c39e082e832a1d4d18b2b58c261799549,"'Python error reporting: Copy primary error to bottom of error output.\n\nFixes https://twitter.com/karpathy/status/765681445637533696\n\nExample new output for a CPU-only binary that executes:\n\n```\nimport tensorflow as tf\ns = tf.Session()\nwith tf.device(""/gpu:0""):\n  s.run(tf.constant(1.0) + tf.constant(2.0))\n```\n\nis:\n\nTraceback (most recent call last):\n  File ""baz.py"", line 5, in <module>\n    s.run([c])\n  File ""REDACTED/local/lib/python2.7/site-packages/tensorflow/python/client/session.py"", line 717, in run\n    run_metadata_ptr)\n  File ""REDACTED/local/lib/python2.7/site-packages/tensorflow/python/client/session.py"", line 855, in _run\n    raise RuntimeError(\'The Session graph is empty.  Add operations to the \'\nRuntimeError: The Session graph is empty.  Add operations to the graph before calling run().\n(tf)vrv@vijay-linux:~/vrv.tensorflow/tf$ python baz.py\nTraceback (most recent call last):\n  File ""baz.py"", line 4, in <module>\n    s.run(tf.constant(1.0) + tf.constant(2.0))\n  File ""REDACTED/local/lib/python2.7/site-packages/tensorflow/python/client/session.py"", line 717, in run\n    run_metadata_ptr)\n  File ""REDACTED/local/lib/python2.7/site-packages/tensorflow/python/client/session.py"", line 915, in _run\n    feed_dict_string, options, run_metadata)\n  File ""REDACTED/local/lib/python2.7/site-packages/tensorflow/python/client/session.py"", line 965, in _do_run\n    target_list, options, run_metadata)\n  File ""REDACTED/local/lib/python2.7/site-packages/tensorflow/python/client/session.py"", line 985, in _do_call\n    raise type(e)(node_def, op, message)\ntensorflow.python.framework.errors.InvalidArgumentError: Cannot assign a device to node \'add\': Could not satisfy explicit device specification \'/device:GPU:0\' because no devices matching that specification are registered in this process; available devices: /job:localhost/replica:0/task:0/cpu:0\n\t [[Node: add = Add[T=DT_FLOAT, _device=""/device:GPU:0""](Const, Const_1)]]\n\nCaused by op u\'add\', defined at:\n  File ""baz.py"", line 4, in <module>\n    s.run(tf.constant(1.0) + tf.constant(2.0))\n  File ""REDACTED/local/lib/python2.7/site-packages/tensorflow/python/ops/math_ops.py"", line 748, in binary_op_wrapper\n    return func(x, y, name=name)\n  File ""REDACTED/local/lib/python2.7/site-packages/tensorflow/python/ops/gen_math_ops.py"", line 71, in add\n    result = _op_def_lib.apply_op(""Add"", x=x, y=y, name=name)\n  File ""REDACTED/local/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py"", line 749, in apply_op\n    op_def=op_def)\n  File ""REDACTED/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py"", line 2372, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File ""REDACTED/local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py"", line 1298, in __init__\n    self._traceback = _extract_stack()\n\nInvalidArgumentError (see above for traceback): Cannot assign a device to node \'add\': Could not satisfy explicit device specification \'/device:GPU:0\' because no devices matching that specification are registered in this process; available devices: /job:localhost/replica:0/task:0/cpu:0\n\t [[Node: add = Add[T=DT_FLOAT, _device=""/device:GPU:0""](Const, Const_1)]]\n\nThe main error now shows up at the end, which is where people are\nlikely to find it more easily.\nChange: 133429936'"
dc4bf5a513893baff298a24b372203b054931420,'Remove unused variable from fragment shader. Delete some redundant comments\nfrom private methods. Fix an exception when the page is loaded while the mouse is on the GL canvas.\nChange: 133424898'
2e40a44fdee87b526e5f379ff09e4b856bf743c6,"""Always color and highlight the sprites at the beginning of scatterWebGLPointsCanvasLabels.onRender. Simplify\nthe rendering logic in preparation for reworking selections.\n\nFix bug where colors weren't being correctly reset when the hover / selection set changed.\nChange: 133419209"""
39e5d1099a343212ee2a5ac2cbc0bff31d70e739,'Fix dtype handling in tf.contrib.metrics.confusion_matrix()\nChange: 133403718'
6c6f5f144c8a780edbc9cc44d957b3cda363ee86,'Fix index out of bounds bug in GetNameFromURI()\nChange: 133402965'
151037d34898c838d5b1a6647f32aeba17e4ac34,"'Fix an exception for set + list in with_dependencies, caused by the removal of the no-op ""update_barrier"" in previous change.\nChange: 133295036'"
cfad067404376fd65725140363e2957aa4b90d2d,"""Make 'nearestPoint' private to scatterWebGL. Delete onMouseClickInternal; scatterWebGLPointsCanvasLabels learns about selection events by subsribing to the selection listener.\n\nFix issue where traces were disappearing when a camera orbit ended via mouse up.\nChange: 133285036"""
aac964a2ee658e67f5da9c2cfd3ab8a4423199da,'Fix typo in docstrings.\nChange: 133273512'
a36eb866c9875fa9af9668fc16af9d657477ce72,"'Fix a bug where monitor.set_estimator was set to the wrong estimator object.\n\nThis fix will eventually be removed when monitors are removed, as it is not needed by monitor hooks.\nChange: 133267795'"
e69f08a6e5af596c0e0613980a958d587f440db0,'Fix and de-flake estimators_test.\nChange: 133218112'
65b010308c2ab3f365b5b9b40dd56591b179b996,"'Update & fix OSS distributed TF tests: mnist_replica\n\n1) Replace the old and breaking docker-in-docker local test with a single-instance, multi-process test, built upon GitHub PR https://github.com/tensorflow/tensorflow/pull/3935\n\nThis simplifies the local test and makes it less susceptible to future changes in docker-in-docker support by docker.\n\n2) Adding --existing_servers flag to mnist_replica.py and associated bash scripts, so that we can distinguish\n  a) the case in which we want to create in-process servers and supervisors (as in the new local_test.sh), and\n  b) the case in which GRPC TF servers are already created and we just want to connect to the workers (as in remote_test.sh).\n\n3) Rename some flags in bash script to improve consistency with the mnist_replica.py.\n\n4) Related doc changes in README.md.\nChange: 133209130'"
8f9163204c58c0615b48a77f34d4ed9552b8dc43,'fix comment grammar (#4381)'
9a7e30a21238e4714265f8ab63c45cde80d6df27,'Bugfixes:\n - set CURLOPT_READFUNCTION even when PUT/POST body is empty.\n   This seems to be solving the problem with hanging requests when PUT/POST body is empty.\n - correctly process directory markers when renaming directories\nChange: 133202022'
6abf9327312db0bca45398677da0f46e59d9b668,'Add -std=gnu99 build flag to the gRPC++ build target to unbreak TensorFlow Serving. We can remove it when https://github.com/grpc/grpc/issues/7851 is fixed and incorportated into TensorFlow.\nChange: 133193927'
73c19128739185cdc5a8e0078c5b65cbee4c6f0b,"""TensorFlow: Fix shape functions for Resources to match reality: most\nhandles are vectors of two elements (key/value), which are pulled\nfrom GetResourceFromContext(), which accesses the tensors using\n<flat>()(0) and <flat>()(1).\n\nFixes Queues, Readers, Barriers, Stack and their consuming ops.\nRemoves the erroneous shape functions in python in favor of\ntheir cpp counterparts.\n\nLeaving Dynamic* ops for a later conversion.\n\nIF THIS BREAKS YOU:\n- See if you are breaking due to an invalid shape during import_graph_def.\n  If so, we need to add more ops to the 'whitelist of previously incorrect\n  shapes'.\n\n- You may be declaring a reader with an output shape being scalar, as\n  opposed to a vector of length 2.  ping me and I'll fix your code, or\n  see how others were fixed in this CL.\nChange: 133141627"""
bc64f05d4090262025a95438b42a54bfdc5bcc80,'Fixed DeepDream example for Python 3.5 (#4366)'
bc812f4c0b120093340262b8c3f3ff5a755ae599,'Fix to allow gradle to build (#4372)'
cc10ef178129876fcd30538f5af33565f09987f6,"""time_major parameter for ctc_loss op (#3993)\n\n* time_major parameter for ctc_loss op\r\n\r\nJust as dynamic_rnn and to be more regular across the TensorFlow's code I added a flag capable of transpose the input data to be in time_major, required by gen_ctc_ops._ctc_loss. Note that, instead of set time_major=False (as the most of TensorFlow data), it was set False to be compatible with previous ctc_loss function call (but I don't think that this is a good idea).\r\n\r\n* Fixing typos in docstring"""
b694ceff1438dccd9751950f1a02a0d49936cd19,'Fixes the issue when RecursivelyCreateDir hangs when the input is the empty string.\nChange: 133051324'
76a7602cf605f5ecbfa29090e342566e648be608,'Fixing indentation in tensorboard/__main__.py'
edae6e4e48647f7d8fdeaedbeff53438f0d84161,'Fix indentation in tensorboard/__main__.py'
e622028363baf48fa028b9ca86ebae0dc9dae772,'Fixing conflicts'
60c840e38f8a92a98d53ccd943b44c039d6ac6b2,'Fix docstring for TensorFlowDataFrame.from_ordereddict\nChange: 132992460'
f66b491a06627510c1cf751fc11db2caf5aa1f25,'Fix #4312.\nChange: 132966570'
54ce95a3bfc72f573d6d96962cfd01ebd1845b58,'python3 bugfix in ObservedStochasticTensor\nChange: 132956583'
250b9bf4299626f2cdbc348f651e628ffdfffbdb,'Update documentation script to not omit operators\n\n- Also fix operator handling to propagate docstrings through wrappers.\n- Improve documentation of slice.\nChange: 132937961'
090a5b7098c64edd4e1d3df128ecf81dafc520d2,'Bug fix: the combiner of the hashed embedding column was not passed to the lookup.\nChange: 132912107'
df929330cf1c839c90a9a0c36aeffddc76319a62,'Switch ops in array_ops to use C++ shape functions.\n\nAlso:\n- Fix output depth dimension computation for C++ ExtractImagePatches function.\n- Add dim range check to ExpandDims.\n- Make debug_python_shape_fn error if python shape fn returns an error when\n  C++ does not.\n- Add C++ implementations for StridedSliceGrad; this gives slightly more\n  accurate output when input shape but not constant values is known.\nChange: 132910226'
e24286f58df669b9ea03865df344f4004618b14a,'Fix protobuf location problem in Linux makefile\nChange: 132844140'
45e6676b1acb99a19052459a23ffb5437742d8e9,'Add pylint indentation check to sanity and fix existing indentation\nChange: 132840696'
fe5a2833133645045d522f5daa4813974b86e751,'Fix resnets bottleneck end_point name\nChange: 132817649'
645a554a41ef5524e7ec65beeb7976c066886da6,"'Update OSS protobuf git depedency version to 3.0.2\n\n3.0.2 is the latest release.\n\nAdd a level of indirection to the int64 type in\n1) core/example/feature_util.h, feature_util.cc and the places where the type is used\n2) tools/proto_text/gen_proto_text_functions_lib.cc and its tests.\n\nThis is for dealing with the variability of ""int64"" type definition among different platforms. On some systems, int64 is ""long int"", while on others it is ""long long int"".\n\nSee GitHub Issue for more details: https://github.com/tensorflow/tensorflow/issues/3626.\nThis change list fixes the issue and eliminates the need to stick to an old (3.0.0-beta-2) commit of protobuf.\nChange: 132814372'"
9374033eccc52afc19d74a0b67c4bceedcccee01,'Fix the issue#4138 (#4270)'
286972760b096e0adadedce11bfacda1a2e5b933,"'Fix the serialize_tensorboard script so that it saves the graph pbtxt properly.\n\nWhen we ugpraded the TensorBoard server, it started specifying proper content headers, so we no longer need an explicit dependency on gzip.\n\nAlso, make the script no longer continue on failure.\nChange: 132739181'"
dbe7ee0dfa9e5ab26284522379f2747510fc267b,'Merge pull request #3666 from muik/word2vec\n\nFix analogy response of word2vec interactive when the response is unicode.'
42e441b34ef3b68f657a5e36027aaa21ff0b4d84,"'Merge pull request #3883 from dcastro9/minor-fix-branch\n\nFixing comment, wrong data type in argument description.'"
4d241449aeb3707143c64e1be106cc6828a0d7b0,"'Enable `tf.image.rot90(image, k)` to accept tensor-valued `k`.\n\nFixes #4308.\nChange: 132731086'"
0e9542ee48aa53d62975d67150ad4de6d7f67914,'Add -D_FORCE_INLINES to nvcc opts (#4300)\n\nFixes #4103.'
5247ebbe24465563bdd4ef46f1cecc34f256f76b,"'Avoid including tuples in collections, use alias attribute instead.\n\nFixes #3721\nChange: 132724312'"
bf5b2f0185d4b61329a0bf7a56827661ef6526a1,'Merge pull request #4294 from shinh/read-typo\n\nFix a typo in g3doc/how_tos/tool_developers'
5c5c49fd79a2b78425f8f09fada7033d34392a18,'parameterized_docker_build.sh: Fix bug that caused silent failure during docker push\nChange: 132711980'
29faf36ed2341fe50a02a1ad1329b96157d96d55,"""Switch ops in functional_ops, math_ops, state_ops, string_ops,\ncontrib/quantization, and contrib/layers to use C++ shape inference functions.\n\nImplement Betainc C++ shape inference function; it's a little different from\nthe python one, mainly because propagating an unknown input (a_shape in this\ncase) when all are unknown is not correct for C++ (in case we later backwards\nbind the value), since it could end up being a broadcasted scalar.\n\nChange ReduceJoin's C++ shape inference function to match python.\n\nFix SymbolicGradient's shape function in C++ - there are actually more inputs\nthan outputs.\n\nChanges QuantizedBiasAdd to be more precise (the C++ shape fn invokes the common bias_add to compute the shape of the first output).\nChange: 132688147"""
3d132bd16b9fa2475aebbbc2e51c16c3a90531b4,"""Fix t-SNE when number of points is > 10K and run it on tab select.\n\n2 more updates:\n- Add warning message when the number of data points don't match number of vocab entries.\n- Sort tensors by shape, or alphabetically by name if the same shape.\nChange: 132677355"""
fe3bb6dd40f7d2a26b1e11b4f1c618e71d3ec94a,"""Fix a typo in g3doc/how_tos/tool_developers\n\nAdd `()' after f.read so we pass a string rather than a\nfunction."""
f9b5a393ee3ede830de1fdea4f256e19b6da6f8e,'Fix Exporter to allow multiple consecutive exports.\nChange: 132641417'
a77aec9cd22c8555ea6ce317f325ccad4c43e261,'Fix a bug in the gradient of nested loop. The bug is a typo.\nChange: 132638090'
75c7fe196780972efa527874ea2f960709dbfee1,"'cdf/log_cdf/survival_function/log_survival_function added to\nTransformedDistribution.\n\nAlso fix bug in tests.  Previously, the range of values checked by pdf/log_pdf were all values at the far left tail, many of which pdf was so small that assertAllClose would pass no matter what the value, so long as it was small.\nChange: 132627452'"
e37da8f3aa7375f920e0a2e43e682454bdbdbdd1,'Merge pull request #4192 from chanis/master\n\nFix typo'
62f6c34b03cc19774a9fd393494fdf019f350f2d,'Merge pull request #4280 from josharian/fix-python-config\n\nFix type error in python_config.sh'
c715c3102df1556fc0ce88fc987440a3c80e5380,'Merge pull request #4284 from caisq/r0.10-fixes\n\nCherry-picking r0.10 fixes'
3b784e52ef8dc08977e07300aa316d2d01cb4e3b,"""Adjust the cost_per_unit for Shard() in SparseFeatureCrossOp to reduce Context\noverhead for work where few crosses are created. Document the cost_per_unit\nargument of Shard() to mention the impact of passing an incorrect estimate.\n\nWithout this fix, Shard()/eigen's ParallelFor splits the work into shards of size 1.\nChange: 132603143"""
f5a9638edcd902dddb419bb78943adbd26b71a3b,'Fix docker tag step in parameterized_docker_build.sh'
103f89a10888a749c24593bffae188dda320cfc8,'Exclude external/local_config_cuda from being built into the PIP package.\n\nFixes #4261'
3c0acaddc64acea700ceac960b14552b2ccec309,"'Fix bug in `tf.get_variable` and `variable_scope.get_variable` that silently ignores `dtype` if `initializer` is present.\nNow, `get_variable` will raise an exception is they are mismatched.\nChange: 132586125'"
51983c0fddf5b2065315c21e1d516e5ac79575da,'Fix evaluation_loop init_ops\nAllow passing initial_op to eval.\nChange: 132584213'
c2bff5f1bfc83e92946c30ec4b83a56f74496519,"""Merge pull request #4238 from AppleHolic/fix_tutorial_docs_typo\n\nFix typo 'sttdev' to 'stddev'(2) (in how_tos/summaries_and_tensorboar\xe2\x80\xa6"""
9205b55c6bbef400fa1cdb0140a99576608f5b3f,"""Switch several ops in array_ops.py to use C++ shape functions.\n\nChange C++ shape function for ExpandDims to be more permissive - it now allows\n'dim' to be any tensor with 1 element, although that is not currently\nconverted to use C++ because of a separate issue to fix first (later change).\n\nChange C++ shape functions for SpaceToBatch and BatchToSpace to output rank-4\nunknown shapes.\nChange: 132578764"""
11d3d1ac31fb94f0b66f6e56b6da5fa2db16d6ae,"'Fix type error in python_config.sh\n\nIn the getsitepackages code path,\nlibrary_paths is a list.\nMake the distutils code path a list as well.\nRemove extraneous whitespace while we\'re here.\n\nWithout this, running ./configure:\n\n$ ./configure \nPlease specify the location of python. [Default is /Users/josh/.virtualenvs/tf/bin/python]: \nDo you wish to build TensorFlow with Google Cloud Platform support? [y/N] n\nNo Google Cloud Platform support will be enabled for TensorFlow\nTraceback (most recent call last):\n  File ""<stdin>"", line 18, in <module>\nTypeError: can only concatenate list (not ""str"") to list\nFound possible Python library paths:\nPlease input the desired Python library path to use.  Default is []\n\n\nln: util/python/python_lib: Invalid argument'"
ddd1f1677fb7b7ffdd5f029b86a5baf7f2a1558c,'Exclude external/local_config_cuda from being built into the PIP package.\n\nFixes #4261'
4b818f37d5dcf6ef8238bfd67ade8e3129ab3cf5,'Fix text overflow on card subtitles\n\nHover text has also been added so the full name can be viewed in the\nevent that it overflows.\nChange: 132499070'
7e7dff529fd35edea443580d58e95f5de39b5356,"'Allow tf.Variable objects to be passed as gradients in tf.train.Optimizer\n\nAlso supports other convertible-to-tensor arguments (such as Python lists, NumPy arrays, etc.) as gradients.\r\n\r\n* Fixes #3994.'"
7705791619f5e851687e9a63b4315087e189f8be,'Further improve performance of ParseExample fixing regression on specific benchmarks.\n\n- Ensure that each thread receives equal piece.\n- At least 8 threads (given 8 or more examples) and at most 64\n- Use InlinedVector\nChange: 132488652'
9a55ed98a8edd44f2779f3a644a902ab05afbd32,'Fix sparse_ops to accept SparseTensorValue anywhere SparseTensor is allowed.\nChange: 132478322'
765bbd80bae708b6cddeff600dcbd8925b4b84d0,'Fix a bug where weights were not used in evaluating metrics in LinearClassifier.\nChange: 132461680'
d1e2c2d2868acadee0abd83837458a3e49b067ef,"""Embedding projector: Combine demo-mode and server-mode and move data fetching logic to data-loader.ts.\n\n* Renamed vz-projector-data-loader to vz-projector-data-panel and made it UI-only component.\n* All the data fetching logic moved to data-loader.ts.\n* Introduced an interface DataProvider and two implementations: DemoDataProvider (loads from demo folder) and ServerDataProvider (loads from a python server). The UI doesn't care anymore about where the data came from.\n* Fix lint errors.\n* Make server serve metadata file per tensor.\nChange: 132431877"""
ebd381708b31c5aeb8845e5742de123934de3aab,"'Fix reference counting of Py_None in SWIG wrappers.\n\nBefore returning Py_None, it is important to increment its reference\ncount, to prevent it being deallocated when the caller drops its\nreference.\nChange: 132392372'"
881d64ca52daafd7998c2f5c377553a94c31746b,"'Fix memory leak in the file_io library.\n\nThe BufferedInputStream was not being deleted, because SWIG does not\ntake ownership of a raw pointer by default. Adding a %newobject annotation\nto ensure that the wrapper is created with SWIG_POINTER_OWN fixes this.\nChange: 132389278'"
bc426342a203cb1fee2ddca9d6c37a1b7998cfbf,'Fix timeout-related flakes to linear_test.\nChange: 132389198'
91ce95d497ec2957535b2ce6a965cd8269d723e5,"""Change shape ops that produce int32s to also output int64s in the type\nsystem, with the default remaining int32 for backwards compatibility,\nand change some ops that consume only int32s to also take in int64.\n\nAdds changes to the python op_def_library to properly handle the addition\nof new types with unchanged defaults.\n\nThis changes the specification, not the implementations.  The implementations\nwill come later with additional registrations.  Note that in some cases\nwe are not yet ready for registering the int64 types, because there is\nalready an int64 type registered that assumes data is in device memory.\nWe'll need to fix the problem of choosing kernels based on memorytype\nin a follow up CL before being able to register multiple kernels for\nthe same type but with different memorytypes.\nChange: 132386744"""
779684a16d9834dbb98b45169fb4deb04ad3f81c,"""Fix typo 'sttdev' to 'stddev'(2) (in how_tos/summaries_and_tensorboard/index.md)"""
d41348bb1d37ef35219ffa3b2ac8298ffc775fcc,'Cumulative bug fixes to get tf.learn working with open source TF.\nChange: 132368553'
891f8f73cc1967a5c2da89057884bc3dc1f9091a,"""Merge pull request #3744 from suiyuan2009/fix-py_func-length-1\n\nextract element from list when py_func's output type is a single tensorflow type"""
7bad05cb75ff1fbac4cce0e27069edf160becbd5,'Delete deprecated TensorFlowDNN(Regressor|Classifier). Also add tf_random_seed to fix flakiness for the affected tests.\nChange: 132347779'
5b265ffdcb08c689ac064a1733d41e2d28a894d5,'Merge pull request #4225 from wangg12/patch-2\n\nfix typo(sttdev-->stddev) in image_retraining/retrain.py'
a4f6a51a84a245d7109a1a256d10785bd8829843,'Add tests for stochastic gradient estimators and fix EMA usage bug\nChange: 132336601'
e98f46a30b58e086bf2dacaf371acf7e5a5b469c,'Fix AddBackPropIndexedSlicesAccumulator for partially defined shapes and non-float32 dtypes.\nChange: 132333359'
90581c5844197e68561516fb1e1c526cb6651a26,'Merge pull request #4230 from caisq/fix-docker-build-1\n\nFix nightly docker builds'
414a5ddd47bba68661eaac08d5b6b7c92c38b808,'Fix nightly docker builds'
2da11b0f769e43ba68d8d51a3cb10deeb9fb9188,'fix typo(sttdev-->stddev) in image_retraining/retrain.py'
70f09b73f163ab548d19ebae7172f36b603d0666,"""Merge pull request #4221 from AppleHolic/fix_tutorial_code_char\n\nFix 'sttdev' to 'stddev' in tutorial(mnist_with_summaries.py)"""
904f75a833847784ff8ab571d380529f1d6ea41b,"""Fix 'sttdev' to 'stddev' in tutorial(mnist_with_summaries.py)"""
f4002dd3cb62d64053bc6097a70f83c718c24af2,"'Fix comparison of integers of different signs\n\nThere is a chance of compiling error that the second argument is compiled as ""int"" while the first one is ""unsigned int"".\nModify it to ""256u"" to avoid the potential compiling issue.\n\nError log (partial):\n  ./base/logging.h:592:32: error: comparison of integers of different signs: \'const unsigned int\' and \'const int\' [-Werror,-Wsign-compare]\n  DEFINE_CHECK_OP_IMPL(Check_LT, < )\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~\n  ./third_party/tensorflow/core/framework/tensor_shape.h:203:5: note: in instantiation of function template specialization \'Check_LTImpl<unsigned int, int>\' requested here\n      DCHECK_LT(static_cast<uint32>(dt), 256);\n      ^\nChange: 132219253'"
6ff78e3d46a0e984c78004093563efed9cc6af0b,'Fix typo'
3c177a54cf48efdab49d716ee27936ead31c3388,'Fix a typo (#4189)'
5a96e4e672109b29951d2f65fcf46b00d85e025a,"'Make CUDA host allocator fetch one of the available stream executors\nin the process, not the 0th one, which may not be visible to the process.\n\nFixes #1888 (for real this time?)\nChange: 132128469'"
f504644d1554471c0af5184793ee46c419b849b1,"""Simplify example_trainer.cc to remove threading and concurrent steps,\nto keep things simple as well as to fix a bug where it's not safe\nto run multiple DirectSessions on the same GPU concurrently.\n\nRemove need for building and running this target from install docs.\nIt's meant to be an example of the C++ API, not something needed\nfor installation.\nChange: 132128319"""
e5b668e78eedb7cf44c9185864f78177f9472f6a,"'Fix bug in Eigen causing tf.reduce_max([-inf, -inf]) to return min float instead of -inf, and similarly for reduce_min.\n\nUpdate Eigen version used by TensorFlow to pick up the bug fix.\nChange: 132126668'"
fadc1f3c869c15b1890221bb6dfb0f7bd0f7c23d,'Upgraded Eigen to the latest version which provides faster reductions for\ndoubles and fixes issue #4131\nChange: 132114002'
0d5e86ae0a003ec76df1ede681b6ca6749fd6ae7,"""Fix gulp 'compile', 'clean' and 'tslint' build rules.\nChange: 132110145"""
8cb0558da924e891aa1bb5d79a6c0c846301e4eb,'Make wide_n_deep_tutorial.py work on Python 2 and 3 (#4183)\n\nFixes #4149 and #3956.'
16eb6caa3f9caeb8eebe9b2c025731b8285b86d2,'Merge pull request #4179 from vrv/fix_warnings\n\nFix bazel warnings by using their official names in the other repo WORKSPACE'
f366a3bcfd23d943615b17fd7103ddfa8e72c585,'Fix metric_spec_test.\nChange: 132092514'
9d8cd143723585a0c99c8afd2260feb62d7782a1,"'Add new re2 name, fix missing entry for boring_ssl rename.'"
720453a512db83ea16db2575da4a9d8658dba090,'Fix SimplePlacer::ColocateNodes to fail when a device does not support both nodes.\n\nThe condition that checked this only worked when the first argument becomes the new root.\nChange: 132035223'
821063df9f0e6a0eec8cb78cb0ddc5c5b2b91b9f,"""Fix gradients of numerous complex ops\n\nThere were bugs in sqrt, rsqrt, log, div, and pow.  These have been fixed, and\ntests have been extended to cover them.\n\nThere were also bugs in erf, erfc, lgamma, digamma, zeta, polygamma, tan, asin,\nacos, and atan.  These ops don't have registered complex kernels, so the bugs\nwere benign at the moment but would turn into hard-to-find bugs if kernels were\nregistered.  I've fixed the Python gradients to use conj even though it's\nalways a nop for now.\n\ntf.conj and tf.real are now nops for real tensors.\nChange: 132028111"""
182fef1b55640906637e4bf0d205e508c24549e7,"""Put CPU-only ops in ProdGrad in a device('/cpu:0') block\n\nFixes #3957.\nChange: 132025448"""
f6d5bbcd6d05f096b6962472d68ee38ad0b3e04a,'Make shape inference working across stack ops. Also fixed a minor bug.\nChange: 132014641'
9699149d110b4bddaea1491ae5b550a502c5e537,'Fix build breakage on Android\nChange: 132007784'
676f126339d9f74011ee6f6992974de1386b8692,'Fix build breakage on makefile build\nChange: 131979020'
e38975049b24eba836ab2381f9c5a45539b0f7ac,'Merge pull request #3858 from ibab/fix-prod-gradient-scalars\n\nFix reduce_prod gradient for scalar reduction indices params'
0f95ea0d8dde9f944ca702bbc5d5010cc9c0a9fa,"'Fix flaky random_gamma_test.\nFirst, increased tolerance for zeros so that 1000 runs passed (max observed for double was 23 zeros out of 10k, desired was 8.4).\nThen, set a fixed seed.\nChange: 131966086'"
e146dc63437d23acf4e221350d9a52a2599f2975,"'TensorSlice: fix a subtle, long-standing bug with IsFullAt().\n\nDiscovered during the development of V2 format.\n\nThis has not been triggered since the TensorSlice class has seen little use\noutside of the V1 codepath.  That code path has made careful use of it to not\nviolate the implicit contract (that lengths_[d] == -1 iff starts_[d] == 0).\nChange: 131950924'"
a8be58639439a6c4d72121eca87fc9e77e0c2ad7,"""seq2seq.py: Fixed the documentation to be consistent with the code (#3802)\n\n* Fixed the documentation to be consistent with the code\r\n\r\n* Changed documentation according to @lukaszkaiser's comments\r\n\r\n* Fixed indentation of comments as pointed out by Lukas"""
f46050ca4ac1667e4ef0e749f7f9b40046466f08,'[stream_executor] update cuda_gpu_executor.cc\n\nbugfix the bugfix ;)'
d75eab5a381a9cf1c4269b2cc205e262a6568573,"""Fix bug where TensorBoard will crash if it can't determine host ip address (#4141)\n\n* Fix bug where TensorBoard may crash if it cannot resolve host ip address\r\n\r\n* Remove redundant code."""
19f20da191800a34260d65ae266da6b5a5e6bd1a,'Fix bug where TensorBoard may crash if it cannot resolve host ip address'
c35e69c56941d79163dc9f054f57c199b1a4cc44,'Raise an error when a client attempts to feed two values for the same tensor.\n\nThis change makes TensorFlow more robust to incorrect uses of the C\nand C++ APIs (but the Python API already prevents duplicates). Fixes #4084.\nChange: 131893321'
1f4e610111e88b185bf50006fa0b96d407a6f62b,'Fix array_ops operations that support SparseTensor also to support\nSparseTensorValue.\nChange: 131892078'
7a1210bdbdade7210d48db287065ecac950338aa,'Fix ~63 ClangTidy - Performance findings in TensorFlow.\nChange: 131891101'
93ebfca89051d3b9c94e346786f3a9b51c3ec762,'Remove the use of weakref in the default session stack.\n\nThis ensures that a default session will not be garbage collected.\n\nFixes #4071.\nChange: 131874846'
4d117be62998cbef456eae9a385d79806d5b125f,'Fix the bottom of the charts to properly capture clicks\n\nThe div should not capture any clicks so that other elements positioned there\ncan get the pointer events.\nChange: 131867772'
c47a337de5827b1ec7951b8a68b5827bff748b82,"""This CL implements the following behavior for stop_gradient in while loop gradient computation. Consider a while loop with inputs xs = (x1, x2, ..., xn) and outputs ys = (y1, y2, ..., yn). If all the ys are either stopped or not used, the entire while loop will be skipped in the gradient graph and the gradient for the xs will be None for downstream backprop. If there is a real gradient for any of the ys, we will backprop 0 for all the ys that are stopped or not used.\n\nNote that this CL doesn't address any issues of using stop_gradient inside the loop body. To properly support stop_gradient inside a while loop, we probably need to perform a fix-point static graph analysis to compute the dependency between ys and xs. We will address that in a separate CL.\nChange: 131790233"""
d1e2047dcc59cb2a4406b101437fd7f3cc16fddc,"'Queues and SQSS raise Cancelled instead of Aborted on Enqueue when closed.\n\nThis fixes a bug: Aborted errors are considered errors that require recovery\nand retry. However, a closed Queue is not considered a recoverable condition.\nThis reduces the possibility of trainers unnecessarily restarting under the\nassumption that a closed queue is a recoverable error.\nChange: 131789023'"
3e8c4fd7403659ec32b9fec90a78831043aa0786,"'Don\'t establish contexts on gpus not on visible_device_list.\n\nMoves all the initialization code out of gpu_init.h and into gpu_device.cc,\nbecause we want the code that establishes peer mappings between GPUs to\nreside close to where the device selection order is made.\n\nNow the initialization code does nothing but calls the StreamExecutor\nplatform initialization.\n\nThis also checks that there are no duplicate entries in the visible_device_list.\n\nI tested this by running the following program:\n\nimport time\nimport tensorflow as tf\n\nc = tf.ConfigProto()\nc.gpu_options.visible_device_list=""1""\n\ns = tf.Session(config=c)\ntime.sleep(5)\n\n# nvidia-smi showed the context was established on device 1 but NOT 0\n\ndel s\nc.gpu_options.visible_device_list=""1,0""\ns = tf.Session(config=c)\ntime.sleep(30)\n\n# nvidia-smi showed the context was established on both device 0 and 1,\n# and the logs showed that the device ordering was 1->/gpu:0 and 0->/gpu:1,\n# as well as the fact that it tried to establish the peer mapping.\n\ndel s\nc.gpu_options.visible_device_list=""1,0,1""\ns = tf.Session(config=c)  # failed\n\nFixes #1888\nChange: 131785661'"
c22b465c97f42a023062482548a80caa7a230987,'TensorBoard: Fix a bug in FireFox with chart expansion.\nChange: 131768320'
a15f56960fdaff046711c685fcdbf313ddbfc284,'Fix link to linear/overview.md in tf.contrib.learn Quickstart\nChange: 131754990'
8b667b7d4bf1b845ce2ccffad9221490afa583ce,'Adds fractional_max_pool and fractional_avg_pool ops. Fixes #2953.\nChange: 131754627'
79d8721bf27a3906b91204656e11139a03d7d300,'Fix incorrect docstring comment.\nChange: 131754070'
660d7e5ae51d8d74643874b9ae10f855dced69bb,"'Delegate to C++ shape inference functions for several ops in\nimage_ops, tensor_array_ops, sparse_ops, and string_ops.\n\nFix bugs in C++ shape inference for image decoding (channel 0 means\nauto-detect) and string split (some output dims are known).\nChange: 131747517'"
a7fc9f53fa928e85b5d2b037efdc0e84f7a7b31d,"""Enable C++ shape function for math_ops.py and array_ops.cc shape functions that\ndon't require access to the input constant tensor, and for which the C++\nfunction's behavior matches python.\n\nFix rank check in C++ BatchMatMul shape function.\nFix rank check in C++ sparse cwise shape function.\n\nAdd an option on common_shapes.call_cpp_shape_fn to verify against the python\nshape function. This is meant to be called only when preparing a change to\nswitch shape functions over.\nChange: 131739513"""
bb1cc18c939090e14a30840488fb46171257c497,'Merge pull request #4088 from danielwaterworth/master\n\ntf.nn.conv2d_transpose doc fix'
61ab066cfe1e711d08c752650539924da02220cd,'Fix typo in CrossedColumn example\nChange: 131652926'
d4d3846d79563bf44d093fda7d011a5446cfeb4a,"""Fix failures due to Tensor's __bool__ override.\nChange: 131614213"""
cf35735c11f1022cadd5a8536617276db813e4ec,'Improve support for FunctionDefs using NodeDef.\n* Generalize the N * Type input handling code so that you can pass\n  more than one input expression to it.  This avoids the need to\n  bundle inputs using the _ListToArray op.\n* Fix OpUsedByGraph() (C++) and ops_used_by_graph_def() (Python) to\n  look for ops in NodeDefs.\nChange: 131538181'
4c49dbebef05442c7e72d6129a30574fcd13f0e1,'Use auto-detected gcc host compiler include paths in CROSSTOOL file. (#4061)\n\nThis change removes the hard-coded cxx_builtin_include_directory entries and\r\ninstead generates cxx_builtin_include_directory entries using the compiler\r\ninclude dirs detected using get_cxx_inc_directories.\r\n\r\nThis change also adds the auto_configure_fail function and uses it to improve\r\nauto-configuration error messages.\r\n\r\nFixes #4058'
20d5abd0f2d4025dedc918f1b3ef7343cee95c98,'Fix a miss word in the comment'
8af3cb915cd51149d0db10f86d8405aea4eeec8c,'Fix a miss word in the comment'
32374a7a3fe466b2e8bc34769db47aad4a595dfc,"'Refactor the panes to a single codebase\n\nNow all the dashboards can use a single tf-pane-container element instead of\neach building their own panes. This can be reused on the future on the other\ntabs, for example the images and audio tabs.\n\nThis refactor also fixes b/30786251.\nChange: 131464233'"
8c37911d8644e8d27d3ca6246b4468ec67b1abed,'Fix the vz-line-chart resize on redraw\n\nThis fixes the expand button resizing wrongly. This was due to getting old\nwidth and height when calling setViewBox(). Now it uses the bounding box to\nget the width and height directly from the SVG.\nChange: 131435410'
ec1077aae8e6fc39bcd8cf3185deb9454aa3ebcd,'Properly re-add iron-icons as a dependency for TensorBoard.\nThis should merge to fix the r0.10 release.\nChange: 131429807'
5e80240e3b7a3892d25749e6889b2e93f41ead80,'Fix type bug in Bernoulli.sample_n.\nChange: 131425456'
da7eb65ba523c0ca5a807b7bbb2331b217b01dae,'Fix DFS in quantize_graph.py (#4010)\n\nMark nodes as visited before recursing into their children to avoid infinite loops (e.g. when quantizing graphs using tf.dynamic_rnn construction).'
17d0e46e6cc31af0bcf6e80ff4c5670d233b4940,"'Fix a lost wakeup bug in `Notification::WaitForNotificationWithTimeout()`. (#4064)\n\nIf the notification was set before waiting, the waiter would never wake up.\r\n\r\nAdded a test to cover this case. Fixes #3978.\r\nChange: 131247138'"
dd770849b363520d30e3db981186120254f93421,'Fix stddev computation in TensorBoard examples. (#4054)'
46248932c3b0e75c37ceacce0e34a5e5c84f5046,'Fix build breakage of iOS makefile build\n- updated download url for gmock\n- removed repeated node_def.proto inclusion\nChange: 131412912'
426e36d6f351dd556ccb1c8defa1ddd88015942d,"'Reduce subclass boilerplate by embracing duck-typing and adopting a ""public-calls-private"" design pattern. This pattern reduces lines of Distribution sub-class code by ~33%.\n\nSpecifically, this change:\n\n1. Makes BaseDistribution purely virtual.\n2. The new idiom is that all public methods are implemented in the base class, and all possible argument checking is done there. Subclasses implement _methods called by the base class; if they fail to implement it will fire a NotImplementedError during tf graph construction.\n3. Fix style inconsistencies, eg, function order, remove unnecessary indirection, use tf.ones instead of tf.constant, etc.\n4. Fix efficiency when I noticed a problem. Example Dirichlet._variance.\nChange: 131404360'"
a04b3a0d3586270583375364fd59f6da86d1130a,'Merge pull request #4057 from caisq/fix-typo\n\nFix typo in README.md'
10d0ef7414058544f11cb984b58f3b2b6c107c90,'Fix typo in README.md'
f30403181f0ccbb30bb38777fbccf6c1b6576ca9,'Fix a memory leak in TF_SetAttrBoolList.\nCaught by a unittest in another change being worked on.\nChange: 131368103'
0de021876cbfc65c3d55505f3f6e8ffd3aa80239,'Remove some unnecessary work done during function\nconstruction (and fix a bad comment).\nChange: 131340944'
fa042c7063b922f8048630de7084b2a28e59827c,"""Add a 'visible to virtual' GPU device remapping to ConfigProto.\n\nAllows one to remap the visible GPUs to virtual GPUs on\na per-session basis.\n\nFor example, if the visible devices are 0,1,2,3,4,5,6,8,\nsetting visible_device_list='5,3' means that visible device\n5 gets mapped to /gpu:0 and visible device 3 maps to /gpu:1.\n\nTested manually on my local machine: our tests are single GPU\nonly so there's no good way to test this ongoing.\n\nFixes #1888.\nChange: 131340536"""
ac997d8b4b7d24008b7979cb58581105925c20b6,'Import order fix\nChange: 131322587'
cdf4b2f52b53a7d6f68934e76a4c1239700cb954,'Fix vz-heatmap in catalog.\nChange: 131319524'
7bf9fa38b6744049b617e722b3f03f2deed1d51f,'Fix interfaces incompatibilities between Classifier and Estimator.\nChange: 131316326'
761e6de4357786bee049e63e227b03d57f18bab0,'Cherry-pick into r0.10 cuda configure fix and gif.BUILD missing headers (#4041)\n\n* Add missing headers to gif BUILD definition.\r\n\r\n% :.../gif/giflib-5.1.4/lib$ ls\r\ndgif_lib.c  gif_err.c\tgif_hash.h\t   Makefile.am\t openbsd-reallocarray.c\r\negif_lib.c  gif_font.c\tgif_lib.h\t   Makefile.in\t quantize.c\r\ngifalloc.c  gif_hash.c\tgif_lib_private.h  Makefile.unx\r\nChange: 131121931\r\n\r\n* cuda_configure: Use env variables that match those used in configure script. (#4034)\r\n\r\nIssue #4002'
cd898d06feeff09a9fb9a0c5cbf8b42d810b55e1,'Fix a synchronization bug in the gradient computation of nested loops. The stack push/pop operations of one inner loop must be ordered before the next one.\nChange: 131311192'
1fa09b5560144e8dd16756d7877e01647fa68325,'Fix abs()-related build failure on mac os\nChange: 131308407'
b057e0d6fd6441ad03d4834c09f831948a7905cd,'Fix scan ops for empty tensors\nChange: 131302762'
a54aa42d4e1d5b60782bcee9ac346d7509195567,'Fixed size partitioner: partitions variable into fixed number of shards.\nChange: 131301480'
10be3ebc790fa3db974a5df90c78ec0acb420cb8,"'fix small typo in contrib.metrics.confusion_matrix docs, and use less\xe2\x80\xa6 (#4040)\n\n* fix small typo in contrib.metrics.confusion_matrix docs, and use less confusing variable\r\n\r\n* fix small typo in contrib.metrics.confusion_matrix docs, and use less confusing variable'"
e78cbe072bb8fd50dd8be6033de9bcb5f62d59fd,'Fix gradient of pow for complex types\nChange: 131294380'
a7a096f0f420c0f91d5354333bc7c69ce14e8536,'Merge pull request #4039 from caisq/docker-build-fix\n\nFix docker tag step in parameterized_docker_build.sh'
cff3c607b2204e8db2b63188a545620343f68959,'Fix docker tag step in parameterized_docker_build.sh'
b04c9f48ce69377a1172fd58e8ab210b435f359e,"'Fix a lost wakeup bug in `Notification::WaitForNotificationWithTimeout()`.\n\nIf the notification was set before waiting, the waiter would never wake up.\n\nAdded a test to cover this case. Fixes #3978.\nChange: 131247138'"
37528511de7059df173e8e728866490ec06feded,'Add layer_norm op to contrib.layers. (#3671)\n\n* Add layer_norm op to contrib.layers.\r\n\r\n* Fix unit tests for layer_norm op.\r\n\r\n* Remove the epsilon parameter and change defaults for the layer_norm op.\r\n\r\n* Add unit test on 4-D input tensor for the layer_norm op.\r\n\r\n* Address code review comments for #3671.'
2174f5e1dfd24a55aaced21990e3c53148035dc6,'Fix a bug introduced in cl/130951050. The correct CL description should be: make sure that no control edges by an outer control dependency context are added to nodes inside a while loop.\nChange: 131231314'
fe8ee1f1c5bbaf3ea6ab188175263688b6da7fa3,'Fix TypeError in gradient clipping ops (#3707)\n\n* Fix TypeError in gradient clipping ops\r\n\r\n* Fix whitespace issue'
d03f2545ecc3012e6c941a3a1e957f7d7f8d5040,'Add a new target including the C api. (#3830)\n\n* Add a new target including the C api.\r\n\r\n* Fix the dependencies order.'
5423dc2b99c9a767d62122a5f420f34e5636d9d3,'Merge pull request #3927 from DjangoPeng/DjangoPeng-1\n\nDocs(Queue): Fix a PriorityQueue API missing bug'
698cf5f1bc98e28990d4627bc1b1deb84b49b6c1,'- Change float to double which stabilizes the duality gap\n- Fix primal loss computation by using previous weights (this is to have a\nconsistent duality gap).\nChange: 131206587'
dd6fce9c575fc648e5ef6873da5aa48075a2fdbb,'Fix typo-caused issue on mac in cpu_utils.cc\nChange: 131200816'
cd58382cb1d8f8e34410a663d5b8630fb4661fd9,"""Make image dashboard sizing slightly nicer\n\nThis change causes the image size to start out at 300x300. Then once we\nfetch all the image metadata for a row, the heights will be scaled down\nbased on the aspect ratio and the row height will change accordingly.\n\nWhen the images are reloaded sixty seconds later, the page contents will\nnot reflow. However the images will disappear while they're loading.\nThat will be fixed next.\nChange: 131198628"""
35d2eeadb4ea5d104b1ce786f37d9252fe31924b,'Update tf_op_files.txt to add tile_6.cc\n\nTo fix makefile'
a2dc1ae9cd5991e248dc8885ed8879bb6ab15096,"'Fix the training losses when examples have weights associated with it.\n\nNote: in the unlikely event this causes your relus to die, you can lower the learning rate.\nChange: 131131862'"
d8a92d26d65006ae6ddf56925f4f6d7dece9f6b5,'Fixing a memory / pointer issue with mode_t.\nChange: 131125780'
5d3492df515b059c7b5ccfb72d3a3f3088594f52,'Update Eigen version to fix CUDA 8 compilation error'
b73bad5a5aaae94bfc112bfec3adc5fea8c006df,'Fix build breakage on Android Makefile build\nChange: 131088365'
ed906d9df15fa16df7aa9fae8250b703b2e864f2,'Fix typo.\nChange: 131085840'
cc3153a7a0a23533d14ead34db37e4ccd7892079,"""Fixed inconsistency of outputs collection (#3635)\n\n* Fixed inconsistency of outputs collection\r\n\r\nBecause naming logic for utils.collect_named_outputs in max_pool2d and convolution2d is different, collection is getting filled with inconsistent names.\r\ncode to reproduce:\r\n```\r\ngraph = tf.Graph()\r\n\r\nnode_collection = 'nodes'\r\nwith graph.as_default():\r\n    x = tf.placeholder(tf.float32, (1, 20, 20, 3))\r\n    \r\n    with tf.name_scope('name_scope'):\r\n        conv = tf.contrib.layers.conv2d(\r\n            x, num_outputs=8, kernel_size=4,\r\n            scope='conv', outputs_collections=node_collection)\r\n        max_pool = tf.contrib.layers.max_pool2d(\r\n                conv, kernel_size=2, stride=2, scope='max_pool',\r\n                outputs_collections=node_collection)\r\n\r\nprint([nt.name for nt in graph.get_collection(node_collection)])\r\n=============================================\r\n['conv', 'name_scope/max_pool']\r\n```\r\nExpected output is ['name_scope/conv', 'name_scope/max_pool'].\r\n\r\nIt is also important for those who use tf.name_scope to distinguish processing of different inputs with the same layer, like in siamese neural network. Currently, they will get identical names.\r\nCode to reproduce:\r\n```\r\ngraph = tf.Graph()\r\n\r\nnode_collection = 'nodes'\r\nwith graph.as_default():\r\n  input_a = tf.placeholder(tf.float32, (1, 20, 20, 3))\r\n  input_b = tf.placeholder(tf.float32, (1, 20, 20, 3))\r\n  with tf.variable_scope('feature_extractor') as vs:\r\n    for name_scope, inputs in [('a', input_a), ('b', input_b)]:\r\n      with tf.name_scope(name_scope):\r\n        conv = tf.contrib.layers.conv2d(\r\n          inputs, num_outputs=8, kernel_size=4,\r\n          scope='conv', outputs_collections=node_collection)\r\n        max_pool = tf.contrib.layers.max_pool2d(\r\n          conv, kernel_size=2, stride=2, scope='max_pool',\r\n          outputs_collections=node_collection)\r\n      vs.reuse_variables()\r\n\r\nprint([nt.name for nt in graph.get_collection(node_collection)])\r\n=============================================\r\n['feature_extractor/conv', 'feature_extractor/a/max_pool', 'feature_extractor/conv', 'feature_extractor/b/max_pool']\r\n```\r\n\r\n* Tests for collection naming\r\n\r\nTests to check if collection naming is correct for fully connected and convolution2d contrib layers."""
7d310ef96e81e02731fb87df10049d7a3c6d8b57,"'Make map_util and stl_util libraries internal, fix up some dependencies\nthat moving this internal caused.\nChange: 131078616'"
09999037cdbbea183ec4e85825f5b06b54745783,'add int32 support for param seq_length of op reverse_sequence (#3774)\n\n* add int32 support for seq_length in reverse_sequence\r\n\r\n* modify gpu version of reverse_sequence\r\n\r\n* fix bugs\r\n\r\n* fix backwards_compatibility'
308e34fbd1277ad38dd4c7d10d3aef2712b3d4b8,'fixes #3933 virtualenv using python 2.6 site\nChange: 131069999'
096069687c52e16eaa18c1db6e7bbf2737639257,'Fix a bug introduced in cl/130951050. Second attempt to make sure that no control edges by an outer control dependency context are added to nodes inside cond/while.\nChange: 131062259'
d37d20062aebab2d748cdac445683f29a82006c3,'TensorShape and Queue API fixes\n\n* Fix handling of TensorShape(TensorShape(None)); before it would loop forever\n* Add shape merging for QueueBase.from_list\nChange: 131058295'
dd56e71952b73f4ab1158f8343812cbccd5c1c8d,'Fixed bug in _PartitionedVariable that prevents it from being created within cond()/while_loop() and then subsequently used outside it. The error is: InvalidArgumentError: All inputs to node add must be from the same frame.\nChange: 131036071'
58b37cf745c6c30d44878ddf5987c4283ed12c3c,"""Add cuda_configure repository rule to autodetect cuda. (#3966)\n\nThis change reimplements the CUDA autoconfiguration mechanism in Skylark,\r\nproviding a `cuda_configure` workspace rule. We keep the same user interface,\r\nthe ./configure script, but rather than modifying source files within the\r\nsource tree, `cuda_configure` generates a `@local_config_cuda` workspace\r\ncontaining:\r\n\r\n* Symlinks to the CUDA headers and libraries\r\n* BUILD files generated with the correct CUDA and cuDNN versions\r\n* CROSSTOOL config with CUDA include dirs populated\r\n* crosstool_wrapper_driver_is_not_gcc wrapper script with compiler paths and\r\n  CUDA compute capabilities set.\r\n* cuda_config.h header file with CUDA versions and compute capabilities set,\r\n  which can be `#include`d by source files.\r\n\r\nThis change also makes the following fixes to `Dockerfile.gpu`:\r\n* Change the `CUDNN_INSTALL_PATH` to point to `/usr/lib/x86_64-linux-gnu`\r\n  rather than `/usr/local/cuda` since NVIDIA's image installs `libcudnn.so`\r\n  under `/usr/lib/x86_64-linux-gnu`.\r\n* Add env variable to set the minimum compute capability to 3.0.\r\n\r\nFixes #2873"""
208c2a977a546bcdca2a3215fe1f2dc771f5287f,'Fixing spacing issue in docs for tf.meshgrid as per b/30845368.\nChange: 131001422'
8a34264272b6107cd1dd8640830597599a0b11ee,"'RNN API updates and reduce_min/reduce_max bugfixes.\n\n* Expose dynamic_bidirectional_rnn and raw_rnn to the public api.\n* Add GPU ops for reduce_max/reduce_min, so rnn code will work even with hard device placement.\nChange: 130997558'"
626808e4e4a83aafbb3809a30db57bb78e839040,'Bugfixes for softplus\n\n* Fix underflow issues in softplus\n* Fix overflow issues in softplus for float16s.\nChange: 130997105'
59df941dbec8c1a97941bdd3a7a0fb11a951263b,'Fix up documentation for sample_n which allows for `n` to be int64.\nChange: 130992111'
857eee77a3abde96e62d97866c1579fe14dd7901,"""Add cuda_configure repository rule to autodetect cuda.\n\nThis change reimplements the CUDA autoconfiguration mechanism in Skylark,\nproviding a `cuda_configure` workspace rule. We keep the same user interface,\nthe ./configure script, but rather than modifying source files within the\nsource tree, `cuda_configure` generates a `@local_config_cuda` workspace\ncontaining:\n\n* Symlinks to the CUDA headers and libraries\n* BUILD files generated with the correct CUDA and cuDNN versions\n* CROSSTOOL config with CUDA include dirs populated\n* crosstool_wrapper_driver_is_not_gcc wrapper script with compiler paths and\n  CUDA compute capabilities set.\n* cuda_config.h header file with CUDA versions and compute capabilities set,\n  which can be `#include`d by source files.\n\nThis change also makes the following fixes to `Dockerfile.gpu`:\n* Change the `CUDNN_INSTALL_PATH` to point to `/usr/lib/x86_64-linux-gnu`\n  rather than `/usr/local/cuda` since NVIDIA's image installs `libcudnn.so`\n  under `/usr/lib/x86_64-linux-gnu`.\n* Add env variable to set the minimum compute capability to 3.0.\n\nFixes #2873"""
7ac844e62af6c3b22fe53800260e52eade8d5c58,'Merge pull request #3789 from gustavla/tensorboard-csv-export-py3\n\nFix tensorboard CSV download in Python 3'
44595c44ee06d2828dde600a83fb8015c6f18c5e,'Merge pull request #3961 from gunan/r0.10\n\nCherrypicks to fix some issues in R0.10RC'
5ce2567953b3bde1665e82a75bebf35066111b2c,'C++ API: Added a Const constructor for non-empty const supporting type cast.\n\nFixes #3752\nChange: 130113000'
3b7153de39732170cc5abd01b0e051bf98e066eb,'Fix L2Normalize when passing a list of dims. Fixes #3932.\nChange: 130947456'
0eba21fdd447d3951826f8a223036e044622fd63,'Fixed environment variable (#3950)\n\nThe environment variable for setting container cluster should be `TF_DIST_CONTAINER_CLUSTER` instead of `CONTAINER_CLUSTER`'
63da75452f9bcc0f87abbe03fabbff48bf01cee5,'Fix tensor_forest to properly support float input weights.\nAllow tensor_forest inference to pass kwargs through to trees.\nChange: 130940805'
4e37b20f629ab00d66adc283b67b2b31cdadfddd,"'Introduce support for move-only types in InlinedVector, and use move during resize.\nNote: the previous code in Move seemed to use std::move, but without effect, since the argument was a const&.\nThis cl fixes the problem, shown by my test with a MoveOnly type.\n\nFrom:\nBenchmark                        Time(ns)    CPU(ns) Iterations\n---------------------------------------------------------------\nBM_InlinedVectorFillString/0            2          2  357702278\nBM_InlinedVectorFillString/1           23         23   30020181  40.8M items/s\nBM_InlinedVectorFillString/8          177        177    3938795  43.1M items/s\nBM_InlinedVectorFillString/64        2515       2516     278714  24.3M items/s\nBM_InlinedVectorFillString/512      21497      21478      31994  22.7M items/s\nBM_InlinedVectorFillString/1k       43361      43312      16184  22.5M items/s\n\nTo:\nBenchmark                        Time(ns)    CPU(ns) Iterations\n---------------------------------------------------------------\nBM_InlinedVectorFillString/0            2          2  357070962\nBM_InlinedVectorFillString/1           23         23   31134543  42.0M items/s\nBM_InlinedVectorFillString/8          166        166    4246010  45.9M items/s\nBM_InlinedVectorFillString/64        1645       1644     427302  37.1M items/s\nBM_InlinedVectorFillString/512      13830      13806      49712  35.4M items/s\nBM_InlinedVectorFillString/1k       28164      28114      24588  34.7M items/s\nChange: 130922812'"
016512c156d39bc830e1331f56bee0197b3cf521,"'Fix 2 bugs where errors reported directly to the coordinator were not propagated\nout of a ""with tf.MonitoredSession()"" block.\n\n1: If the _CoordinatedSession detected a request for stop during a call to run() the\n   request was not honored.  (Missing a finally: clause)\n2: If a thread requested a stop but the with.MonitoredSession block terminated without\n   calling run() the coordinated threads where not joined and the optional exception\n   was not raised.\n\nAdded 2 tests, one for each bug.\n\nModernize the code to take benefit of the fact that the threads now register themselves\nwith the Coordinator directly.\nChange: 130890075'"
353235e0b2b35f3df43f42ef84ca00ccda7a3a6d,"""Add cuda_configure repository rule to autodetect cuda.\n\nThis change reimplements the CUDA autoconfiguration mechanism in Skylark,\nproviding a `cuda_configure` workspace rule. We keep the same user interface,\nthe ./configure script, but rather than modifying source files within the\nsource tree, `cuda_configure` generates a `@local_config_cuda` workspace\ncontaining:\n\n* Symlinks to the CUDA headers and libraries\n* BUILD files generated with the correct CUDA and cuDNN versions\n* CROSSTOOL config with CUDA include dirs populated\n* crosstool_wrapper_driver_is_not_gcc wrapper script with compiler paths and\n  CUDA compute capabilities set.\n* cuda_config.h header file with CUDA versions and compute capabilities set,\n  which can be `#include`d by source files.\n\nThis change also makes the following fixes to `Dockerfile.gpu`:\n* Change the `CUDNN_INSTALL_PATH` to point to `/usr/lib/x86_64-linux-gnu`\n  rather than `/usr/local/cuda` since NVIDIA's image installs `libcudnn.so`\n  under `/usr/lib/x86_64-linux-gnu`.\n* Add env variable to set the minimum compute capability to 3.0.\n\nFixes #2873"""
6035c7a6902acfdb22e50927fa84fbfc9eca7b2e,'Update(mnist): fix the confusing cluster setter'
8c08b34a0b9fd51c5cd3166f2d99e1246e2e6645,"'Small bugfix: model has 4 features, not 5.\nChange: 130802901'"
8fdea19f4151970915b69ba729cbcf725ea05860,'Add an option to couple input and forget gate for GridLstmCell and fixed small bugs.\nChange: 130802365'
1c131f29d7877e3155f1e58ef3aa99b51faf399b,'Remove incorrect URLs from the code and refer to README.md instead.\n\nFixes #54\nChange: 130790453'
103d3219be76be5701b9338888970fc52f83994e,'Merge pull request #3914 from gibiansky/gibiansky-fix-typo-gate-gradients-docs\n\nFix typo in documentation of `gate_gradients`'
0beb7716f0ef28284bf4e6dfebb791c3f057f0de,'Fix crash bug in debug printout.\nChange: 130787386'
e144b79a4e740c550f4866bfa33b1b4ff8790e8b,'Fix some typos in tensorflow MNIST tutorial.\nChange: 130784180'
05626f9fc3b7084b34535bf0cd44f79d8fcee649,'Docs(Queue): Fix a PriorityQueue API missing bug\n\nAdd the description of  `class PriorityQueue()` API in /python/ops/data_flow_ops.py.\r\nFrom line #714 to #759 you can check [here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/ops/data_flow_ops.py)'
d35ba035a09d60838ae6344ba251202a9a78c47e,"""Fix gather gradient for empty slices\n\nWe can't use -1's in the reshape if the size is 0, since the -1 would be\nambiguous.  Also simplify the code now that array_ops.shape does its own\nchecking for fully defined shapes.\n\nA previous version used too much colocate_with and broke a distributed\nmodel.  This version uses colocate_with only for params following the\nprevious version of the code.\nChange: 130720593"""
d2c2a4d9e95527371520f7207f848c04a0ea3e9b,"'Fix recent Saver breakage.\n\nNote that all file I/O in TensorFlow should be done via gfile (or file_io in\nthe near future), instead of using os.path.\nChange: 130710688'"
b6eb3dd766cc821beaff7cbb1dee3e814f54dbff,'Fixing the flaky contrib/learn:export_test.\nChange: 130695007'
bf1d87d0477f29adc25c958cae443e6af0039156,"'Fix an embarassing bug in SQSS:\n\nWhen the barrier is closed, the user allows small batch, and\n**no elements are left anywhere in the barrier**, an exception should be raised.\n\nThe current, buggy, behavior is to simply return an output with 0 elements.\nChange: 130683881'"
c9172bb98950467b28b46d0eaad409b4f12f5005,'fix sparse rmsprop check variable bug (#3893)\n\n* fix sparse rmsprop check variable bug\r\n\r\n* remove sparse rmsprop error message strcat\r\n\r\n* add test case when grad indexs not full'
952a447010cdb4ed507ff29c28f999ba43e959f3,'Merge pull request #3896 from DjangoPeng/DjangoPeng-1\n\nDocs(FIFOQueue):Fix a misspelling in line #594'
4760595f8ae7014f2821c73b58a53ad9002bcaca,"'Fix typo in documentation of `gate_gradients`\n\nThe documentation said `gate_gradient` in several places; however, the\noption is named `gate_gradients`. This commit fixes this in all the\nplaces that `gate_gradient` occurs.'"
3e17ff4cef87a5afc5401200514225d31d731d65,"'Fix a misspelling in line #594\n\nThis is a misspelling may confuse readers. It should keep same as line #604  which is ""first-in first-out""'"
7b160cf8cd77b13176f8a734f438c60060e09b03,'Fix a typo in retrain.py\nChange: 130599513'
0aa130ac8edaa4ee5ec9dad760f85e09079e2548,"""Fix slicing for variables\n\ntf.Variable's operator overloaded code had hard coded arities for specific\noperators.  Now it's simpler and more general.  As a consequence, var[...]\nnow works.\nChange: 130592832"""
9f0a8fb4fe070faae4d1982e129ef2d9a48a4712,'Fix quoting bug in download_dependencies.sh\nChange: 130566597'
e70b7556621a27f38bf5aa05da876f53393698ec,'Added inception files.\nAdded nets module for easy importing.\nFixes for updates to model_analyzer.\nAdded VGG default image size.\nChange: 130563483'
615a0d3ea6b018fb5680f0bb3d73fe66eb449091,"'Add a BUILD rule for extract_image_patches_grad_test, and make the code py3\ncompliant. Also style fixes in extract_image_patches_grad_test.py, and make it smaller and deterministic.\nChange: 130562777'"
7817445b6677f66bba04ec7f3c0836cd3b719011,"""Fix gather for nonempty indices, empty slices\n\ntf.gather([0], [[]]) now works.  This required\n\n1. Avoiding an empty GPU kernel launch.\n2. Avoiding the use of -1 reshapes in the gradient.  This code was also\n   simplified a bit using the fact that array_ops.shape does it's own\n   checking for fully defined shapes.\nChange: 130554783"""
b1501871df17ddc3dd6d533d0a5e80914ebf880d,'Fixing comment to data type of argument.'
78104e91a424332c576f5275f14611194166d0f4,'Fix case mismatch and sed bug in download_dependencies.sh\nChange: 130552535'
87f39e30240eb6b0013bbe9ed0936ea0db88dc65,'Fix a couple pylint warnings.\nChange: 130549079'
27946acc0a8eb21190b7231e7e00e10e5133e7da,'The graph editor copy was sometime silently ignoring some ops: this is now fixed.\nChange: 130547486'
46fdbf92cfa8666a089007f1a2bf13f376591737,'Fixes flaky supervisor_test by removing possible conflicts between simultaneous\nruns accessing variable with same name.\nChange: 130479600'
337b6c1945731b3542d35768078c8ea8640933e8,'Fix image height in TensorBoard images dashboard\n\nFixed #2862\nChange: 130475950'
8de7608075c6dd6fcaf8f5c3d921f3611f8e7611,'Merge pull request #3863 from NathanHowell/typos\n\nFix some comment and test case typos'
f7b7f3aa83d1d1202a64372e1cc952a25c209d7a,'Fix tensorboard CSV download in py3'
eb93c932a109dde233cf97b0f322410942a8b82e,'Fix some comment and test case typos'
b2bf122248d85f7ba913b778f2bd60449608d45a,'Fix reduce_prod gradient for scalar reduction indices params'
c0aba9fdea89833be0adb663328315a5251813c9,'Added ability to normalize data in a real_valued_column. Fixed key property for embedding column in Python 3.\nChange: 130434954'
8a77b23ff78d461734ad8c67b332f882638971e9,'Fix UnsortedSegmentSum GPU kernel to handle zero-sized tensors.\nChange: 130415738'
c9026a98d1cee81bd5dd67e900f5a51ffa630549,"'Fixes a conflict where error is raised when:\n1. Model is not restored from checkpoint\n2. No init_op, init_fn, local_init_op provided\n3. ready_op passes regardless\nChange: 130366039'"
39513573b40b61417ef859bdd8c6578d61e4312d,'Merge pull request #3831 from ibab/fix-eigen-log1p-2\n\nUpdate Eigen version to fix CUDA 8 compilation error (second attempt)'
2ddc543401efe02a521f6ce9c3a41753faa8c774,'Update Eigen version to fix CUDA 8 compilation error'
4235124d985978061aa1a1f4dde18f96bdbd0dd7,"'ZlibInputBuffer::Inflate() incorrectly considers Z_STREAM_END an error (#3783)\n\nWhen reading compressed records produced by something other than\r\nTFRecordWriter it is possible to produce valid files that are not\r\nreadable by Tensorflow.\r\n\r\nThis fix adds a test that creates a deflate file using the builtin zlib\r\nmodule that previously caused TFRecordReader to raise an exception:\r\n\r\n`DataLossError: inflate() failed with error 1`\r\n\r\nFull stack is below:\r\n\r\n```\r\n======================================================================\r\nERROR: testZLibFlushRecord (__main__.TFRecordWriterZlibTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File ""/source/tensorflow/tensorflow/python/kernel_tests/reader_ops_test.py"", line 495, in testZLibFlushRecord\r\n    k, v = sess.run([key, value])\r\n  File ""/Users/nhowell/.virtualenvs/tensorflow/lib/python2.7/site-packages/tensorflow/python/client/session.py"", line 710, in run\r\n    run_metadata_ptr)\r\n  File ""/Users/nhowell/.virtualenvs/tensorflow/lib/python2.7/site-packages/tensorflow/python/client/session.py"", line 908, in _run\r\n    feed_dict_string, options, run_metadata)\r\n  File ""/Users/nhowell/.virtualenvs/tensorflow/lib/python2.7/site-packages/tensorflow/python/client/session.py"", line 958, in _do_run\r\n    target_list, options, run_metadata)\r\n  File ""/Users/nhowell/.virtualenvs/tensorflow/lib/python2.7/site-packages/tensorflow/python/client/session.py"", line 978, in _do_call\r\n    raise type(e)(node_def, op, message)\r\nDataLossError: inflate() failed with error 1\r\n\t [[Node: ReaderRead = ReaderRead[_class=[""loc:@fifo_queue"", ""loc:@test_reader""], _device=""/job:localhost/replica:0/task:0/cpu:0""](test_reader, fifo_queue)]]\r\n```'"
107416b863c7b362ec8c04006ce1aab5ab1699fd,"'Fix `ResourceWarning: unclosed file` warnings in reader_ops_test (#3827)\n\nSome file handles created in these test cases are were not being closed.\r\nThis causes some warnings as well along with leaking the handles.\r\n\r\n./source/tensorflow/tensorflow/python/kernel_tests/reader_ops_test.py:245: ResourceWarning: unclosed file <_io.BufferedWriter name=\'/var/folders/sq/vmncyd7506q_ch43llrwr8sn6zfknl/T/reader_ops_test/text_line.0.txt\'>\r\n  f = open(fn, ""wb"")\r\n/source/tensorflow/tensorflow/python/kernel_tests/reader_ops_test.py:276: ResourceWarning: unclosed file <_io.BufferedWriter name=\'/var/folders/sq/vmncyd7506q_ch43llrwr8sn6zfknl/T/reader_ops_test/text_line.1.txt\'>\r\n  self._testOneEpoch(self._CreateFiles(crlf=True))\r\n./source/tensorflow/tensorflow/python/kernel_tests/reader_ops_test.py:273: ResourceWarning: unclosed file <_io.BufferedWriter name=\'/var/folders/sq/vmncyd7506q_ch43llrwr8sn6zfknl/T/reader_ops_test/text_line.1.txt\'>\r\n  self._testOneEpoch(self._CreateFiles(crlf=False))\r\n./source/tensorflow/tensorflow/python/kernel_tests/reader_ops_test.py:279: ResourceWarning: unclosed file <_io.BufferedWriter name=\'/var/folders/sq/vmncyd7506q_ch43llrwr8sn6zfknl/T/reader_ops_test/text_line.1.txt\'>\r\n  files = self._CreateFiles()\r\n../source/tensorflow/tensorflow/python/kernel_tests/reader_ops_test.py:183: ResourceWarning: unclosed file <_io.BufferedWriter name=\'/var/folders/sq/vmncyd7506q_ch43llrwr8sn6zfknl/T/reader_ops_test/whole_file.0.txt\'>\r\n  open(fn, ""wb"").write(c)\r\n/source/tensorflow/tensorflow/python/kernel_tests/reader_ops_test.py:183: ResourceWarning: unclosed file <_io.BufferedWriter name=\'/var/folders/sq/vmncyd7506q_ch43llrwr8sn6zfknl/T/reader_ops_test/whole_file.1.txt\'>\r\n  open(fn, ""wb"").write(c)\r\n/source/tensorflow/tensorflow/python/kernel_tests/reader_ops_test.py:183: ResourceWarning: unclosed file <_io.BufferedWriter name=\'/var/folders/sq/vmncyd7506q_ch43llrwr8sn6zfknl/T/reader_ops_test/whole_file.2.txt\'>\r\n  open(fn, ""wb"").write(c)\r\n...'"
660e1e7a25b0d20fcf22aceae4b4f4f52d252544,'Fix problem with changing the selected runs not changing the displayed series\non vz-line-chart\nChange: 130325850'
25236c29a246d7eebaf0be37fa38ad2782699b21,'Improve TensorBoard HTTP response serving\n\n- Only GZip HTTP response if client accepts it\n- Specify UTF-8 charset on text responses\n- Fix bug where unicode content length might have been used\n- Send Content-Encoding header for .gz static files\nChange: 130319331'
528f2480fb480919269da6d898c9834f0994ff2f,'Fix the Open Source vulcanize script.\nChange: 130318094'
f0cff57ac7902b45c99a80008adc0b9a8a2ee20e,'Update to Eigen version that fixes CUDA 8 compilation error (#3818)'
851d74fdb3f89a770bc6491c33161755ce82f596,'Fix threading bug in reservoir sampling\nChange: 130296718'
50d723127bf16cc1fed99629ebbab19d0b5302ab,'fix typo (#3817)\n\n* minor typo fix\r\n\r\n* fix typo'
6d57860e390f8f44580ae3a05aa350a4b6138b2b,"'Fix Eigen-related compilation error when using -mavx2. (#3792)\n\nSince updating to use a newer version of Eigen [1], compilation with\r\n-mavx2 causes an error caused by an undefined type. Eigen removed\r\nthe type `scalar_multipl2_op` [2] so `scalar_product_op` should now\r\nbe used.\r\n\r\nThis commit replaces uses of `scalar_multiple2_op` similarly to how\r\n[2] did this.\r\n\r\n[1] See chage 127264575, commit 10211a6c.\r\n[2] See https://bitbucket.org/eigen/eigen/commits/03556a17eb548275bc9404d7cda8303ff6ca5c13'"
960840f8e320159827d1404037537f326b4370de,'Fixes for Raspberry Pi docs and build files (#3809)'
ee903b0a675592cfcbcc69d324c36f735bbdc723,'Typo (#3808)\n\nFix a typo in some comment.'
4be49d4d8a91a071d01eeba28ab543782a746d26,"'Branch 130152575 (#3785)\n\n* Place MutableHashTableOfTensors and MutableHashTable on the ps\r\nChange: 130110569\r\n\r\n* C++ API: Added a Const constructor for non-empty const supporting type cast.\r\n\r\nFixes #3752\r\nChange: 130113000\r\n\r\n* Add support for SDCAOptimizer within estimators.LinearRegressor.\r\nChange: 130119827\r\n\r\n* Relax strictness of num_outputs check.\r\nChange: 130123064\r\n\r\n* Update generated Python Op docs.\r\nChange: 130127897\r\n\r\n* Reduce number of allocations in EncodeTensorToByteBuffer by\r\nhand-encoding the skeleton portion of the TensorProto (in particular,\r\nencoding the TensorShapeProto was allocating one object per dimension\r\nplus an allocation per Tensor).\r\n\r\nReduces total number of allocations for an RPC-intensive benchmark\r\nfrom 77.4M to 70.9M (-8.4%).\r\nChange: 130132140\r\n\r\n* Add support for weighted inputs to CountExtremelyRandomStats.\r\nChange: 130132347\r\n\r\n* Fix opensource_build.\r\nChange: 130138675\r\n\r\n* Makes it more convenient to construct Counters.\r\n\r\n- By forwarding the metric-def arguments, so that the caller doesn\'t have to\r\n  provide braces.\r\nChange: 130142393\r\n\r\n* Add a new parse_tensor op for parsing a serialized TensorProto into a Tensor.\r\nChange: 130143090\r\n\r\n* Update FeedingQueueRunner to match the _run function in the original QueueRunner.\r\nChange: 130145852\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 130146203\r\n\r\n* Update generated Python Op docs.\r\nChange: 130146772\r\n\r\n* Merge changes from github.\r\nChange: 130150683\r\n\r\n* Update generated Python Op docs.\r\nChange: 130151290\r\n\r\n* third_party/tensorflow/core: Use macro __linux__ instead of __linux\r\n\r\nSome Linux gcc installations, with some flags, do not set __linux,\r\nbut all tested so far seem to set __linux__.\r\n\r\nAn example if gcc on linux on ppc64.  If the compiler is invoked with a flag\r\nthe defines a particular standard (such as -std=c++11 or -std=c++0x or -std=c89\r\nor -std=c99) then ""linux"" and ""__linux"" are not defined.  The macro ""__linux__""\r\nis always set regardless of these options.\r\n\r\nThis led to Linux-specific implementations of certain things being avoided on\r\nppc64.\r\n\r\nThe web page\r\n        https://sourceforge.net/p/predef/wiki/OperatingSystems/\r\nsays that the macros\r\n        linux __linux\r\nare obsoltete and __linux__ is preferred, though it\'s unclear how definititve\r\nthat page is.\r\nChange: 130152575'"
71ed23f439dee11142a06135578c3186507f8e47,'Fix opensource_build.\nChange: 130138675'
1adb6645c70671f8de3fd5bef75fabc4ea70d7dd,"""Fixes a potential thread leak in the gRPC runtime. (#3757)\n\n* Increase the number of request slots for CleanupGraph.\r\n\r\nThis WorkerService RPC method can receive a large number of\r\ncalls (especially at shared workers, such as parameter servers), leading\r\nto starvation. In some cases, this can cause a thread to leak in the\r\nmaster, as described in #3470. We currently register only a single\r\npending request for this RPC in each worker; this change increases the\r\ncount to 100 (to match RunGraph).\r\n\r\nFixes #3470.\r\n\r\n* Avoid creating a thread to cleanup a step in gRPC session.\r\n\r\nThis change modifies the implementation of the distributed runtime's\r\nSession::Run() implementation, so that it does not spawn a thread to\r\nconduct (asynchronous) cleanup work.\r\n\r\n* Remove accidentally-added dead code"""
20a869a79b04eebd930b9085e32927b46fabd149,'C++ API: Added a Const constructor for non-empty const supporting type cast.\n\nFixes #3752\nChange: 130113000'
23d125cf7f8bbe7307e016829d725a6b0f0b8683,'Merge pull request #3761 from dcastro9/minor-comment-fix\n\nMinor comment change.'
5c29a24fd6a2e2b43df07b98dc985b0d4c9fc654,"'Fix the tensorflow && tensorflow_serving breakage on bazel ci:\nhttp://ci.bazel.io/job/TensorFlow/BAZEL_VERSION=HEAD,PLATFORM_NAME=linux-x86_64/365/console\nChange: 130097501'"
579438b835aafc377bba01ef6c50beca896a56bb,"""Don't try to vectorise the sparse matmul code unless the underlying platform\n  supports vectorisation. This should fix\n  https://github.com/tensorflow/tensorflow/issues/3639.\nChange: 130062191"""
ce0bbb9fef8c47b95715029288a3504de4a0b7fe,'Fixes #3677: Added missing save_summary_steps in BaseEstimator (#3679)'
e156300b9a1dcb3ff4577a9af8658c80f747a158,'Merge pull request #3736 from tiagonj/master\n\nFix typo in TensorFlow Linear Model Tutorial'
4621a028ca1746dfca04572450397bdb0fb64ee2,"'Fix retrain_test pip package issue\n\nFixes retrain_test failure in full pip build, e.g., http://ci.tensorflow.org/job/tensorflow-cl-gpu_pip_full/560/console\nChange: 130028402'"
96b0d83aa0170ca1dbf7369c7b24326a0d5c80ac,'Fix shape inference for pack with a negative axis\n\nFixes #3731.\nChange: 130023918'
c5dfa2e4231dd5acd2ffb5f54d22e907edadf61e,'Handle ~ in paths properly\n\nFixed #1587\nChange: 130017372'
3c65e0d5222a40b92ca176ea2e95d19df0b55a80,'Merge pull request #3737 from josh11b/c-api-fix\n\nRename TF_Node to TF_Operation in C API.'
92a05c4d77c8d2ac764442dc2f34ef8b8551fd01,"'TensorFlow: change shape function for reduction ops, validating\nthat reduction_indices is at most rank 1.  This is enforcing\nthe contract we intended, and thus is fixing a bug in the\nimplementation of reduction.\n\nIf this breaks you, flatten the tensor you are passing\nas reduction_indices.\nChange: 129922310'"
cfe2e1541fdd49a6921e5acaaa89a7e1c8ce0e92,"'Fix bugs with the distributions and events dashboards, which caused multiple\ncharts to be created on top of each.\nChange: 129919819'"
4da15d22151f406575a3f3ee1e8fa0e4ebee43ff,'Fix flaky testSklearnCompatibility() by increasing train steps\nChange: 129918998'
8d5e12d957b63305fa6bd72e0bc3235821887c6a,"'Fix data race in LocalRendezvousImpl - item was used outside the lock, but\ncould be deleted by the abort.\nChange: 129916678'"
9108f2e4f90fa29a742479d1dcb30a720a6fba7d,"""In rnn.bidirectional_rnn and rnn.bidirectional_dynamic_rnn the scope passed as an argument is actually preserved: is scope 'prefix' is passed -- either as a variable or a tf.VariableScope -- variables are created in subscopes 'prefix/FW' and 'prefix/BW'.\nChange: 129914154"""
9e43589849ec0c7377e806e796f8f01f9185b088,'Fix typo in TensorFlow Linear Model Tutorial'
a8c3076b25e3e7adf4bf8f547fc266399398080b,'Fixed a gradient bug when a while loop is executed on an untaken branch of a conditional. Also fixed the doc about Merge op.\nChange: 129904295'
83fe2a5b7328e1b754b53cbbcf9b313450a2f863,'added image patch grad (#3672)\n\n* added image patch grad\r\n\r\n* added grad test for extract_image_patches\r\n\r\n* fixed futures imports in image patch grad test'
c0820b759f83dce5fc162cc23833f46052d8e906,'Merge pull request #3662 from mecab/fix-typo\n\nFix typo in error message formats'
766584d4ec59bef1a915bf14e927716a2b6a3a76,'Fix typo'
fb8cab3095a3b8e65dff056d5db1ec53ac5fe73f,'Merge pull request #3609 from yanchen036/master\n\nbug fix: the benchmark only run FLAGS.num_batches-1 times'
5786b3053b285ffb622f7386ed98b0ef971d9ad7,'Fix OSS buildifier error in tensorflow/python/debug:BUILD\n\nAlphabetically order the targets.\nChange: 129791854'
302462edd090611a793bfe20ad43fb4dc1dc718d,"""Fix race in tensorflow's use of gemmlowp contexts.\nChange: 129782045"""
4959a1291045674a23793212cfe94d4804760f01,'fixes github issue #2703 by asking user for a specific python path from a list of possible known locations\nChange: 129778433'
a8c58014ee62b48e31a7bb627924a92fa8ff6258,"'Fixing int32 assumption for save_restore_tensor.cc and adding a python ""end to end"" test for saving large partition variables.\nChange: 129778368'"
416faf742b9fe9ca0956e40104dadbc8070a46ca,'Typo fix in sync_replicas_optimizer.py.\nChange: 129769850'
e3fdc3b7fd4784b88512517d3b3dacfbb9677e43,'Compute proper processing_shape for foo[-1]\n\n- 1 size shrink intervals had the wrong processing dimensions (0 rank)\n- Fix by creating a dense->shrink_axis to manually fix indices later\n- This caused foo[-1] to segfault when gradient was taken\nChange: 129759633'
2e39fbfac13cbf20886787bbb3d15f4758df180b,'Fix pip package issue with tensorflow.python.debug\n\nSee example build failure at: http://ci.tensorflow.org/job/tensorflow-cl-gpu_pip_full/543/console\nChange: 129743282'
bab904d620a0fda642a4900873ff599adb64c0e7,'Fix a strange contract for the analgoy function like the nearby function'
8bf9331ca4c93caf0c24f4cfa7a4f73cd6031d46,'Addressed graph build time shape issue with reduce_join and empty reduction_indices.\nUpdated tests to also check shape of the output Tensor.\nFixed docstring to produce valid markdown.\nChange: 129695413'
79a7e7a27d018573921e0aa4318088837bfeb95c,'Fix prototype mismatch of ByteCount in env.cc\nChange: 129683111'
2d0d126749d6d0cf82fb86691362c923a1bfbfe4,"""Change DeviceFactory functions that create devices to propagate\nStatuses, so that failures to initialize devices don't crash\nthe program.\n\nChanges swig for device_lib to be a lot simpler, thanks to mrry@\nand keveman@'s help.\n\nChange allocation of eigen scratch memory to go through the allocator.\n\nRe-enable test for local devices now that python3 issue is fixed.\nChange: 129678132"""
0204fbd5fec268e2b4d4d4e9185e21725a6c248d,'Update tests and pydoc for dequeue_batch.\nDe-flake graph_io_test.\nFix typo.\nChange: 129677002'
056db850614e0a06ce6f65b30f877c5789ab74f5,'Update the quantization how-to (#3412)\n\n* Update the quantization how-to\r\n  * Prevent the compiling errors of the label_image program.\r\n  * Fix the parameters of the label_image program.\r\n  * Fix image links from relative path to absolute path to make them\r\n    displayed correctly on GitHub.'
4c1a053f06559c4638b6a1e17b11bbafd0baee44,'Fixed a bug in ExportMonitor.\nChange: 129663580'
d240f6cc978629a9d118ed525d13221460c6483f,"""Fix tensor_forest's LossMonitor, which was broken by recent changes to how outputs are passed to monitors.\nChange: 129662956"""
1407ee56408e03495c6226a3bc04e2682fda6b5b,'Fix tuple conversion in a unit test.\nChange: 129652252'
1eb2f659201d981b3c07780fbf3187de998f7ff4,"'Improve shape inference with `tf.tile()` with partially unknown multiples.\n\nAlso checks that the multiples have a length that matches the rank of\nthe input, which catches the potential error at graph construction\ntime.\n\nFixes #3692.\nChange: 129648174'"
5e2019571a0c09bd627dd4f0abbf6b08e19a65e5,'Improved documentation and minor bug fixes.\nChange: 129607856'
93e197dbdb3179388431f9e1b5fbc68ac7f40f06,'Fix commented examples so they are actually runnable.\nChange: 129588416'
3464bb4194fcca0c55b7fa6b0fdb7fed659bf0f7,"'DOCFIX:  Distribution.sample expects a rank 1 tensor giving the sample shape,\nbut the documentation did not make this clear.\nChange: 129504897'"
73f57d5a24fc234f8eb913f9222c870e6c384b3a,"'Some code cleanup for stack ops. Fixed a bug that the done callback is not invoked due to the use of OP_REQUIRES_OK in async kernel. Added an optimization to avoid swap the same tensor (i.e., tensors sharing the same buffer) to CPU.\nChange: 129499832'"
32bd3d024f33e920a67a1081bc0ae0048350fdee,'Merge pull request #3668 from caisq/fix-cmake-1\n\nFix cmake build'
8b4ad8cedaefddb620eb6fda833ce6038daef5c1,"""Merge remote-tracking branch 'gtf/master' into fix-cmake-1"""
da933d57d7a284fd60105d1ad8e4512dedd6d116,'Fix cmake build\n\n* Use dedicated Dockerflie.cmake for cmake: Ensure cmake version >=3.5.\n* Let cmake build protobuf 3.0.0-beta-2 from source. Version 3.0.0 cannot be used a.t.m. due to an integer type issue.\n* Fix a bug in tf_models.cmake.\n* Perform parallel make based on the number of cores.\n\nNew build command:\n\ntensorflow/tools/ci_build/ci_build.sh cmake\ntensorflow/tools/ci_build/builds/cmake.sh'
435b9e23506a461c53b6750ffd8b0c7930b51222,'Fix analogy response of word2vec interactive when the response is unicode.'
9d3679faa80c4f6ff0b7206abfe45fcd818e79ee,'Fix typo in error message formats'
439c6d71592cdfdcfe4a752272d33d60439f69ec,"'Revert ""Fix prototype mismatch of ByteCount in env.cc"" (#3661)'"
e58829821ce8cb89e5e60591836f2421e8fc8b72,'Fix prototype mismatch of ByteCount in env.cc (#3614)\n\n* Fix prototype mismatch of ByteCount in env.cc\r\n\r\n* Change email'
d2589654ddc7bffc2f51eb5bebba2eb78f48a9a2,"""Fix tf.Example parsing when the Example feature name is provided, but no\nvalue exists.  In this case, if no default is given then the error should\nbe correct.  If a default *is* provided, it should be used.\n\nAlso, reformatted the parsing_ops_test.py file (which doesn't lose history,\nsince it hasn't changed much since my original version).\nChange: 129393762"""
9f47ac64454fe24594afad8f4b6daab248b2b656,'Fix chain rule to not imply second differentiation (#3650)\n\nFixes part of #3629.'
230a95547a8a0cf3e5131b979d37faaa13fdae12,'Fix sparse_merge() doc formatting.\nChange: 129374993'
49f05a66e44107e545cc8d7b41fe2a51642d72bb,"""- Make tf-run-selector's paper input be fixed on the layout so that it doesn't\ndisappear when you scroll down tf-multi-checkbox.\n- Fix tf-run-selector's scrolling of firefox, it was expanding instead of\nscrolling.\nChange: 129369035"""
99e20af3ccdbe74fd134c8584d5f0a4f5e125589,'Fix up the op names in the test.\nChange: 129298235'
62156713147b256ee862987578021a29e2ed4c13,'Make attention_decoder in seq2seq work with state_is_tuple=True. (Fix #3056.)\nChange: 129278425'
5e463066b207cce27327f885f3f483c0ff7d2606,'Type fix in SparseTensor::PickDims.\nChange: 129171357'
a668e07fbb8d243111267970a77c1c8e674dd670,"'This change fixes the flakiness of some tests with randomly generated inputs by loosening up the error tolerance bounds, or when possible increasing the number of iterations so the results converge better.\nChange: 129170479'"
f6bf341668bad321a351b62ecafe50bbbdadec2a,'Typo fix in saver_test.\nChange: 129161698'
90c5db748b6e0f83f3a2d76c3692b2a0bc38946b,'Re-enable fixed atrous_conv2d_test.\nChange: 129155136'
d5a2460e03aef86dde6ad679af1b357d6b0bdbd0,'Fixed broken URL.\nChange: 129136982'
dff0e1bbb147094d36d949a746224c48149366d8,"""Fix issue where the wrong version of the function library was used after partitioning.\n\nIn addition, don't try to constant-fold function calls; the executor used for constant folding doesn't have definitions for functions.\nChange: 129109380"""
61b8db883b04dafb09d790a4b7b2b3328802c085,'Fix comment for kwargs in TensorFlowDataFrame.run().\nChange: 129105811'
cdf7d433ba3484cdd85dc89f3d8ee17ba11e1de2,'bug fix: the benchmark only run FLAGS.num_batches-1 times'
f8bc39eb04efc0267cf9d2a41e3455981a64f3b3,'Fix tooltip positioning to be below the chart at all times to not get in front\nof the chart.\nChange: 129054197'
6ec12423d2ce27f8d2e9fd223ee07b75cb5617fa,"""Fix firefox bug where tf-run-selector wouldn't change the runs if you toggled\nthe checkboxes.\nChange: 129052525"""
41724a647f7644478d678285459e77bf46716b1c,'Fixes flake in histogram_ops_test\nChange: 129042454'
6b08d9905ab6ffb800dfe23a644788a98f2ac9ef,'Fix the second link on the TensorBoard how to page.\nChange: 129031443'
01336ac3293445d08b1c237310ef0a5da13ad763,"'Fix the scrollbar behavior, they are appearing when they are not needed on firefox, making the pages look weird.\nChange: 129014158'"
cf8d866b3f2f76b349432ac197a62ca11dac6ceb,"""Fix a bug in distributed execution of while loop.\n\nWhen a while loop is partitioned on multiple devices, control edges are added to control the recv nodes. There are two partitioning phases, one at the worker level and the other at the device level within a worker. We didn't handle properly when an op has two remote inputs, one on a different worker and the other on a different device of the same worker.\nChange: 128993033"""
c0944a38a40956466f3e9b3a297c9994f7a2b7e6,"'Add an op for singular value decomposition (SVD) of a dense matrix or batches of dense matrices. This calls Eigen::JacobiSVD<Matrix, Eigen::HouseholderQRPreconditioner> which is known to be rather slow. This change is primarily intended to get the TensorFlow interfaces and functionality in place. We intend to swap out the ""backend"" with a higher performance algorithm implementation in the future.\n\nThis CL also contains a small refactoring of the LinearAlgebraOp base class:\n\n1. I moved the initial processing of inputs and outputs into separate helper functions so Compute() is not so long.\n\n2. The derived classes are now allowed to return fewer output matrix shapes (n) than the number of op outputs (m) in which case empty (shape[0]) tensors are returned for the last m-n outputs.\n\nFixed a few Python linter errors that were blocking presubmit.\nChange: 128990912'"
52c04186145a7bed645a972eb7243d0795c67ab2,'Fix bug re DataFrame->FeatureColumn\nChange: 128989209'
d713ac488950f3b83ae6b16f1d123ad42a55ecdf,"'Add gcs_test/Dockerfile to version roll\n\nThat is, cover the file with update_version.sh\nAlso manually update the artifact URL to 0.10.0rc0 to fix the current breakage\nin nightly gcs smoke test:\nhttp://ci.tensorflow.org/view/Nightly/job/nightly-gcs-smoke/\nChange: 128984024'"
b0166b8b07a0f134cea3bfbe9a55a7c9f887ba3a,'Merge pull request #3568 from ibmsoe/tensorflow-ppc\n\nFixing crosstool config file to build tensorflow on PowerPC architect\xe2\x80\xa6'
25821f0d91623d654bb1bdd62423e644bae9f7f8,'TensorFlow: Fix OP_REQUIRES check for depthwise pooling.\nChange: 128843893'
f419dd1f11548386bacfb789a47d5ff6c13ae197,"'Fix a bug in handling while loop inside a ""with tf.control_dependencies()"". Also tidy up some error checking.\nChange: 128818017'"
763b829da21b7724cc8d5c5a5ec7e4971b78a3e8,"'Bugfix for one-hot op when inputs have no elements.\n\nAdded unit test for this, + unit tests for float16 behavior.\nChange: 128812174'"
ce70f6cf842a46296119337247c24d307e279fa0,'Fixing crosstool config file to build tensorflow on PowerPC architectures'
21f8ae3873fa74416297cb2e01e070925aaee6c7,'Merge pull request #3558 from caisq/fix-docker-manual-tag\n\nDocker build script: Fix logic re TF_BUILD_APPEND_CI_DOCKER_EXTRA_PARAMS'
f56a31fa6be20c63ef35bfc101ed409b9e792906,'Docker build script: Fix logic re TF_BUILD_APPEND_CI_DOCKER_EXTRA_PARAMS'
a99b1a713423ca3be44fdc7d3ebcf3602a4a1732,'Fix typos in print statements in Wide & Deep Tutorial (#3553)'
e3fdccaa4c4d834367e4e17d24518bc0a8e770f5,'Broken up changes toward enabling strided slice\n- Implement gradient of StridedSliceGrad (in c++ and python)\n- Improve the testing of gradients in c++ and python\n- Fix shape inference routine in python\n- Fix incorrect seeding in prob_rnn and rnn_decoder\nChange: 128742759'
160bdfe4d4d4620781f96584b3706852593215e6,"'Fix for the Dtype __eq__ raising exceptions when comparing against some non-tf\ntypes, like ""tf.int32 == int"" or ""tf.int32 == 2.1"".\nChange: 128704213'"
98d63de3bb2bab7c9a81f83c8ca864741399300c,'fix for BM_UNARY test (#3522)\n\n* fix for BM_UNARY test'
ce2141d2b3ceca0b5f29c18ff09ac1563ea2e030,'Fixed typo: (#3529)\n\nFixed typo in API Documentation page'
b34cdec76b8000af781883000952cc407d72827c,"'check_ops upgrade:\n* message kwarg added to check_ops tests.  This is a descriptive string to prefix\nto the error message.  tf.Print also takes a ""message"" kwarg with the same purpose.\n* assert_integer now raises TypeErrors rather than ValueError\n* assert_integer now checks statically and returns a no_op if static checks pass\nChange: 128636001'"
870385322db130f8d03c9205a81abec8d704d3d8,"'load_csv cleanup:\n1. Fix hard-wired target_dtype.\n2. Allow non-float features_dtype.\n3. Set return type to be the same with and without header.\n4. Separate load_csv into two functions, as they have little in common.\nChange: 128627281'"
b212a4be1f7dbebda24b075e5035702d38eca04a,'Fix bug for parsing sparse input in tensor_forest.\nChange: 128624829'
65b6ae96eb5b711b0fd19b1819cf9736b33c0cd4,'Merge pull request #3531 from caisq/fix-debian\n\nFix debian build; Bring debian build into ci_parameterized_build'
fbe7b0c04de003d7eb5e78af228a2b779200cd02,'Fix debian build; Bring debian build into ci_parameterized_build'
4e3d98baac3144b2997c576985d5409bf48fd8db,"'Minor fixes to distributions.\n - Use randomint instead of geometric (for tests).\n - Ensure Bernoulli works for float64.\n - Use seed for exponential sampling.\n - Remove allow_arbitrary_counts in favor of validate_args.\n - Remove casting between parameter dtypes, in favor of user passing in parameters of same dtype.\nChange: 128592132'"
554ddd9ad2d4abad5a9a31f2d245f0b1012f0d10,'Merge pull request #3516 from ThomasLee969/patch-1\n\nFix an error message.'
bdc91eca9c1ccefb8290dd9b544c060d2c89ac1d,'Added complex type support to ops for GPU (#3010)\n\nadd conj for complex128 and fixed tests and kernel builder'
3c5ab26644ff9cca25c2d51aca8dbeddc6727a51,'Merge pull request #3423 from Mistobaan/remove-warnings\n\nFix few warnings on macosx-clang compilation'
233af01b33f6a9a36bfdf8aedea2efa535667908,'Fix rnn.py comments for code block (#3433)\n\n* Fix rnn.py comments for code block'
9b077c069e2d350e610e2f339d4f6094caba5445,'Fix two striding slicing grad bugs\n - shape was not properly pinned HostMemory\n - shape was not type checked before using templatized accessors\n - added tests that would have catched these errors\n - added strided_slice to documentation to export it to tf\nChange: 128514920'
a0745a7ce2b1b6c6a7f43ca2359d6bceefd2f909,"'Fix an error message.\n\nMinimum tensor rank should be (dim + 1) instead of (dim).\r\n\r\nExample:\r\n    tf.argmin(x, 1)  # x is a 1-d vector.\r\nbefore:\r\n    ""InvalidArgumentError: Minimum tensor rank: 1 but got: 1""\r\nafter:\r\n    ""InvalidArgumentError: Minimum tensor rank: 2 but got: 1""'"
26d12965f4c5cbfa1292bf276b6bff6fe786746e,'fix few warnings that I see on macosx-clang compilation'
e4097295e19d689740e335299b0311612818f4fb,"""Fix the vz-line-chart index.html description page by adding\niron-component-page.\nFix the gulp build to only build TensorBoard's typescript files.\nChange: 128384794"""
8a4f6abb395b3f1bca732797068021c786c1ec76,'minor typo fix (#3488)'
2d1c32eade41eaf9b9baf88fd5f5aa56bfed3dc0,'Fix build non determinism in headers\nChange: 128360267'
34883b6f1c754e2c309645d88dcbf1dfb3cf9cf4,'Extend gather_nd to support sliced indexing.\n\nIncludes:\n  * Some bugfixes for empty inputs\n  * Better parallelization on GPU using a CUDA kernel.\nChange: 128236016'
36d056acd92ca2f7e97fec82fd09f36c42c05338,'Merge pull request #3466 from JamesFysh/master\n\nFix a typo in input_producer documentation'
6f47d3574def8f6ea1967435ae2131b3718ea157,'Merge pull request #3447 from bdiesel/master\n\nminor typo fix.'
7a1d948a6ab1eb3268b13b810ec5d9d20fd52dea,'Merge pull request #3454 from petewarden4prs/master\n\nFixed regex for extracting Eigen version on iOS'
77a2e9204d2d5fbd506750b18eac7f326bc00abc,'Merge pull request #3405 from wang-yang/master\n\nFix minor typo; indent workspace.bzl'
10656b16cba4fa2f83b97258d0cfd81f2e59a813,'Merge pull request #3399 from raix852/fix-typo\n\nFix typo in rnn_cell.py'
2b5602801873d5bd45456fb0413cbbf6a8363b49,'standardize BUILD files format using buildifier (#3395)\n\nrun `buildifier -mode=fix `find . -iname BUILD -type f`'
0493565413a11b00b83b6f40990811a75499a5ba,'Fixes link to analogical reasoning data.\nChange: 128198127'
3acdd0a571a8387cc17832d24387e57538969b31,"'Fixing bug in which a Tensor was being checked as a Python bool, causing an error.\nChange: 128197128'"
a81c4f9cd01563e97fc6f179e4d70960fc9b02ae,'Add Mac GPU whl artifacts and build history to OSS README.md\n\nAlso\n* A minor wording fix in the configure script\nChange: 128194769'
e849c057483c3b30dd5e6cfe26aa0fec510e4937,'Fix dequeue error messages\nChange: 128191932'
94ca4efbb27cf78bb012e418712cf14d36dea4d0,"'Cleanups for shape inference (mainly testing):\n\n- In shape inference test constructor, record an error and check it later in\ntesting - this makes for nicer errors when there is a bad input spec.\n- Check that the number of inputs passed in the input spec matches what the\n  NodeDef declares; fix up violations.\n- Remove constexpr kUnknownDim static in files.\nChange: 128188634'"
68f3e2e6f38de4c9c6763a7db5510bd695413a82,'OneHotOp should use int for prefix_dim_size not index type.\nChange: 128187997'
b3b6085d6f81fe6ad47a72e8289ed93f98952e8d,'Fix a typo in input_producer documentation'
3758878728710801f681afba39e145df4ddb8bf1,"'Fix a read/write race in Saver.\n\nFor the checkpoint state proto (""checkpoint""), we now write it to a tmp file\nfirst, then atomically rename it.\n\nThis prevents real training crashes.\nChange: 128183442'"
0cf6daff66ff2d3c35defb07d1fc5100c37fefb3,'Merge pull request #3456 from caisq/mac-gpu\n\nFix CUDA capability version logic in ci_parameterized_build.sh for non-Docker cases'
8a15bb6ed0cae7cc0ac62737ce14055481238ecb,'Fixed typo\n\nThe name in tensorboard/README.md of Scalar Dashboard is not\nconsistent with the actual name: Event Dashboard. So make it\nright.'
d05c1f1bd891ab9030c55705dc0935f23e352fc3,"'Small bugfix to exponential sampling, to ensure no Infs are emitted.\nChange: 128133709'"
33f087c209cbbf9116ce6c4d22b510fd169e5559,'Fix CUDA capability version logic in ci_parameterized_build.sh for non-Docker cases'
f2ca33b6b4dda1d92b68c758cfafd5394828b8ff,'Categorical log_prob shape fix\nChange: 128112173'
314d9cd9b607460f8bfea80fc828b1521ca18443,'Fix segfault in MacOS when GPU is not available (#3448)\n\n* Fix sigsegv in MacOS when GPU is not available\r\n\r\n* Change info link to point to Apple docs\r\n\r\n* Invert NULL checking logic\r\n\r\n* fix indentation\r\n\r\n* Re-align to get change to fit in 80 chars\r\n\r\n* Run clang-format \xe2\x80\x94style=google on changes'
66aced168c682f106e0baa660248ae09334f0dee,'Fixed regex for extracting Eigen version on iOS'
196bdf8e8783b787be2071cd13fc5a9e6be95d9b,'Fix eigen hash detection in download_dependencies.sh (#3428)\n\n* Fix eigen hash detection in download_dependencies.sh\r\n\r\n* Cleanup download_dependencies.sh'
ca7e68ddf815e3592358537ce7e7ca1823e75d96,'Fix for sparse gradients been expanded to dense gradients when gradient_multiplier used with optimize_loss.\n\n3x speedup for large bag of words models that use this function.\nChange: 128077911'
2cfc4038cb270d70fb8f1fddb9c9dc8306a54c5e,'minor typo fix.'
192db5543ae73bd281063e36c088628bcd87d38c,'Minor bug fix in printing of stragglers when terminating.\nChange: 128072562'
81b26083e15d4f79c4033343840c08d09b97ec56,'A few debugging-related tweaks\n\n1. Fix an exception in compat for tuple values.\n2. Produce a nice error message when converting Operation to Tensor.\nChange: 128009255'
2098c09cad256fd0892c24babe0ec535a32dbb81,'Add C++ shape inference functions for some tensorforest functions.\nFix bug in python shape inference function for UpdateFertileSlots.\nAlso fix typo in license of math_ops_test.cc\nChange: 127959204'
728ac9343a617ddc6872c2ef37e918dfd86639f7,'Fix incorrect docstring comment in moving_averages.py.\nChange: 127957023'
691085d5ef1ca92ae03bef61d7730db464650d0d,'Fixed the initialization of the gradients for the strided slice op on GPU\nChange: 127951209'
e411f23b6211b99ae596f4101f2760f3cd8e9f3c,"'Add support to contrib/tensor_forest for missing labels, handling empty sparse examples, input spec shortcut (for large numbers of features), and parsing string inputs that represent a large sparse bit vector of many possible strings.\nFix shapes of custom op outputs when using sparse inputs.\nChange: 127935724'"
dec548eb236f8f1381acb217bdb30b53f03c7e3e,'Fix minor typo\n\nFix indentation in tensorflow/workspace.bzl'
82e53ebecdac677b37cd9316f8d1be5b1627eec3,'Fix sparse case of ProximalGradientDescent not being plumbed correctly\nChange: 127908886'
eccab968741075737fd2c56bb981089f723b8143,'Fixed incorrect debug assertion\nChange: 127903711'
66b1548196315daf221741e57b3fc602dfaf6733,'Fix typo in rnn_cell.py'
e65ca952dd5c3f712a5d414e58555cbb68052ad4,'Add shape inference function for ConcatOffset.\nFix bug in the computation of #outputs in shape_inference_testutil.cc.\nChange: 127885874'
71d42677347129119c70f580daf931c95b43a44a,"'Have sample take a shape and rename sample(n) to sample_n(n).\nThis also allows dist.sample() to return a single sample per batched distribution,\navoiding the need to squeeze.\n\nAlso a fix to Categorical to support broadcasting in log_prob.\nChange: 127883481'"
3e968fa30c0d33daf6483add0728ea705184be13,'Fix imports for dirichlet.py and fix doc generation.\nChange: 127878217'
6af9331785a69a67466957f108b056c86c333b4f,"'Initialize random seed in TensorflowTestCase Setup to reduce flakiness in unittests.\n\nIn this CL:\n- a few tests that were failing at a rate > 50% when no seed was used. Created issue\n  https://buganizer.corp.google.com/issues/30149644 to track the fixing of these.\n- random_shuffle_queue with a shared_name always fails if a user provides a graph-level\n  random seed. This is because the op_level seed returned from random_seed.get_seed\n  changes per graph operation. The fix for this is also included in this CL.\n- added a test for random_seed, since the logic in there has become a bit complicated.\nChange: 127867374'"
c5983f87f0402f2cb8c627807917ebdf8e4d4bb6,"'Simplify Eigen package config (#3288)\n\n* Simplify Eigen package config\r\n\r\n* Add missing unsupported/Eigen/*\r\n\r\n* Fix pip setup.py\r\n\r\n* Adjust new eigen header\r\n\r\n* Fix bazel include dependency error\r\n\r\n* Adjust Makefile to work with Eigen changes\r\n\r\n* Remove nvcc workaround for CUDA <= 6.0\r\n\r\nCUDA versions prior to 6.5 gave an\r\n\r\n    error: kernel launches from templates are not allowed in system files\r\n\r\nerror when using gcc v4.8 and including code that uses templated\r\nkernel launches via `-isystem`.\r\nIn order to work around this, the GPU crosstool converted `-isystem`\r\narguments containing the cuda headers into `-iquote` arguments.\r\nThis workaround has now been removed.\r\n\r\n* Configure cmake and make to get eigen version from tensorflow/workspace.bzl'"
3d3bbc69bb653f770976878127f107a4d40b1db3,"'Two fixes to tf-slim train().\n1. When adding new ops, ensure they are added to the graph passed in the constructor.\n2. Allow logdir to be None.\nChange: 127856413'"
e728b00327934effec0bbae93caaf363165d0408,'Adding API docs for tf.contrib.learn.monitors (also fixed a couple typos in\nmonitors.py docstrings).\nChange: 127838930'
ffd998d900532035a2cf1e6d576c844cf2458880,"'optimizers: fix bug having to do with optimize_loss and unconnected variables\n* if a variable does not have a gradient, its gradient is None as returned by tf.gradients\n* this would cause an error in _add_scaled_noise_to_gradients (calling gradient.get_shape())\nChange: 127765890'"
a33ebe0bfc0c6d0c617d48a71f6f5136be881041,"'Fix tf.pow gradient at zero\n\nd(x ^ y)/dy mentions log(x), which creates false singularities if x = y.\nInstead, use x > 0 ? log(x) : 0.\n\nFixes #2295.\nChange: 127762504'"
358d92323a43d7a5c08896caaad6e14b0c040cc6,'Rename the histogram series chart to vz-histogram-chart.\nUpdate miscellaneous files to allow the vz- prefix.\nChange: 127750985'
e6e06b2fc89d41556d159d1181a558f8f5352b87,'Fix overflow detection in ConsumeLeadingDigits.\nChange: 127749101'
e137faf648712733dfee4f887cfa2c5d6c3de54a,'Fix bernoulli_test.py\nChange: 127737446'
a3f61c1d5c76339e6c9655dac426bb3822659772,'Fix gradient of prod op using cumprod (#3351)\n\n* Fix gradient of prod op using cumprod\r\n\r\n* Expand tests and comments'
c99a28959ca579e7464046247eaf6cd8d7e15206,"'Fix failure to detect name collisions in Saver.\n\nThis triggers when save_path is a relative path pointing to a file named\n""checkpoint"", but does not trigger when it is an absolute path.\nChange: 127727572'"
02e96f0dd15d3067a09301340f73e9ae10fedcbe,'Merge pull request #3353 from samjabrahams/makefile_readme_typo\n\nFix whitespace issue in contrib/makefile/README.md'
81d30d5509a7d5202377773222bf4af9525142b1,'Fix minor docstring bug in tensorflow_dataframe.py\nChange: 127715478'
10b4c154b5afbb732519251baab6c56618dc2ae2,'Fix inconsistent between word2vec and word2vec_optimized.'
e18158d0cef7a68c72830e07ebbb6bb2fa44500c,"'Fix whitespace issue in contrib/makefile/README.md\n\nThese paragraphs were indented by an extra space, causing Markdown\nrendering quirks that affected readability.'"
12e9eb0194042fcf9edeb4e3aafbfe0d2454d4f1,"""Fix partially unknown MultivariateNormal input shapes, test fully unknown case\n\nAvoids dynamic batch/non-batch dispatching when it's not necessary. Also possibly works around a bug in cond(), but that's an issue for another CL.\nChange: 127588880"""
194efde51895e0251d39c72c969dff1a50b67d35,'Rename Tensorflow Android example java classes to TensorFlow to fix native\nmethod binding error.\nChange: 127585524'
9e492dc0ffa92ca1d5be6378e6c748e2ef7ef638,'Fixed documentation for slice and concat.\n\nDocumentation does not seem to be rendered properly.\n\nAll other uses of ```python have a blank line before them.\nChange: 127574769'
7b2cc1c90b450aac5d28262744c4a0044368a495,"'Initialize random seed in TensorflowTestCase Setup to reduce flakiness in unittests.\n\nThis uncovered:\n- a few flaky tests, that started failing deterministically :). Their fixes are included\n  in this CL.\n- random_shuffle_queue with a shared_name always fails if a user provides a graph-level\n  random seed. This is because the op_level seed returned from random_seed.get_seed\n  changes per graph operation. The fix for this is also included in this CL.\n\nWhile I was here, also added a test for random_seed, since the logic in there has\nbecome a bit complicated.\nChange: 127564438'"
745f16f790d2f9abf2c6a70d6b383b152cca3cff,'Fix gradient of batch_matrix_determinant for unknown batch sizes.\nChange: 127551336'
54b7a3453fbc6d1f3030b44877b44394558485ac,'Multiple fixes in KMeans clustering estimator (#3279)\n\nMultiple fixes in KMeans clustering estimator'
4babb6d8c203d50f84acfd0643be98667812fe71,"'Fix nightly docker build failure due to multiple wheel files\n\nWith CL/127111314, there can be multiple wheel files (different names, same content) generated in the pip_test/whl directory. But parameterized_docker_build.sh assumes a single file, which has caused nightly docker build failures such as:\nhttp://ci.tensorflow.org/view/Nightly/job/nightly-docker-cpu/58/\nhttp://ci.tensorflow.org/view/Nightly/job/nightly-docker-gpu/55/\n\nThis CL fixes that.\nChange: 127473464'"
a24f7b9340508cfd9ded0b39727901396f6c73be,'Fix a bug in _DNNLinearCombinedBaseEstimator.linear_weights_.\nChange: 127470901'
4f63d69d562053a39b4ea25253a2e571dcec2554,"'Enable strided slice op as default slicing.\n\nThis allows more rich slicing of tensors i.e.\n\ntf.assign(var, foo[-5:-10:-1, ..., 3:5, tf.newaxis])\n\nThis does not include lvalue support for assigning to a slice.\nIt also does not include advanced indexing foo[bar] where bar is\na tensor.\n\nFixed bug in implementation where num_elements was used\ninstead of dims for an optimization code path.\n\nAlso make supervisor have an easier to read error message\nfor dim mismatches.\nChange: 127463353'"
333e0cf1f306652032abf66982b53fada43b368a,'Fix sampling_ops test timeout by making it a CPU-only test.\nChange: 127460861'
ee3801d7c7e28bb387b95d782fc83de91babbcd9,'Modify tf-image-dashboard so that it breaks long run names at the top.\n\nFixes: https://github.com/tensorflow/tensorflow/issues/3302\nChange: 127449137'
1f6a154967ecd74c538f9ddda3f4a83018a6eef7,'Attempt to fix iris_val_based_early_stopping test.\nChange: 127441610'
9c0fd2b6e8d74b8d6595cc0e9bcc323ab108be45,'Refactoring: Use std::unique_ptr<> to maintain pointer ownership in more places in tensorflow::DirectSession and tensorflow::SimpleClientGraph.\n\nRemove unused func_defs in ExecutorsAndKeys.\n\nFixes a few memory leaks on error paths.\nChange: 127425821'
181d7d4dd5b5428247b3298337d02ae062533ec0,'Fix divide-by-zero in specialized version of RequantizeMany...UsingEigen.\nChange: 127374168'
e24388242026245244435235ea66fd3693942c67,"'Fixes a bug in TensorFlow quantization, where a negative constant node\nhad its min and max values erroneously calculated, causing an exception\nto be raised.\nChange: 127362133'"
af0688d10fe7e81e1ab2de5454e7eee38fecabf7,'Add exclusive kwarg to scan ops (#3296)\n\n* Add exclusive kwarg to scan ops\r\n\r\nThis adds an `exclusive` kwarg to the `cumsum` and `cumprod` ops.\r\nDocumentation and tests have been extended to cover this kwarg.\r\n\r\n* Address review comments\r\n\r\n* Also give a default for reverse arg\r\n\r\n* Fix tests'
4ad8912996a25136a280312de3801f30dd4d4a74,'Avoid overflow in float-int32 cast when making test case for quantization.\nAlso fix bug in creation of test for 1-byte values.\nChange: 127344565'
ef76625346d46ebab8eebdaa3b55b7180e8b1b89,'Fix the CNN tutorial exercise as described here:\nhttp://stackoverflow.com/questions/38314964/speeding-up-tensorflow-cifar10-example-for-experimentation\nChange: 127343817'
1ce1e2924b76ae4658f6d71e7d74a7a1d0e23c66,"'Change cudnn version checking to check compatible version. (#3249)\n\nCuDNN versions with the same major version should be ABI\r\ncompatible, which means that if we release a binary\r\nwith cudnn version 5.1.7, it should be compatible with\r\na system whose runtime loads version 5.1.0.  This check\r\nwould trigger if the cudnn version loaded at runtime is\r\n5 but the compile-time version used was 4, or if\r\nthe the runtime was 4.1 but the compiled version was 4.0\r\n\r\nThis change is based off of recommendations from\r\nhttps://github.com/tensorflow/tensorflow/issues/2525#issuecomment-223523008.\r\n\r\nFixes #3225.'"
48bdf734cf277060553720b27ba5cd14d5e31df9,'Minor code doc fix - cwise_ops_common.h (#3292)'
19cf789efab823678ffbd2d0ab98d03c3940cc7a,"'Update URLs in README.md\n\nWith CL/127111314 submitted, the nightly CPU & GPU whl files should have a fixed naming pattern that tends to cause fewer pip install issues. Updating the URLs accordingly.\n\nAlso fixed a potential bug in pip.sh related to already-existing destination file name.\nChange: 127315945'"
092c06351f8f30d9e2e92a5ed30d9c0afc5b3a33,'Enable optimized requantization function.\n\nFix rezeroing of input range in optimized requantize function to account for\nsigned input.\nChange some computations to be in scaled-up fixed point instead of after scaling back down.\nMake rounding delta always be positive.\nChange: 127272485'
ca0a44f16186217ed2d4c24fbed2ff404a96d9ae,"'Clean up rnn nesting code and add raw_rnn method.\n\nAs part of the rnn cleanup, nest.flatten and nest.pack_sequence_as\nnow handle scalar structures (i.e., flatten of a scalar converts it\nto a single-element list; and pack_sequence_as performs the reverse).\n\nraw_rnn can be used to implement dynamic decoding of seq2seq models.\n\nadded minor tweaks to control flow gradient code to fix python3 errors\nin case of zero-length while_loops.\nChange: 127259950'"
5c056006cfd95ac48bb7e3cbb9d03bffa6df7e0d,'Fix typo\nChange: 127259731'
5d5db35ed2e9e90b95ab27f8b37898fd4543457f,'Allow gradient computation for scalar values in e.g. ReLU\n\nFixes #3277.\n\nChanges binary ops used to compute gradients for several operations to support zero-rank tensors.\nChange: 127255053'
23c798e86f868de311baf0344b07f307682d4799,"'Fix typo involving """""""" where """""" would do.\nChange: 127254774'"
10fbaf0581700641fc9b38b1bd722044bfb7c638,'Update Eigen to version that includes scan op fix (#3275)'
2298c99c13007541dd3eebb9bf8d66ae1fd4f0fa,"'Fix tf.multinomial to not crash on empty input\n\nOn the GPU, tf.multinomial uses Eigen.  On empty input, this triggers a bug in\nEigen causing a crash.  Fix this by not executing the kernel in the empty\noutput case.\n\nAlso fix shape validation assertions to handle more corner cases (hopefully all\nof them).\nChange: 127223716'"
f2aaead7ce18dcd01dd13e9c15d4e60846568f08,"'Bug fix: initialize WorkerCacheLogger::want_logging_count_ to 0.\nWithout this, collection of detailed execution timing information\nwould default to being on all the time quite often, resulting in\nsignificant performance and memory allocation overhead.\n\nReduces number of allocations for one benchmark from 120M to 101M.\n\nCo-discovered by sanjay@ and myself.\nChange: 127212900'"
35a99270db52c8134641ee0ade6efa10c135e5a1,'Merge pull request #3283 from caisq/fix-gcs-smoke\n\nFix bug in gcs_smoke'
838aa3975260453d9aa35c816f412878e09b8ced,'Fix bug in gcs_smoke'
68c54dd4de0a0878bf0e61315f15daa02c317e04,'fixed link to tensorboard readme in image retraining how-to (#3187)\n\n* fixed link to tensorboard readme\r\n\r\n* updated link to tensorboard readme per guidance from @martinwicke'
0a7c911898a4685c466b28f7c5c77407ff8b9429,'Fix a bug in _DNNLinearCombinedBaseEstimator.linear_weights_.\nChange: 127146715'
8d594c8ec230f2e307aa7075284d3af4af10bd75,'Fix a bug when loading checkpoints that use relative path.\n\nAlso add additional checks that can be triggered when users manually edit the\ncheckpoint file and can help them debug potential mistakes they may have made.\nChange: 127138923'
e40bbecdfd1116468d162cf2ef8d4bb8f879c5e9,"'When an invalid op is registered, ensure that tf.load_op_library returns\na nice error rather than silently generating invalid python code.\n\nFixes:\n- On linux, a fatal log that should be triggered in C++ seems to be ignored\n  causing the tf.load_op_library call to fail and exit.\n  We fix this by propagating the status from op registration to raise an\n  exception from python rather than print a fatal log.\n  The reason why the fatal log is being ignored on linux is unclear, my\n  theory is some sort of SWIG issue, but online research provided no results.\n- Op registrations that fail are still added to the OpDef registration.\n  This is only an issue when the Fatal log is ignored, but we fix this\n  anyways.\nChange: 127114085'"
cb8cdf73c3bfc06ae5dc4b6aba07f429110d8b08,"""Fix label_smoothing for sigmoid_cross_entropy_loss, and test for softmax_cross_entropy_loss with label_smoothing.\n\nThe sigmoid cross entropy with label smoothing was broken, and worse the tests for both that and the softmax cross entropy with label smoothing were broken.  I've fixed both issues here and added comments walking through the two examples in the tests so as to not inadvertently check in broken tests again.\nChange: 127100213"""
c9912fc42aa45450a8279bf57238ae4b38c3f6e4,"'fix dim mismatch bug in resnet example. (#2863)\n\n* fix dim mismatch bug in resnet example.\r\n\r\n- There was a bug which confused residual blocks with residual groups,\r\n  which is just  a list of blocks. The output of each block should be of\r\n  the same dimension as the input so that a residual connection can be\r\n  made. Upscaling only occurs between groups.\r\n\r\n- Changed some of the variable names to clarify the distinction between\r\n  groups, blocks and layers.\r\n\r\n* fix model saving in resnet example\r\n\r\n- no need for save call since models are automatically saved as part of\r\n  the fit method.\r\n- fix typo in which model was getting initialized twice.'"
4111f148e098c38a2f26adda4de95af93015ad60,"'Fixing typos (#3182)\n\n* `GraphDef` is deprecated\r\n\r\nAvoid ""WARNING:tensorflow:Passing a `GraphDef` to the SummaryWriter is deprecated. Pass a `Graph` object instead, such as `sess.graph`.""\r\n\r\n* Fix image and link being on the same line.\r\n\r\n* Accuracy is actually 0.9092\r\n\r\n* Setting a batch size consistent with the beginners tutorial\r\n\r\nThus the accuracy is the same: 0.918'"
476e04d284e26e874b24624fb411cf5f3196b242,'Fix for protobuf library order building problems (#3253)'
984570a7635e78f3c9fb1edf13611cf58f807e1a,'Fix word2vec excepction when words contain chinese. (#3257)\n\n* Fix word2vec excepction when words contain unicode.\r\n\r\n* Fix coding conventions.'
fd0fd62e1bbe59f427ed84e5d9aaa8b78cdfc587,"'Fix file chooser for graph controls.\n\nNow that the file chooser is conditionally shown, cannot use ""this.$.[id]"" to refer to the element.\nChange: 127084144'"
377c00bfc9bfec3f05337c0562329a97c3499d6e,'Add giflib library dependency\n\nSimple decode ops to support decode GIF images\n\nAdd testcase for decode_gif\n\nReplace gif testdata currently less than 20KB\n\nFix gif ops compile warning and unit test'
4b0b4859d710500dc732cc70b35d53ce07def1d2,'Merge pull request #3137 from terrytangyuan/sklearn_compat_dnn\n\nFixes #2935 sklearn compatibility fix with cross_val_score'
4afa5d951179389a427e606ff5e73670a936cef6,'Update README.md\n\nFix links to iOS examples'
c8cbae5aed372e1860ecb1b40f22281fc87a48be,'Docfix in transformed distribution.\nChange: 126972079'
aaee9828a73015bf1b911c1fd46272c1f3540d41,'Fix memory leak when using session run with options / metadata.\nChange: 126964234'
fd817e2d627ce502876d49c07b90e627ad9dd736,'Update README.md (#3162)\n\nFix markup for link to iOS examples'
1e8a65c6fcdae14823e433476d34aa13cb2b1134,'Fix flaky test\nChange: 126940987'
cf7f7de701874a091156cd76286c0ead6dc98be1,'Fix the TensorBoard tutorial\nChange: 126927117'
ec225aea6b899f187e68251be194e70f6ccb2440,'Fix IndexedSlices gradients within a tf.while_loop\nChange: 126924005'
23fb96fa4914f77e7a517fb68984e5e9a5dccd3b,'Fix an issue with merging dicts in Wide & Deep Tutorial with Python 3.x.\nhttps://github.com/tensorflow/tensorflow/issues/3177#issuecomment-231151090\nhttps://github.com/tensorflow/tensorflow/issues/3200#issuecomment-231162520\n\nFixes #3177\nFixes #3200\nChange: 126922632'
c00c073f52c2fc7b6672022c75d0b2abb9d9af3a,"'Begin removing feature column inference from linear and dnn estimators. Currently, the fit operation of each of them will infer feature columns from the passed in features. But it only works for dense float inputs.\n\nAlso, fixed some lint warnings.\nChange: 126921818'"
67bcc14e54f087aaf3dfb08f81db1abb6bd134e0,'Merge pull request #3231 from samjabrahams/session_default_typo\n\nFix doc typo from `Tensor.run` to `Tensor.eval`'
ff964505b239d37d8d5421072ef6fb65ba8025fb,'Fix bug in graph_actions.evaluate() checkpoint restoration.\nChange: 126909618'
f4264cb8e1ea70c612170ed72b9fe0382d1967a0,"'Change QuantizedConcatOp to use memcpy where possible, and eigen otherwise.\nFix overflow when using float in eigen to quantize to QInt32.\nAdd benchmark for quantized concat (adapted from concat benchmark).\nChange: 126877978'"
a62b165dd05adc5f0395170f8e72781bc240cbad,'Fixes #2935 sklearn compatibility fix with cross_val_score'
570117a3705d943b99f844c4718bdbc52451d54e,'Fix doc typo from `Tensor.run` to `Tensor.eval`'
b8b2cd31b83e028123b47dae44267871478589e3,'Fix stability_test.\nChange: 126864696'
60f88d618117995c145e5bffbda8a092d93267ba,'Fix typo in ExportMonitor documentation.\nChange: 126861516'
a66d61342972b4c18eb44644f7a8c8d6e5eb8a90,'Fix file reference in pydoc.\nChange: 126859499'
ac482df8f3522656d9bab96f665405aa2ba5f98b,"'Points links to the wide_n_deep.py example to master, and fixes a heading problem in the tf.contrib.learn quickstart.\nChange: 126857823'"
f040a57bca985207f3e988624b742dd7c87d92b9,'Fix flakiness in quantization_utils_test by allowing the eigen computation to\ndiffer from reference by 1 (as is done with another test there).\nChange: 126838117'
fc1f3f9188f64b1ffae58fa3804271ee84cf66b1,'Bug fix:  fix size of total counts vector in BestSplitDominatesClassification\nand fix offset used to calculate left_counts vector.\nAlso:  fix ClassificationSplitScore/GetTwoBestClassification so that\nnum_classes is actually the true number of classes.\nChange: 126820197'
bde59b25c816da0a43bac561b250e40990a08d81,'Fixing typo in math equation.\nChange: 126812666'
79fb8db4425f9efa712eb75a11c5ae1accc88f46,"'Fix gc.largest_export_versions() so it doesn\'t delete the ""00000000"" export folder.\nChange: 126785790'"
b0fc9af3818e3d5385edbfa9e38d66c3000ecf71,'Comment and ordering fixes to tensor_c_api:\n* Removed resolved questions from comments.\n* Alphabetize using declarations.\n* Move struct TF_Library and TF_Status closer to use.\nChange: 126768947'
f389b3812874ab36fbbd82d5a302cc530ed39756,"""Change the DEMO_DIR_PREFIX for the tf graph demo app to include tf_model_zoo/.\nIf it's not defined, use tf_model_zoo/ directly.\nChange: 126764667"""
5c09cb18fb156f5b4f8bdc88c491520984f134ce,'Minor comment fix to predict docstring.\nChange: 126757171'
71f6bb336e5e11d6da2cedac6ba1c992ad9992bd,'Merge pull request #3207 from dmitris/typo\n\nfix trivial typo (word repetition)'
e05ff5ea7b076b951d4e179596835dc6232702a5,"'Fix degenerate reductions\n\nEigen crashes on tf.reduce_sum(tf.zeros((0, 9938)), [0]), so we need to handle\nthe case of degenerate reductions ourselves (by manually filling the output\nwith identity elements).\nChange: 126745490'"
72ae75bd0ed13ca58bd4eef2a67349e3b508479b,'Add output_prefix parameter benchmark_model so that output directory can be explicitly specified on the command-line.\nChange: 126725665'
2b6a6dcead55c6377943a94feb108a88bcf4f193,'fix trivial typo (word repetition)'
81e379e9ab1ff6041afcec6ba24748d77566ec08,'Fix sampling_ops test timeout by removing unneeded network inferences in unit test.\nChange: 126691628'
d35fdbdb30d4c589a842d64d291e49e6e821aa5b,'Fix export utilities of Estimators and ExportMonitor.\ninit_op should be properly specified when exporting the model.\nChange: 126458099'
26217c20fb0b2766e2c17430340bdacc4f41f5c2,'Add retry logic to all GCS operations.\n\nAlso adds a few minor fixes for Google auth:\n - support for the no-auth case (public objects will still work)\n - less tolerance for almost expired tokens\n - better error logging for failed token retrievals\nChange: 126449395'
f17b2ff5c79da8f79fd6c3776952dcc78727d7b7,'Validate the argument to `tf.name_scope()` and fix bug in op name validation.\nChange: 126447618'
1c9e73a7a54413e205c9d0b127c61f0cb1adda34,'Update README.md (#3133)\n\nFixed spelling mistake line 64\r\nFixed link to NDK line 107'
084c915c2ddb7552810a2222e64be49ab887ff5c,'Fix arithmetic transform test (#3134)'
aabfe1d03ec518269f1b28793f70e4a95eb52574,"'Fix sparse_softmax_cross_entropy_with_logits for empty tensor\n\nIf the batch size is zero, we need to avoid calling into Eigen because Eigen\nwill explode.  Zero classes is an error.\nChange: 126359444'"
605aa53d2bb65a8a38dc72725e28ebe75a949d5a,"'Add C++ shape inference for Pack, Unpack, and Const.\nAdd GetAttr to shape_inference::InferenceContext.\nAllow setting NodeDef in shape_inference_testutil INFER calls (with new\nINFER*_WITH_DEF macro).  Fix a bug that caused a crash when an INFER..ERROR\nmacro called a shape inference function that did not return an error.\nChange: 126350221'"
379df09118ddfdbad19375d6d853254312ccf1ae,'Fix initialization issues with Variables whose shape contains a zero.\n\nFixes #2099.\n\nTries to give Variables the same behavior as non-Variable tensors in\nthis respect. Useful for not having to special case e.g. coefficients\nof a feature vector which may sometimes not have any features.\nChange: 126347791'
4f63c813dd60536d71ee105efdbdd9afb2d12e08,"'Raise an Unimplemented error when using MasterSession with place_pruned_graphs.\n\nThis change has the unfortunate side-effect of preventing the use of\ntf.InteractiveSession with a gRPC session. This is intended as a\ntemporary measure, while we fix the implementation of SimpleGraphExecutionState.\nChange: 126344674'"
1445e8054c65b776f63d43833da30dc3debdbc31,'Fix stack-use-after-scope detected by asan in gtl test\n\ninserted_count is used by RefCounted which is used by RefCountedVec.\nSo inserted_count must outlive RefCountedVec.\nChange: 126342639'
8975dca9beaab8c89c3f888116270a6c277151ee,"'Bug fix: Correct erroneous parent fading when tracing inputs, correctly fading series nodes when loading run metadata.\nChange: 126340706'"
bd8ac369f9253e4327ce82e2e2f6fca088dd1dd4,'Fixed bug in fully_connected_feed.py in which checkpoints were being saved to the directory below the desired output directory.\nChange: 126336688'
6062f26f626555ca980c716d52c6204e17745503,'Adapt the shape function for `tf.fill()` to handle partial shapes.\n\nFixes #3102.\nChange: 126324523'
125a96af8d0f2585c13f580ec4e8eb7d845fa3a9,'Merge pull request #3094 from lesniewski/workspace-scope\n\nFix path to boringssl_err_data_c in workspace.bzl.'
631764bd0ac83b82a3fa478100ac1852e964691d,'Fix OSS compilation failure in save_op_test.\nChange: 126263834'
aae01a1dea3a8345dc91f03df0baf1c6f8b1da23,"'Fix sdca_ops_test benchmark so that it works with the update SdcaSolver args.\nAdd benchmark for sparse data with many values. Currently performs terribly, optimization to follow separately.\nChange: 126255533'"
a2b9788ce440c350d4e3fef53fe0c51ba1c10c1a,'Ensure ExponentialMovingAverage returns correct average_name when used in scope\nFixes #2740\nChange: 126251978'
89615a6f933a69e20c20ee1e2a6b5342fdd2a096,"'Formatting fixes, and a few grammar/content improvements for clarity, in TF API docs.\nChange: 126239176'"
4e5f9a6d4298090b2a3bd3181395b2aee4f21272,'Fix stratified_sample so that it can be called multiple times without having duplicate summary tags cause an error.\nChange: 126220597'
fd8e8ee1ccd69d50044828d6dc83ab1a29d7390e,"'Fixed dependency in makefile, and sped up iOS build (#3104)\n\n* Fix for iOS compile problems\r\n\r\n* Fixed dependency in makefile, and sped up iOS build'"
393896a399d78720aa70cfd481f977716b51361b,'Remove linkstatic=1 from places where in un-needed in the newer Bazel version.\nUpdate the minimum required Bazel version to 0.3.0 which includes the bugfix.\nChange: 126189429'
e09808e0e4d05ffe4be97f563f0f14ae2ebb20dd,"'Fixing broken code in how_tos for fully_connected_reader.\n\n - Added initialize_local_variables()\n - Updated the code that generates the dataset since it no longer worked either.\n - This in turn required adding a ""reshape"" option that controls whether or not the imaged data is flattened.\nChange: 126165145'"
41efdfbf7711d34e45ccdad2bbd6fdf0a1515cbe,'Fix docstring typo: _TargetColum => _TargetColumn\nChange: 126163996'
8e813c6d988123b7d6c25d2d8aef42b60a36edc0,'Fix breaking barrier_ops and priority_queue_ops python3 unit tests.\nChange: 126149667'
1fce6b722566b75a9100a1795ed26e8c5f28db98,"'Adds tf.contrib.learn quickstart and tf-wide (and deep) stuff to tutorial left nav and index page (and fixes an URL in the wide overview). Also breaks the left nav and index page into sections, because the list of tutorials is getting long.\nChange: 126105974'"
5d468f05d92abaa3f9d4a18518087067a3e78805,'Merge pull request #3090 from RenatoUtsch/r0.9\n\nFix the TensorBoard README link on the how to page.'
a058cef0fb3351c040c93a601258da1a912522ba,"""Fix path to boringssl_err_data_c in workspace.bzl.\n\nPassing in an absolute path for `path_prefix` gave me this error:\n```\ninvalid package name '.../boringssl': package names may not start with '/'.\n```\n\nI believe the intent was to refer to the target within the TF repo, and\nI think that `tf_repo_name` is supposed to accomplish this."""
41e0d7b3e51c7dd78cf0518191cb9750ed8131c4,'Fix bug in naming of DNN logits.\nChange: 126139137'
581201ee0b5257cc73db2cfcd2c41278ad30537a,'Fix the TensorBoard README link on the how to page.\nChange: 125799092'
c5d67797976d6d357087623f22f837dc187d93f3,"'Adds tf.contrib.learn quickstart and tf-wide (and deep) stuff to tutorial left nav and index page (and fixes an URL in the wide overview). Also breaks the left nav and index page into sections, because the list of tutorials is getting long.\nChange: 126105974'"
40a85bcf69bf250736aeea70cf0c18e0fcd72daa,"'Make sure tests check if the machine has a GPU, rather than just checking if\nCUDA is linked in.\nAlso fix a typo in tf.test\nChange: 126104437'"
940143d5c4bc9aa2611e2081793376a3d38cfedd,'Bug fix in ci_parameterized_build re. extra args\nChange: 126101038'
522e3c95bde1b55b8d03c1633292d540409d3dd6,'Fix for iOS compile problems (#3075)'
ef16ec637b7fa1a178a33bb48009798675e8b081,"'Added Xcode version check and logging utilities for kernel errors (#2993)\n\n* Fixed makefile problems with new files and zlib dependency\r\n\r\n* Added basic Raspberry Pi example, and fixed math error in iOS examples\r\n\r\n* Added initial camera example for Raspberry Pi\r\n\r\n* Added model running to camera example\r\n\r\n* Added Xcode version check, and logging utilities for kernel errors'"
a8f707d4267a8da25dc92408d7fe0d6fac847f96,'Fix broken TensorBoard URI hashes.\nChange: 126039263'
24034f14ca14e15992140a5ece77df613d3985b2,"'Adds conv3d_transpose operation (3D ""deconvolution"") (#3049)\n\n* Add conv3d_transpose operation and register gradients for Conv3DBackpropInputV2 and Conv3DBackpropFilterV2.\r\n\r\n* Fix indentation.\r\n\r\n* Add a comment that says transpose of convolution is sometimes referred to as ""deconvolution.""\r\n\r\n* Update formatting.'"
14b8ed02dbd4da8fd7a269fa6a5fef5abe405489,"'Implement bidirectional_dynamic_rnn (#1779) (#2581)\n\n* Implement bidirectional_dynamic_rnn (#1779)\r\n\r\n* Modify return values of bidirectional_dynamic_rnn\r\n\r\nInstead of the concatenated `Tensor` of the forward and backward\r\noutputs, it now returns them separately as a tuple.\r\nAdditionally, the forward and backward states are now returned\r\nas a tuple.\r\n\r\n* Enhance readability of bidirectional_dynamic_rnn\r\n\r\n* Modified an ambiguous docstring in bidirectional_dynamic_rnn\r\n\r\n* Fix typo in bidirectional_dynamic_rnn'"
380e801f9251995122ae09ac11d83bd6a30edefa,"'Add a simple way to set the `default_session_config` on a `tf.train.Server`.\n\nThis makes it easier to set properties such as the\n`gpu_options.per_process_gpu_memory_fraction`, which have to be set on\nthe server, rather than individual serssions.\n\nFixes #3057.\nChange: 126009942'"
19583d38e045b6744379d02a22994d675716f511,'Merge pull request #3063 from caisq/python3-fix-2a\n\nFix Nightly Python3 error in graph_io_test.py'
6c14cd8e1bfbf1484ef22c82ac3badc53ed73f7d,'Validate the types of arguments to `tf.Session.__init__()`.\n\nFixes #3035.\nChange: 125992640'
a120b0bec12d47d4769a604b1cfafa3988a19a0c,"""A series of changes to significantly reduce the number of allocations\ndone by models distributed across many devices.  A small\nmicrobenchmark model that runs two banks (A and B) of 30 nodes with a\n30x30 full shuffle between them, where each of the nodes in A and in B\nrun with one node on each of the 30 devices (so 30*29+30+30, or ~930\nseparate RPCs) was showing ~111,000 allocations per iteration of the graph.\n\nWith the changes here, this is now down to ~64,300 allocations per iteration.\n\nChanges include:\n\no DeviceContext::CopyDeviceTensorToCPU and related helper routines:\nuse StringPiece instead of const string& for the tensor name (avoids\ncreating a string in some cases where the caller only has a\nStringPiece available).\n\no Change some Rendezvous and BaseRemoteRendezvous interfaces to\ntake a 'const Rendezvous::ParsedKey& key', rather than 'const string& key'.\nIn many cases, the callers were already having to parse the key\ninto a ParsedKey, and so we were doing the parsing multiple times at\ndifferent levels as we processed receiving or sending of a tensor.  This\nreduces the number of times that we parse a key as it flows from a Send\nnode through to a Recv node on another worker.\n\no Changed Rendezvous::ParsedKey so that it makes a copy of the underlying\nfull key, and then uses StringPiece objects to point into this copy for\nthe src_device, dst_device, and edge_name pieces.  This turns 3 string\nallocations into 1 per Rendezvous::ParseKey call.\n\no Added new StringPiece Rendezvous::ParsedKey::FullKey() accessor to\nreturn a StringPiece for the underlying full key, and used that in a\nfew places (mostly logging) where that is useful.\n\no In many places, used std::move(function_variable) when assigning to\n  an instance variable.  This eliminates a very large number of excess\n  std::function allocations/initializations (~56000 of the baseline\n  allocations were related to std::function setup or cloning, and this\n  is now down to ~11000 after this cl).\n\no In the RPC-based remote workers (StubbyRemoteWorker and\nGrpcRemoteWorker), changed the code path in RecvTensorAsync to avoid\ncreation of a std::function with 6 arguments unless necessary.  There\nare three cases now handled separately:\n\n  (a) We're not logging, and we didn't make a copy of the request that we\n      need to free: just use the passed in 'StatusCallback done' object\n      directly, without creating a wrapper std::function object at all\n\n  (b) We're not logging, but we made a copy of the request that we\n      need to free: we create a simple wrapper std::function that\n      invokes the passed in 'done' callback, and then frees the\n      req_copy request copy object.\n\n  (c) We're logging: we create the std::function object with all the\n      necessary state to log when the recv has finished.\n\no Changed DeviceMgr::LookupDevice to take a StringPiece, rather than a\nconst string&, and changed the hash table to use StringPiece keys.\nThis allows clients that just have a StringPiece device name in their\nhand to avoid a string creation to lookup the Device* object.\n\no Changed ExecutorState to use a specialized TaggedNodeReadyQueue that\ninternally uses a gtl::InlinedVector<TaggedNode, 16>, rather than\nusing a std::deque<TaggedNode> for keeping track of nodes ready to\nexecute.  This is faster because it avoids allocations entirely if the\nready node queue doesn't get bigger than 16, and inlined vectors are\ngenerally faster than std::deque, at a minor risk of using more memory\nif this queue grows to very large numbers of ready nodes (mostly imaginable\nonly in pathological graphs).\n\no In ExecutorState::Process, allocated a single ExecutorState::AsyncState\nobject to keep track of all the state we need to preserve for an asynchronously\nexecuted node, rather than keeping this state implicitly via a very large\nnumber of arguments to a lamda function.\n\no Added new atomic std::atomic<bool> status_is_ok_ in\nBaseRemoteRendezvous.  This allows us to avoid acquiring the lock when\nwe just want to check if the status is non-OK in\nBaseRemoteRendezvous::Send and BaseRemoteRendezvous::ValidateDevices.\n\no In GraphMgr::RunAllDone, changed assignment of args.runner to avoid\none extra level of std::function indirection (binding the function directly\nto the ThreadPool::Schedule routine, rather than creating an intermediate\nlambda function that invokes this inside the body of the lambda.\n\no Added freelist of RpcRecvTensorCall objects in\nthird_party/tensorflow/core/distributed_runtime/rpc/rpc_rendezvous_mgr.cc\n\no Changed third_party/tensorflow/core/framework/rendezvous.cc to keep the\nhashtable of Item* objects keyed by uint64 (hash of the tensor name), rather\nthan the full-string tensor name.  Collisions in the 64-bit hash space\nshould basically never happen.\n\no Sped up DeviceNameUtils::ParseFullName by optimizing for the common\nordering of parts of /job, /replica, /task, /device.  The parsing code\nwas general enough to handle any order, but did so by comparing the\nprefixes 4, 3, 2, and 1 times, respectively, rather than 1, 1, 1, and 1 times.\n\no Sped up DeviceNameUtils::SplitDeviceName to avoid extra string copies.\nChange: 125991891"""
9d95b58f63e2b3ef09f7b7c2c8d824a5fb5f3438,'Fix Nightly Python3 error in graph_io_test.py\nChange: 125988941'
0da0ecdf1f610e052f4e9e34a76fd059bb6f1912,'Fix Nightly Python3 error in graph_io_test.py\nChange: 125988941'
8d66fd5b4e8838acee9dc047f6ebb0ccdf7b0ee0,'Fix sampling_ops docstrings and improve input validation.\nChange: 125983822'
861644c0bcae5d56f7b3f439696eefa6df8580ec,"""Merge pull request #2985 from sharkdtu/master\n\nfix word2vec_test's tmp path"""
3bdf3766ec800ff35fd0e82043d2776df4777aa0,'Added comparison operations.\n\nFixes import of unary transforms.\nChange: 125954625'
e91dba9f35939e276d5f8618f9d325276579f4a9,'Fix deprecated decorator.\nChange: 125907725'
84bcff1e814ee5697b5980535583737f8e81d82f,'Fix some typos (#3045)'
5f358ef62b95f65afb04f49fa8a17d2543957205,"'Fix a bug in the handling of Send/Recv of ref edge. The bug shows up in the corner case that an op has multiple inputs, one of the input is of ref type from a different device, and one other input is also remote but cached for some other reasons.\nChange: 125837438'"
ad62daacadb2e53712761ff44cf7d8ddb84be63a,"'TensorBoard cleanup & infrastructure improvements\n- dist/index.html now uses only relative, not absolute, imports\n- tf-tensorboard now contains all the demo logic; tf-tensorboard-demo was removed. The vulcanization logic was simplified.\n- Fixed serialize_tensorboard, and cleaned it up a bit.\nChange: 125827649'"
c3b6352040fe05af26bf952d45288e40aab1ea5b,'Fixed build.\nChange: 125827302'
e1576f5a1d3270661e33a62f9fa128c7764f7008,'Fix docstring for `BaseSaverBuilder._AddShardedRestoreOps()`.\nChange: 125816703'
5bffa7d239f0482d52388fad4bce4840951aeaf8,'Fix linker errors by adding a dependence on constant_op to targets using fill_functor. This is needed because the templates in fill_functor.h are instantiated in constant_op.cc.\nChange: 125816082'
0c1285bfec7ab6330ea059c27bedf39935072e41,'Fix the TensorBoard README link on the how to page.\nChange: 125799092'
9da9c1000fa3a169f566c6fb28b90fe467ffe660,"'README: fix shell snippet markdown (#3022)\n\nFixes shell snippet markdown, by ensuring that\r\nthe shell command `python` and the actual Python code\r\nare separated in different code blocks. This is to prevent\r\na formatting nit because $ not in string form, is not\r\na valid Python token.'"
cab5484626dc3a0d51aac2bfabc95acb52fab995,'Fixes a bug in logistic regression eval\nChange: 125789944'
9c4c4cbc6e5315e0fd759505bad5f45acdd9c206,'Implement gradient for StridedSlice op.\n\nStridedSliceGrad op implements the gradient of StridedSlice.\nAlso implement python benchmark for StridedSlice and simple Slice.\nFix bugs in special case optimizations in StridedSlice.\n\n(Toward resolving bug #206)\nChange: 125789921'
041960909604e5ebf992f78cd3ae0e07587d746a,'Fix tf-slim train() for use with non-default graph.\nChange: 125783541'
2d0dcd9faa34d556ae947650d3414ea1fb142013,'Fix comment.\nChange: 125780396'
331e724d1fec7737cee3172064210ebb26136711,'Fix a flaky test by computing half-precision gamma samples with float precision intermediate calculations.\nChange: 125776264'
b6aa301709c4770fb5dc32a7ec28658c8df7f19f,"""Small bugfix to tf.slim eval code, plus adds some logging.\n\nRE the bugfix, I noticed that my tf.slim loss metric is worse than my training loss, and I'm guessing it's because my model is evaluated concurrent with its variables being loaded from a checkpoint.\nI'm running now to see if this fixes things.\nFeel free to ignore this CL until then.\nChange: 125728083"""
b307333a9be01f37b7f99e8ece1790af5ddc8e3a,'Add more unit tests for BaseEstimator/Estimator (and one for tensor_signature). Fix bug if no targets used in training. Factor out some repeated code for better test coverage.\nChange: 125701861'
bf258618b9c1b608d3cb883a528ff822ad1cce20,'Bugfix in while_loop documentation.\nChange: 125684232'
cf7230b8e6bc5c8ae80d64e8f9eda03cae437da1,"'Modify metric_ops.remove_squeezable_dimensions to handle statically unknown ranks.\n\nAdd tests to assert all update_op tensors returned from metric_ops produce the proper metric value, and fix streaming_auc to do so.\nChange: 125639012'"
ea9ec0a3f938dc4db86a6d8616b7a9e62d73d49f,'Adds a crop_and_resize_op. Crops multiple boxes from a single image and resizes them to fixed output size by bilinear interpolation.\nChange: 125623274'
1a85357b496cbbb4cc766683eee261ba0b614aa5,"'Change DNN estimators to create columns the same way for fit, eval, and predict.\n\nFix some issues with scope and variable names.\nChange: 125621539'"
72db4b4d4da34a1f0f9c4324be3003bf60e45bb0,'Fixing reference variables.get_or_create_global_step() and adding a unit test.\nChange: 125608314'
025df9e292771b141914691d2e994c6fc662606d,"'Bug fix: properly handle the case when the requested range cannot be satisfied.\n\nWhen the range can\'t be satisfied, the GCS server returns the 416 HTTP code and\nsome additional information in the body. The curl library expects the exact amount of\nbytes in the body as requested in the range, so curl_easy_peform fails with a\nmessage like ""Failed writing body (12 != 171)"". With this fix, we don\'t check the\nreturn value of curl_easy_peform if the HTTP code was 416.\nChange: 125579779'"
bac4e0d4f4fac55361e7735a13a15bd65693346d,'Fix doc for _DNNLinearCombinedBaseEstimator.\nChange: 125575345'
34f6f4b1b16dae9676639cfa7444d937541b40ed,"'Fix order of init_op, local_init_op and tokens_init_op.\nlocal_init_op are run by each worker, while the init_op is only run by the chief.\nFix __all__\n\nAdded initial README.md\nChange: 125573668'"
df798f7508225ff2d6fd0e25112e5c6471e32f58,'Use fix graph for dropout if is_training has a constant value.\nChange: 125571683'
91757d7ba533239d804484fc89012e1f2030f245,"""Fixing bug in which the default value of the init_op was checked against None rather than _USE_DEFAULT. This wasn't caught as the value of _USE_DEFAULT matched supervisor._USE_DEFAULT. A unit test has been added which fails for the old code but succeeds with the new code.\nChange: 125564252"""
e57750551e4aecea2ecc7f9339f00ca84997514c,'Make floating point number parsing functions locale independent.\n\nFixes #2974\nChange: 125530598'
a76f93a1894cbd1db84470604be15d6a136b00a1,"""fix word2vec_test's tmp path"""
297ca67a8a06bb7128476761cfee8d56145ee49a,"'Fix negation of flags with dashes, add test. (#2888)'"
f8ffb6fce62002fdf9537b391aea93df6ec00aa3,"""Fix stray 'and' in LinearRegressor __init__ docstring\nChange: 125508441"""
25023dffcf88f46777b5ddab457ac84a5bed5d2f,'Merge pull request #2981 from caisq/r0.9-3\n\nUpdate build file to fix #2703'
dcbc4701845b6bad57b6183514d64d0eeabad57a,'Upgrade bazel version to 0.3.0 to fix a bunch of recent bugs.\nChange: 125491544'
1bfe153a894fbcb00cec6678721b2ef45e68e172,'Update build file to fix #2703'
1602ac6a918aa130c14e8058c9b940792242d995,'Fix typo in the run_local call of Experiment. Added test for run_local.\nChange: 125458571'
a2d6cf7c7b7ddd65fabbbe722df12ec9e85097ee,'Merge pull request #2958 from tensorflow/itsmeolivia-patch-1\n\nUpdate build file to fix #2703'
f6c59f039f29419fb7f2b4e69f39365781853af0,'Fixing bug in which negative variances were produced due to order of operations.\nChange: 125452820'
c9e8343e48f201220ec61ca8fdea6bed9bc00b1c,"""Quick fixes:\n* Consume Aborted exception, because it happens on PS restarts. Keep training the model.\n* Make sure to stop session before coordinator stop, to abort the queues blocked on enqueue op.\n* Consume exception when coordinator is asked to stop, if threads didn't stop yet.\nChange: 125427252"""
741dc96dd7df2a9f5e46c263757015dbb7237492,'Merge pull request #2969 from martinwicke/r0.9-time-fix\n\nR0.9 time fix'
b77f607ec03ef251c1d28cc00bc743aad26606a4,"'Merge pull request #2960 from terrytangyuan/fix_df_test\n\nAdded missing pandas handling, fixed tf dataframe tests'"
f68cbf19fb8f67a5dce889a5464a358ec0035f18,"'Use `numpy.asarray()` instead of `numpy.array()` when converting feeds.\n\nThis reduces the number of unnecessary NumPy array allocations when\nfeeding values into a TensorFlow session, and can reduce heap\nfragmentation.\n\nFixes #2942 (as far as possible). Note that we recommend that you use\ntcmalloc when running TensorFlow, as it is less susceptible to heap\nfragmentation with mmany large objects.\nChange: 125407787'"
2c3385523f00ea7de97ec16a7c060b39b834a7f5,"'Fix build for PPC. (#2911)\n\n* Fix build for PPC.\r\n\r\nThis CL includes 2 part -\r\n1) - provided a speciliazation for vector types on non-sse\r\nplatforms,\r\nthe default implementation does not compile for Packet4f type.\r\n2) - fixed the default implementation (which is unreachable) for 2\r\nfunctions, the origin version does not compile for Packet4f type.\r\n\r\nTested:\r\nBuilding on ppc machines and x86 machines.\r\n\r\n* Keep type ""packet4f struct"" opaque.\r\n\r\nTested: build on ppc and x86 machines.\r\n\r\n* Fixed runtime errors (exposed by tests) and provide more specialization.\r\n\r\nIn CL2 - ""static_cast<int>(a_float)"" is not the proper way to view the\r\nunderlying memory as integer, it should be re-written as\r\n""reinterpret_cast<int *>(&a_float)"".\r\n\r\nThis CL (CL3) also add speicialization for pload2bf16 and pload4bf16 on non_sse2\r\nplatform.\r\n\r\nTested:\r\nBuild test - cross build for ppc and native build on x86_64. (via blaze build)\r\n\r\nRuntime test - tested by replacing original sse2 version with my\r\nnon-sse2 version, passed x86_64 test ""sparse_matmul_test"" (via blaze\r\ntest). Though I didn\'t run on ppc machines, because we still have other setup\r\nproblems.'"
42496a147f5e3da17ea24f12bee51c6dfc0c66a5,'Fix a bug related to using stop_gradient inside a loop.\nChange: 125381550'
451f18cd093dbaf9dec0f492405b5f93892b2410,'Fixing minor typo in comments. (#2961)'
921b7097a010bd101c0c72badd8e51fff91bddc9,"'Added missing pandas handling, fixed tf dataframe tests'"
91d65f6e5971302081a9348c4188a5031c30b021,"""Actually fix the race condition for concurrent reading/writing of `tf.Graph`.\n\nThis change should fix issues where (e.g.) a node is added after queue\nrunners are started, and an error like `NotFoundError: FetchOutputs\nnode input_producer_Dequeue:0: not found` is reported.\n\nThe cause of the error was an incorrect multiple read of the\n`Graph.version` property. A graph has a `version` property that is\n(currently) defined to be the count of nodes in the graph. To keep the\nfront-end and session graphs in sync, the `tf.Session` maintains a\n`_current_version` property, which is intended to be the last version\nat which the graph was synced to the backend (via\nTF_ExtendGraph). However, the logic was wrong in the face of\nconcurrent writes to the graph:\n\n1. x = read `Session._current_version`.\n2. y = read `Session._graph.version`.\n3. If y > x:\n   - Call `TF_ExtendGraph(Session._graph.as_graph_def(from_version=x))`\n4. z = read `Session._graph.version`.\n5. Set `Session._current_version` to z.\n\nWritten this way, the race condition is clear: a node added after step\n3 and before step 4 would never be included in an TF_ExtendGraph call,\nand so would never be added to the graph.\n\nThe fix involves returning the current graph version atomically with\nthe GraphDef, using a new internal method called\n`Graph._as_graph_def()`. These are protected by the graph's mutex, to\nensure that no node can be added between creating the GraphDef and\nreading the version.\n\nFixes #2957.\nChange: 125356853"""
14712c983015c36382913b55ae6455fecb7c9078,'Update build file to fix #2703'
2dde4e318db333f1388e78e2e9b1450a07294045,'Merge pull request #2914 from oxtopus/fixup-mnist-url\n\nFixup url to MNIST fully-connected feed tutorial'
384fed752eae2637d137c83babb3dd07fc18c9e8,'Merge pull request #2831 from martinwicke/r0.9\n\nFixes to TensorArray and Functional ops'
2f0b20fd6e63512d490e5780314f280ab92ee901,'Merge pull request #2934 from martinwicke/r0.9-py3-fix\n\nFix genrule Python execution problem with Python3.'
b5925264825365e56ac2046732902848f6fcaa7a,"""Merge branch 'r0.9' into r0.9-py3-fix"""
99e52a8ad1fb708b703f1913d1d98994426bf653,"'Bugfixes to TensorArray and functional ops:\n\n- TensorArray shape inference now works correctly for scalar elements\n- TensorArrays each now get a unique name at runtime, per step.  This means\n  that they can be used in nested functional ops (e.g. tf.scan(tf.scan(...)))\n\nChange: 125110643'"
de1334da2c6e074c427d283898450de6e50a605d,"'Added camera example for Raspberry Pi (#2949)\n\n* Fixed makefile problems with new files and zlib dependency\r\n\r\n* Added basic Raspberry Pi example, and fixed math error in iOS examples\r\n\r\n* Added initial camera example for Raspberry Pi\r\n\r\n* Added model running to camera example'"
e0dc90406a3d6073cfeeadccc81f1630eab5550a,"'Added basic Raspberry Pi example (#2947)\n\n* Fixed makefile problems with new files and zlib dependency\r\n\r\n* Added basic Raspberry Pi example, and fixed math error in iOS examples'"
2ab6b5c75e38fef525c9ed933367c4183da9cc17,'Fixes typo\nChange: 125190689'
582e6c831c5cafeb87b9c6d483c8bafb51d25e09,'Fixed makefile problems with new files and zlib dependency (#2936)'
8616f149a241b19d01274c936f36a9245f6d2828,'Fix genrule Python execution problem with Python3.\nChange: 124202095'
ac7e6f38666240350e51b2d8d44a6c2a201c8866,'Python3 fix in monitors_test\nChange: 125178681'
598867b6a207be402cf3555697a212825b81a882,"'Bugfixes to TensorArray and functional ops:\n\n- TensorArray shape inference now works correctly for scalar elements\n- TensorArrays each now get a unique name at runtime, per step.  This means\n  that they can be used in nested functional ops (e.g. tf.scan(tf.scan(...)))\nEND_PUBLIC\n\nTESTED:\n  - opensource_build: passed (http://ci.tensorflow.org/job/tensorflow-cl-presubmit-multijob/1778/)\nChange: 125110643'"
e298d06a08577b6c538f5818072bef8eba237c3a,'Fixup url to MNIST fully-connected feed tutorial'
ab36848b89137d474779e0a8767116d8e7fecfde,"'Fix bazel query flag error\n\n""--verbose_failures"" is not a valid option for ""bazel query"". This has caused subtle errors in CL builds.\nChange: 125097346'"
fe70d8fff854f1efc006cd2c78fb9ed19984b210,'Tied a few loose ends:\n * Added a test to ensure that we can enqueue / dequeue tensors of half floats\n * Fixed the description of add_check_numerics_ops\nChange: 125082343'
3eefc6ff1dd421a993b66bfd147dca68b40afee5,'Fix markdown list in dtypes documentation (#2904)'
a7b7b26051989e1af40e657adef84c5550b838fe,"""A few code hygiene fixes  (#2898)\n\n* kPageSize is never used\r\n\r\n* Mark overriding function 'override'\r\n\r\n* Remove unused variable\r\n\r\n* Mark overriding function 'override'"""
19bda20635c91060996fe44fe201875b3b9ae7a2,"'Merge pull request #2878 from rdadolf/master\n\nHard-code libcuda version number to ""1"". Fixes #2865.'"
e13cd0530218e3f8c963b94967c924a8abe3650c,'Merge pull request #2891 from mrry/r0.9-cherrypick\n\nCherry-picking stability and doc fixes for r0.9'
8bd8c419b25128103241e17d89cf62d3d2d78349,"'Moves the ""Parameters:"" section in the class documentation to an ""Args:""\nsection under __init__. Also fixes formatting of some Examples sections.\nChange: 125019273'"
a496df8788eb7d9a5f9b4341e0cdf4cf4dc10fcc,"""Fixing absolute_difference loss's default scope name.\nChange: 125004103"""
1f35660f712ea24d97985eceaa97618770e76a77,"'Extended slicing in TensorFlow (similar to NumPy)\n\nThis extends slicing to allow a more complete set of the basic slicing\nin NumPy. For example, you can now do negative strides while zero strides\nare still disallowed.\n\nNOTE: This change does not yet hook up the new slicing behavior to the\npython getitem operator, because we do not yet support gradients\n(unlike the simpler slice we are extending).\n\nNOTE: This change does not introduce slicing using tensors as arguments\n(advanced indexing in NumPy).\n\nfoo[5:1:-2]\n\nYou can also do ellipsis\n\nfoo[5:1:-2,...,3:4]\n\nIn addition you can add new dimensions\n\nfoo[5:, tf.newaxis, ...]\n\nFixes part of #206.\nChange: 124998811'"
98228472fc49e9ce4e016e933a1bf564f2caf9c3,'Fix failing test.\nChange: 124994976'
0d0f37aef1f87c4c31c12ce876864022f624cd4c,'Add a size check before attempting to serialize a variable.\n\nThis prevents the TensorSliceWriter from attempting to serialize\nvariables that are larger than 2GB. It prevents potential memory\ncorruption and segmentation faults.\n\nFixes #2447.\nChange: 124921899'
31f9379a537f13504c866c7551e7f8c01a523c67,'Improves the `tf.QueueBase` documentation with regard to error conditions.\n\nFixes #2326.\nChange: 124364329'
f8ef65c929de10cebefca647e627a84aa69d2d23,"'Three fixes to the gRPC services.\n\n1. Re-disable fail-fast for the GrpcWorkerService.\n\nThis was broken in the change to a newer version of gRPC. Session\ninitialization and recovery relies on worker calls blocking until a\nresponse is received.\n\n2. Move the serialization specialization to the *_impl.h files, so that\n   they are picked up when sending responses.\n\n3. Raise an error when the ByteSize of a message to be serialized is\n   negative.\nChange: 124302956'"
38983397bc5151bcafee5b5dfbdc11ad12adc8d9,"'Ensure that all RunManyGraphs calls complete before returning from cancellation.\n\nThis fixes a potential race condition and segfault, where the response\nbuffer could be deallocated with an RPC in flight. This would happen\nif a step was cancelled before its master blocked on the RunGraph RPCs.\nChange: 124255996'"
4cc40b10698c66e1fbac4b9942093c8927a54f7b,'Fixing flakey test in learning_test.py\nChange: 124992790'
c7df235027fc07ea3a2a6c04ff2f69cd86afae57,"""Resubmit of earlier fix to 16 bit PNG encoding/decoding\nendianness.  Previous change introduced a python2-ism\nin the new test that broke on python3.\nEND_PUBLIC\n\nTESTED:\n - passed opensource_build (all clean this time, so didn't\n   miss any python3 errors.  phew.)\n - unit tests\n\n*** Reason for rollback ***\n\nFixing python3 test breakage in original CL.\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 124905782.\n\n*** Reason for rollback ***\n\nFailing in python3 test job on jenkins.\n\n*** Original change description ***\n\nBEGIN_PUBLIC\nFixing incorrect endianness on 16 bit PNG encode & decode.\n(fixes #2619)\nChange: 124987398"""
a8c3de3bddf01b4b80c986b3bb81d2a1658be3c8,"'Set `__array_priority__` on Variable to make numpy operator overloading work.\n\nThis fixes a bug whereby using a `tf.Variable` as the right argument\nto an overloaded math operator (e.g. `__mul__`) when the left argument\nis an ndarray would produce an incorrect result (e.g. returning an\n`np.object` ndarray where each element is the corresponding element of\nthe LHS, scalar multiplied by the variable).\n\nFor example, before:\n\n```python\n>>> arr = np.array([1, 2, 3], dtype=np.int32)\n>>> v = tf.Variable([1, 2, 3])\n>>> result = arr * v\n>>> print result\narray([<tf.Tensor ...>, <tf.Tensor ...>, <tf.Tensor ...>], dtype=object)\n>>> print result.eval()\nAttributeError: ...\n```\n\n...and after:\n\n```python\n>>> ...\n>>> print result\n<tf.Tensor ...>\n>>> print result.eval()\narray([1, 4, 9], dtype=int32)\n```\n\nFixes #2289.\nChange: 124985637'"
30a556febc7ec3432fc84914fb59c4d4f1cf2321,'Fixes the upsampling bug in resize_area.\nChange: 124980650'
b3cdbcf13659b8a6bfe83b61248ab0e429fd9273,'Minor typo fix. (#2889)'
10779889eab586e00a8f07e8074894a164a5c140,'Fixed uninitialized variable error.\nChange: 124978761'
8e243b10bd45ad6af522578700e431fec657fe3d,"'Expand Tensor Handler to decode FixedLenFeature and VarLenFeature, while both return Tensors. Not it allows providing shape_key or shape to reshape Tensors.\n\nAdded SparseTensor Handler to handle SparseTensors (which can be made dense)\n\nAdded tests.\nChange: 124974467'"
2491c2c5fba31ed90d70e06f9aa0342dcd6bf09f,"'Make sure that concat complains about concat_dim < 0 (#2871)\n\n* Make sure that concat complains about concat_dim < 0\r\n\r\nCurrently tf.concat already checks whether concat_dim is too large for\r\nthe provided arguments at graph construction, but it should also make\r\nsure that its >= 0.\r\n\r\nThis fixes #2868.\r\n\r\n* Address comments\r\n\r\n* Fix indentation in concat op tests'"
ea00daa3945d10bbce59e65164acc9d40f17f9a5,'Merge iOS and Pi changes into 0.9 branch (#2857)\n\n* Updated iOS settings (#2694)\r\n\r\n* Added linker options to armv7 in iOS makefile\r\n\r\n* Updated Eigen version in Xcode iOS examples\r\n\r\n* Updated iOS link flags\r\n\r\n* Fixes for Raspberry Pi compilation (#2701)\r\n\r\n* Added linker options to armv7 in iOS makefile\r\n\r\n* Updated Eigen version in Xcode iOS examples\r\n\r\n* Updated iOS link flags\r\n\r\n* Added support for Raspberry Pi\r\n\r\n* Updated Pi documentation and Eigen version in makefile (#2743)\r\n\r\n* Updated Pi compilation documentation\r\n\r\n* Updated Eigen version in makefile\r\n\r\n* Updated documentation link\r\n\r\n* Updated Pi documentation\r\n\r\n* Updated Pi build settings\r\n\r\n* Fix for build issue #2742; (#2749)\r\n\r\n(1) Additionally added linking against pthread for linux machines\r\n\r\n* Missing space; (#2762)\r\n\r\n(1) bash file check will fail without the space;\r\n\r\n* Updated Eigen include paths for iOS examples (#2841)\r\n\r\n* Updated Eigen hashes\r\n\r\n* Updated Eigen paths to a permanent link\r\n\r\n* Merged Eigen header changes\r\n\r\n* Merged Eigen header changes'
27b6d2c32b4a111051604866a5716c5dea260f2f,'Fix exclusion rule for early_stopping_test in test_installation.sh.\nChange: 124945043'
5b7d0716f7fad28bcf5490d2b6406be651036b14,'Fix android build of protobuf with android_ndk r10e\nChange: 124926049'
cc40cd3b0a8b83f5ee071b7ee32c17b56815a89c,'Add a size check before attempting to serialize a variable.\n\nThis prevents the TensorSliceWriter from attempting to serialize\nvariables that are larger than 2GB. It prevents potential memory\ncorruption and segmentation faults.\n\nFixes #2447.\nChange: 124921899'
075189747e9fc90976f84ed835452f955767a33a,'Fixing incorrect endianness on 16 bit PNG encode & decode.\n(fixes #2619)\nChange: 124911673'
f45874b4a969a60fa9ced86e6769012e4912b5ca,"'Hard-code libcuda version number to ""1"". Fixes #2865.\n\nAs per comments from nvidia-docker dev @3XX0, hardcoding ""1"" should be\nreasonably safe. The TF_CUDA_VERSION variable from the configure script\nis not appropriate here (it will contain something like ""7.0"" or ""7.5"",\nwhile the libcuda soname major version number should be ""1"").'"
2ef218d722f316339ed10be2d9a3375b4a4d9f78,'Fixing incorrect endianness on 16 bit PNG encode & decode.\n(fixes #2619)\nChange: 124905782'
8c2341cd87d10471a81a74081dc9f58d28328ec5,"'Merge pull request #2866 from tensorflow/revert-2757-bugfix/classifier_weights\n\nRevert ""Logistic regression weights: Using a `tf.Tensor` as a Python `bool` is not allowed""'"
a558c6e3b38846727873b5afbbc3ba309ae5dff5,'Execute TODOs to\nmove client/graph_util.py\nops/common_shapes.py\nops/constant_op.py\nops/op_def_library.py to framework/.\nAlso moved 2 corresponding test files and fixed some linting errors\nChange: 124885409'
c4eaa0e9b5409a67b53bbe50e5e593ad8c0f7f1e,'Blacklist flaky learn/tests/nonlinear_test.py from running in PIP\ntests.\nAlso fix a typo for another blacklisted test.\nChange: 124884425'
55986c0487dd5941740d2a810f7b53dd5912978c,'Fix the doc strings and Attrs in Op registrations to conform to\nthe correct syntax.\nChange: 124879813'
b97968aa0dcaa3cd2da8d9199df091a5a096c9f9,'Fix a (regression) bug that caused calling gradients() inside a while loop to fail.\nChange: 124859697'
6fd087342956205fa8282eaccbae3f6bdeb8a077,"'Restore a working CMake build for TensorFlow.\n\nThis incorporates changes from @lilac in PR #2705, and adds extra fixes\nso that the tutorial builds and executes again. For posterity, the\nchanges are:\n\n* Move C API and Session-related dependences into tf_core_framework,\n  because they are now used earlier in the build.\n* Build tf_protos_cc with C++11 (avoiding a mysterious SIGFPE due to\n  protobuf using a different map implementation when built with and\n  without -std=c++11).\n* Add the (newly added) proto_text headers and sources to\n  tf_core_framework.\n* Add dependencies on farmhash and highwayhash *headers* when building\n  tf_core_kernels.\n* Add the (no-op) GPUTracer stubs to tf_core_cpu to fix a link-time\n  error.\n* Add the Eigen include directories to tf_stream_executor.\n* Add link-time dependencies on boringssl, farmhash, and jsoncpp when\n  building tf_tutorials_example_trainer.'"
0dcf166469b9017e64f956906d2fa7eb5af09388,"'Update Cmake build files to reflect recent dependency change (#2705)\n\nNOTE(@mrry): This is a partial fix to the build files, which will be followed up in #2839.\r\n\r\n* WIP: update cmake files to fix build issues\r\n\r\n* Add cmake file for external dependency jsoncpp\r\n\r\n* Update cmake files to add boringssl dependency\r\n\r\n* Add cmake file for proto_text tool\r\n\r\n* Update cmake files to generate proto text files\r\n\r\n* Add farmhash dependency\r\n\r\n* Add highwayhash dependency'"
9d6b7680cfcc5b784401d17fef997f0c089038b1,"'Do not require input and filter tensors to be passed to conv3d_backprop_{input,filter}, respectively. Fixes bug #2467.\nChange: 124848019'"
bdc43730c9e6037c608adb91fe55d6c1a82879a8,'fix class weight comparison to None (#2757)'
f36659f555027481788d14cc388cec1071a3182a,"""Removes an incorrect usage in tf.multinomial()'s docstring.\n\nFixes Github issue #2769.\nChange: 124798204"""
269c99bd283013704973ce16d240e09fb33ddf8a,"""Experiment: remove local_train_step flag as it's unexpected and not needed.\nEstimator: add more error checking for monitors.\nTensorSignature: fix issue with single tensor been return as dict from create_example_parser_from_signatures function.\nChange: 124788980"""
de6ce1de08ea97d599687fbbe5196ca4af5232ae,"""Improves tf.multinomial()'s numerical stability.\n\nPreviously, large logit values were not properly handled.  This is now fixed by\nsubtracting a maximum from logits before taking exponentials.\n\n(Note that the fix is applied to the CPU functor only, as the GPU functor uses\na different algorithm that already admits large logits.)\n\nFixes Github issue #2774.\nChange: 124775604"""
e040904bf1cc3749882c9ee38efc79e8f27a8526,'Merge pull request #2819 from marckhoury/train-test-split-bug\n\nFixed bug in train_test_split operation.'
c41a43e24f73675e82c95e2ea41bedf737513b1b,"'Generate headers with both "".proto.h"" and "".pb.h"" suffixes for android protos.\nChange: 124745447'"
6c86cb5b7c0afa3cc5c006a83f6782a6220ccbb8,'Fixing issue in sum_of_pairwise_squares loss where 0 loss could cause NaNs in gradients.\nChange: 124733314'
df94f63281a40acdd695a9a28862905af976adfd,'Minor: fix typo in Defun doc.\nChange: 124731079'
6544cb915c96683b1c995aa82e9cd4324102e8ce,"""Fix a race condition in tf.where when it counts a certain number of true elements\nfrom a reference Tensor, but that tensor's value changes before it writes their\nindices.\nChange: 124730221"""
e101e82378eb4cd7ab1514f48a3a269e8d7bb5e8,"'Fixed an import error, typo, and None check in evaluation.py\nChange: 124722496'"
61e8b4b6cf1a3b3115d4f5e2801f4e2c7b17b06a,'Fixed bug in train_test_split operation.'
953cf137a6adc260e01b7df6a65050e1ab779b6e,'Merge pull request #2809 from caisq/py35-fix-2\n\nStopgap measure to fix session_bundle genrule for py3.5'
29b41a02e0421391692b12ca1dd74828adf23ffe,'Fix missing semicolon in minimap.\nChange: 124644958'
0c69535032bbff6558c9995d871b5bb8fb7f89fd,'Stopgap measure to fix session_bundle genrule for py3.5'
87c31f6474a5fe90048eef25e5f19b9aff6060dd,"""Fix gcc error: cannot convert 'auto*' to 'float*' (#2698)\n\ngcc 4.8.1 barfs on this reasonable-looking type inference for unclear\r\nreasons. In this case `const T*` is arguably clearer than `auto*`\r\nanyway.\r\n\r\nFixes https://github.com/tensorflow/tensorflow/issues/867 ."""
553cbaa8358d7dc1ed3839266211f24800cf370e,'bugfix'
b1ffda031060f43fff1cf8ab2af47eda1c9e246a,'Typo fixes'
a522cb3b03657b1b373ff09c9205d931adb06589,'Add gradient support for unpack and split of dynamic TensorArray.\n\nFixes: #2077\nChange: 124625223'
ff0e4eed006ae5a28bb8c03aebfce38989b4fbe0,'Fix Supervisor._init_local_init_op() docstring to reflect what the code actually does.\nChange: 124618384'
d6ffb31bce67c2e5a6ede5f8c1a028f901ea1a1e,'Stopgap measure to fix session_bundle genrule for py3.5\nChange: 124608341'
6a25dfcbf8534b24e6ce55aaa589fbdd57ddfa2f,'Fix small typo in the usage documentation. (s/query_word/country).\nChange: 124583006'
50834765aa1e87ecc17c3e6e0ebdc146616c3a01,'Fix typo (#2724)\n\n* Fix typo\r\n\r\n* Fix puth-typo in array_ops.cc as well.\r\n\r\n* Change back ops.pbtxt'
d1c3d65b06152af44d019b96fa512bbec9fbbad4,"'Fixed Tensorboard minimap not being drawn on Safari (OS X, iOS) (#2302)'"
b23125996ddd0b8954ec8fb46d21c079cdea24ac,"'Use --no-cache for docker build in parameterized_docker_build.sh\n\nLets the docker image always clone the latest TF Git repo.\nFixes issues in nightly devel image builds related to permissions, e.g.,\nhttp://ci.tensorflow.org/view/Nightly/job/nightly-docker-cpu/TF_DOCKER_BUILD_IS_DEVEL=YES,TF_DOCKER_BUILD_TYPE=CPU,label=cpu-slave/22/console\nChange: 124549758'"
98ae2989077155a867b481cbe5f0981d8681743e,'Typo fix'
b368af1137c85343d3a863808ac026e3f687089c,'Typo fixes and stylistic improvements'
61b2ee9bbaad05ec5491406d6916c8a06fbef8e4,'Fix Jenkins build.\nChange: 124511374'
48f2522176f0e2b3d30304b247658c240d81fc88,"'Add basic_train_loop() as an example for higher level frameworks to copy or\nreuse.  It can also be used directly for simple training.\n\nFix Coordinator.clear_stop() to also clear the exception to raise.  Add test.\n\nAdd SummaryWriter.reopen(), with tests. This is needed to properly handle\nsummaries when create a session more than once in a Supervior.\n\nIn Supervisor.prepare_or_wait_for_session() reopen the summary writer.\n\nAt then end of Supervisor.managed_session() correctly close the summary write\nand clear the running threads even if an exception was reported.\nChange: 124500982'"
bf8084b71006123575c6416d69efdd00c13fe41c,"'Fix a doube free bug in persistent tensor. Also improved delete_session_tensor, and added a delete method to TensorHandle class.\n\nFixes #2586,#2645\nChange: 124479379'"
572c5861337f937d21c5aa90e37d5d6fbc7c242b,'Fix for build issue #2742; (#2749)\n\n(1) Additionally added linking against pthread for linux machines'
b17297809f28560c6254e1355a81f3af771e7515,'Merge pull request #2759 from izeye/patch-8\n\nFix typo'
64d759f80fc59217945ce7f746503b26daf62f6a,'Fix typo'
57f6bd5fe369c02c9815a84b12b5c9b766600ce6,'bugfix'
68cf029720ca2608e4b7009d41df10c14e77f5cb,'bugfix'
93e5a71d5aeb5e3c4c468b43cd10499d03f686d2,'Fix variable names: value and val.\nChange: 124422763'
a7aec20f14ca61caea559847a20486ef5a7465c6,'Fix the loading of global step from checkpoint.\nChange: 124416137'
301e62e429957a3c33b1681a44381b8c68583a0c,'Change the join sleep to use an exponential duration with small initial value and capped to the grace period. This helps reduce the fixed overhead of stopping a coordinator.\nChange: 124403459'
956b7200dfee54efcae1991875405850ed58b582,'Fix docs issues'
f8451732c383cd7a4b4514b81e90ac2f2270db58,'Improves the `tf.QueueBase` documentation with regard to error conditions.\n\nFixes #2326.\nChange: 124364329'
71a17b8133bd047245efca7ccdb1e2eefa6701be,'Fixes typos in docs.\nChange: 124345819'
2a47efdf3b06b25367e51e8711c8a97e78227c35,"'Fixed Tensorboard minimap not being drawn on Safari (OS X, iOS) (#2302)'"
31bf8c10e5b528f8f8944f66cb96b052014f42aa,'Temporary fix for slow pooling_ops_test by extending the deadline.\nChange: 124305034'
e5c136b0d01a6aaa22321afaade7fba31c2f4452,'Better error message for trying to compute second-order gradient for while loop.\n\nFixes #2598\nChange: 124304732'
9ced748d0b305a101574a23bf85394a53b8a1815,"'Three fixes to the gRPC services.\n\n1. Re-disable fail-fast for the GrpcWorkerService.\n\nThis was broken in the change to a newer version of gRPC. Session\ninitialization and recovery relies on worker calls blocking until a\nresponse is received.\n\n2. Move the serialization specialization to the *_impl.h files, so that\n   they are picked up when sending responses.\n\n3. Raise an error when the ByteSize of a message to be serialized is\n   negative.\nChange: 124302956'"
4c85a95925a68fec324f70cd0d7f3d4548f97a38,"'Move input reading epoch counter into local variables.\n\nFixes the issue:\n""read_batch_features/file_name_queue/limit_epochs/epochs"" not found in checkpoint.\nChange: 124300678'"
89c8724a49db9cc3e890b798e400e78e86f19c09,'Fix regularizers to pass the scope to the creation time.\nAdded l1_l2_regularizer\nChange: 124297560'
271041324f1cff584d20021196a9da0493e130c9,'Add more error context to MaxPooling when on CPU and trying to use NCHW\ndata format.\n\nFixes #2660.\nChange: 124283264'
1a5364efe43f76ab72a1f3651df394d6b121c915,"'Fix incorrect documentation for MaxPool3D, MaxPoolGrad3D, AvgPoolGrad3D\n\nThe channel size should be zero rather than the depth.\nFixes #2573 (GitHub)\nChange: 124261261'"
74d1e78c47a5ac2609084ad654542a90e0813c54,"'Ensure that all RunManyGraphs calls complete before returning from cancellation.\n\nThis fixes a potential race condition and segfault, where the response\nbuffer could be deallocated with an RPC in flight. This would happen\nif a step was cancelled before its master blocked on the RunGraph RPCs.\nChange: 124255996'"
b0ca10582007ea4b5f53aa30675046b05df10b2f,'Fix name of variable in doc.\nChange: 124250205'
ede4b4c111ebd2b96703dce42f0f7c5f2173f0e7,'Fixes for Raspberry Pi compilation (#2701)\n\n* Added linker options to armv7 in iOS makefile\r\n\r\n* Updated Eigen version in Xcode iOS examples\r\n\r\n* Updated iOS link flags\r\n\r\n* Added support for Raspberry Pi'
6567e449999e8372290518f12aae2b87c45f8dca,"""Add meshgrid function (#2541)\n\n* Add meshgrid function\r\n\r\n* Address comments\r\n\r\n* Address second round of comments\r\n\r\n* Shorten line\r\n\r\n* Fix syntax error with python 2\r\n\r\n* Improve docstring\r\n\r\n* Add error for unknown kwargs\r\n\r\n* Remove use of dtype kwargs to linspace\r\n\r\n* Don't test the one arg version"""
9c0340114b838d729d4d2868b75679e385163aea,'Fix disabling of stability_test\nChange: 124204746'
439d9e2fe36eebe6b6a28ae2883bb550535e8bd6,'Fix genrule Python execution problem with Python3.\nChange: 124202095'
db769cc4f04bac93221cdbe16cf4ed2e9785163e,'Fix MacOS failures with -mavx in Interleave Packet Test\nChange: 124200069'
a00e5709b06050c57d431f8a9abf157f13a52ce3,'Fix typos in documentation.\nChange: 124198353'
54cf1600b98127d5076def3c567cda1e087c1761,"""* Fixes #2487 - enabling saving summaries on evaluation when feed_dict or 1 epoch using readers.\n\n* Improving PrintTensor monitor, to support tags for printed tensor (e.g. passing {'loss': loss_op} will now display loss = %f instead of full name of the op).\n\n* Improving ValidationMonitor to support various metrics, minimization/maximization, naming to run multiple validations.\n\n* Make sure early_stopping test actually early stops. Updated example as well.\nNote, test is unstable, so exact number of steps it stops are non reproducible. See stability tests for more examples of issues.\n\n* Added GraphDump monitor for in-depth debugging.\n\n* Added stability test to make sure the same model trained on the same data given exactly the same results. Note: it's all super unstable, increased tolerance to just make it pass. Possibly issues with numerical stability in TF.\n\n* Changed max_steps in graph_actions.train into steps, which adds that many steps to the training (instead of just defining max steps). For Estimator this returns previous logic, where fit(..., steps=100) followed by fit(..., steps=100) will result in 200 steps trained.\nChange: 124197624"""
e7cfc3e0a1b8976d2a845f3752001fd0178a9d74,'Fix wide-and-deep docstring to match recent API changes.\nChange: 124194304'
ea2bda904d52695374dd2ae9f5f160692ad6ef09,"'Use -DGPR_BACKWARDS_COMPATIBILITY_MODE in gRPC. (#2697)\n\nUse -DGPR_BACKWARDS_COMPATIBILITY_MODE in gRPC.\r\nThis avoids using secure_getenv(), which prevents building on operating systems with a GLIBC < 2.17.\r\n\r\nFixes #1307.'"
845fb7ab77fae53b849894925c7d13c1b8918675,'Fix UniformUnitScalingInitializer -> uniform_unit_scaling_initializer (#2696)\n\nFixes #1328.'
14e425c313a96cedb514cbc2c122d201707994ac,'Fix `tf.reverse()` shape function to work when dims is unknown.\n\nFixes #2690.\nChange: 124167453'
e9953ee70d45bfba8083eaa7ac902714f1a0b0a5,'Fix formatting issue (#2686)'
a4dbc703c08f9d749262ee28dd6eb1748a60953c,'Fixing issue with slim/data not being pulled in as part of the opensource build.\nChange: 124146045'
edf3f943068445ab58ca7d14a3d3103cafc618d0,'temporarily disable contrib/session_bundle\n\nThe genrule makes problems in integration testing. We disable it\nfor now and fix it after 0.9 release.'
3488ac22f156cbcfd27c242ccbdac58679385ddc,"'bug fix in ApplyAdadelta update rule (#2624)\n\n* Following the Zeiler ADADELTA paper, numerator of update equation\r\nshould be RMS(accum_update) * grad'"
ff75787c166e4f43560f5f55388ab9bfbe73eeb0,'Merge pull request #2651 from Mistobaan/feature/dist_test_mispells\n\nfix minor mispells in tensorflow/tools/dist_test'
01c87f55ca7b64a2dc680aff8b2a60aa079746ec,'Merge pull request #2628 from ibab/fix-complex-grad-broadcast\n\nFix gradient of complex op when broadcasting'
85a8900dc6f8f2b4a410ef80cb49932464cf6ad5,'fix minor mispells in tensorflow/tools/dist_test'
5dd39f05a213e04dcca9fdb990a781920fb8b090,'Fix several pylint warnings.\nChange: 124022610'
3c5233d54d3dc431bdee2a5756cc2f1f9b270503,"'Added licenses to makefile sh scripts (#2647)\n\n* Added Raspberry Pi cross-compilation support to makefile\r\n\r\n* Fixed makefile linking problem with Pi\r\n\r\n* Added documentation for Pi compilation\r\n\r\n* Added live camera iOS example\r\n\r\n* Updated Eigen version in makefile, and added more iOS compile flags\r\n\r\n* Added licenses to makefile sh scripts, fixed simple iOS example setting'"
6ba4995be6372d1ca5e01eae649c1d8750b65857,"'Specializes the implementation of the gRPC Master and Worker services.\n\nThis takes previously generated code, and includes it in the\nrepository. The main advantage of doing this is that we can specialize\nthe deserialization routines for various protobuf types that tend to\nbe large, and thereby avoid the problem where we brush up against the\ndefault protobuf limits.\n\nFixes #2233.\nChange: 124007049'"
41d6b889702a522c2bb13c9bf5a7f35425766b85,'Fix the constructors of DNNClassifier and DNNREgressor.\nChange: 124003810'
e1d23bbb58cd8504e99d85f463bb76fbaa5282bd,'Fixed shape error seen in tutorial.\nChange: 124003630'
2c55490c6d6d361985dbb0565ab08a648c819949,'Merge pull request #2644 from caisq/permission-fix-1\n\nAdd x permission back to test_tutorials.sh'
11f4e55a012de7ba013b3c82e598a89c5af4bd19,"'Updated Eigen version in Makefile (#2643)\n\n* Added Raspberry Pi cross-compilation support to makefile\r\n\r\n* Fixed makefile linking problem with Pi\r\n\r\n* Added documentation for Pi compilation\r\n\r\n* Added live camera iOS example\r\n\r\n* Updated Eigen version in makefile, and added more iOS compile flags'"
88c72e1ba60ed4a46232c92a2222a760807b1f54,'Fix the flaky test in nonlinear_test.\nChange: 123989954'
6b1b429da364b5f78adc1a3f3360c60dff2c2f41,'Adds an ExtractImagePatchesOp that performs im2col. Forward only implementation for now.  Fixes #2605.\nChange: 123983077'
88cabd6670d9a8c707460c75dc0ce5fc3fdbd052,"'Fixing bug in propagating normalized y into the input of the next power iteration, improved eigenvalue estimate by making use of the Rayleigh quotient, and normalizing the random input vector.\nChange: 123975933'"
b1bf065a6c181acb660ab801e9d139fe25267c31,'Fix incorrect typescript type annotation which was caught by the typescript compiler due to newer typings definitions for lodash library.\nChange: 123971815'
15ffc386919154837d627016e61d128e3d1d3340,'Fix event_shape for scalar distributions\nChange: 123971216'
fc0158e3326ee93234a70089cad7aedc1e2dfbbf,"'Fix the ""compute time"" stats computation.\n\nIt was previously assumed that every op can only execute once for a given session run, however ops can have multiple kernel executions within a single run and within the same device, thus showing up multiple times in the stats pbtxt.\n\nThe new ""compute time"" is determined by the time difference from when the first kernel started to when the last one finished.\nChange: 123958417'"
9bba62fae3e69ee8510d1f1131ed8598c732ad84,'added Install instructions for OS X GPU (#2557)\n\n* added Install instructions for OS X GPU\r\n\r\nFixes #2522'
d8c534be264c129a163df2fb00c6a54fb8c66513,'Fix dropout test'
5309675019fe80c39a019057f4f034a2faed4cd7,'improve docker readme (#2635)\n\nimprove docker readme - fixes #2533.'
d7d1ab97e6f476a285a586d085592ac0573ff5fd,'Fix python breakages due to Estimator moves.\nChange: 123939117'
727c4c76ade5228ee1e2b3ad1d05d29dfee884fe,'Fixes:\n * ValueError is model_dir / output_dir are empty.\n * Added support for creating parse_example from TensorSignature.\nChange: 123935766'
5de612fbf7e58ed3ffb22e50f71317cfb98ee282,'Fixes #2568: question-words.txt direct link no longer works\n\nInstead download the whole zip file and extract the single file.\nChange: 123924244'
946f515fd3e541272a594ca239c9bc83e158239a,'Fix gradient of complex op when broadcasting'
d0dec7ccd438c29b7806baef849c78b7a95e4467,"'Refactoring TensorFlowLinearYYY to use LinearYYY and TensorFlowDNNClassifier / TensorFlowDNNYYY to use DNNYYY. Added DeprecatedMixin to support old interface before we remove them.\n\n* Added dropout to DNN/Linear/DNNLinearCombined.\n* Fixed tests and disabled few that are not useful at this point.\n* Addressed data feeders to work without n_classes properly (preserving dtype).\n* Fixing bug with LinearRegression, where loss was broadcasted into [batch_size, batch_size].\nChange: 123912829'"
5508516010b539709da6a75bfbe5a3fd1a944b75,'Added iOS example using the camera (#2613)\n\n* Added Raspberry Pi cross-compilation support to makefile\r\n\r\n* Fixed makefile linking problem with Pi\r\n\r\n* Added documentation for Pi compilation\r\n\r\n* Added live camera iOS example'
5e1aaefc0f28008767852a4e6d5938aaa0f55081,'Fix the documentation to be consistent with the actual N step implementation.\nIn particular we only support every_n_steps not every_n_seconds. Probably\nshould call it every_x_seconds or something so n is not overloaded.\n\nTESTED:\n  - passed opensource_build\n  - passed unit test\nChange: 123906892'
95386342480482271b7515e0e89aac0fcce167e1,'Fix data race in constant folding.\nChange: 123887885'
53344688b8be0bb3e73431b1e5a0ad924c024732,'Fix TensorBoard in Safari by not using ES6 constructs in our polymer components.\nChange: 123887298'
9b92caf4e34fba84a65275f141832a535a6b58db,'Upgrade typings to >version 1.\nRequired for fixing the jenkins build.\nChange: 123886969'
d22afd58bd3d103ca1c41a85d80847040827a119,'Fix TensorBoard build dependencies\n\nCL 123201123 moved numpy from install_deb_packages.sh to install_pip_packages.sh. So numpy needs to be added back to the TensorBoard install list in this file.\nChange: 123864373'
f2737fb1a44923562c379d631ba73c999678eab0,'Fix for log_loss name change in learning_test.py\nChange: 123831122'
892d759f2d767a3210abc110c14d9b9d643032b2,'Fix typo in TensorFlow tutorial.\nChange: 123824296'
79174afa30046ecdc437b531812f2cb41a32695e,'Fix setup for development link step. (#2612)\n\n* This was a typo as agreed upon at https://github.com/tensorflow/tensorflow/issues/2591'
f134f05ff95bbcb6ab205b67ceff1743126d9465,'Prevents the fetching of internal nodes defined in a while loop or cond branch.\n\nFixes #2575.\nChange: 123805910'
e456991cba729375023a8081b78970bf10bf3ccb,"'Fixes a bug in the locking discipline in `DirectSession`.\n\nThe `execution_state_` member should be protected by\n`graph_def_lock_`, because it can be replaced at the same times that\nthe `graph_def_` is mutated.\nChange: 123701264'"
e143df21316cb5837267c4b4e16051f586b15cdd,"'Replace std::log2() by std::log(), which should fix build issues.\nChange: 123689588'"
538564f8a663a796e5af04afb1095c0da5df68fe,'Fix pydoc in Estimator.\nChange: 123672797'
98e1214572ca54fbd9779b8008cf86f332c001d6,"""Bug fix in loop gradient computation. When the value of a loop variable at iteration i+1 doesn't depend on its value at iteration i, we need to use zeros for the partial gradients of all iterations > 0. (I hope that my math is correct.)\nChange: 123668812"""
3ce1d20108cfc190553bac98c17a53b23457f8bd,'Fix `tf.ones()` and `tf.zeros()` to accept auto-packed inputs.\nChange: 123657285'
4455f81c3dc07a77ac133dec24690968e121370a,'Added Raspberry Pi cross-compilation support to makefile (#2590)\n\n* Added Raspberry Pi cross-compilation support to makefile\r\n\r\n* Fixed makefile linking problem with Pi\r\n\r\n* Added documentation for Pi compilation'
3a98d5ad30165f4f96be4993fe563d9b2eaf6b10,"'Enable segment reduction ops for complex numbers (#2567)\n\nThis enables segment reduction ops for the complex64 and complex128\r\ndtypes, in order to bring their behavior in line with the regular\r\nreduction ops.\r\nOnly sum and prod reductions have been enabled, as min and max are not\r\nappropriate and mean would require changes to the code and is probably\r\nnot worth it.\r\n\r\nThis fixes #2255'"
b54a1ec624156bfad656f3236674d575323498f4,'Merge pull request #2563 from caisq/123507798\n\nFix python3 incompatibility in encode_audio_op_test.py'
5edfba6bc82c5284566d89f748b80e4bc8eeddbd,'Merge pull request #2562 from petewarden4prs/master\n\nFixed up include paths for iOS example'
44000ed35f59516019d126a11f454c4d36648ca5,"'Fix python3 incompatibility in encode_audio_op_test.py\n\nThis fixes test failure as in: http://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=cpu-slave/108/console\nChange: 123507798'"
1721b8c2a0b3a72a4a01ffaaaa9337482e2776ba,'Fixed up include paths for iOS example'
91d72fdb33ba9eec536969f0471ba59e98a799fb,"'Fix python3 incompatibility in encode_audio_op_test.py\n\nThis fixes test failure as in: http://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON3,label=cpu-slave/108/console\nChange: 123507798'"
f5b3248917c55e91f77df97dd86d1fe77eadb4e3,'Fix logistic_regression() summary name conflict. (#2446)\n\nError when calling logistic_regression() more\r\nthan once:\r\nDuplicate tag logistic_regression.X found in summary inputs'
47b21485352878e080909117aa783d2051bae783,'Fix Tensorflow compilation error that comes up when TF is used as a submodule and compiled for GPU.\nChange: 123468144'
0b64723f4a650369caa8aa98b2c4daef5a171c04,"""Fix issue with float32/float64 dtype issue in data_feeder.\nSpeed up predict() method when iterating over feed dicts (doesn't reload checkpoints every time).\nChange: 123446265"""
75fe0b8fd1488904ac1897bc81e14ef4fa892611,'fix missing cudnn dependencies (#2527)\n\nThis is the simplest solution to fix missing cudnn dependencies.'
b531939b601da333243f10988a8ddccaf35c4811,'Fix flaky layer_test.\nChange: 123439909'
e66f6357a46f257ed45feacd7149e11924482a45,'[tf.learn] logic for pandas import and fixed test (#2529)\n\n* [tf.learn] logic for pandas import and fixed test\r\n\r\n* Fix other pandas and dask imports in tests'
e753383886b84900e4dcfb5850ff8e1c14af1372,'Fix message in asssert_rank_at_least\nChange: 123432496'
6164d02144239c58a8f19cd12ff2a3ff7b7605d4,'Fixed the fp16 implementation of AddN for GPUs\nChange: 123425350'
3e7aae461b657fd7960ff49b64bad125eabfe1e3,'Update outdated error message for `Operation.run()`.\n\nFixes #2523.\nChange: 123422475'
4cd24cc410579222266a8c35a69fd61e8e98b4ee,"'Fix a breakage in mnist tutorial test\n\nCL 123269596 altered the console printout of the mnist_with_summaries.py tutorial. But the corresponding test in test_tutorials.sh was not updated accordingly, causing nightly builds to fail, e.g.,\nhttp://ci.tensorflow.org/view/Nightly/job/nightly-matrix-cpu/TF_BUILD_CONTAINER_TYPE=CPU,TF_BUILD_IS_OPT=OPT,TF_BUILD_IS_PIP=PIP,TF_BUILD_PYTHON_VERSION=PYTHON2,label=cpu-slave/107/console\n\nThis CL fixes it.\nChange: 123418822'"
1b850b4f7cb1f2818697135388bcf582dfc758bd,'Changes to sparse_ops documentation.\n\n* Expose sparse_reduce_sum().\n* Fix a markdown error.\nChange: 123390245'
3c402f5fc156ec7d9d3b37a9dc91005852b62083,"'Features and bugfixes in TensorFlow RNN.\n\n* Add namedtuple support to tf.nn.rnn*.\n* LSTMCell and BasicLSTMCell state_size, zero_state, and state outputs\n  are now tf.nn.rnn_cell.LSTMCellState named-tuples (backwards-compatible)\n* Fixed a bug where dynamic_rnn would flatten the state tuple, even if it\n  was nested, on output.\nChange: 123380529'"
91f0b6c6a4d0f4f9259aac162b1fae5d4b24a0d1,"'Update tf.learn copyrights, and fix a few other lint errors.\nChange: 123371574'"
ecc6c5ae3dcec7ea263a010ae2b6b1f7dc0da1a8,"'Merge changes from internal (#2524)\n\n* Adding documentation on integration testing.\r\nChange: 123334131\r\n\r\n* Follow up to documentation sharding change to make the sharding\r\nuse a fixed hashing function.\r\nChange: 123334435\r\n\r\n* Improved the scalability of the cast operation\r\n\r\nBefore\r\nBM_cpu_float_int64/64k         90197     201120       7156 8.1GB/s  692.9M items/s\r\nBM_cpu_float_int64/32M      24035828  181447285        100 15.6GB/s  1.3G items/s\r\nBM_cpu_float_half/64k         225119     356610       3046 1.6GB/s  277.6M items/s\r\nBM_cpu_float_half/32M       15364192  144673227        100 12.2GB/s  2.0G items/s\r\nBM_cpu_half_float/64k         216675     352955       3019 1.7GB/s  288.5M items/s\r\nBM_cpu_half_float/32M       21864926  136360857        100 8.6GB/s  1.4G items/s\r\n\r\nAfter\r\nBM_cpu_float_int64/64k         70930     401170      10000 10.3GB/s  881.2M items/s\r\nBM_cpu_float_int64/32M      22222153  225847178        100 16.9GB/s  1.4G items/s\r\nBM_cpu_float_half/64k         163805     259025       4594 2.2GB/s  381.6M items/s\r\nBM_cpu_float_half/32M       15160917  143803486        100 12.4GB/s  2.1G items/s\r\nBM_cpu_half_float/64k         163269     270568       4462 2.2GB/s  382.8M items/s\r\nBM_cpu_half_float/32M       21617823  133221276        100 8.7GB/s  1.4G items/s\r\nChange: 123334623\r\n\r\n* Update generated Python Op docs.\r\nChange: 123334708\r\n\r\n* Creates the ReaderSource class, which wraps tensorflow.ReaderBase classes.\r\nChange: 123336814\r\n\r\n* Adding assign_from_values and assign_from_checkpoint to variables.\r\nChange: 123339548\r\n\r\n* Update generated Python Op docs.\r\nChange: 123339797\r\n\r\n* Remove non-legacy public fns in prep for new ones to be added.\r\nChange: 123341019\r\n\r\n* Merge changes from github.\r\nChange: 123342870\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 123344041\r\n\r\n* Update generated Python Op docs.\r\nChange: 123344396\r\n\r\n* fp16-enable ReverseOp.\r\nChange: 123344612\r\n\r\n* Skeleton for PartitionedVariable class\r\nChange: 123347356\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 123347926\r\n\r\n* Update generated Python Op docs.\r\nChange: 123348302\r\n\r\n* Improved the performance of the log softmax op\r\nChange: 123361846\r\n\r\n* Fixing botched merge'"
14ac2235699509f512b44b71160239c153ab413d,"""Use external repository for protobuf dependency. (#1289)\n\nCurrently, TensorFlow uses a Git submodule for its dependency on\r\nprotobuf. This was due to the hack used in protobuf for building Python\r\nsupport with Bazel, which was required since Bazel's Python rules did\r\nnot support adding directories to `PYTHONPATH`. Now that the new\r\n`imports` attribute has been added to the Python rules in Bazel 0.2 and\r\nthe hack for Python support in protobuf has been removed, this change\r\nremoves the `google/protobuf` Git submodule and adds an external\r\nrepository for including protobuf.\r\n\r\nThis patch also adds gmock.BUILD to the tensorflow repo.\r\n\r\nFixes #1069\r\nFixes #2021"""
1c28846ac82fe3d1cc8438d90cff23c27ac2701f,'Follow up to documentation sharding change to make the sharding\nuse a fixed hashing function.\nChange: 123334435'
e8948a2d9d4e8d69d6fd925ca3824fca26e14fee,"'TensorFlow: Add additional debugging info to error messages when\na node cannot be placed on a device, specifically when the cause\nis due to colocation constraints.\n\nFor example, node colocation can cause a group of nodes to be\ncolocated with each other in an unsatisfiable way.  For example, if we\nhave three ops, A, B, C, where A supports GPU and CPU, B supports only\nGPU, and C supports only CPU, a colocation group has no satisfiable\nassignment.  In these cases, the cause is not just the lack of a\nkernel for the op that failed to place, but possibly due the set of\nops in the colocation group.\n\nThis change adds additional logging to the error message that lists\nthe op types and their supported devices, so a user can figure out\nwhich combinations of ops are problematic.\n\nFixes #2508 in that the error message should be clearer now.\nChange: 123330848'"
c1b5075d1f3f28ff8c5ed20334dc92ac7c9751f6,'Fix broken Python 3 test: //tensorflow/contrib/learn:graph_io_test\nChange: 123326664'
a6901e988401328be0d7756ccd53c2b7c3d19a34,"'Improves shape functions for tf.space_to_batch() and related ops.\n\nAlso fixes tf.batch_to_space(), tf.depth_to_space(), and tf.space_to_depth().\n\nThe shape functions now tolerate computed inputs for their paddings argument (whereas before they used the evaluated constant_value, which made them only work with static inputs).\n\nFixes #2473.\nChange: 123320634'"
23bacdbee659bd700f9f599fc4223b337c154aaa,'Fixes bug in SquaredLossUpdater::ComputeUpdatedDual when example weights are different than 1.0.\nChange: 123270998'
17f1937035a7715d6f97ffe5a7359e618503fcd4,'Fix for predict when single-head classification Estimator is used.\nChange: 123255202'
acac487ac4ebaa6edb3e3f866d41cbd12546a107,"'Makes `tf.Graph()` thread-safe for a single writer and multiple readers.\n\nAdds a warning that is raised when multiple threads attempt to mutate\nthe graph, which would result in undefined behavior.\n\nSupporting multiple *writers* would require a larger rewrite, which is\ndeferred for now.\n\nFixes #2425.\nChange: 123255083'"
5c145f0e3cabc7e61440ddf32c1ac28f5b9d499e,'Fix copyrights and a few other lint errors.\nChange: 123250570'
606fbb46eb20c795eacd9bec056df062c6760792,"'BUGFIX:  Call n = convert_to_tensor(n).\nExponential.sample forgot to call n = convert_to_tensor(n), and\ntensor_util.constant_value(n) only works with n a Tensor.\nChange: 123248349'"
e3b3fd1b87f8ea57a2240edade03828c6ed89ef6,'Fix RandomShuffle for huge tensors.\nChange: 123226210'
cd15614ecc193d6025f838de0197074053123423,'Fix an bug when either linear or dnn columns were empty.\nChange: 123180783'
6430c245b8157ae3d63c399ac639bb51ae1e83da,'Fixed predictions in Linear/Dnn/Combined estimators.\nAligned usage of metrics with the metrics API.\nAdded custom metrics and prediction tests.\nChange: 123178457'
4dd5fef8700bc62f6881e870b9ff57b92c3b0384,'Set -headerpad_max_install_names linkopt for tests that require it. (#2347)\n\nFixes #2332'
ae5c66e3c2ce9bcf0f20588f2c55c7d12b8b76ed,'Add support for arbitrarily nested tuples for RNN state.\n\nAlso fixed a bug in the RNN unit tests.\nChange: 123150781'
c597e37bf3b41a0addee216f04116d3889f7a653,"'A couple of bugfixes  (#2349)\n\n* fixed wrong indexing into dict; every picture is read into 3 channels, even if input is grayscale; loaded jpeg is read as rb buffer\r\n\r\n* Style fixed'"
32fa42a98eb751ee05827535ac47535312b7fa76,"'Set workspace name (#2336)\n\n* Set workspace name\r\n\r\nAdds the workspace name to runfiles paths, removes a hack introduced in\r\nhttps://github.com/tensorflow/tensorflow/commit/8cda66e19c0bdc6d8fc373fdcefcc644ab5ecfa3,\r\nand fixes #2040.\r\n\r\n* Make compatible with older versions of Bazel\r\n\r\n* Fix for Bazel 0.2.1'"
ef120cb93a844134f871194a93d77b26d12d17f1,'Documentation fix for tf.nn.sufficient_statistics().\nChange: 123109819'
43a8c49f04a485ffc33b510c27eda77f8f38377c,'Merge pull request #2485 from caisq/ffmpeg-1\n\nFix wrong bazel test target in ffmpeg integration_test'
977c933de8db8d13fc3f6c5d1eebe2899dfdf0d5,'Fix bug when using a stable op list.\nChange: 123071806'
7ea0c996910a24d6bdd3e080a151bdbc86685780,"'Fixes a TSAN-detected race in GrpcSession.\n\nThe session handle was not protected by a mutex, so there was\npotential for a race when closing a session that was used by multiple\nthreads.\nChange: 123069787'"
c80c9de2cda6654a08a7041edd45bc89b80355f3,"""A bag of fixes and consistency munging:\n* Support for axis / proba reduction in Estimator for prediction.\n* Support for input_fn in prediction.\n* Graph actions's eval using SessionManager (before was reinitializing variables and then restoring, which was leading to a number of issues). --supervisor more.\n* Don't shuffle prediction data.\n* Use tuple of one elements as a non streaming metrics (to not break existing usage for now).\n* Different batch size doesn't lead to signature errors anymore.\n* Various other small fixes.\nChange: 123069738"""
35204bc1c89231b2effd00b3f8e6d78164640377,"'Fix re-directions of linear, relu, relu6 to legacy_linear.\nChange: 123067377'"
cc00970fe8e548b8436b3f2befe3d63cb0c88f64,'Fix wrong bazel test target in ffmpeg integration_test'
d4ef9aa02c3c8297a053176918beaf34c13b73a6,'int64->32 fixes.  Notable fixes:  Have listdiff return an explicit error instead\nof mishandling > 2^31 entry X tensors.\nMore descriptive naming inside LRN.\nChange: 123053130'
d142d4f3941fe95ef3877a006d3a653c44e71643,"""Fix bug where tf-run-selector would not update on click properly if run names have periods.\n\nIt is because Polymer.notifyPath doesn't work on keys that contain periods, see: https://github.com/Polymer/polymer/issues/3675\n\nFix the issue (hackily) by just cloning the array.\nChange: 123045948"""
6e95013e505db08916c8cff0e8b585c29899c0c5,"""Fix a bug where the scalar chart would print errors to console.\n\nShould not have any visible change to users who don't open their consoles.\nChange: 123045624"""
aec225cbc1d6c2dd9ee51e09996a38c868e9e2dd,"'Suppresses AssertionError when using InteractiveSession.\n\nThe following code would previously raise an AssertionError in the\ngarbage collector:\n\n```python\nsess = tf.InteractiveSession()\nsess = tf.InteractiveSession()\n```\n\nThis happens because the second session will be installed on the\ndefault session stack before the first session is destroyed, which\nleads to the assertion (of strict nesting) failing. Since this is\ncommon behavior in IPython notebooks, we suppress this error for\nInteractiveSession objects.\n\nFixes #2474.\nChange: 123040755'"
9eb50f1c7f8b167ae603ebc3eba92761be105fb1,"'Fix a documentation bug in sampled_softmax_loss\n\nThe full softmax would need to transpose the weights, since we put the classes\nfirst for gather purposes (unlike normal matmul which puts them last).\n\nFixes #2464.\nChange: 123030237'"
f5a282fc259255a90022d927aa02c24a2ea1f119,"'Tooling for Linux Python3.5 build\nTogether with Jenkins jobs to be added, this fixes #2188\nChange: 123018061'"
83258dbc06a3e033a7bce50fcbc81668d0477400,'Fixing bug in streaming_mean_relative_error where a zero in the normalizer caused NaNs.\nChange: 123017812'
6bd964c1717dca18c938f2dd9845864f103a7cdf,'Enables GPU Tracer in DirectSession.\nDisables GPU tracing when building a CostModel.\nFixes some Timeline parsing issues related to CSE and GPUTracing.\nTurns off memory visualization by default.\nChange: 123014754'
175a28cf12e7002827245281c2c9f36d93b37be7,'Fix typo in the instruction (#2478)'
a20408ecd4869c4abf9b16a132ea6b81b715c0d6,'Fix typo in doc.\nChange: 122999862'
97bffce2e322b4337e9270cbed4aa9798224fb1e,"'BUGFIX:  Associate an Op with assert_positive() to ensure that the assertation\nis run.  Previously the convert_to_tensor was outside of the control_dependencies.  Note\nthat, surprisingly, simply moving the convert_to_tensor inside the\ncontrol_dependencies does NOT fix this in the case when the args (alpha, beta)\nare already tensors.  So I switched to using with_depencencies, which calls _Identity(), which creates the needed Op.\n\nScope change:  I moved the creation of mean/variance Ops inside the __init__ op_scope associated to the initialization kwarg ""name"".  I did this because distributions.py states that the kwarg ""name"" is to be prepended to all Ops created by the class.\n\nDOC:  Added documentation for some methods/properties.  Just copied it over from distribution.py\nChange: 122990898'"
ae51c4c354046a8ddbabee68b33e77acebd43eff,'Fix link to adadelta paper in adadelta optimizer docs.\nChange: 122985001'
4be0965c01d2dc75e6683d226d1775d1b5a05f70,'Merge pull request #2187 from samjabrahams/onehottypes\n\nFix convert_to_tensor error in tf.one_hot'
dfe46341cc73c98a111a6610e0d3daa77fe549e9,'Fix corner case memory leak in error path of corrupt CMYK JPEGs.\nLeak found by libFuzzer.\nChange: 122953669'
f595ff00b47423027c1b25d0b195a1da8f012e52,'Fix lint-caught error in an skflow example.'
9d9565f112e8fca62a17da65d10c49264a7b9aaf,'Fix comment about op ordering in add_check_numeric_ops().\nChange: 122881176'
c56958d7267d3abb0be9ad5fed64de6fd6ebe521,"'Fixes breakages in skflow.\n\nFixes the examples to use new ValidationMonitor API, and uses\n`gfile.ListDirectory()` instead of `ListDir()`.\n\nMakes `tf.gfile.MakeDirs()` succeed if the leaf directory already\nexists, to match another platform library.\nChange: 122879686'"
150005ec3f995473ee11913d055fb6fe7e93479f,"""Merging Estimator and TensorFlowEstiamtor.\n* Use Estimaator as base class for TensorFlowEstimator and added required backward compatible support.\n* Fix usage of DataFeeders for numpy/pandas arrays in fit and predict.\n* Add new Monitor's API and make graph_actions to work with them.\n* Moved reporting functionality into Monitors.\n* Moved summary writer into a monitor (mostly due Supervisor doing wrong thing).\nChange: 122859671"""
f54a858924b03fc2d11d8c1250e596d34d300b9b,'Add return type to lambda in TensorArray.\n\nBug reported in issue #130.  This should hopefully fix it.\nChange: 122857771'
495055cb078827606ef9b29a7088629bac8b6a4c,"'tf.case bugfix: when the first predicate is true, the side effects of the default op are executed in control_flow_ops.case.\nChange: 122852787'"
9cb7d6cfb9a676d2a0d963c7fc6021028abbd96c,"""Fix GraphDefBuilder example (identifier 'b' was reused between GraphdefBuilder b and Node b).\nChange: 122846969"""
824719194d6741c7b790f72caae2e4a6c7b39c9c,'Include alexnet and imagenet directories in pip package. Fixes #2317.\nChange: 122843960'
fe7ed68f4aa5a119305eabd2e5d474cbaba4e328,"""Fixing documentation references to 'weights' which should read 'ignore_mask'.\nChange: 122783756"""
05932ecf0f60eba950c0ada4f2ab25d117089d11,"""Fix typo in random_op_test benchmark so it prefers int32s.\n\nThis fixes the benchmark so it works on GPUs.  Without this change, we\ntry to instantiate a RandomUniform over int64s on GPUs, and that doesn't\nexist.\nChange: 122777271"""
f1ef5927cb742ab433b5d9f816f805562bf73500,"'Make managed_session(close_summary_writer=False) actually work:\n - Pass the close_summary_writer argument to the stop() method instead of\n   the close() method.\n - Fix the unittest.\n\nAdditionaly, change the Supervisor to only write the graph once in a given\nevent file.  This makes the event files much smaller when reusing a\nSummaryWriter across runs, as you often do for evals.\n\nAdd tests for that behavior in the Supervisor.managed_session tests.\n\nThe bug went unnoticed because of several factors:\n - We do ignore exceptions from close() so the bogus keyword arg was ignored.\n - The corresponding unittest was starting the supervisor summary_thread\n   accidently, which caused it to enqueue the summary twice: the test saw the\n   summary twice as expected, but from the wrong source.\nChange: 122758728'"
e55e45aef70788e66405b4fe79a76e6caed78b11,'Fix a python3 compatibility issue in shell scripts\nChange: 122737159'
cce41d3fa372e0207b59bb592cb22acc8fe0c3bb,'Support negative values in the reduction_indices argument of reduce_*\nfunctions.\n\nFixes #2426\nChange: 122735328'
3e1ec828404d63e211c5c0ed19f29c78619ef401,"'Fix that run_metadata not filled when run_options is absent.\n\nThe correct behavior was already documented in core/public/tensor_c_api.h (that\n""run_options"" and ""run_metadata"" are independent of each other).  This change\nfixes the implementation to adhere to the documented semantics.\nChange: 122682371'"
303dc341a6300a4a2eee820679bca30547426aa6,'Fix init value in inner_product (#2214)\n\ninner_product accumulates into the type of the initial value\r\nmeaning that the result actually has type int instead of int64.\r\nThis will lead to truncation errors resulting in invalid writes\r\non buffers larger than 4GB.'
60adf6fe001ebef450120ce0b81412b666c02649,"'Add ExtractExampleParserConfiguration method\n- Extract the fixed length and variable length feature configurations\n  output tensor names from a given GraphDef.\n- This will allow for the use case of bypassing an unnecessary tensorflow.Example\n  serialize/deserialize at serving/inference time by extracting the configuration,\n  running  the proto -> tensor helpers directly and feeding the graph with\n  the properly named tensors\nChange: 122636456'"
dd3b812879671d633ddbb644a48f6fc44faae0bc,"'Raise a better error message when a list element is not convertible to Tensor.\n\nPreviously, we hit an erroneous assertion when converting a list\nargument to a list of tensors. This change makes it clearer what\ncaused the error when one or more of the arguments is an object that\nis not convertible to `tf.Tensor`.\n\nFixes #2385.\nChange: 122600354'"
7b9b91edeef414fab70e9cd4f6c7d6c006c52a4c,'Fix typos in API docs and Python docstring for ExponentialMovingAverage object. (#2369)\n\n* Fix two typos in API docs for ExponentialMovingAverage object.\r\n\r\n* Fix two typos in Python docstring for ExponentialMovingAverage object.'
d079ea40ac3d27d231d6d162fe748a4d93e197b9,"'Spelling fix in docs: ""cornets"" to ""corners""\nChange: 122581295'"
6d45952cd6f6bfaca9f58ef33efdc2c6a03a7b06,'Minor fix on setup instruction.\nChange: 122581164'
b5cc9f83b70c49f87630d8ca641d583cb807772f,'Fix bug where color scale can break if new runs load over the lifetime of tensorboard.\nChange: 122541517'
58705968c4c867932aeb016864ac7626cfce55e6,"""Another fix for the all-blue-checkboxes in the run selector.\n\nIt was broken if you opened TensorBoard in a new tab (or anything else triggered a page load when the tab didn't have context).\nNow we wire the first call to requestAnimationFrame, so it will load when the user views the page.\nChange: 122541497"""
883c4f6b7ec679ecad8105f341e497d71b51b196,'Merge duplicate copies of reverse reachability pruning algorithm.\n\nChange semantics of PruneForReverseReachability not to call\nFixupSourceAndSinkEdges since one of the two variants does not do so. Add explicit calls to FixupSourceAndSinkEdges to its current callers.\nChange: 122538113'
e571d662e4f043129a1826d703b61015fdf0e7db,"'Implements automatic packing for nested lists/tuples of tensors.\n\nThis change extends the set of valid arguments to\n`tf.convert_to_tensor()` to include lists/tuples that contain a\nmixture of values and `tf.Tensor` objects.\n\nThis enables you to write things like:\n\n```python\ninput_data = ...\nbatch_size = tf.placeholder(tf.int32, shape=[])\nreshaped_data = tf.reshape(input_data, [batch_size, 784])\n```\n\n...and saves you from having to use `tf.concat()`/`tf.pack()` to\nachieve this manually.\n\nFixes #2328.\nChange: 122494369'"
3b0d55719860a9977a88766826df8e7f21d887d6,"'Fix a flakey TensorBoard test, by not depending on precise async behavior from Polymer.\nChange: 122471926'"
66cda380161420269c2d586dab8f10b6f91834f2,'Added framework/register_types.h to core:framework_headers\n\nFixes #2371\nChange: 122471882'
64380a0b30a365566ff145ac2ae6be330014a286,'add complex64 support to tf.diag (#2401)\n\nFixes #1783.'
7fd34595b5e28a6776c3958307d5601896a10f5f,"""Redo TensorBoard tooltips.\n\nFeatures:\n- It now shows all runs, not only one at a time. yay comparison!\n- The tooltip now stays fixed in a single location, so you can scan the cursor and read values.\n- Incidentally, it no longer falls off the edge of the screen.\n- It shows run, value, step, time, etc, in a table. For runs which don't have any data near the closest point, it greys them out so you can see that you're seeing older data.\n- It displays NaN values intelligently.\nChange: 122571678"""
43ff0e91725ad193a3c7743670722ae28d3e11ce,'Fix bug where color scale can break if new runs load over the lifetime of tensorboard.\nChange: 122541517'
050aab10d3291e1c80c6dec5acd47c37ec6751f8,"""Another fix for the all-blue-checkboxes in the run selector.\n\nIt was broken if you opened TensorBoard in a new tab (or anything else triggered a page load when the tab didn't have context).\nNow we wire the first call to requestAnimationFrame, so it will load when the user views the page.\nChange: 122541497"""
fc7a945a602bab69e3824f514320ac9aea66f494,'Merge duplicate copies of reverse reachability pruning algorithm.\n\nChange semantics of PruneForReverseReachability not to call\nFixupSourceAndSinkEdges since one of the two variants does not do so. Add explicit calls to FixupSourceAndSinkEdges to its current callers.\nChange: 122538113'
b2417e1e498b88543de0e7a1091d04924f2f9afd,"'Implements automatic packing for nested lists/tuples of tensors.\n\nThis change extends the set of valid arguments to\n`tf.convert_to_tensor()` to include lists/tuples that contain a\nmixture of values and `tf.Tensor` objects.\n\nThis enables you to write things like:\n\n```python\ninput_data = ...\nbatch_size = tf.placeholder(tf.int32, shape=[])\nreshaped_data = tf.reshape(input_data, [batch_size, 784])\n```\n\n...and saves you from having to use `tf.concat()`/`tf.pack()` to\nachieve this manually.\n\nFixes #2328.\nChange: 122494369'"
f9a23fa35c3e169ffc7464349c427db6f97e38f7,"'Fix a flakey TensorBoard test, by not depending on precise async behavior from Polymer.\nChange: 122471926'"
78bc7caa1d42770dbb8996789984da465fdb0d46,'Added framework/register_types.h to core:framework_headers\n\nFixes #2371\nChange: 122471882'
e016791ddedb5bfb288361d61a0f56e70302ed20,"'Make functional ops handle non-Tensor `elems` correctly.\n\nThis change also reduces the number of conversion to tensor for\nnon-Tensor `elems`, and simplifies the shape handling.\n\nFixes #2366.\nChange: 122455382'"
539bbf049edb4a60400b57df6f5d93c0b289bffe,'Update FAQ to mention that distributed support is now available.\n\nFixes #2393.\nChange: 122454881'
1c47b6478ffb4cd68588e19a63928fd220e9830f,'Fix a few pylint warnings.\nChange: 122439260'
f06280b0b8fd4bda35231124186ba3ff7a1f271b,'Merge pull request #2372 from kevinrobinson/master\n\nTypo fix for comment in worker.proto'
c766ff4dac2cf5d0a026852cecc2ce985b6bd547,'Fix incorrect buildozer rule for contrib/ffmpeg/BUILD\nChange: 122375488'
bac0b65edba7ddcd658b9689aa09003f95ee72c1,'Fix python3-compatibility issue in ffmpeg unit tests\nChange: 122375344'
2ecbb2228e5a283d3a1f743ef0487b3c35468093,'Typo fix for comment in worker.proto'
ddd86c0ff110b332171638890ba990d79def877b,'Merge pull request #2360 from caisq/fix-ffmpeg-2\n\nFix incorrect buildozer rule for contrib/ffmpeg/BUILD'
6e3c8c3a1e3d60536d8cee38fc4619fbcddcdff1,'Fix incorrect buildozer rule for contrib/ffmpeg/BUILD'
4949eac39ecb4f2ce59c0e4fe1afd0d364b039b2,"""Fix bug where Polymer didn't update the colors in the run selector.\n\nIt's a hack fix. C'est la vie.\nChange: 122307583"""
9d2e920a1453ad5247923e2d0cd8f11495bf1e36,'Change sigmoid_cross_entropy_with_logits to fix gradients at 0.\nChange: 122307487'
1ef65d622dd752bbaa91ff507e23cc936073c454,'Fix dimension order when using 3d CUDNN pooling.\nChange: 122287466'
7057cc8a31c480f0c7b5d3dc41956b52549dc9c6,'Fix a docstring for Gaussian distribution\nChange: 122270198'
f5bf48af93ced8f07965e41e607127d6e55ea266,'Fix opensource build when pandas is missing.\nChange: 122227530'
5405394ecbc92baf9c45e612185ab42b1dcd0a30,'Added linker script to limit the symbols that are visible in\n_pywrap_tensorflow.so.\n\nFixes #1924\nChange: 122226376'
1e5e9bed84e44b152a373cd3a6a2bb16e464bd87,"'Fix softmax to not become log_softmax if name starts with ""Log""\n\nThe code was checking name() instead of type_string().\n\nFixes #2315.\nChange: 122218224'"
c34a0d7ea6b557588a7a0c9f9c4e60d59f593af7,"'Change behavior of DirectSession so that it places the entire graph\nby default, instead of only the pruned graphs.\n\nSeveral reasons motivate this change:\n\n- A bug in a the graph (program) today is only identified when\n  you run the op.\n\n- Interactive sessions need to allow graphs that have ""bugs"" in it\n  because people just continue to add to their existing graph,\n  so we need a way to preserve the old behavior.  We do that\n  by setting the field by default to true in InteractiveSession.\n\nTests added for both the change in direct_session as well as\nthe InteractiveSession use case.\n\nFixes #1914, #1748\n\nThis refactors direct_session and simple_graph_execution_state (used by the distributed\nruntime) to share the same graph execution and placement code, to reduce code\ndivergence.\nChange: 122210923'"
4aaeda8c7064787d89639cd119a15ae7f09f045d,'Trivial typo fix: s/logic/logical.\nChange: 122196859'
0558011a44291fd717036be1ea230d1e872d88e0,'Fix documentation: half-open intervals should be denoted by [).\nChange: 122183264'
dd593fc4eb287d70825c8d300d74f00c4add7d67,'Fixed compilation warning\nChange: 122166601'
0cc9ab5ca4330f0ffa0389332b9996de8b41f2c4,'Fix graph_actions.train() to avoid ignoring exceptions.\nChange: 122158814'
e73c201538986aa6f7c75038c8b89aad14bead8e,'Fixes and enhancements for contrib/tensorforest:\n- Tree-level feature bagging.\n- Bounds and index checking for security.\n- Improved hash function to improve performance.\nChange: 122148545'
d03631a27a0a3bc3eb23faa630b60c8e9826e1be,'Fix a bug in shape inference of while loop.\nChange: 122120526'
a98ed0b05c314cd6e05971bd3c53627042e45623,'Fixes bug where dense_shape was dropped from IndexedSlices when clipping gradients.\nChange: 122019716'
1569413d7d993df5461cbcd790233cb8f8784876,"""Fix TensorBoard event loading from GCS.\n\nDue to a misunderstanding on how gsutil works, the event loader thread would die\ncompletely if passed a GCS path that didn't exist. This fixes that.\nChange: 122004109"""
aec09b6cb61c63a28e01f6b413499602e224da2f,"'fp16 support for BiasAdd. Includes support for atomic adds for Eigen::half,\nalthough beware, they are going to be very slow.\n\nAlso:\n\n  - Remove the testGradientBias() test, since it was a fp64-only duplication of\n    tests we already had in other subtests.\n  - Extend gradient microbenchmarks to measure NCHW and NHWC, not just the\n    default in a two-dimensional tensor.\n  - Fix cuda_builtin::__ldg() definition; seemingly calling ::__ldg() on gcudacc\n    returns only zero, not the __ldg() function we defined a few lines further\n    up.\nChange: 121970776'"
885cc6bf55745142b8ecc578c61c5f03ff45e6ce,"'Where GPUStreamExecutor fails to find a GPU NUMA node and returns -1,\nlog an error message then reset to 0 where the value is used in GPUDevice.\n\nGetting the NUMA node correct is only necessary for multi-socket/bus\narchitectures which are probably in the minority among the TensorFlow user\ncommunity.  This fix will unblock users for whom the StreamExecutor cannot\nread the NUMA data correctly, and still provide an error message warning\nof the problem for users who might be affected.\nChange: 121970499'"
5681406e2874a02835d34be579810a93ad74a473,"'Add polygamma and zeta function to tensorflow (#1834)\n\n- Added support for zeta, polygamma and derivative of digamma.\r\n- Fixed gradients of zeta and polygamma and updated tests.'"
f5264a4503c867e2fbc093f2bae55f766523f8ed,'Fix documentation of sparse_merge method.\nChange: 121906685'
6d2623d03c4f4ad25169140fbcd0183a8188be51,'Bug fix: Need to distinguish run and partial run when caching executors in session.\nChange: 121896355'
6ef8518cbdbdfeed30faa19f0526090727aec5fc,"'Fix botched merge in conv_grad_ops.cc and conv_ops.cc (#2297)\n\nWe returned in the wrong location, so that we ended up doing twice the\r\nwork: the optimal gemm and then the suboptimal conv (for 1x1 filter).\r\n\r\nNo tests failed because the result was the same.'"
bf7e5fe193c5ae870cff3e4c8c3dffc9bdaa74b9,'Fix ArgPair() compilation issue in sparse_dense_binary_op_shared_test.\nChange: 121872731'
79c5f99b78891bb8d832d0c2fc5a24c1bf4ffaf4,'Fix integration_tests.sh ffmpeg tests\nChange: 121839525'
2296dd8060ce77c71fc820c77442835f050399dd,'Merge pull request #2282 from itsarbit/master\n\nFix distributed example code document'
3b241a80f6fcc144154312e883cfe54247335a2b,'Fix distributed example code document'
dd037a2c5dae7bc6aa8f1b4701782a96983e022a,'Added HDF5 example and fixed imports in other examples'
85f494e7e2354dd674a7831deb38cc9c1acdee1a,'Merge pull request #2268 from caisq/fix-integ-test\n\nAdd x permission to integration_tests.sh'
d63f90382bc808a094922c245f5e90dddfd81799,'Fixes bitcast when the input and output data types have the same size.\nChange: 121719728'
0d350f9324ae08dcbe0c14f0dbfde169da260a37,'[tf.learn] High-level DNNAutoencoder  (#2088)\n\n* Added BaseTransformer and DNNAutoencoder\r\n\r\n* Fix conflict and added example'
8b89c9043533029a585f6f4f0bdb0c03c215af39,'Merge pull request #2250 from kashif/issue-2243\n\nfix compile issue on os x'
5beae0639fac19ccc19a1399982b2c2e92fe31f1,'fix compile issue on os x\n\nfor issue #2243'
46538d2b1fd63a2433633b860823535e79861c96,"'Set ""add_shapes"" to ""True"" when exporting graph_def in export_meta_graph.\n\nFixes github issue 2166.\nChange: 121600220'"
3015797fc511578d573cb90987ffc8881c33f985,'Fix check_license and related failures due to new contrib/copy_graph directory.\nChange: 121600103'
f8eb1d70a7ea7dc2cd5e1eddde389395f88a6be9,'Merge pull request #2224 from Mistobaan/patch-4\n\nFix links inside distributed/index.md'
e23df00c5d157e31fb0b03fc90d0c5448653d9dc,'Fix conv_grad_ops merging failure.'
004301c860c784a9bbf32f073d228e3ba8fca492,"'Bugfix to bug created in previous TensorArray change:\n\nTF_REGISTER_ALL_TYPES does not register complex types on android builds, but\nmatmul etc. require it; and use SetZero functor.  Reverted that change, and\ncleaned up the TensorArray LockedRead to handle only numeric types with SetZero;\nand then only call it when the size of the Tensor is > 0.\nChange: 121546296'"
b7f9a07cf469155d4804bdad3a4855b0cf429021,"'TensorArray gradient bugfix.\n\nWhen the gradient TensorArray is created, its elements are now soft-initialized\nwith the shapes of the elements of the corresponding forward TensorArray.\n\nReads from these soft-initialized elements create a zero tensor of the\ncorrect shape.\n\nWrites to these soft-initialized elements as part of a gradient accumulation\nwrite just assign a proper tensor, thus ignoring the soft initialization\n(though now the shapes being sent into the gradients are checked).\n\nThis means TensorArray users can now write:\n\nta = TensorArray(size=2)\nx = constant([x0, x1])\nw = ta.unpack(x)\nr0 = w.read(0)\n\nand calculate gradients of r0 with respect to x.  In the example\nabove, the gradients are 1.0 with respect to x0 and 0.0 with respect to x1.\n\nIn the past, this would have led to an error because no value was being\nread from w for index 1 (and thus the gradient TensorArray did not have\nany writes at the corresponding index).  Now the assumption is made that the\ndefault value in the gradient TensorArray index is zero with the correct shape.\nChange: 121536091'"
4cd28ffc79c5dc7e0e69131470b6a45c0686e1bd,'Fix links inside distributed/index.md'
96a1afa21c59999c68887550b0c8c27cdf171339,"'Refactoring shape checking to reduce redundant checks\n(MakeShape now takes an int64 instead of an int, avoiding\nsome of the casting ugliness and reducing the need for callers\nto do their own, redundant checks).\nFixing additional int32->64 warnings\nChange: 121498517'"
a1bc10f9e28cd3d33e91bfaedd8199e4590f2893,'Fix nn_test.py\nChange: 121486952'
1ed0e764c8ca84d45823f2fd172dc8d40f89e3e2,"""Catch integer division by zero on CPU to avoid SIGFPE\n\nWe let it through on GPU since the behavior is bizarre but harmless.\n\nOn the CPU, we have to turn off packet math in Eigen and use a special binary\nfunctor that sets an error bit on division by zero.  Ideally we'd be able to\nuse packet math too; all it would take is a nice way for checking if a packet\ncontains a zero.\n\nFixes #2163.\nChange: 121429857"""
2863cc1361e061d36061368df66feda32c2790a8,'Fix build.\nChange: 121423674'
89d6d71cebfc5855719d0d0c6c572382b2fff855,'Fix internal build.\nChange: 121409990'
a4b475cb320a69fd787803095aec1c514375a136,"'Fix dynamic_rnn documentation for time_major.\n\nFrom reading the code, it looks like time_major = True is more efficient.\nChange: 121342997'"
d5b0e88e0fa8bdd6d953a5cb73576e123285eca0,"'Added a sparse_placeholder function to array_ops, to simplify feeding sparse data.\n\nUsage:\n   sp = tf.sparse_placeholder(dtype=tf.float32)\n   ...\n   session.run(output, feed_dict={sp: SparseTensorValue(indices=..., values=..., shape=...)})\n\n   or\n\n   session.run(output, feed_dict={sp: (some_indices, some_values, some_shape)})\n\n   or for fixed shape:\n   sp = tf.sparse_placeholder(dtype=tf.float32, shape=[2, 2])\n   can retrieve shape without session:\n   tf.constant_value(sp.shape)\n   ...\n   session.run(output, feed_dict={sp: (some_indices, some_values)})\nChange: 121332788'"
cbdc9976315a69d79532e0cf28985f2eab74059d,"'Fix LD_LIBRARY_PATH for ci_build GPU tests.\n\nLD_LIBRARY_PATH is configured correctly in the Dockerfile.gpu container, but the environment variable was being removed by the sudo command we use to switch to the CI_BUILD_USER.\n\nThis CL also adds a path for libcupti.so.\nChange: 121313103'"
7233ae61b0e6deb896dd432764e9c0efae340791,"'Make reduction gradients safe on empty tensors\n\nThe current gradient routines die with division by zero exceptions (hard\ncrashes at the moment) when run on empty tensors.  The mathematical gradients\nare perfectly well defined in this case, so now we do the right think.\nSpecific fix courtesy of Josh: instead of x // y we now do x // max(y, 1).\n\nFixes part of #2163.\nChange: 121301471'"
3ef33a1c67dae5bb4835e0e753f95ad966ff5624,'Blacklist py tests in python/platform/default\n\nThese tests are superseded by the corresponding ones in python/platform\nin the OSS tests. They are currently used only internally and will be\neventually removed in the future.\n\nThis PR also fixes a bug in test_installation.sh that could cause infinite\nloops in certain cases.\nChange: 121292959'
b0b16c23ad112167c3e99a31673809ec045e8718,"'Typos in the example. Their shape, [4, 4, 1] is fixed to [1, 4, 4, 1] (#2191)'"
6215d4c8e8dde281fbef6407cbdecb816b9d2727,"'Fix build in no-rtti mode (without this, the new DebugString in\nresource_mgr fails).\nChange: 121227875'"
e7732d415770d5f397bad1bd703311dde8b16cf1,'Fixed a typo: a -\\> tensor (#2181)'
9e5ba837bd561200ac4d82cd2d75fd9c1503990e,'Merge pull request #2179 from ppwwyyxx/patch-3\n\nfix typo'
39bfa1e2b9459bf03f13cfcc349af8953c40289d,'fix typo'
be092f47e0072645116a64496f7fa654ed708624,"'Must import numpy before a call to sys.setdlopenflags, or there may be a segfault in certain situations. Fixes #2034. (#2173)'"
749065ce730f1dee98d22d805d065c7cd6b606b7,'Merge pull request #2137 from zheng-xq/conv_grad_stride_ksize\n\nIssue 2066: Fix the conv for stride > ksize case.'
36d561c253844323fb1de28303407b451b7886a7,'Reenable check_futures_test\n\nAlso fix a bunch of files that ended up without future imports while\nit was off.\nChange: 121161570'
2c3c49bb6a1a2f3a9ebcf0b9f48cf8988197f718,'Fix skflow DataFeeder for unsupervised tasks. Found by githuber mheilman.\n\nhttps://github.com/tensorflow/tensorflow/issues/2159\nChange: 121133289'
5e22e3a3187e6729488f4a6da59b4cfbedc40946,'Fix variable names on confusion matrix metric (#2162)\n\nSigned-off-by: Lucas Moura <lucas.moura128@gmail.com>'
8bd07761733e5bf7ac958c85c18587a39745dbab,'fix scaler transform boston skflow example (#2152)\n\nfit_transform was being used instead of transform for the test set in the boston example'
93031628fe79698201d54ef24a409112c5541694,"'Remove second log in CNN tutorial. Fixes #2133. The second log is identical to the first, which is confusing people.\nChange: 121029563'"
64774d585d6f628704d34e48d830892174a4cf42,"'corrected a one_hot example, fixed mark down formats (#2151)\n\n* corrected a one_hot example, fixed mark down formats\r\n\r\n* Revert ""corrected a one_hot example, fixed mark down formats""\r\n\r\nThis reverts commit 64e76fa740c40d556a879fe962261aa55607889d.\r\n\r\n* fixed mark down format'"
203c0e0349d92c6b76604025f97fb39abe207147,"'Fix typos in example \'adding an op\' (#2149)\n\nThe colons after `@tf.RegisterShape(""ZeroOut"")` should not be there.'"
70dfe0da7d0c9207cc8a01a527b25dbec8b08148,'Fix typo in documentation for tf.contrib.layers.fully_connected.\nChange: 120986987'
59faa82c072c473551b25695431fab613675bf24,'Enable building with CUDA support on Mac OS X (#664)\n\n* Enable building with CUDA support on Mac OS X\r\n\r\n* Building with CUDA support on OS X requires GNU coreutils due to the OS X\r\n  native readlink command behaving differently from the GNU version\r\n* OS X requires CUDA toolkit 7.5 due to host compiler incompatibility\r\n  with earlier CUDA toolkits - the toolkit versions (CUDA & cuDNN) are now\r\n  controlled by variables set in the configure script\r\n\r\n* Fix symlink creation for cuDNN when found in alternative location.\r\n\r\n* * fix library name formatting broken during rebase\r\n* point to Eigen fork that builds on OS X - pending Eigen PR merge\r\n\r\n* Do not auto generate platform.bzl - modify it as part of unofficial settings.\r\n\r\n* Upgrade to latest Eigen and fix issues introduced during rebase.\r\n\r\n* Fix breaking changes brought in by rebase.\r\n\r\n* * remove redundant cuda/cudnn version functionality\r\n* minimize unnecessary diffs against master branch to ease review/merge\r\n\r\n* Address code review comments:\r\n\r\n* ensure configure generated platform.bzl values default to empty\r\n* fix cudnn default version\r\n\r\n* Fix syntax error introduced during rebase.\r\n\r\n* Address code review comments - conform to style and add comments.\r\n\r\n* Handle empty library versions.\r\n\r\n* Default to symlinked versions of CUDA libraries when no version is specified.\r\n\r\n* Add cudnn.h header search path accidentally lost during rebase.'
cb78f99de569c13dcc0fc66c555cd77c8884f79d,"'Fix argmax / argmin to not crash on empty input\n\nInstead, they now throw errors.\nChange: 120957905'"
41a79f6bcc46cf7030e7125470f769707d687ff5,'Issue 2066: Fix the conv for stride > ksize case.'
7db0741086fcfaf9bf7d7e804ce6bcce87b3e8eb,'Merge pull request #2096 from mouradmourafiq/fixImportIssue\n\nfix missing import `monitors`'
d420fdadaf2f6a3aee70e8049af033af2f535b57,"'Finish fixing flakey TensorBoard tests.\n\nFor some reason the listener for the ""rendered"" signal was flaking on firefox (around 1% of the time). However, listening for the rendered flag here was itself a workaround for the bug in the graph-dashboard that caused switching away from it to throw errors. Since smilkov@ has fixed that, we can remove the hack and fix the flake.\nInstead, we just use setTimeout to ensure that the tab switch happened before we run the test.\n\nI verified by running each flakey test 200 times and found no failures.\nChange: 120853722'"
f037135f5e51559e766ee471f4888807a257a1fd,'Fix flaky test failure in firefox where asking for bounding box of an svg element that has been detached from the dom produces NS_ERROR_FAILURE\nChange: 120846455'
791a664aef6005187128e06da07e593154f1ea92,"'Fix flakey TensorBoard unit tests\n\n- remove the ""autoreload disabled on detached component"" since it was flakey and not particularly important (in practice, tensorboards don\'t get detached)\n- ensure that event handler is attached to ""reload the dashboard"" test before the event can fire (speculating that\'s what caused a very rare flake on the test)\nChange: 120846177'"
b8bc2cebd4d2650f2f845ef8bbc2ba4777b01531,"""Don't reimport numpy from py_func\n\nNumpy is supposed to be imported only at module initialization time.\nFix this by factoring our numpy import logic into lib/core/numpy.{h,cc}\nand using from both tf_session_helper.h and py_func.h."""
1e53ba6142fbc750c6d36cf320ad69a91bc25eb8,'Fixing #2063 - Merge summaries after optimizer adds loss and gradients summaries (#2090)'
99128c233f6f0f4781627c55a4e3107fb212150f,"'Fix BUILD rules for several C++ GPU tests.\n\nThey can now be invoked by running, say:\n\n$ bazel run -c opt --config=cuda //third_party/tensorflow/core/kernels/my_op_test_gpu -- --benchmarks="".*gpu.*""\nChange: 120756393'"
6637ee74d3a9fc8a862272168e7e0d6f7c050363,"""Additional refactoring of the resize kernels to fix int64->32\nwarnings and consolidate more repeated functionality across\nthe resizers.  (We don't support gradients for all resizing\nmechanisms, so moving it to ImageResizerGrad is a little\npremature, but I wanted to move it in the right direction\nwhile touching the code already.)\nChange: 120741740"""
ae01dafd118d54675fe9af189288cae49503ae36,'fix missing import `monitors`'
aa69640c44841d0ea26b1b3ddd5992279e1bb8a2,'Fixed up inclusion-order problems with Python modules.\nChange: 120730582'
b7408edb1d787fae837908e8b57be7db5bfaa4e3,'Fix label_smoothing versions of loss functions.\nChange: 120724543'
9e4f8f61af7ae11ac5eb1d19be6b3baa42dae04d,"'When the user switches tabs quickly, the zoom events contain NaNs that are now ignored. Also fix the minimap issue when the user tries zooming in before the scene is ready.\n\nThis should also fix the flaky test.\nChange: 120716688'"
10adfb7f0e3270fc55b1862aa60ad6a08a4f3c4a,"'Fix edge case in mapStrictHierarchy.\n\nThe method was not catching all cases where a node needs to be renamed due to hierarchy issues, leading to those graphs failing to visualize.\nChange: 120712411'"
379b2eec8edcb1ac575677549ba7c201764f56b5,'Fix broken links pointing to tensorflow.org/tensorboard/cifar.html\nChange: 120711425'
d5a82c958219acc7d483c8776fe8d5850020993c,'Fixing a typo in dist_test/scripts/dist_test.sh\nChange: 120704077'
55068f32c87c73c8de7a417d8be735306e5307a1,'Fix markdown syntax of skflow README.md (#2080)\n\n* Fix markdown syntax of tf.learn README.md\r\n\r\n* Remove redundant badges from tf.learn README'
802bb864ced5a0bb599c06e673cf38ddc80f3b62,"'Fixing issue in loss_ops where divide-by-zero in select statement causes NaN gradients to\nbe propagated.\n\nThis change makes it so that when the division branch is irrelevant, the denominator is still never 0.\nChange: 120593618'"
ee0684b8cf8ce18b60f648bf8f9a7bcd65004a4c,'Fix docstring of dynamic_rnn (#1989)\n\nminor docstring fix: time_major = True avoids extra transposes in dynamic_rnn'
63c06935aea613ccb5bcaef5e03512b96455c6db,'Fix run_metadata display issues.\n\nCheck for existance of runtime information in a run metadata node before converting it to a number. Also ignore any negative numbers seen for memory or runtime.\nChange: 120499626'
2c46a9ed5f6faaf9f3a407582dd657efa91c24ea,'Instead of just validating the memory type. Fix them if they are not\ncompatible.\nChange: 120497594'
52500e395d526ac932a6de46ecec1ad45082f43c,'Improve documentation for feed_dict value type. Fixes #2051.\nChange: 120464097'
c1aa6423e35803d08b7092a874632b6b7b13a130,'Add atrous convolution (atrous_conv2d op). Fixes #1815.\nChange: 120462895'
9a520bcdeaff8048f0c358f231c86426a5376e74,"'Supervisor bugfix: unconditionally clear the stop event when creating a new\nsession, instead of clearing it only for chief Supervisors.\n\nThis allows code that sequentially creates and destroys multiple sessions on\nthe Supervisor object (i.e., executes sequences of pairs of\nprepare_or_wait_for_session() and stop()) to work for both chief and non-chief\nSupervisors.\n\nPreviously, the stop event was only cleared for chief Supervisors, so non-chief\nSupervisors would erroneously find that should_stop() would still return True\nwhen creating a session after a previous stop(). This would cause certain training\nloops on non-chief Supervisors to exit prematurely.\nChange: 120403518'"
8fc785f8713a067b74efacccc8886a648d3b850e,'Fix a bug in persistent tensor placement.\nChange: 120402773'
0eab496110d7efe03d9dcac01b2922b591aa5833,'Fix handling of Example feature keys with nonstandard characters when creating ops.\nChange: 120390906'
b91a6010f4b933b2edf05700c3dd744ec6fb5a5b,'Fixed compilation warning\nChange: 120389579'
5082486121e539b6c002512f2a756e6b066696b4,"'Rollback of Rollback of ""Add MultivariateNormal to tf.contrib.distributions.""\n\nAlso fix overly stringent constraints on batchwise linalg ops & batch_matmul.\nChange: 120387462'"
6659db6c1e19ccfee81592081308ca2ed6d77362,'Fixed a compilation error when targeting cuda 3.0 devices such as the ones\noffered by AWS\nChange: 120369420'
6aedb0b36abd6813c9a35b09f5346eaa4d7ebfdc,'Added dbpedia to learn.datasets (#1952)\n\n* Added dbpedia to learn.datasets. Updated examples to use it. Updated examples to use mnist and iris\r\n\r\n* Fix mnist tutorial tests'
aad2089637c503b23802997ec63f6030e77292f4,"'Fix bug in op_compatiblity_lib where it would not restrict to the\nstable op list properly, when specified, and would not properly ignore\nops that have been removed from the stable list.\nChange: 120346097'"
2aaebb26ef18311b9e99837cad7e8f06fa0a8806,"'Fix Anaconda install instructions (#2032)\n\nChange to install python 3.4, and change title for consistency.'"
e1c017624fd6bd8562c1da27e0014b32f389b524,'Fix wrong docstring (#2024)\n\nThe keys in the _word2id are bytes literals.'
c6eaa2d20b3eaffbc1a8f3b325e030b998b610f2,'Fix wrong docstring (#2022)\n\nThe keys in the _word2id are bytes literals.'
800321fb5adceb9fe649ebfe38c9c47638fad794,"'Fix Anaconda install instructions\n\nChange to install python 3.4, and change title for consistency.'"
2242803599eaaded61ee71e4df883d5a28606ca1,"'Rollback of ""Add MultivariateNormal to tf.contrib.distributions.""\n\nAlso fix overly stringent constraints on batchwise linalg ops & batch_matmul.\nChange: 120289843'"
f242aede93259cdfd35e1f341dc848145a38c331,'Merge; fix formatting conflicts'
912ab39d932f413c23130bb7d1cb2a9230b67129,'Add MultivariateNormal to tf.contrib.distributions.\n\nAlso fix overly stringent constraints on batchwise linalg ops & batch_matmul.\nChange: 120279428'
b1d7f22fc6ab2bd3c1064b19621b9f889efb203f,'Fixed asan test for memmapped file system\nChange: 120261367'
1150ce54376b01fdac3790f4906a5b34f5b7b65b,"'Fix bugs in tools/proto_text:\n- Oneof values should be printed even when equal to the default.\n- Fields should be printed in tag number order, not declaration order.\nChange: 120223509'"
cf7ce8a7879b6a7ba90441724ea3f8353917a515,"""Fix SAME padding calc when stride>ksize (#1991)\n\nAdds a failing test case for conv2d ksize=1, stride=2, padding=same,\r\ninput=4x4\r\n\r\nAdds tests convering that case for pooling ops too.\r\n\r\nThere's one test case I found that fails in a different way that\r\nI left commented out with R=C=8, K=2, S=4. The error is:\r\nF tensorflow/stream_executor/cuda/cuda_dnn.cc:483] could not set cudnn convolution descriptor: CUDNN_STATUS_BAD_PARAM"""
2092fb45f773db7ff0cfc090cc245594999e4999,"'Fixing additional silent int64->32 conversion errors/warnings.\nFixes a bug in gather that would segfault when gathering\nfrom very large (>2^31 entry) parameter tensors.\n\nGather can now handle index vectors with more than 2^31 entries,\n(if you have enough memory).\nChange: 120171737'"
e07c48ddda09ae755e15b19f621812ee9e4c82cb,'Fix for opensource break due to new losses code.\nChange: 120161004'
3402f51ecd11a26d0c071b1d06b4edab1b0ef351,'Fix for IndexedSlices gradient accumulation in while loop.\nChange: 120136109'
c2d9cb1d0856aae2ee1d37cb4e23cddbb8a88c79,'Fixes and enhancements for contrib/tensorforest:\n- remove flags (pushed to internal client)\n- thread-parallel execution for CountExtremeleyRandomStats op.\n- critical time-seeding fix.\nChange: 120129936'
449ecb561f6b480a6043d23160be00f35b524aa9,'Fix the gradient for functions when its output has no dependencies on\nits inputs.\nChange: 120128592'
8db39c9913f404564ce82d84f28c014730c3196a,"'Starting special_math_ops.py.  Made for math Ops that have more dependencies,\nprobably done in pure python TF, rather than wrapped C++.\n\nStarting by moving lbeta from math_ops to special_math_ops, since a bugfix requires it to depend on control_flow_ops.  The bug was:  lbeta([]) returned -inf, whereas it should have returned 0.0.\nChange: 120069192'"
c303ff7f4fc0fcdcfaaaf513b8b139be2a0f1a7c,'Fix the TensorBoard README.md to point at correct url for demo tensorboard (#1974)'
f88d0cbe75df0a5de21b1c4cfcd7137327478948,"'Add shape information to dense gradients.\n\nThis change takes advantage of the fact that a dense gradient tensor\nmust have the same shape as the corresponding input to the\nforward-pass op. It may enable additional optimizations (such as the\nability to use the accumulate_n aggregator) that rely on static shape\ninformation.\n\nThis change revealed some broken code, for which fixes are included:\n\n* The shape function for `tf.diag_part()` incorrectly used an equality\n  test on shapes, rather than a compatibility test.\n\n* The gradient function for `tf.nn.top_k()` incorrectly returned a\n  length-1 vector for the gradient w.r.t. `k`, which it should have\n  been a scalar.\n\n* A unit test in `control_flow_ops_py_test` inconsistently used\n  vectors and scalars.\nChange: 120038251'"
091a2c3c1b0d84ceda0cb82765069dfbe4d70a5b,'fixed broken links and markdown styling (#1980)'
ea632fc4063d36091a254b6c61325b64ab2a699b,'Fix crash in BFC allocator when failing to allocate memory from an allocator that has zero memory in its heap.\nChange: 120002729'
43f1c2633797040881b1cf99c785d044f30d9582,"'Add TensorBoard auto-reload behavior.\n\nAuto-reloading defaults on and is controlled by a setting.\n\nTo have a place to put that setting, also add a settings panel.\n\nThe settings panel uses paper-dialog and is opened by clicking a settings icon button in the global top right.\n\nMinor changes to how the toolbar is laid out by CSS to ensure that the settings all show up in a line and don\'t bunch up together.\n\nAlso, the ""TensorBoard"" message on the left no longer takes a fixed pixel width (everything is flex), so the toolbar will use space more appropriately when the window size is small.\nChange: 119997005'"
fc3c0992fee825593ddca88a8e8f666ba92e1d59,"'Fix bug in `tf.zeros()` when specifying a scalar shape as an empty tuple.\n\nThis correctly converts inputs to `tf.int32`. Specifying a tuple is\nnow handled using the same special case as specifying a list, so that\nthe constant can be pre-allocated.\nChange: 119985289'"
493eb983c7556c414a6ed610959cba0a64034712,'Fixing markdown in docstring.\nChange: 119973341'
0784fda83b018409faa54125939ce32039b63fa5,'Fixed compilation warnings\nChange: 119971913'
125ee6568a2ecfba9fd2f82497cc159fc513359a,"'Fix ""naming"" anchor in ""Adding an Op"" How-To (#1858)\n\nThe file had a braces-style declared anchor, {#naming}, which wasn\'t\r\nbeing rendered or pre-processed properly. This changes it to an HTML <a>\r\ntag. This should also fix the broken link pointing to this section on\r\nline 874 in the same file.'"
ddb59d7a983f44f3b926542ca535cb66f0582693,"'Fixed bug in `tf.train.ClusterSpec` constructor.\n\nCreating a `tf.train.ClusterSpec` from another ClusterSpec was broken,\nwhich in turn broke creating a `tf.train.Server` from a ClusterSpec.\n\nFixes #1961.\nChange: 119954117'"
143d19d3519b35e45d194b5ae19c4dc05215cb7b,"""Fix info card edge list not updating in certain case.\n\nIf the names in the input or output edge list in the info card doesn't change when switching between selected nodes, then the edge shapes are not updated, even if they are different. This was due to the items list used for the iron-list not changing in this case. Resolved by having the items list contain all information about the edges, not just the names.\nChange: 119949006"""
396b58416e927a6cfbc7fba85265119e0c769168,'Fix small typo in pooling_ops_test (#1953)'
1f4aa4cbf44bc287ec22bf703cd960292a26d3af,'deepdream: fix trivial typos (#1954)\n\nThis commit fixes trivial typos under deepdream/ directory.\r\n\r\nSigned-off-by: SeongJae Park <sj38.park@gmail.com>'
555c7f7c4108ae91601dce2e2dea1ad1158d5977,'Fix conv2d with kernel 1x1 stride > 1 (#1868)\n\nFixes #889'
bc75c6f252bd82ccf5c75f46c4ccbcac7c0e34f8,'Merge pull request #1849 from fredbertsch/fix2\n\nCreating a FFmpeg library along with a test \xe2\x80\xa6'
5d2075f12b0b43a09a432e077334a87394933cd2,"""Fix tf.train.start_queue_runners to use the passed session's graph, not the default graph.\nChange: 119864421"""
ce9bddfc5ab1420a21140f259d37a4b4bff6a7b5,'Fix ASAN breakage due to delete/delete[] confusiong in PRun SWIG wrapper.\nChange: 119861147'
bf1f8ee213a60aa2db79046cfd9d015cadfef602,"""tv.Variable doc: fix typo (#1907)\n\n'b' does not exist in the example, probably 'y' was meant."""
d4bf5e072478c92cae2bd71b96e10e77e229dfba,'image_retraining: fix trivial typos (#1908)\n\nThis commit fix trivial typos under image_retraining/ directory.\r\n\r\nSigned-off-by: SeongJae Park <sj38.park@gmail.com>'
e839d5efe9b8b6178757757ec2a1ef5b4ce7ac1f,'Fixing some warning messages from presubmit checks.'
b874e2ccfda77c964bfb0a41a8dc339e320b185c,'Enable Prod to work on int32 types. Fixes #1919.\nChange: 119811568'
cf1659d1c233f8ddbee13fd298464d76e58bdccb,'Merge pull request #1930 from kchen92/master\n\nFix typo in batch normalization documentation'
891356b6519f94dec35abfeeec3f1a02d6cec2f1,"'Optimize SparseTensorDenseMatMul for the adjoint_b == True case.\n\nPreviously, there were two issues with this case:\n1) columns of B are accessed (chip<1>) when B is RowMajor.\n2) conjugation is performed repeatedly on B.\n\nThis change fixes these by performing both prior to the inner loop.  The\nresulting improvement is ~60%.\nChange: 119796162'"
6ec112357677c84f382faf06c183a2433e3ba825,'Fix typo in batch normalization docstring'
53b9ba7c821ad1a44b63be58a93d3cd1859aac3d,"""Make TF_CALL_REAL_NUMBER_TYPES() and related macros include Eigen::half\nin addition to float. Explicitly exempt GPU effects that rely on atomics,\nfor which we have no good solution for half yet.\n\nNote that there are still ops that don't _declare_ half support (those\nthat use \\u201callnumbertypes\\u201d or similar do, those that use \\u201cfloat, double\\u201d\ndon't); these will be fixed in a forthcoming commit.\nChange: 119786433"""
c9eb57fe7675f353e1366fd045b28a283b9676f6,'Fix deserialization of SparseTensors of unknown rank.\nChange: 119777702'
70e901583d9984cc4aca94d377692204a7cc2377,'fixing third_party -> GitHub conversions.'
fa4bd17f112f7fe0968775dceae9b90af566d09e,'Fix TensorBoard lib/css dependency (#1926)'
227e7db4b0d3d9ff8325b1f0f3a2ee1f91c8eb0c,'Fixing more silent 64->32 conversions with explicit warnings (and/or\nhandling 64).\nChange: 119759411'
81e345d26d9b1c3fc524e5e85f1c028aa7e681ee,'Fix the inferred shape of SparseTensor after a tf.train.batch dequeue.\nChange: 119755164'
bc5e961e1988fdefff8e8aa062f4ab3066c3a9e5,'fix python wheel links (#1909)'
9ff62fcf267b5a8be1cbea34e49fe49856ddd337,'fix ppa repositories in ci_build (#1904)'
351b4b38540129f0b0a127464940ce6b435945f5,"'Fix typo in Mechanics 101 tutorial to match recent code.  (#1867)\n\n* Fix Typo in TF Mechanics 101 Tutorial\r\n\r\nIn the section of Inputs and Placeholders, the IMAGE_PIXELS should be mnist.IMAGE_PIXELS\r\n\r\n* Update TF Mechanics 101 Tutorial to match recent code\r\n\r\n* Update TF Mechanics 101 Tutorial to match recent code'"
ec0552f1bc0e7c6ec6bd84ea1c3c92ff046d6d3c,' * Fix typos in source codes / comments (#1871)'
953637912f6be0c1a432a2f78995f3d3db113182,'Merge pull request #1896 from martinwicke/master\n\nFixes for release'
1e2a17a445d8438efa48858c6acdd38f5970a94b,"'Fix bugs in the indexing operator with latest NumPy (#1895)\n\n* Made the indexing operator accept objects that can be converted with `int()`.\r\n\r\nPreviously, the `_SliceHelper()` would test for `isinstance(..., int)`, which\r\nis too restrictive.\r\n\r\n* Replace `np.random.random_integers()` with `np.random.randint()`'"
f66a4c49344f276e5c13688ff41997c571fd465a,"'Fix chat link at start of README (#1885)\n\nOriginal formatting for this link included the pipe character at the end, so that clicking it would lead to a 404. The more explicit URL formatting makes it so that clicking the link leads to the correct chat room.'"
cc3267fefaef23683fa85057fc27c21f2b31c8bd,'More tests and minor fixes for tf/contrib/tensor_forest.\nChange: 119666432'
7a6a047302bd8a0950d970d9e8bf8787403e668d,"'skflow: trivial fixup (#1873)\n\n* skflow: remove .orig files\r\n\r\nFiles with suffix `.orig` were added mistakenly by commit\r\n16454ee2679e1ee254a5d3995c7f673da09891dd (""Fixed merge conflicts in\r\nskflow"") and removed by commit 641cb259fb2622a1269e2a3332250cd0808539e1\r\n(""Refactor skflow"").  However, few files are not removed yet.  This\r\ncommit removes the remaining .orig files.\r\n\r\nSigned-off-by: SeongJae Park <sj38.park@gmail.com>\r\n\r\n* skflow: fix trivial typos\r\n\r\nSigned-off-by: SeongJae Park <sj38.park@gmail.com>'"
766e79c475edd8ff4eae8bb587561ad573dfb199,'Fixed a typo. It should be x (not b). (#1842)'
dabcdc796319aefbca2e0ad7a2283505e442eae5,"'Fix a typo in Mechanics 101 tutorial to match recent code. (#1866)\n\n* Update TF Mechanics 101 Tutorial to match recent code\r\nIn the section of Inputs and Placeholders, the IMAGE_PIXELS should be mnist.IMAGE_PIXELS'"
fe9dafd1583da5ccc205eab776f86afcb00411d2,"'[Skflow] Fix imports to use specific tf modules, import skflow by default (#1832)\n\n* Fixing skflow imports to use global import for tensorflow ops\r\n* Add skflow import by default to contrib, to make tf.contrib.skflow work'"
eb161ecd0c756aa5c975cbc867e933f19d938b77,"'Fix RNN performance bug. + Additions to rnn benchmarks & benchmarks.py.\n\nThe RNN performance bug:\n* When passing sequence_length to rnn(), calculations were being performed past\n  max_sequence_length.\n\nThis bug had one major side effect:\n* It slowed down the calculation past max_sequence_length (it *should*\nreturn zeros for outputs and copy state through)\n\nThe calculations themselves were still correct:  The state was still\ncopied through and the output was still all zeros.  But that calculation\nwas performed via a vector-conditional select() instead of a single\nscalar cond().  As a result a lot of extra copying was happening both\nin fw and backprop.\n\nThanks to Nat Roth (natusroth@gmail) for unearthing this bug.\n\n**************\nAlso:\n- updates to benchmarks.py (allow more specific benchmarks, added\n  support for --benchmarks=all).\n- cleaned up RNN benchmarks code a bit.\n\nNew and updated benchmarks:\n\nCalculation: Static Unroll with Halved Sequence Length vs. Half Static Unroll\nbatch    full_t          units   gpu     dt(half_seq_len)        dt(unroll_half)         dt(half_seq_len)/dt(unroll_half)\n128      50              256     False   0.164351                0.155019                1.060204\n128      50              256     True    0.033295                0.028203                1.180550\n\nCalculation: Static Unroll with Dynamic Flow LSTM vs. Dynamic Unroll LSTM\nbatch    max_t   units   gpu     dt(static)      dt(dynamic)     dt(dynamic)/dt(static)\n256      50      512     False   1.759111        1.692570        0.962173\n256      50      512     True    0.178953        0.190454        1.064269\n256      50      256     False   0.533132        0.567228        1.063955\n256      50      256     True    0.078298        0.085024        1.085905\n256      50      128     False   0.220362        0.215350        0.977255\n256      50      128     True    0.053379        0.059129        1.107723\nChange: 119495675'"
f72976cad2e63c481cd9b002a5f935f72385d2a7,'Fix GPU BUILD\nChange: 119431584'
ff160e552fc03e2aefee9ca378da8e6fc7fac16e,'Fix broken build.\nChange: 119427077'
95ae233e25f8521b8b4cc3d02e424501f77b514b,"'Fix segfault in grpc_server_lib when an invalid hostname-port pair is passed.\n\nPreviously, if the port was undefined, an out-of-bounds access would\nbe made. This change adds the appropriate checks.\nChange: 119424297'"
ffd88925f4a29e68779f5b95eb99d60b40daf184,'Fixing additional int64->32 implicit conversion warnings.\nChange: 119416366'
86dfcdc5ca7d990016aee6c4560afec4bdee2ea9,"""Make TF_CALL_REAL_NUMBER_TYPES() and related macros include Eigen::half\nin addition to float. Explicitly exempt GPU effects that rely on atomics,\nfor which we have no good solution for half yet. Add some fixes in various\nplaces (some in Eigen, some in kernels) to make it all compile.\n\nNote that there are still ops that don't _declare_ half support (those\nthat use \\u201callnumbertypes\\u201d or similar do, those that use \\u201cfloat, double\\u201d\ndon't); these will be fixed in a forthcoming commit.\nChange: 119409234"""
1cd3593247e4f5ea34a642ff6a2566efd538931e,'Fix rnn_cell._get_sharded_variable to work for shapes of any rank.\nChange: 119407560'
f2a21a8eff655da2d95b392d2967867a08b9f2ca,'Upgraded to the latest version of Eigen that has bug fixes for complex numbers\nas well as fp16\nChange: 119398881'
75d7b02b01d35285a15cd5c3ff8cf4be66abdb78,'Add BUILD files to opensource tree.\nOpensource all_opensource_files.\nFix dependencies of custom op build rule.\nChange: 119376509'
91969ae68e30eef368698094a7f574a3bcfdf315,'Fixes `tf.reverse_sequence()` to work when input shape is unknown.\n\nFixes #1816.\nChange: 119369338'
dbc7edb41702876251ac4f40f36f846e86692351,"""Fix genrules that didn't work when TensorFlow was imported as a submodule and compiled with --config=cuda.\nChange: 119318629"""
867227c1317d05ab1b6e5c2341212ed5741da049,'Fix int-overflow errors in concat cpu kernel.\nChange: 119312877'
b4698ac2c18730df33f2845d0f48fc0f5b0386bb,'Fixes documentation on logistic and softmax ops in loss_ops.\nChange: 119302560'
30392cc8b217dfba06bac520f09f673e8b17d667,'Fix the termination condition for partial run.\nChange: 119288985'
5a58948a2645dfb4dcad9ac330636c9d88b900a6,'Fix python3 error in framework/ops_test\nChange: 119284140'
2222ee421827cf8a1847f097a29d8181b2e3ace6,"""Attempt at adding support for cudnnr5 API only (no LSTM/RNN additions (#1794)\n\n* Attempt at adding support for cudnnr5 API only (no LSTM/RNN additions\r\nyet).\r\n\r\nTested only on R5 on a subset of tests so far.  Have not yet\r\ntested that it doesn't break R4 -- Jenkins tests should cover\r\nthat.\r\n\r\n* Typo fix"""
fe5c6ae460e40a92798d0383026ab0ef85026bed,'Implement a file factory mechanism to handle network file systems.\n- Env dispatches to a FileSystem interface\n- FileSystemFactory is used to look up the correct FileSystem implementation\nbased on the prefix of the filename\n- Provide a registration mechanism to register different factories\nChange: 119268846'
9cc7cf63ae3f7cd38c3bd7b7aac77aa99c7e1951,'Implement a file factory mechanism to handle network file systems.\n- Env dispatches to a FileSystem interface\n- FileSystemFactory is used to look up the correct FileSystem implementation\nbased on the prefix of the filename\n- Provide a registration mechanism to register different factories\nChange: 119236345'
9671b6c17f6d4809cc37c3218e27f885084b6253,'Implement a file factory mechanism to handle network file systems.\n- Env dispatches to a FileSystem interface\n- FileSystemFactory is used to look up the correct FileSystem implementation\nbased on the prefix of the filename\n- Provide a registration mechanism to register different factories\nChange: 119233977'
ec5848907d5bf70b3394b54a64db2c8b61b1ed3c,'Various bugfixes to the core float16 support. (These started showing up\nwhen I converted ops and added unit tests.)\nChange: 119189211'
641cb259fb2622a1269e2a3332250cd0808539e1,'Refactor skflow\n\n* Switching trainer to use layers/optimizers\r\n\r\n* Updated documentation for optimizer argument and added support for instance of sub-class of optimizer if user wants to provide optimizer with custom parameters.\r\n\r\n* Added support for passing learning_rate Tensor\r\n\r\n* Make trainer work with layers/optimize_loss\r\n\r\n* Move config_addong.py to estimators and rename ConfigAddon to RunConfig\r\n\r\n* Added size=small to all tests\r\n\r\n* Moved tf_master and tf_random_seed into RunConfig\r\n\r\n* Removing need in Trainer class - replacing it with just a function and creating optimizer in the setup_training function.\r\n\r\n* Moved saver params into RunConfig\r\n\r\n* Moved creation of placeholders inside data feeder. Can be used for multi inputs/outputs.\r\n\r\n* switch to use platform.default._gfile for file operations\r\n\r\n* Adding a build rule for all skflow examples\r\n\r\n* correcting build rule and import in neural translation example\r\n\r\n* Replacing one_hot_matrix by tf.one_hot (speed + GPU)\r\n\r\n* Fixing missing test and left over refactoring in montior.py\r\n\r\n* Fixed iris custom config example. Also removed duplication of names in trainer.\r\n\r\n* rename iris_config_addon to iris_run_config\r\n\r\n* Fix keep_prob->dropout arg rename in dnn\r\n\r\n* Removing .orig files\r\n\r\n* Bump test_early_stopping test to medium'
8c44d4d7258b35da0275852a6a0c8afa28d16ea7,'Fixing bug in wait_for_session in which we were waiting for N ms instead of N secs.\nChange: 119119175'
30f3cdfc420d831e2591cce62fa51164cf8a700a,'Merge pull request #1691 from awni/contrib\n\nfix mem leaks for dynamic rnn'
3c676e8b1a3b52e7af36937537e8fefad71bc448,"'Fix Scanner so that in RestartCapture, the capture_end_ is reset. Otherwise, an\ninvalid capture is produced where the end is before the start.\nChange: 119062729'"
10e911eed04d74258e1579850cd361d0b04848a5,"'Fix Typo in TF Mechanics 101 Tutorial\n\n* Fix Typo in TF Mechanics 101 Tutorial\r\n\r\nIn the section of Inputs and Placeholders, the IMAGE_PIXELS should be mnist.IMAGE_PIXELS\r\n\r\n* Update TF Mechanics 101 Tutorial to match recent code'"
bc507335f3c72f7ab070785c8f10ea0e19af6209,'Upgrade to the latest version of Eigen that provides better support for float16\nand fixes the computation of absolute values on gpu.\nChange: 119001808'
3ab39c186d2a7e260023b68809963d0813566473,'Updated documentation for optimizer argument and added support for instance of sub-class of optimizer if user wants to provide optimizer with custom parameters.\n\nAdditionally fixed clipping gradients usage.\nChange: 118995198'
2814fd9b4eca53c0eba76da1e2620e9fefbbb791,'Replace eigen3 NeuralNetworks include with eigen_attention.h in attention_ops.cc to fix build error\nChange: 118964563'
806d5fb1110d4e8acccef9354d6745a267f452a1,'Merge pull request #1770 from caisq/linter-test-1\n\nFix a missing pylint whitelist item in ci_sanity'
1335454bc3bdd645d6684b4a4b52380a51129b7c,'Fix a missing pylint whitelist item in ci_sanity\n\nAlso removed an obsolete TODO item.'
affcced82bc3c7cee1e1b57c69dc3547fbbba4bb,'Fixing tensor_forest for python3 compatibility\nChange: 118932430'
82b02359c21461b593c854040d334dd964f13c3f,'Fixing tensor_forest for python3 compatibility.'
320b2e20460a543beba84dc508fe8e638dc97cc0,'Fixed the declaration of ReplaceTensorWithConstant.\nChange: 118898494'
2c2f422a628d83a591fb5d20d46deecc47655ead,"""Fix Linux CPU Tests CMAKE\n\n* for install protobuf 3\r\n\r\n* for docker to build proto3\r\n\r\n* fix path\r\n\r\n* dependencies for protobuf3\r\n\r\n* remove recursively\r\n\r\n* target_compile_features require CMake 3.1.0\r\n\r\nRef: https://cmake.org/cmake/help/v3.1/release/3.1.0.html\r\n\r\n* no need to make check here\r\n\r\n* require CMake 3.1+\r\n\r\n* add ${CMAKE_DL_LIBS} for -ldl\r\n\r\n* [bugfix] chase version to tensorflow/workspace.bzl\r\n\r\n* it contains int main()\r\n\r\n* there's no add_test() in tensorflow/contrib/cmake/\r\n\r\n* fix error from tensorflow-pull-requests-cpu\r\n\r\nERROR: missing input file '//tensorflow/core/ops/compat:update_ops.cc'."""
1bdd2c3dd488f3d1d204a634b7a69f9544141d8d,'Moved a variable declaration inside GOOGLE_CUDA to fix an unused variable\nerror for CPU build.\nChange: 118862525'
2e8726c84a70ff962e11fac26472603aa92cc94e,'fix mem leaks in tensor array and stack'
7a7196ff078537dea305786e802ea37caa7bed84,'[skflow] sklearn dep version check fix'
db96c4f6c590b1e08707a549a4c3a87b5f2907c2,'Merge pull request #1744 from Mistobaan/patch-3\n\nUpdate README.md to fix a typo'
8ca033d080bc3b623c670211904f927daf534004,'Fix blacklist-related bug in pip test\n\nThe bug was introduced during earlier refactoring. It muted the GPU-specific test blacklist.\nChange: 118793075'
72debff6d683412dd564123ec3095fbb33b1cfca,'Trivial typo fix.\nChange: 118790642'
d5e6227f44cf7ca237a92e592694ce8c17ccb160,'Fix memory leakage when executor creation fails for one device of several.\nChange: 118788919'
224533bf28f860a4180488d682ac143b8d570c7e,"""malloc()'d memory should use free() instead of delete.\n\nThis fixes ASAN errors.\nChange: 118786263"""
3c8780451007c27b69f10925d43d1f3501d94106,'Merge pull request #1739 from Styrke/patch-1\n\nFix links to nightly gpu build for python 3'
0f68a53c72d2d3db265e6b3cff5e002cb89d2716,'Fix links to nightly gpu build for python 3'
f3cc8a444c0ee39ec04259bc1b84d8c147976624,'Fix typo in TensorFlow RNN tutorial.\nChange: 118756963'
f313d8011c8362ffd63ae99ef7f02fea20358c9a,"'Fixes in sdca_ops_test.py\n\n1. separates training graph building from execution. Before minimize() was called (several times) inside the training loop which is not correct (it adds nodes to the graph every time it is called). minimize() should be called once when constructing the graph and run multiple times within the training loop.\n\n2. Increased the number of iterations to 100 (from 5 or 20 in some cases). Thanks to fix 1 this does not really slow down the tests. Also this surfaced a bug in previous version of the code: testSimpleNoL2 was passing with 5 iterations but failing with more iterations (which is problematic).\n\n3. Along the way, I fixed some expected values in the tests.\n\n4. Changed rtol -> atol so that checks for regularized and unregularized loss are consistent.\nChange: 118749210'"
ba32ce60dcba7e1a504714194dfdba3173b51add,'Fixed some typos on the TensorFlow FAQ page.\nChange: 118726470'
9f0f274859ab8ec7afaf4fec3c174d02515a8a1f,"'Add type check for concat dim, add tests.\n\nFixes #1723\nChange: 118711183'"
48e6165fc864d0a222571507613c63c77ec6bf61,'Merge pull request #1728 from vrv/python3_fixes\n\nTensorFlow: fix python3 with GPU test failures.'
b1719c3d4fa3d3a291b50f0a410b611b1a005d4a,"""Gradient bug fix for min(), max(), segment_max(), and segment_min().\n\nThe current implementation does not properly handle cases where there's more\nthan one maximum value in a single segment. To provide an extreme example, the\ncurrent implementation will estimate that the gradient for Max(X, X) w.r.t. X\nis 2 instead of 1.\nChange: 118695781"""
734cfe4ba8d49ad4e262229693b64a2238b036c9,'TensorFlow: fix python3 with GPU test failures.\n\npython3 compatibility is so annoying.'
22c86bcbf7171ef3fdfa140323d6dd6e7765ebb4,'Fix the sync_rep optimizer to not initialize global_step after a restore.\nChange: 118682609'
9738a22673d7215b4b37236b96d6da0881b1eddb,"'Fix missing word ""a"" typo.\nChange: 118636402'"
702d0a5a7488b8060f0278aea182cda26e76effd,'Bugfix in benchmarks code.\nChange: 118622662'
4146f957592644677f8831da93280b2a88655b2a,"'Adding ci_sanity.sh\n\nAs first step, ci_sanity.sh runs pylint\n\nAlso fixing some pylint errors in example files\n\nSee http://ci.tensorflow.org/view/Experimental/job/experimental-cais-tensorflow-sanity/3/console for example build log. The linter runs in parallel and takes ~20-30 s.\nChange: 118610687'"
a78459a472cc60baf97a43a2ef2a55b067ea3c6b,'Merge pull request #1712 from ilblackdragon/skflow-fix-imports\n\nSkflow fix imports'
115344555592bd08eaf175694a165d1dba5db8dc,'Fixes import errors in the examples for skflow.'
adf94121d96014d3d5bf853adb70f55f60845a39,"""Gradient bug fix for min(), max(), segment_max(), and segment_min().\n\nThe current implementation does not properly handle cases where there's more\nthan one maximum value in a single segment. To provide an extreme example, the\ncurrent implementation will estimate that the gradient for Max(X, X) w.r.t. X\nis 2 instead of 1.\nChange: 118597696"""
1c8a7a3c713436eb321c045e7d80d640ff43f87a,'Fix short description of gradients function to match actual behavior.\nChange: 118593838'
8d6b2a2eb92b3a2c97533484e410c4d1bdf4685f,"""Gradient bug fix for min(), max(), segment_max(), and segment_min().\n\nThe current implementation does not properly handle cases where there's more\nthan one maximum value in a single segment. To provide an extreme example, the\ncurrent implementation will estimate that the gradient for Max(X, X) w.r.t. X\nis 2 instead of 1.\nChange: 118578945"""
e3a0d6fb61cbb1dd9864684c20e49ef3fa385bb6,"'Fix arrow marker for thick reference edges.\n\n- Added several fixed-sized arrow markers for reference edges (small, medium, large, xlarge)\n- Added a method to shorten the path enough such that the tip of the start/end marker will\n  point to the start/end of the path. It needs an arbitrary marker.\n- Updated the legend to reflect that only ref edges have an arrow.\n- Removed unused css related to this.\nChange: 118530630'"
71ff7c847344f3527f2b88532552f1e67d39a9c1,'Better bounds checking for the segment reduction ops.\nAlso fix some warnings about unsafe conversions.\nChange: 118519927'
9e8cd24d26047a4d86a0045d3c800449ff9b0dc6,"'Update fully_connected_feed.py\n\n""os.path"" and ""numpy"" were unused, so I removed them.\r\nThe tfevents-output-file was not completely written in IPython, so I added ""summary_writer.flush()"" to fix it.'"
e39d8feebb9666a331345cd8d960f5ade4652bba,'Merge pull request #1694 from ExplodingCabbage/patch-1\n\nFix typos in messages'
d6c22b3386de5d9f4b7932b5c2807347ac544458,"'Fix typos in messages\n\nIt\'s ""overwriting"", not ""overwritting"". Also fixed missing space after a full stop.'"
dff1e63098a0980304fe3ba1ba81cedac3362b3a,"""Fixing some implicit int64->32 downcast errors.  (In most cases, by\nhaving the ops explicitly return a failure that they can't handle\noverly-large inputs).  Most of these should never affect correct\ntf programs until people get a lot more memory in their machines.\nChange: 118476613"""
1cd108ae5dff363be4a031f3d9ced4330100ca8f,'Merge pull request #1648 from dongjoon-hyun/fix_parenthesis\n\nFix wrong parenthesis.'
c7d791353bd2aef95ad4807b739cd0b2a6e4cbd5,'Merge pull request #1680 from fayeshine/fayeshine-patch-1\n\nFix ./configure script due to recent change that allows gcc version configurability'
bc5d429432ea22d03ff50faca47319dbdcdb4c29,"'solve a serious bug which cause you fail to build\n\nlast night update on ""third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc"" made me failed to build tensorflow.\r\nThe error is as follow: \r\n```\r\nERROR: /home/wenjian/pkgs/tensorflow/tensorflow/core/BUILD:985:1: C++ compilation of rule \'//tensorflow/core:gpu_runtime\' failed: crosstool_wrapper_driver_is_not_gcc failed: error executing command third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc -U_FORTIFY_SOURCE \'-D_FORTIFY_SOURCE=1\' -fstack-protector -fPIE -Wall -Wunused-but-set-parameter -Wno-free-nonheap-object ... (remaining 85 argument(s) skipped): com.google.devtools.build.lib.shell.BadExitStatusException: Process exited with status 1.\r\nTraceback (most recent call last):\r\n  File ""third_party/gpus/crosstool/clang/bin/crosstool_wrapper_driver_is_not_gcc"", line 49, in <module>\r\n    PREFIX_DIR = os.path.dirname(GCC_HOST_COMPILER_PATH)\r\nNameError: name \'GCC_HOST_COMPILER_PATH\' is not defined\r\nTarget //tensorflow/tools/pip_package:build_pip_package failed to build\r\nUse --verbose_failures to see the command lines of failed build steps.\r\n```\r\n\r\n\r\nI found the GCC_HOST_COMPILER_PATH is defined behind where it is used. This is the reason why it can\'t work.\r\nI moved it before usage and configure again, the problem solved.'"
6ac44c7123f53e2ba5af8987bbd959de5704044b,"'Fix cancellation bug in the gRPC runtime, and reduce unnecessary tag creation.\n\nThis change accounts for the fact that the `RequestCancelled` callback\nwill still be called after a `RequestReceived(ok = false)` callback.\n\nIn refactoring this code, this change also adds the ability for\nenqueued requests to enable cancellation selectively, which reduces\nthe allocation count of completion queue tags for client-side\ncancellation that serve no useful purpose. Only methods that have a\nserver-side implementation of cancellation should register a\ncancellation tag.\nChange: 118403144'"
9d514a8bd1e7c800b5a48e86ba63556c7463f02e,'Merge pull request #1678 from tensorflow/mrry-patch-1\n\nFix broken links in distributed_runtime README.me'
5f70b728c188397d5966d0640b7b0e25bf6ccfa1,'Fix broken links in distributed_runtime README.me'
69eaa5d791c9180f68108c9e8eb30730877f9408,'Fix the example in sync_replicas_optimizer.\nChange: 118376780'
6d3a00790784500ae915c5a67d334967e2e4dca1,'Open vocabulary file in binary mode\n\nThe seq2seq tutorial breaks for python3 as GFile does not specify encoding. This fix explicitly opens the file in binary for both python 3 and python 2.7'
3a5108d94fdd01b57a22f473ef68bac2732b5f22,"'Fix for shape error in retraining, addresses bug #1582.\nChange: 118299015'"
9dde1657e95f64be2c045aba140178b5220043de,'Merge pull request #1555 from abhinav-upadhyay/assignments_small_fixes\n\nMinor refactorings'
8ac009728db931ef3119a337bd23250c89bc7efe,'Added instructions for installing binary pip package with fast cpp protos\nand > 64MB support.\n\nFixes #582\nChange: 118262750'
c6ec46624e3e449a23f2b3d563ccf6ffb303f57e,'Merge pull request #1650 from tensorflow/dsmilkov-patch-1\n\nfix trailing whitespace in edge.ts'
f463609a1af88ea40085a1e297a260201e820fc9,'fix trailing whitespace'
0b1a8305a51442980e09b2fc5a8aff91d1778c5b,'Fix GetGradSource to work inside variable scopes.\nChange: 118251112'
fb1f67457b557b6a84a087a706f9fcbdeece8d40,'Fix wrong parenthesis.'
df9fb3eb68483188c135a6c410115bc38db7fb09,'Fix tslint errors in colorScale library.\nChange: 118237185'
ba6b4dcf7e17d0df57c4cf4f382e0d66c7c08f96,"""Merge pull request #1630 from andykitchen/lstmcell-small-fix\n\nImprove LSTMCell's appearance in TensorBoard"""
76f32c4225582e5d9f7b8180fb5e5f2e1aef2858,"'histogram_fixed_width now uses unsorted_segment_sum to create the\nhistogram, eliminating the need for internal variables.\nChange: 118208659'"
81c6bfada9c795609d5b39cff1efa1bd04de9b30,'TensorFlow: fix immutable_constant_op_test to assert pointer inequality\nChange: 118207941'
41d476938c1efe78076ec47af0c837db325aa2ad,'Merge pull request #1640 from caisq/mktemp-fix\n\nFix mktemp issue on Mac'
29352d126820e1233a5937a993603a88c0bf447b,'Fix mktemp issue on Mac'
ef6e7364e1cbefdc94f009269ec9a438288d285c,'Fix immutable constant op test compile failure'
4d5d4c0a64234c93ed5d21769fe4eb28ab3cc8da,"'Fix comment in boston.py to avoid abbreviation, capitalization.\nChange: 118186721'"
0a8ac4d0d977eb804099a65271572a8497af304e,'Fix race in ExecutorBarrier::WhenDone between error thread and delete thread by\ncopying the rendez_ pointer while holding the lock.\nChange: 118083489'
9da6d3a3cb653dc66e22a7be6d04245528a9c3b8,'Fix tensorflow version (was missing a --pull)\nChange: 118080472'
22cfbd1cebda28c3b55c64519f4af23c462b0000,"'Switch Docker instructions to always `--pull` on build.\n\nThis fixes situations like Vincent hit, where a stale base image would lead to\nnew packages based on old base packages.\nChange: 118071412'"
4ab4b3c4c4a5d88b82baef21103136198b8807fe,'Bugfix in RNN python benchmark\nChange: 118058606'
8016e72bae635392b06598b74c6f87d452e07034,'fixing linting errors\nChange: 118049024'
a21979e7c19764eff688b3c296648c21c66c0a64,"""correct worker_service.proto link\n\nFixes up a link in the distributed_runtime's README.md"""
d782317f55a1fc4944cb321c5c8132a7514acadc,"'Make configure hard code path to swig\n\nI\'ve set it up to just try ""swig"" if configure hasn\'t been run since\nsyncing to this change, so users who sync and have no swig issues won\'t\nhave to do anything new.\n\nFixes #1329.'"
672b969b8c033548df4cbec89b87694b6024bf12,'Merge pull request #1615 from dongjoon-hyun/fix_pipeline_example\n\nFix pipeline example.'
f6800b8e1b95d81d828ddb34485fd6bebadaf071,'Merge pull request #1616 from dongjoon-hyun/fix_arguments_in_docstring\n\nFix arguments in docstrings.'
728418b8f9ca75681a273a26cb150f4dd365cf45,'Merge pull request #1600 from mrry/pr-1595-fix.'
4da6ca28e2a2685872a2d01cc2a0ceb699f01606,'Fix for bool strictness in CIFAR multi-GPU trainer.\n\nFixes #1595.'
a2a263921fb9a7f9e15e59f7741d0f56937aa47c,'Merge pull request #1622 from znah/patch-2\n\nFix nbviewer link to deepdream.ipynb'
e61b7f7eed8d198d492ae82d7f9aae1a64d7181c,'Fix nbviewer link to deepdream.ipynb'
0d77f556297f0641b43b8fb5e972a33c3781bfc0,'fix for RNN/GRU'
131e465bab4a7e7d75ead3e4d2cc3750b603f27f,'Fix arguments in docstrings.'
0a55f6b5dba109d5d22e2595024b05a221bd87e9,'Fix pipeline example.'
5e06a231344f6324cc5054b867b0eb8cbeb37771,'Fix int64 implicit downcast\nChange: 118000502'
c5f37f464c22b590cbc8eddbb002858bf0852527,'Merge pull request #1611 from tensorflow/vincentvanhoucke-fix-notmnist.'
8c7554997f005f4af37409eedce6c32050b87444,'Fix link in TensorBoard README\nChange: 117978853'
16454ee2679e1ee254a5d3995c7f673da09891dd,'Fixed merge conflicts in skflow'
2e149258893b8b7d58e456ad3b1a54a4cf2ebb6b,'Merge pull request #1605 from caisq/cloud-fix-1\n\nFix /dev/urandom-related hanging on some systems'
f3c81dfc8d8f2c0c9c1e399ec3ed20c9ee70893d,'Fix /dev/urandom-related hanging on some systems'
cde9ac2140afd8359c9dbbb169996f1ec9fe43c2,'Fixed a bug related to the gradient of nested conds.\nChange: 117949288'
0417e6716fb230ab7182325fd58c8b2c090c593d,'Modified bench_norm_benchmark to use the new Benchmark API.\n\nTo run it now:\nbazel run //tensorflow/..:batch_norm_benchmark -- --benchmarks=.. --use_gpu={false/true}\n\nAlso a tiny file naming bugfix to run_and_gather_logs_lib.\nChange: 117941756'
7d471c23a4ea5ac163b7ebc5a137f9650d232348,'Fixes warning in tf.Supervisor by passing a Graph to the summary writer.\n\nThis enables shape visualization by default in the graph visualizer.\nChange: 117941335'
9394661924a37fe17e5f11f43833e9bbffbf23ff,"'Fix dense_shape check.\n\nThis rectifies the following error:\n\nTypeError: Using a `tf.Tensor` as a Python `bool` is not allowed. Use `if t is\nnot None:` instead of `if t:` to test if a tensor is defined, and use the\nlogical TensorFlow ops to test the value of a tensor.\n\nwhen the conditional branch contains a tf.IndexedSlices object with\ndense_shape=tf.constant(...).\nChange: 117937593'"
d79bc31f45b1fdf98bdcac022f0a86a3e7fbf860,'Fix a case where DT_HALF would not be part of the right type lists\nfor __ANDROID_TYPES_FULL__.\nChange: 117936401'
04b0babb5c0825e0341615b54d9cf69e83714979,'Merge pull request #1580 from rdipietro/fix-cross-entropy-docs\n\nFix docs for cross-entropy loss functions'
ea795f46ed4abd1ce9b3f5fd09622ab84539a27e,"""Merge branch 'master' into fix-cross-entropy-docs"""
d144474df0f94d824e2a3dbc56d3d36646853b37,'Merge pull request #1596 from caisq/fixes-1\n\nFix a missing-space issue in with_the_same_user'
ed0c46099e578c59f3c3172a1879239ebff7dea3,"""Merge branch 'master' into fixes-1"""
d60904080994559876ba93fbc2c2f26aaafb886c,'Merge pull request #1591 from jendap/fix-test-duration\n\nfix test sizes'
94c512f30fb2104b448b08707fef43d6c09949ab,'Fix a missing-space issue in with_the_same_user.sh'
60dcb469fb81430c6a8d0cfe45174e761bf3c31d,'fix test sizes'
ed121aa170011aa15569670e6bb7090787dd60f6,"'Merge commit for internal changes, including\nskflow import fixes.'"
37606a4c63364c56a0834d281023b62d2bda6cd8,"'Merge changes from github, some fixes to adhere somewhat\nto our requirements for skflow.\nChange: 117901053'"
701792e4d4ecc1597b2f66fc3e63b38b3482c1bf,'Fix tf.complex_abs gradient test to not be flaky\nChange: 117872871'
26d92f5a597a84afe75a05cf607d03035b5f2f17,"'Add optional Android demo termination after running fixed number of inferences passes, to make benchmarks more reproducible.\nChange: 117867195'"
5c4a6481b0556148c12939e55a775a10d9f76a79,'Fix range error from python3 on Mac.\nChange: 117865583'
7d6bff455d73aca56adcd5212e1b8dbc94e7360a,'fixed typo in website\nChange: 117854099'
1dffd48b7351dfef7ee6e1e53d6cb4390975ddf7,'Fix cifar tutorial for bool strictness.\nChange: 117828297'
ec9391d672f1f6239390efe8eb6b41aa374e8d19,'Merge pull request #1579 from caisq/fix-python3-1\n\nFix a Tensor-as-boolean issue in cifar10 tutorial'
b7e004cfe78f12bbe40f1204c4774e7cfc7e62ef,"""Merge branch 'master' into fix-python3-1"""
1fb2d383040fdc6c8e198080b8f088568fe3b338,'Fix docs for cross-entropy loss functions'
7c85129205cb484d7f861fe822c19d10c2eb375d,'Fix a Tensor-as-boolean issue in cifar10 tutorial'
a91af1bdb9cfb74a689f252ac443de508e657118,"'BUGFIX:  Correct the naming scheme used in weighted_moving_average.\n\nNow, the signature is (..., name=None) and variable scope uses name and\ndefault_name correctly, allowing the default name to be uniquified.\nChange: 117787114'"
ac9533879eb4895021f62641c72ae82f3f91e685,'Merge pull request #1572 from caisq/fix-python3-1\n\nFixing a python3 issue in bias_op_test.py'
d7f23aae2adb3b302ef435a719385785c37fe2b7,"""Merge branch 'master' into fix-python3-1"""
4e46d3274881c26a738a3e154a8c6fc48002561d,'Add xrange from six to fft_ops_test to fix python3.'
821116f72752cb9545565cb57e276e14e45e4973,'Tensor boolean strictness fix for skflow.'
37408c89124e8bf4a005ba89d17b18a0dc29f94a,'Fixing a python3 issue in bias_op_test.py\n\nIssue 1: range in python3 does not return a list as in python2'
0c599d7f6cc246f08a5abed185f790d9ae2265b2,'Added -fPIC to the command line in instructions to compile user op.\n\nFixes #1569\nChange: 117716771'
c05ca6b405fda1d6f368270e9108308b67f2e388,'Fix for device_lib failures on python3\nChange: 117682109'
e6efd48f26a7cbe59039a7b26718ceacef5515c5,"""TensorFlow: fix python3 by using range instead of xrange (range is fine\nhere since it's a test and the value is 10).\nChange: 117630192"""
0ee2ce4182472f4af2b482cb6713afe20b2c9407,'Python3 fix for benchmarks\nChange: 117630187'
5ea9724314362fe80760cf226addc7e4a2539493,'Minor typo fix.\nChange: 117611495'
f58acff84a37a02d558d0b332c9b5bf77cdca4a0,'Merge pull request #1556 from davidkretch/fix-add-summary-link\n\nFix broken link in add_summary() doc'
b6569f1179d69e833b1492863cc1de112dfc8aeb,'Fix link in add_summary() docstring\n\nFix incorrect closing paren in link to Session.run() in docstring for\ntf.train.SummaryWriter.add_summary()'
f96ce6590c9bad17df325fe965222fadc8a5d485,"""Merge branch 'master' into assignments_small_fixes"""
7ea96f6b3c2255fdd3c694c6d27871e35b40eeb9,'Merge pull request #1559 from izeye/patch-7\n\nFix a comment in a sample'
231f24ec6499da05e263e17572e6e93783a916f7,'Fix a comment in a sample'
6b644782faaf988fc59e3eb5c5c72810b25c177f,'Fixes to benchmark / depthtospace / spacetodepth tests for python3.'
8296d333271fdb6cfedae868c7a6ce8a8cfa11d5,'Merge pull request #1495 from jendap/fix-virtualenv-pip-testing\n\nfix virtualenv pip testing'
49e4f2c1cbb205a5513a052ec3625aff66f94962,"'histogram_ops refactor:\n\nMake histogram_ops visible\nMake histogram_ops.histogram_fixed_width return histogram derived from current inputs only, rather than accumulate\nChange: 117602117'"
b621b410c64261eb66877e1996024162773d47a0,'Clarification on (and minor fix) for RunOptions/RunOutputs usage.\nChange: 117601377'
aba52f4b4b405d15a37b7c56b026a514b9022b45,"'Add `tf.train.input_producer()` to the public API.\n\nThis is a generalization of `tf.{range,slice,string}_input_producer()`\nthat supports arbitrary types and shapes of input. Fixes #486.\nChange: 117583214'"
908d065342394b88234b7a3fff6d9ef4007e0fe7,'TensorFlow: update eigen to latest change to fix TensorChipping\nChange: 117570343'
0571fd37feb5fe9299357e688f20f447c3dce99e,'Fix control edge list in graph node info card.\nChange: 117570066'
c29e524e008d4a0ce6a87ece2fc31f00366a8854,'Fix whitespace error in benchmark.\nChange: 117564348'
4788f48648395e2b3494ad4680977d5be1672ee6,'Fix graph display failure when a summary node is a control dependency.\nChange: 117557479'
2ec4e1ddb287868c19cd4de10517af43492908f0,'Merge pull request #1546 from caisq/fix-links\n\nFix broken links to nightly wheels in README.md'
24b99693213a4274ceddb1bdf689bddeac634660,'Fix broken links to nightly wheels in README.md'
396bda8def40553fe2c7a11fc1e6637cec65d0bf,'Merge pull request #1505 from rasbt/doc_typos\n\ntypos fix and ign temp files in gitignore'
8656946d6c4c7d97cca4d4385cf1757506e68172,'Merge pull request #1543 from izeye/polish-20160318\n\nFix typos'
f4686d27a705bd547b828693462714d31bfd21ce,'Fix a static_cast overflow in WorkSharder Shard impl.\nChange: 117520810'
1220ba3ab332d6233a84d660cafb3d4e29958224,'Fix two potential asynchrony bounds-check bugs in transpose op.\nChange: 117518926'
1a39c2c1979706084338352d1264951b3ec9c6bc,'TensorFlow: update eigen to latest release that has a fix to too large frame.\nChange: 117506296'
c23050b394898b3249161048f384998683565664,'Added basic support for float16 on CPUs and older GPUs.\nAlso fixed compilation issues with cuda devices that support the compute model 5.3\nChange: 117493644'
7fc2d1803df56b3a995b940da9b395692bb2d0cb,'Fix qualified name of SummaryWriter in html\nChange: 117483092'
dba72e0338ad7a18ccc0ba2d99cfd73c6ec13fc0,'fix implicit int64 to int32 conversion\nChange: 117475266'
4b1ac01f6cc709a613e31039eea83fb90c847605,'fix doc of enqueue_many\nChange: 117471008'
4f947f4e71aa02f316e7eb1fc05d7cc9c1828435,'fix indices in image describing dynamic_stitch\nChange: 117456435'
73def6d6a52058b634d6ded57d2fcfdf152e1881,'Fix typos'
1efc50a1da2472fc0349a81f344cd0463e68d505,'fix virtualenv pip testing'
6c28817b9bd443edea45c351ac8bab8f31e1ba54,'Merge pull request #1523 from ronrest/issue1522\n\nfixes #1522 close file object properly for read_data()'
75de3675286edff0e8c2f9994b13dbd4233cd7ae,"'Merge pull request #1455 from delftswa2016/Fixing-Broken-Link\n\nFixed broken link in ""Links""'"
ff3ed0e58141a02c2be39cbdf15892ad7caeedba,'Merge pull request #1496 from ybbaigo/translate_fix\n\nfix crash for empty dev_set bucket'
a8d97236a7b84ea00e5bb9aa5f2dcd2cab0e0899,'Merge pull request #1537 from vrv/fix_python3\n\nFixing some python3 failures.  Fixes much of tensorflow python'
23d4411ef5f0f772c072d2035083940f7605b6be,'Fix lookup_ops_test for python3 compatibility'
4648c74ba0c0e6ef3f4313e964de1b41d3888188,"'Fix python3 compat issues for supervisor_test, remove use of\ninternal functions, using public API instead.'"
2085865f846240f57b58052b6b99eee0502ec00c,'Fixing some python3 failures.  Fixes much of tensorflow python\ntests and tensorboard server_test.'
d6c7954918f11beedd81d68df7a1626b149398da,'Merge pull request #1527 from ppwwyyxx/patch-2\n\nFix mis-specified data format in documentation.'
6ad05ee6ff434b26238c9ba3558290fe7c4a4cf6,'Merge pull request #1529 from Mistobaan/features/fix-mispells\n\nfix typos'
4afc661767668f045689bff4b6aca42d2fa7b20f,'fix typos'
d868f1e8089b2cbee7c7c7f6b385dda9a13c1c7e,'Merge pull request #1520 from ilblackdragon/fix-148.'
9be9a3dfdbc333134a5c417d97fae4629f14cd83,'Fixes #skflow/148 - off by one error'
6f41f6e3a40f3a782cbacabd00ee89d08bec0095,'Fixing a test for posix environment for memmapped regions\nChange: 117394750'
f1bccd320a742c67245ded0cbe5eba971294d769,'Another bugfix in run_and_gather_logs.\nChange: 117375431'
0d0d92ca52c3f1ce24edc29b60bf1e41c382d393,"""Fixing an int64->int32 conversion that may have made concatoffset not\nwork with (ridiculously) large tensors.  Also switching an existing\ntest to use FastBoundsCheck to increase consistency with where\nwe're taking the other ops.\nChange: 117364143"""
7be94c2f2987db1d45a0d90f56865b0b6a2c93e0,'Fix another unused code warning.\nChange: 117347879'
be59d7a4eef8b914ebb4aa51124613f032391a3d,'fix error message formatting in session_manager.py\nChange: 117285646'
127d17a7bc4b25235b105e0313f1b7d57728bed1,'Avoid race conditions in TensorShape and PartialTensorShape\n\nAlso fix MakePartialShape to correctly set is_unknown_ = false.\nChange: 117285169'
477312ea105663fa5d6ba79e49dcceea7437c1de,"'Re-introducing previous fixes to locking, taking\nadvantage of additional test support for the use_locking path.\nEND_PUBLIC\n\nAutomated g4 rollback of changelist 117208315.\n\n*** Reason for rollback ***\n\nFixed bug introduced in original CL\n\n*** Original change description ***\n\nAutomated g4 rollback of changelist 117196108.\nBEGIN_PUBLIC\nReverting use_locking change temporarily to fix test failure.\nChange: 117284547'"
d0a3000c9232f8b1d51ab050d0e46d897a33955c,'fixes #1522 close file object properly for read_data()'
91e6443a06348c50b99848572352b039b3209242,"""Merge branch 'master' into translate_fix"""
e42c2af56b054194cd72f46a717fb9a5506071a4,"'Fix inconsistency in size inference for RNN cells.\nDo input size inference based on inputs to LSTMCell, the same as for other\ncells.\nLeave the broken input_size @property in place as for the other cells.\nChange: 117276425'"
ab3119e565e762828a5a818de8cdab61e5056fec,'Fix bug concerning computation of gradients inside a CondContext.\nChange: 117260468'
b27022dd3ccb0b415cef3505ee0ee65f25b2ffcb,"""Fix GetOpList and GetPythonWrappers SWIG wrappers for Python 3.\n- Return the result from GetOpList as uninterpreted bytes object.\n- Write a input typemap for GetPythonWrappers to receive python 'bytes'\nobject and convert to const char* pointer and length.\nChange: 117258253"""
9c7be1cf1c4f8cead83e8137a9d0718b657995af,"""Fix python 3 vs 2 issue regarding bytes != str\n\nWas able to reproduce the issue in python3. The problem comes down to 'str' and 'bytes' being equivalent types in python2, but in python3 they are not, since python3 encodes all strings as unicode. Because of this, they need to explicitly be converted to bytes using an encoding, which in this case is utf-8 since protobuf uses utf-8 for encoding strings.\nChange: 117244230"""
af4e6fc72586239d73402564042d5ad4aa640d22,'Fix //tensorflow/python:server_lib_test in Python 3.\n\nAdds a typemap for the `const char* target` argument to\n`TF_SetTarget()` that accepts any object that may be converted to a\nnull-terminated string.\nChange: 117241091'
f9905bf233f452bf405da6278e55e30600d065f2,'Reverting use_locking change temporarily to fix test failure.\nChange: 117208315'
bc964ae42fb1f661bc5452010a185434d2dbf75d,"'Fix stale uses of the use_locking attr that could allow unlocked access\nto the ref tensor itself.  With this change, all locks are grabbed, and\nduplicates are explicitly skipped.  Locks are acquired in address\norder to provide a lock discipline for avoiding deadlock.  (Note that\nthis is not guaranteed effective unless other multi-input code in TensorFlow follows\nit, something to add to the TODO list for the future.  But the training\nops are one of the primary locations where this pattern is used.)\nChange: 117196108'"
e96bc164c772456e6298bc5ea0a9005c296ebe59,'Whitespace bugfix in tf_py_tests\nChange: 117185329'
fc088fa9608bbde4074e5aa3768b36270cb00753,"""Fixes Android build by ifdef'ing out the use of RTLD_NOLOAD.\nChange: 117181098"""
fa4346762ebf9a8fdc6f24a1f580c058f4b45f84,'Fix for reading byte for py3'
37bf6ce4864f1ce4344f68556d37f6105faf989b,"""Fix error in py3 for writing bytes in to file with 'w'"""
27af299f5e0da600a4431ed0f5ecc59ae793e31c,'typos fix and ign temp files in gitignore'
2d580ccb2b13bedbaed0cc38fbf970721607584f,'Adding more from __future__ imports and fix aboslutes in monitors'
318814d6e8ba01d4f20385c6773bbb41ee60bea3,'Merge pull request #1509 from tensorflow/martinwicke-patch-2\n\nFix python3 b'
14b64913a90229ab5edd346a1a92c8f57c8c4d63,'Fix python3 b'
69a5419a61a37a2674b4e6573e9a51828c5d1e9f,'Merge pull request #1507 from chemelnucfin/quickfix\n\nquick python3 fix'
cf95926468832b590d7713f5a15648be25593e5e,"""Merge branch 'master' into translate_fix"""
bc8d5fe435e7489f904c961911727ecbc9f49d8f,'quick python3 fix'
0df350ce40590bab0d41d5f3a4222c1a08ed535e,"""Merge branch 'master' into translate_fix"""
a465e286ccc9c83cb44f3153e91a8ae937904c49,'Fix that TF_Buffer declaration erroneously makes use of C++ syntax.\nChange: 117171668'
cbba0465d73b06e5be123415cdbd12e61b6b1343,"'Handle the case when the same custom op library is loaded twice via\nload_op_library.\n* In C++, check if the library is loaded, and if so, return an error status.\n* In Python, memoize library filename to module mapping. If library already\nloaded, return the memoized module.\n\nFixes #1378\nChange: 117171149'"
3d965a2df83764362f37d9c33e1b9e35d65eb57f,'Fix minimap due to how the new polymer version handles shadow dom styles.\nChange: 117147170'
7ec8e0d5ecc7949da0c49613ec4b6116b2f47d3b,'fix crash for empty dev_set bucket'
5c61053b2a2037b2e955041c1df149a90620e80d,'Merge pull request #1490 from moonboots/master\n\nFix broken android example README link'
ef16d7c929308a45c9c1ade0ff6874982cde882a,"'Fix WORKSPACE link, recommend submodule update'"
d2a06c2df73ed09d9eff60efb559fd38bc47e2d3,'TensorFlow: fix compilation error on RPi\nChange: 117090447'
1cf9e29ec5f849eecb8d9700198585660a0814a1,"'Move notMNIST to Google Cloud Storage, update notebook. Fixes #1475.\nChange: 117088197'"
ca908c4bd1feaddb9a10d365a52d350f96b26131,"'Fix crash in BFC allocator rendering. Without this, gpf_bfc_allocator_test crashes when run with --v=4 because the region rendering code overflows the rendering buffer.\nChange: 117057531'"
ba892f05a32125962ec6cc829641220afab63cd1,'Merge pull request #1484 from abhinav-upadhyay/assignment_fix\n\nAdd space before filename in the error message of maybe_download().'
3a955eb32d919bde8580ff53fb4e753a9579b8f5,'Merge pull request #1469 from izeye/polish-20160312\n\nFix typos'
8aa7daf9c4efdfa6eab1170a760a80b59a067b27,'Fix dockerfile syntax'
b1745b8513286c7a124260fa915f7a9908aca0ba,"""Fix defaults for early_stopping and ignoring it when it's none in the BaseMonitor"""
9917b53a41345cf30954a5a4b17985412f1acfde,'Clean up some unused code to fix warnings in the Mac build.\nChange: 117011572'
e2ffd3ada962aaf9cc30377f41f349fbf0e4c534,"'Warn (and fail) about implicit size limit for unique op (< 2^31 elements).\nAdded a TODO to make this polymorphic, because fixing it requires\na change to the type signature to be able to return an int64\nfor indices and counts.\nChange: 117005788'"
9e256f2f4eaf736bbdaef307ba87b066bc472fa5,'Fix typos'
f94a73c854b29aede9126354c09d73617a4bcea3,'fixes #1293 - diag and diag_part gradients'
e774fa829a1d74ab2d410cefc62cbd47e20b0317,"'Changes to make custom user ops not statically include tensorflow/core:framework.\n- Made a header only cc_library target for tensorflow/core:framework\n- Added a tf_custom_op_library macro to cut down the boiler plate\n- Added ability to compile custom user ops using CUDA\n\nFixes #1378, #1419\nChange: 116991629'"
a2b966692ffec38d5e6f1e35cf21ef9ab0ea01fc,'Fixed a bug in the mean reduction code for GPUs\nChange: 116988587'
14d82dd1b644b69761a6ec67cb76c878e2c2e058,'Fixing threading issue with _maybe_load_sdca_ops().\nChange: 116927408'
56f1d64998744ad655fe5c428658a13be35b865e,'Fix dependencies bugs\nChange: 116925769'
fd839dc6e22fd5e4766db237808828a9ff01a19c,'Make sparse_softmax_cross_entropy_with_logits handle int32 labels\n\nFixes #1250.\nChange: 116899325'
13ea3ca91ba5aecab6f21acc14b9cb6a9afa8630,'Merge pull request #1447 from jendap/ci_build-fixes.'
49f4d198789e7ef7bd0d63d7945116014b9c8a33,'ci_build: fixes\n\n* do not require $USER variable\n* do not contact github in print_build_info.sh\n  - there is a easier and faster way to get the clone url'
a730b5b2700e7364c6506c65d0ce946864a002a8,"'Fixed broken link in ""Links""\n\nIn ""Links"" paragraph there is a broken link to tensorflow.org. Fixed it by changing from tensorflow.org to \r\nhttps://www.tensorflow.org/'"
4d9ab3765363298bdcec49f6d617fdfd7708914c,"""Fix missing spaces in SparseReorder's error messages\nChange: 116875393"""
b145840f1616a0bf17f3369be5379df2a70e0ebb,'Fix series node grouping for first item.\nChange: 116873663'
7706eca44476e8217b61b05d8de70d1ef3e99a5c,'Upgraded to a newer version of Eigen that fixes a compilation error on Android\nChange: 116831720'
016b25521d0d3462579334f68f34e4052e217bb0,'Fix the FutureWarning in `tf.image.resize_images()` for real this time.\n\nAny of the new and old heights could be `None` (i.e. unknown at graph\nconstruction time) so we must check that they are all non-`None`\nbefore using them in a comparison.\nChange: 116824069'
fc2ed7dfcc654303a593988cedc05d7ec2b57049,'Fix the crash when applying SparseFtrl update where inner_dimension > 0\nHas verified this fix by real job.\nChange: 116794658'
458e60b1f876e94fa99b056078e3fe4723c9079a,"'Add tensorflow/core/kernels/cwise_op_rsqrt.cc to android_extended_ops groups\nThis fix the error: No OpKernel was registered to support Op ""Rsqrt"" while running model on Android device.\nChange: 116783406'"
658145f5f18bf1b1741aebeeba245d92bc970f40,'Fixed a couple of compilation warnings\nChange: 116776093'
a9a488de5754936a7e67245033f0d6b5fe7b4c88,'Fix #130: Added explicit save/restore to VocabularyProcessor'
78c5ac2894b9a28924211d717e9153edcd5ab160,"""Update image_ops.py\n\nFix Error using tf.image.random._ : 'numpy.ndarray' object has no attribute 'get_shape' #1399 by fix flip_left_to_right to call convert_to_tensor fisrt"""
e48c70ba22dce43fa474c0daeee15019a98a1e3c,'Fixes computation of SdcaModel.regularized_loss()\nChange: 116714987'
d5944fe3725a0e1194bf76c1a29422cbe6c66f29,"'Fix breakage from ""Assume errors are rare in OP_REQUIRES*() macros""\ndue to a bad definition of TF_PREDICT_TRUE in macros.h.\nChange: 116712226'"
6c576f017156cc0bf50e2dd2cd42b2ab8db9bffe,'Add bool transpose on GPU\n\nFixes #542.\nChange: 116704226'
febfec7256026a38bda30c78c2768b32e64c9a2c,"'Partially revert a change to zeros_like which broke the Mandelbrot example\n\nAn earlier change made zeros_like inefficient if an output dtype different than\nthe input was desired: it first made zeros of the input dtype and then cast.\nIn addition to not being efficient, this broke the Mandelbrot example, which\nused zeros_like on a complex tensor with float output.  Cast is not allowed from\ncomplex to float, so this failed.\n\nThe new code used tf.zeros and tf.shape if the dtypes differ.\n\nFixes #1427.\nChange: 116675900'"
439a269fa19459a42c816417e295e3a9c22962cc,'Fix a typo: test accuracy -> training accuracy.\nChange: 116665650'
16f2a29fda4d9efc9d169e443edbcc326a20e162,"'Fix (and cleanup) tests in TensorBoard and simplified build process.\n\nFixed things:\n - The internal testing was not testing lib/js/node-radar and components/tf-categorizer.\n - The external testing (gulp test) was not running any tests in lib/js/*, and also components/tf-categorizer.\n - Now both systems test everything.\n\nCleaned things:\n - Unified the html test files for external (gulp test) and internal testing into one file.\n - running `wct` or `gulp test` (both commands are equivalent) runs the tests\n - When debugging tests, run `wct -p -l chrome` to open a persistent chrome browser, where you can tweak code and immediately refresh the browser to see the new test results.\n - Removed the unnecessary /// <reference path="""" in ts files, since the typings are linked via tsconfig.json\n - Reused the <tf-tensoboard-demo> in the existing demo page (tf-tensorboard/demo/index.html)\nChange: 116601367'"
8312f3eff85ce927c00f7fe4ec1c2fa26da52746,'Fixes #131: set minimum loss to be last_loss_seen'
972998efe608be7a9c9fad1ba166d52766037d8a,'fix docstring for zero_fraction\nChange: 116586466'
29f90aa2f98a95787acac39488a9b08aec7b7b30,'Enables all `image_ops` functions to accept NumPy arrays.\n\nFixes #1409.\nChange: 116554875'
88a6f775338a6ab57e5c6c1bd249259d46b2bc2d,'Merge pull request #1403 from panmari/fix_types_image_ops_tests.'
645d3c98db9b15d036d157cfb56c99df0f74c6e1,'Fixed image resize tests to correctly use all available types.\n\nnp.float is actually just a shorthand for float64 as can be read here\nhttp://docs.scipy.org/doc/numpy-1.10.1/user/basics.types.html.\nThis lead to the discovery of a bug in the recently added kernel for\nresize_nearest_neighbor.'
bc239bf54da6ede85fdd1df69f528ad5b7903e50,'Merge pull request #1414 from tensorflow/fix-python3.'
8c8a56ca7e289d8647ab63eb8418c7c667774dc0,"'Fix python3 issues: string/bytes, StringIO, range, etc.'"
1e47e2f9bb7112f1a763e758a7bcdaff36edec5b,'Merge pull request #1395 from cameronphchen/mnist_tutorial_rescale_fix.'
6083920703767eb2d4f75e17ada7a81efea14e5f,'#1392 fix mnist tutorial typo'
81536a33ebc7a4354f0c31969720f49a9e6590bf,'Merge pull request #1400 from dongjoon-hyun/fix_raising_wrong_exception.'
011fb47db9c64e00244e7ebb6cf18baee32fb819,'Fix raising wrong exception.'
66cfb4f8457efe2a98378e41a8739249b58df874,'Fix a compiler error due to signed/unsigned comparison.\nChange: 116421402'
325a3f93038fe2af766090831d53d0b10ad71df5,'Fix a broken tutorial link\nChange: 116413358'
eb06eb2fa1f75320ec538b82958d3908c249e36a,'Actually fixed #120'
0a7cd21e0e373de2cf2a4ae5b5eab037e3a37be9,'pylint fixes'
b0cddab4d103fc0170f22736f73ff40deaedc126,'Fixes #120: version check for TF and sklearn'
b43e75dbbcc3fde7afc64b34783cb3b46c9770d3,"'Fix broken gRPC timeout test.\n\nDepending on the test environment, opening a session against\nexample.org might result in an UNAVAILABLE or DEADLINE_EXCEEDED error.\nChange: 116362101'"
175fc9a99bde9c15ac05b6c73ec05d151162f0f9,'TensorFlow: use typedef instead of using typename declaration to fix\ngcc 4.8 compatibility.  Fixes #1362.\nChange: 116317708'
b7fccb6546f4072326a57028a2ce149e6fef83f4,'Fix documentation typo in Graph.gradient_override_map\nChange: 116310892'
28ea72659513fc7df0f088c026d9619bd06da1d4,'Merge pull request #1364 from dgolden1/retrain-fix-typos.'
f0b09bdcc58ab82726e597a0799d9d3e1ebf4ae4,'Fix typos in image_retraining how-to'
d80fa4ebdccffde26334d04ecfc7935887c603e2,"'Bidirectional rnn now returns forward and backward output states, updated tests, tests pass\n\nUpdated docstring for bidirectional_rnn\n\nUpdated bidirectional test\n\nUsing self.assertAllClose instead of explicit iterators.\n\nFixed some alignments in rnn_test'"
9218261e6b321445a988217c8e20ee3140a9dc16,'Fixing a Python-3 bytes-string incompatbility in ops.py\nChange: 116259719'
868aa1e04a7574e74b93fc693c8cfcd62a5037eb,"'TensorFlow: reduce verbose logging. Fixes #1360, #1341, and more.\n\nWe now only log the status at the server during executor failures if VLOG is 1.\n\nSimilarly, do not LOG(INFO) when a dequeue/enqueue op is cancelled because the\nqueue is closed.\nChange: 116198742'"
b3a193de22c103a3e5189d5f548c1f9a9d10e3a0,"'Adds an in-process gRPC server with support for clean shutdown.\n\nThis CL refactors the `grpc_server_lib` library such that it exports a\n`ServerInterface` class with `Start()`, `Stop()`, and `Join()`\nmethods; and a factory method that takes a new `ServerDef` proto for\nconfiguring the server.\n\nAlso fixes a bug in ""master.cc"" whereby a `~Master()` would hang if GC\nwas disabled.\n\nTODO(mrry): Add a SWIG wrapper so that this can be instantiated in Python.\nChange: 116194792'"
3455db797addd0843db4d00db65f49b139cfc5aa,'Fix name in error message\nChange: 116193591'
80ddfbf11f63cf5d55ad16f4bc871cdd18ced3da,'Add shape verification for `tf.nn.sigmoid_cross_entropy_with_logits()`.\n\nFixes #1343.\nChange: 116175143'
431a2dfa8feece5362f732d7307f21f2ee70d0b6,"'TensorFlow: fix duplicate definition of BuildGraphOptions, fixes\nbug on mac build.\nChange: 116165342'"
5c378b0bb49f88538a115c4e3754fa3551da8c9a,'Fix sync issue.\nChange: 116161343'
c3c40b7a8950bba876b92456824e5b6a9505c0a7,'TensorFlow: fix OSX build\nChange: 116152701'
93587a2f3181d8c7464015e2ceb33c9ede532f54,'Fix typo in relu_op.h.\nChange: 116147310'
9d8ea873db7246656c21f5860b53e34f14dd2841,"'Expose tf.contrib.util.stripped_op_list_for_graph\n\nC++ and Python use two different op registries, and in rare cases they can\nactually be different.  Thus, we need both functions available.\n\nAlso fix both Python and C++ to handle arbitrarily nested functions.\nChange: 116142089'"
2c40274367bfdcd226bc73d4515045ece2bf5de5,'Fixing a subset of Python3-breaking lines currently in tensorflow\nChange: 116088162'
dd0a68cb77167890ac5a939020cdf72b234c395e,'Minor doc fix for tf.constant: more precise about `shape`.\nChange: 116043312'
55be24524167c1d1879dba64b492c33c82244d1f,'Fix bitrot in doc generator and run at head.\nChange: 116040450'
43b89c901621d8db4a534e32069e5efcb7d0d912,'Fix reader_ops_test.py in python3 by doing byte/string conversions.\nChange: 116037950'
77887d9f79d0573ceb6254cd322fdbe79f106978,"'Fixes documentation in distributed runtime README.\n\nThe flag `--task_index` should be `--task_id`, as noted in the\ndiscussion of Issue #1310.\n\nAlso deletes an unused file.\nChange: 115996182'"
77d4e89afa8b1940ff67c44702c048b2d6b747f9,'Fix word2vec_basic.py example to be python 3 compatible'
ceeef1c4da658e5b0891c7071915ca337b4bf581,'Merge pull request #1312 from eavgerinos/typo-fix.'
20b444f30b4db29edde1e8f582b489ac8d1abd2d,"""Fix typo 'overlaps' -> 'overlap'"""
c6c063bce1c617371c4ff6254b90a294ad3d360c,'Fixing a still-broken link to artifact in README.md'
75b11620d576bd38b3a2ab84ae3b777a9ac35937,'Fix typo'
d39a592c6da3b0f3a3fadd64ab98fc0712b830b6,'Fix typo in README'
eddddc684a0a17345636801f396a56f9af983c00,'Merge pull request #1327 from mpeteuil/fix-md-pcre-link.'
d89b25bf6455b6b4a5da7d1d489d6d24d59cdd45,'Fix PCRE link in get started docs'
23753679279336f425484185a03fc3747fc79361,"""Update retrain.py to be compatible with Python 3\n\nIt's PROBABLY backwards compatible with Python 2 but I haven't tested it\n\nFixes https://github.com/tensorflow/tensorflow/issues/1274"""
67d3fb03efdfa37e2b7013e2802d1b737f8fbe85,'Merge pull request #123 from ziky90/master\n\nfix of the rnn_seq2seq in order to be compatible with tensorflow 0.7'
48b3b14cf0a8f47579801eb58df3737f4548fce0,'fix of the rnn_seq2seq in order to be compatible with tensorflow 0.7'
66feae1e093708a4e124f61d72af0bf7c5433eb9,'fix  gen_docs_test\n\nnew methods xx in variable.py have to be mentioned with @@xxx in state_ops.py\nChange: 115926888'
c1d385d01924cf02e81adabbdec575c100b14f59,"'Expose tf.contrib.util.stripped_op_list_for_graph\n\nC++ and Python use two different op registries, and in rare cases they can\nactually be different.  Thus, we need both functions available.\n\nAlso fix both Python and C++ to handle arbitrarily nested functions.\nChange: 115918836'"
d4b17f62fa09a10869d0f5d70e5afde833b23f0f,"'Expose tf.contrib.util.stripped_op_list_for_graph\n\nC++ and Python use two different op registries, and in rare cases they can\nactually be different.  Thus, we need both functions available.\n\nAlso fix both Python and C++ to handle arbitrarily nested functions.\nChange: 115915068'"
d12c2dab70b65d616fc7649f932ff8a585b9aca8,'Fix mixing type sort in categorical vocabulray'
cfcf3d6066a41c61d6cf73b328af5099034cbe86,'Fix OSS build breakage due to missing std namespace on vector.\nChange: 115879158'
a886c9e74a00038d12866c60b3c2e5efcc4ee8e4,'TensorFlow: fix undeclared inclusion for conv ops.  Fixes #1334\nChange: 115873803'
a0c9e2d6d5115aba04a650281b10d47e31873671,'Fix futures test\nChange: 115766190'
fdabb9a0eeaa6885d68ff314a12edda5679eca91,'Bugfix to the Any protobuf\nChange: 115740568'
ab48dbd4ac2095548a5bc8505e08e751d409727f,"'Fixing operator order in LRN docs to match code.\n\nThe implementation adds the bias to a temporary, that temporary is what is then the base with exponent beta. The implementation also agrees with the equation in Section 3.3 of the referenced Krizhevsky et. al. paper.\nChange: 115721267'"
1827f66ab8329694d2f7831d83d12c10a8d7b804,'Bugfix to dynamic_rnn: restore some shape information when possible during loop.\nChange: 115717351'
7b11cedae8d9547fe5401538bb22b973e4361abc,'Fixing changes in tests due to reordering after trimming'
d28ca29e52f7635f24470d696c4b61ec26661fa0,'Ref #118: Additional fixes to neural_translation_word example.'
7a7bbcc8b47f54384a43494ac78083de9e3915e4,'Merge pull request #119 from dgboy2000/master\n\nFix examples given new tensorflow rnn interface. Update bidirectional\xe2\x80\xa6'
e576ca6eb5ef5aaff670785530b842feb3d81316,'Fixes #118: Trim in CategoricalVocabulary remaps ids to 1..n to make sure that max number can be used in categorical variables.'
1d4f00da15a886916cd7a62ddf119b0b460c850c,'Merge pull request #1315 from jyegerlehner/udacity-5-gpu-fix.'
a723b61abd25ae3045f862015670d0bf00959e40,'fix spacing'
d99245f1ccd6be547702c3e4d4e8f8e54597c569,'Fix examples given new tensorflow rnn interface. Update bidirectional rnn to return final state.'
6390a06d803fab48536d13a05ffb68d24b4cc991,'Fix small dtype inference error in ctc loss op test.\nChange: 115706184'
f417134a5a41a9fc4ab0161c9215633f3c4c0156,'Copy protobuf header files and Eigen to the pip package.\nClarify the documentation on how to build using bazel.\nFixes #1270.\nChange: 115701645'
fdfbd3af7a25410a999cbd6a0733e36ddd1ddb14,'Final fix to TestReporter (hopefully).\nChange: 115675044'
c487eb53b925d23c6df005e3fea29b8ea82486ae,'Fixing nightly artifact version in README.md'
d27da251bcc4bab7da2f5aecc509b146f9fa1692,'TensorFlow: fix GPU breakage (again)\nChange: 115631502'
8e4858e08915aff45b87f06ad0c719e7d8397c1f,'Typo fix and add example to TOC'
cdd0f2eeef9a11a48433156e41c95a5fd6f4e1ee,'Fix compilation error in argv parsing code... whoops.\nChange: 115610448'
c38bbf42e800f0ff8eb870528053a37f7715134a,"'Rollback of ""TestReporter is back in.  Maybe also fixed the Android build.""\nTest fails.\nChange: 115602477'"
9f58b2404aed5dc3ef4cc58a0caff6f37a63b9bb,'Merge pull request #114 from elqursh/fix-data-feeder\n\nFix predict data feeder to return non-overlapping batches'
ad3ef4c05b2fab077ce7fb56a4927100fed239e9,'TestReporter is back in.  Maybe also fixed the Android build.\nChange: 115589642'
c54829b909555c0836d35c8ada3fea5abe5e7ce0,'Fix iter.next compatiblity with python3'
12da3ed3a95719bf7ed8e2be31b2fa911ba76ed0,"'Fix predict data feeder to return non-overlapping batches\n\nsetup_predict_data_feeder when give an iterator returns\nincorrect batches. The incorrect batches take the following\nform.\n\n[0, ..., batch_size]\n[0, ..., batch_size, batch_size+1]\n...\n\nThis commit fixes this to return non-overlapping batches of\nsizes equal to batch_size.'"
818644c2a946a9d73262ca67b17b98d54856377f,'Changed testing::SrcDir() to testing::TensorFlowSourceRoot() and fixed it.\n\nAlso fixed some compiler warnings.\nChange: 115582482'
86e93febaa2f349f2fbf733d6895a69e87ec578e,'TensorFlow: Fix scatter_op_test now that StringPiece::contains is fixed.\nChange: 115580211'
5c9f4f8973d0958d13e30be574f9403df43b87d7,'TensorFlow: fix bug in StringPiece::contains which made it always\nreturn true.  Add a unittest to catch this type of regression in\nthe future.\nChange: 115573280'
82ecfff7daf984191cb7ee6818314c82caa5e6aa,"""Fix for constant folding where nodes with no inputs doesn't get constant folded.\nChange: 115568214"""
d16868d4bd4c7730b9d0b02f97ee9ea46b77f057,'Fixes #110: Corrected neural_translation_word example to run and train a translation model.'
e752109efb67c07d1017646182e75268e27ae4fb,'Fixes bug in accumulation of total-approximate-duality-gap.\nChange: 115528686'
73d557cc88ee86834917088416e5ce8783d11798,'Fix an error message in tf.sparse_to_dense to include the possibility that indices are invalid because they are out of bounds.\nChange: 115522264'
fcfa866d673aaa08a63f2fd57b2ceafec823d9ec,"'Added TestReporter and test / benchmark reporting tools.\n\nThese tools are meant to allow recording of benchmark & unit test\nstructured output to pbtxt files in a directory only when the\nenvironment variable TEST_REPORT_FILE_PREFIX is set.  For now,\nonly saving of C++  microbenchmark output is supported.\nChange: 115518303'"
bce6216610d57f8f4b1e9e79836737df109c4e42,"""Switch nn.moments() to using a one-pass stable algorithm.\nHelps with: https://github.com/tensorflow/tensorflow/issues/917\nAlso fixes https://github.com/tensorflow/tensorflow/issues/1162\n\nThe main benefit is that the computation of the sufficient statistics is now decoupled of the aggregation of the moments, which means that if you want to perform the accumulation incrementally, you don't have to keep all the inputs around, and can instead keep the much more compact sum and sum-of-squares. Accumulation could also be performed locally if you aggregate across multiple devices.\nComputing sum and sum-of-squares can also theoretically be performed in parallel now.\n\nTested running inception: same performance, same step time.\nBatch normalization benchmark is a bit faster on CPU, a bit slower on GPU:\n\nBefore:\ncpu shape:4/3 #layers:10 mode:py scale:True train:False - 1.139310 secs\ngpu shape:4/3 #layers:10 mode:py scale:True train:False - 0.021970 secs\ncpu shape:4/3 #layers:10 mode:py scale:True train:True - 2.767147 secs\ngpu shape:4/3 #layers:10 mode:py scale:True train:True - 0.074531 secs\ncpu shape:4/3 #layers:10 mode:py scale:True train:False - 0.742835 secs\ngpu shape:4/3 #layers:10 mode:py scale:True train:False - 0.013473 secs\ncpu shape:4/3 #layers:10 mode:py scale:True train:True - 1.738806 secs\ngpu shape:4/3 #layers:10 mode:py scale:True train:True - 0.052777 secs\ncpu shape:2/1 #layers:10 mode:py scale:True train:False - 0.119180 secs\ngpu shape:2/1 #layers:10 mode:py scale:True train:False - 0.011201 secs\ncpu shape:2/1 #layers:10 mode:py scale:True train:True - 0.218297 secs\ngpu shape:2/1 #layers:10 mode:py scale:True train:True - 0.048526 secs\n\nAfter:\ncpu shape:4/3 #layers:10 mode:py scale:True train:False - 0.998944 secs\ngpu shape:4/3 #layers:10 mode:py scale:True train:False - 0.025828 secs\ncpu shape:4/3 #layers:10 mode:py scale:True train:True - 2.657428 secs\ngpu shape:4/3 #layers:10 mode:py scale:True train:True - 0.086614 secs\ncpu shape:4/3 #layers:10 mode:py scale:True train:False - 0.603137 secs\ngpu shape:4/3 #layers:10 mode:py scale:True train:False - 0.017668 secs\ncpu shape:4/3 #layers:10 mode:py scale:True train:True - 1.519533 secs\ngpu shape:4/3 #layers:10 mode:py scale:True train:True - 0.055214 secs\ncpu shape:2/1 #layers:10 mode:py scale:True train:False - 0.071344 secs\ngpu shape:2/1 #layers:10 mode:py scale:True train:False - 0.016440 secs\ncpu shape:2/1 #layers:10 mode:py scale:True train:True - 0.222093 secs\ngpu shape:2/1 #layers:10 mode:py scale:True train:True - 0.039967 secs\nChange: 115507032"""
497606904be87f7a4078ed7ee0784afaa094b258,'Fix build issue with safety fix to gather and scatter\nChange: 115495726'
57df84c47eac324418b2bf11d33cb4b50ba274b2,"""Rename map in control_flow_ops to map_fn, to avoid name conflict with Python's native 'map' function. This also fixes the bug with control_flow_ops.case\nChange: 115472163"""
26078dfaf20f20a5c5d8a30503fbf387d7d30d53,"""Fix safety bug in gather and scatter\n\nBoth gather and scatter now unconditionally validate indices in the inner loop,\nwhich prevents crashes if indices are changed asynchronously while the ops are\nrunning.\n\nFor gather when validate_indices = true, the new code is within the noise of the\nold code speedwise or possibly slightly faster (unsurprising since the new code\nfuses two loops).  Specifically, the geometric mean of int32 gather benchmarks\ngoes from 4.05GB/s to 4.04-4.07GB/s.\n\nFor gather when validate_indices = false, the old code and a version of the old\ncode that supported validate_indices = false both get 1.5% slower.  Xiaoqiang\nand I deem this difference insufficient to preserve the unsafe code path, so\npoof: it's gone.\n\nFor scatter (which always validates), the new code is slightly faster than the\nold code: the geometric mean goes from 546-559M items/s to 573M items/s.\nChange: 115467091"""
92383c8754179375ef1e91f270cd60a126cf77c4,'Fix minor typo in documentation in training_util.py\nChange: 115462062'
94a992cfc3266244b81fe311b805fc1ae3f53f30,'Add correct dependencies to sdca ops to fix build breakage.\nChange: 115408162'
a28882f7fc50a1d59f0bd227ff5d2d7ddc42b451,'Merge pull request #104 from dansbecker/validation-early-stopping\n\nFixes #85 Add early stopping and reporting based on validation data'
3159f6e8337d15232b98c2325fdd8dc4133366e8,'Fix lint'
1bd73a86c4285594ca31181f49ff7c56c60ce924,'Update 3_regularization.ipynb\n\nFixed a mistake in a variable name.'
623fac64f5b33bb0c1f691eb7c5fc58798eeefb3,'Minor refactor of monitoring classes. Add monitor arg to estimators. Related fix-ups'
c9b6b3509f15da16028eb865ddff0331da9d8aaa,'Fix tslint errors in TensorBoard\nChange: 115370821'
b8d35c6aa7996efdb0f96f88be0941ae98308598,'Merge pull request #109 from liyongsea/fix_learning_rate_name_in_trainer\n\nFixed learning_rate in trainer'
2b9f60917a255137d9e97c8e4e767718b07d9152,'Fix build rules for C++ tests in the OSS build.\nChange: 115358623'
3972b66fa5e3bd89e50fc01b43c16b81b52e9319,'Add license header and future imports to sparse_tensor_dense_matmul_grad_test.\n\nThis should fix Python 3 compatibility for this test.\nChange: 115339521'
e9a6432014d5f1e64819baa96dfb6e768d326b7d,'Fixed learning_rate in trainer'
52fce2481d21800a7a6483286e83315be4645bba,'Upgraded Eigen to fix a compilation error triggered by xcode\nChange: 115280348'
5aa3965ba44cd9a0da68022d00c1a5de3425c875,'Fix the license in tensor_format.cc.\nChange: 115261957'
26903ee7b6c80d2f6029ede38b49e4a044e6b9b9,'Fix division by 0 bug in EventAccumulator.\nChange: 115249194'
9eb7b0f137cb3dd546c735275da874ab4d2ac156,"'Fixed bug in example: s/len(num_steps)/num_steps/g\n\nnum_steps is a value (an integer), not a list, so it was a typo to take `len(num_steps)`.\r\n\r\nThis fixes that typo.'"
d671f9153506e2b536beaabd17aaabb33e0543c8,'Merge pull request #882 from manipopopo/fix_train_embedding.'
8c861dd7095ef637a68e89dac4cad6d24f5de34c,'Fix training of decoder embeddings.\n\nNow gradients could propagate through embeddings of decoders when feed_previous=True.'
598eeeec928c1de1c089d4617774a6de9207818a,'Merge pull request #108 from gramhagen/restore_fix\n\nfix path to allow for restoring saved models'
b8caa301299a3ca743c97bb9299386467b39044e,'fix path to allow for restoring saved models'
715fc5aa1a2e465ddcf0ae45dcb25d8e9fa09fef,'Rename `testDoubleRandomTranposeBoth` to `testDoubleRandomTransposeBoth`.\n\nThis PR renames a test case in `matmul_op_test.py` to fix a typo.'
ccd255ad53b955432e57567591c00527e1e0b5b8,'Merge pull request #1209 from dongjoon-hyun/fix_typos.'
e5ca7cce7de65e546310908d5d13f1773c621389,'Fix typos in comments.'
e79290da197b2a5e63975d8f0044c50a9870efd7,'Fix a wrong link to random_crop()'
a147270d9f53af6e7142b4aa8b86284d9e1ad599,'* Fixed broken dask io test'
028d0b46004c921acd48fdd0ec18128d79e18bf4,"'Merge pull request #1213 from vrv/r0.7\n\nRevert ""Fix tensorboard import path""'"
f43cea0c6b10873c893929a8a7ea2d5176da5183,"'Revert ""Fix tensorboard import path""\n\nThis reverts commit 4b3069401fde5ba8a6a01d1aab95cc31e2169626.\n\nThis cherry-pick was not necessary -- the change to tensorboard\npaths was done after 0.7.0.'"
28117ca16f60501feb1716f7c4b05cd3f20bee31,'Fixed a small mistake that prevents the gpu_bfc_allocator_test from compiling\nChange: 115113975'
d032feb7ff54289c4d1e6aaa1322f8a7429be151,'Fixing the backward compatibility test.\nChange: 115111581'
4d998154a31f186fbf154a39372315b225ccb826,'* lint fixes'
fa13ecb63a545d6ae1813bbe52e545ede2e4da9e,'* fix in restore/saver'
4b3069401fde5ba8a6a01d1aab95cc31e2169626,'Fix tensorboard import path'
716b7713e4c8b2d8f093f639ca41816cf4e1c696,'Fix tensorboard import path'
b44abb88bdc00cda5dcf8178cbc3896e776090ad,'Fix dataset encoding in MNIST example for Python 3'
46089c1a765e44ae5eb6206c93367b0afb370a54,'Fixed new lines in URLS in file format docs for bug #1169.\nChange: 115018272'
b74d4b48ee16051fbd6f27bd7518b7a1b5d18ebe,'Fixed new lines in URLS in file format docs for bug #1169.\nChange: 115017744'
555e73da8f171992085c68614f74b23b8180292c,'Fix dataset encoding in MNIST example for Python 3'
07fa55268fc63a04cab81508e5468ee1b1914448,'TensorFlow: fix missing GetCudaVersion() for libcuda.so. h/t to @3XX0.\nChange: 114983764'
76544dde4816b3e1d0b6aff7e31c5f66ad1a69eb,'Fix Shape inference for tf.BatchMatrixSolve and tf.BatchMatrixSolveLs\nChange: 114975142'
c89e89f994f32707bb9fb6dca342b612f19c9db0,'Make ReplaceTensorWithConstant function public.\n\nAlso fixes two small bugs:\n1) Evaluating _SOURCE node during constant folding if reachable by a control edge.\n2) Remove dead nodes after constant folding.\nChange: 114967297'
d153d6bf65303dd1d8d1bb30b2e6f3c1d38c8e0e,'Fix ops pbtxt after http://cr/114925947\nChange: 114927587'
ce9166d8a274a56e4aaa2da6f4097d3a76c2c515,'Merge pull request #1176 from vrv/r0.7\n\nFix Python3 tensorboard server_test failure.  Fixes #1147.'
798fb10a81c493a5e19e624dab71963dbd928691,'Fix Python3 tensorboard server_test failure.  Fixes #1147.\nChange: 114916060'
12729436a776977206316159b67d95417c08265d,'Fix doc to test GPU kernels using docker'
5df9ff89a58a17e6efca7f186b57f22430130768,'Fix a wrong parenthesis'
0be0cf2eaaace4c61c1d6ee14e11a8d4123f8a09,'fix broken links in docs'
410ef4f3b097d3ff47d2bc342bb3ac5bc9aedf72,'Fix typo'
2516e7eab156e47226c6f249f96b1238f32dec9b,"'TensorFlow: another python3 breakage fix, sigh.\nChange: 114923128'"
c4fcf00ff981965e39532fcb68a1c0654bc5317b,'Merge pull request #1156 from tensorflow/r0.7-patch\n\nCherry-pick fixes to tensorboard/gfile/saver to r0.7 branch'
0c6ad48701fb5d81fedfc67d41dcf2b3c91200cf,'Fix Python3 tensorboard server_test failure.  Fixes #1147.\nChange: 114916060'
41bd9ebacd388fa0451bce90fef36754fae89a88,'Fixed bug with fall-through switch statement'
3f1d5d5670e42ea4b01795c787e847dc799b9e54,"""Fixes issues with the `tf.train.Saver` in the 0.7.0 release.\n\n1. The cifar10_train.py example model was emitting warnings, because of\n   non-Variable objects in the `tf.moving_average_variables()`\n   collection. This change fixes that by only adding `Variable`-typed\n   objects to that collection in `moving_averages.py` (which better\n   agrees with the definition in `tf.GraphKeys.MOVING_AVERAGES_VARIABLES`).\n\n2. Saver.save() now calls `tf.gfile.MakeDirs(os.path.dirname(save_path))`,\n   which fails if `save_path` does not contain a directory component.\n   This change fixes the implementation of `tf.gfile.MakeDirs('')` to be a\n   no-op (which better matches the internal library that it is shadowing).\n\nFixes #1123. Fixes #1135.\nChange: 114895020"""
c6393a629b48f77e348e1d51c88dd294d455b6da,'Change polymer version to 1.2.4 in r0.7 branch to fix broken\nTensorBoard graph visualizer.'
477354072837c4f869e173dcd0c0464fd3fa802b,'TensorFlow: fix python3 gfile_test.  Fixes #1146.\nChange: 114880791'
edfcee84a970fd648ea95547ef3f5cc42c1c9880,'TensorFlow: implement gfile.Open mimicking standard open. Fixes #1105.\nChange: 114717481'
bf08a419e5855c57665e7bc21dc7d4df374dc89c,'TensorFlow: add gfile.Copy implementation and test.   Fixes #1102.\nChange: 114712488'
42f06d870014dec70769cbdd8697821c92880be9,"""Fixes issues with the `tf.train.Saver` in the 0.7.0 release.\n\n1. The cifar10_train.py example model was emitting warnings, because of\n   non-Variable objects in the `tf.moving_average_variables()`\n   collection. This change fixes that by only adding `Variable`-typed\n   objects to that collection in `moving_averages.py` (which better\n   agrees with the definition in `tf.GraphKeys.MOVING_AVERAGES_VARIABLES`).\n\n2. Saver.save() now calls `tf.gfile.MakeDirs(os.path.dirname(save_path))`,\n   which fails if `save_path` does not contain a directory component.\n   This change fixes the implementation of `tf.gfile.MakeDirs('')` to be a\n   no-op (which better matches the internal library that it is shadowing).\n\nFixes #1123. Fixes #1135.\nChange: 114895020"""
26e51c58b3c76b6c6a56028438e04da31aaba5c8,'Fix spelling'
94368aff329130c570efdd0367c044930fa5703f,'Merge pull request #1152 from jendap/fix-master-cpu-build-url\n\nfix master cpu build url'
02d415d88fe96177b9a53744dfd57c235bab5343,'fix master cpu build url'
19d632338f983e02dd0268b931e9cced03b74805,'TensorFlow: fix python3 gfile_test.  Fixes #1146.\nChange: 114880791'
8300c32612485ebb7b15304c75d9c6c13e08bc36,'TensorFlow: more fix to android BUILD\nChange: 114834125'
7de4f3a1143a41166244f111be467d217e5af12c,'TensorFlow: fix android build\nChange: 114831071'
048c22aa4e00481614aaf6e64faffc78ff643ad0,'TensorFlow: fix a bunch of remaining warnings (CPU / linux)\nChange: 114827851'
0aacfed74f8e8e01fca98c9cce214787637fb03c,"'Fix gulp build and test (used for external front-end dev) by fixing:\n\n- nodeRadarTest.ts: assert() and expect() methods are not global variables, but inside chai namespace. Also fix incorrect typescript import path (///<reference path=""..."">)\n\n- tsd.json Update the chai typescript definitions to reflect the fact that we are using the BDD part of chai (not just chai-assert). These definitions match the chai typings inside Google.\n\n- lint errors in nodeRadar.ts and nodeRadarTest.ts. Running `gulp test` fails due to these lint errors\nChange: 114819060'"
3463cccb412efb051c9af2dc68fbbf617a8e1a25,"'Fixing format string in an assertion.\n\ndest_nodes is a list of strings, rather than integers.\nChange: 114812133'"
a641ff6aca15b8e6e5ecf96a7a9188c0c1246c8e,'Fix the CIFAR-10 model eval to make the eval entirely deterministic.\nChange: 114801302'
9f5f599c5a96d974b139c99bcbf4edf066775a4f,'Fixing an error where .cc file was accidentally included in extended_ops_headers.\nChange: 114784491'
8bc4c3db768d8dfb0d24f9ddbea4dfaa33505637,'Merge pull request #1133 from cg31/fix_lambda.'
8d6c93c6af3abf2b4165254b6fcce47acae3da2b,'Merge commit for internal changes\n\nFixed mysteriously clobbered tensorboard/BUILD.'
b7b35030d42517a1d920a280af0caa36d4d44cee,'Merge pull request #105 from anprox/fix-typo\n\nFixed typo'
9810aadc8d1c58d6daf79b22886d311057c7bf79,'fixed typo'
0907b351103a2fed8c9b74a5ddaaf47870d9945e,'Update versions of bower components to reflect those inside Google. This also fixes the problem where users are asked which version of polymer to install when they run `bower install`.\nChange: 114774859'
967cd485a822b7c183b4e4fe71df5827ec0b7a5c,'Merge pull request #1110 from ibab/fix-tests-python-3.'
3bc475408d6baf5ca026383138afd93674b92309,'Fix bitcast_op_test.py on Python 3'
1c30801a9bdbf51f08d2b9be5690a668bf29c927,'TensorFlow: implement gfile.Open mimicking standard open. Fixes #1105.\nChange: 114717481'
4391597f47c075471cfc8c3cb790cf42d67105e6,'Fixing exit code in ci_parameterized_build.sh\n\nCommit\nhttps://github.com/tensorflow/tensorflow/commit/00b5ea730ddf63e0cb49a9200f3b610cdbbdc13c#diff-6ea208942bad0a8c2194f5540b5dd618\n\nbroke the exit code. This changeset fixes it.'
0ee27e38afb2682dc7a320397c5d29f43ea7f354,'TensorFlow: add gfile.Copy implementation and test.   Fixes #1102.\nChange: 114712488'
6f2fd6647f9c55be95ee5ca9124cad9b22c072a7,'Rename the parameter of wrapper function consistently with its docs and the original one.\n\nThis fixes the mismatch between parameter variable `dev` and\nits documentation `device_name_or_function`.'
c057b9fcda1f8651da604b3238157fbd45db12e4,'Fix clang compilation error: replace std::conj with MaybeConj<T>.\nChange: 114704068'
46b3d31c228c8e88a2f59a32ca3cd3ced4a09771,'Merge pull request #1109 from jendap/fix_pip_content\n\nshrink pip package content'
24e4866f5e02a45e9ea4d17d50260e609771c8d4,'Merge pull request #1106 from noporpoise/patch-1\n\nPython API docs fix array syntax for pow and accumulate_n'
33d4494935d7bf64e55efc6083528627a04847e5,'Python API docs fix array syntax\n\nFix array syntax in comments for examples `tf.pow` and `tf.accumulate_n`.'
a965380cc2c19877c314d71d48fe786c51c8373a,'Fix build failure (missing include for int64)\nChange: 114667596'
44629a261d2b30b5aa78b13907ccdb736b303962,"'TensorFlow: apply update to tensorboard_handler.  Fixes #1076.\n\nFix originally by danmane@, just upstreaming.\nChange: 114618476'"
54eff2ff2a3f9e529a5692c23f67a18587216c0e,'Fixed formatting and updated some content'
00b5ea730ddf63e0cb49a9200f3b610cdbbdc13c,"""Release r0.7 prep\n\nIncluding jendap's PR 1072\n\nMinor tweaks to ci_parameterized_build.sh\n1) Fixing a missing-space bug\n2) Display TF_BUILD_BAZEL_CLEAN value\n3) Adding time stamps at the beginning and end of the build\n\nBumping version from 0.6.0 to 0.7.0\nBumping minor ver from 6 to 7 in version.h"""
6324828839baf37bf19781aa6304b8b2c12d8fc8,'Fixed formatting in README.rst'
23b28e01792c65b5e403698afd425162881393ea,"'Merge pull request #1092 from tensorflow/contrib-docs\n\nAdd contrib docs, fix C++ doc generator, tweak the C++ docs layout, and run gen_docs at head.'"
6ef21d0ed3d6f54cff6bac2cbe70173d3e796c6c,'fix linter'
d03c1ecbb1b8aa3e171cfeb37efde5d6978b21bd,'Fix doc generator after C file moves'
79eed0389370dad7210312975b101489b6dc9f8c,'Fixes #57: Adding class weight support on estimator level. Now just pass an array of n_classes with weights and it will adjust logits and loss value for this'
3e89c75609c7ce7781370901c709cc51ca57d97d,'Merge pull request #1087 from tensorflow/fix-android-build.'
58c911a99dee6feea5193dada09eb9fc784e5566,"'Merge pull request #1086 from tensorflow/fix-1064\n\nFix #1064, python3 string/bytes comparison'"
59a3e7e367dde6c6764e268550d2c80d84fffebb,"'Fix #1064, encode string before comparing'"
5ff25c9f61e69c6f4b92611093b25b188fd4086b,'Fixes #100: do not train keep probability in dropout op'
d287d866ea5a620735779a59ffe0e4a4e45fb720,'Merge pull request #1075 from caisq/fix-python3-r0.7'
91820a241518164324bdf1798a8b6a9e50d57690,'Fixing Python 3-breaking xrange'
35e12d74537ffbf7a27a2136337b1c52c922ae96,'- Unnecessary random call fixed issue #92'
6d46c0b370836698a3195a6d73398f15fa44bcb2,'TensorFlow: fix imports\nChange: 114583362'
f7a0fd0febdc8a11cf097103a551e50f65ee7042,'Fix a typo\nChange: 114582383'
383db1941fd1f2036534f8171bfb78a815e27cbb,'Merge pull request #1078 from danmane/fix-tensorboard-clean\n\nFixes issue with loading external tensorboard assets'
ad0b4a99ee71e03e203acbfc2f9209ceaad3d5ba,"'A few bug fixes to pip.sh and ci_parameterized_build.sh\n\n1) Perform pip install twice, first time with --upgrade and second time\nwithout, to fix sporadic test failures related to protobuf version\n2) Correctly determine the local pip install directory based on Python\nversion being used\n3) Always perform ""bazel test"" on non-Docker build environments, such as\nMac\n4) Addressing the issue re. && in command argument to ci_build.sh (for\nparallel-build + serial-tests)\n5) Addressing the issue of && in command argument for ci_build.sh\n6) Adding genrule_strategy standalone to non-Docker builds'"
08bfac2ea60709e038d6f67fcb1d2db5c10a9583,"'A few bug fixes to pip.sh and ci_parameterized_build.sh\n\n1) Perform pip install twice, first time with --upgrade and second time\nwithout, to fix sporadic test failures related to protobuf version\n2) Correctly determine the local pip install directory based on Python\nversion being used\n3) Always perform ""bazel test"" on non-Docker build environments, such as\nMac\n4) Addressing the issue re. && in command argument to ci_build.sh (for\nparallel-build + serial-tests)\n5) Addressing the issue of && in command argument for ci_build.sh\n6) Adding genrule_strategy standalone to non-Docker builds'"
9a7b4a445f9f529896c8f3c77cca53b786925f07,"'Fix import in bitcast_op_test, and fix use of std::min/max\nChange: 114567649'"
917ffdaff7f8ba3a5275dfbc7eed8f9b099efa1c,'Fix minor typo in comment (numberes -> numbers)\nChange: 114566035'
68e8b0f1e02f1e0e10f4fdd689ede80f973e2756,'Fixes issue with loading external tensorboard assets'
fa112c3d97a3bacb199fc0f288d24986ee5405ec,'TensorFlow: fix android OSS build to remove stray rule\nChange: 114565136'
8fce27bc797582c573c232b9b9328cef4c642048,"'Fix int32-overflow error in shape computation.\n\nI got the following error message before tracking down this bug:\nInvalidArgumentError: Input to reshape is a tensor with 2764800000 values, but the requested shape requires a multiple of 2764800\nChange: 114562418'"
125b8058c0b815c7b1b2663ff2d7568d81c08313,'Add a bitcast op for changing the type of a tensor without copying its buffer\n\nFixes #655.\nChange: 114542161'
3c933761e40101952fdcc0896bb3de1c5654192b,'Fix TODO addressing imports in gen_cc_md.\nChange: 114471496'
62622d78c5cd45fbbe04497de856ff5424051678,"'Fix doc string weirdness introduced by script\n\nThe doc string is still pretty confusing, but this is what it was before I\nmessed it up with my script.\nChange: 114470999'"
27eb320f9d78e51828fb80cdab90cbb76c6a43e5,'Fix a bug for an unavailable argument'
ed6f783690a35e54441881930d4291894bc03285,'Merge pull request #1057 from JonasMeinertz/fix-arxiv-links.'
73b9dd18ce3017829edef4a5b4190a4f0579369c,'Fixed several saver_test errors in open source and with python3.\n\nFixes #1035\nChange: 114439527'
c4207090d68151fb967672a90ea6d574e62cfba0,'Merge pull request #1050 from chemelnucfin/fixcomparison.'
0568469ac8582058919f05a50f70c3ff83912b0c,"'Fixed ""filer"" type in variable_scope how to\n\nChanged ""filer"" to ""filter""'"
f389c08e77662e395eb4af0d915f18467dcc8462,'Merge pull request #1048 from dongjoon-hyun/fix_new_typos_in_core.'
d1a0ea5ae05d7c1a88d7ec4d3d139962d5b16338,'Fix new typos in tensorflow/core.'
f27a4d90843fc56e492f7534f6f7c6b722e17cd6,'Fix typo in RELEASE.md'
257f98142e9b13c4392be3f6820928b8b573eee1,'Merge pull request #1044 from caisq/fix-python3-4.'
4c8a0f19ee5eae260d54250d1ed6f328a5a7831a,"""Fix bit rot in random op benchmarks\n\n1. RandomParameters is now TruncatedNormal.\n2. Shapes can't be scalars anymore.\nChange: 114377586"""
fc547c1289793d24ad0da06b4ce20a8da7f34e64,'Update ops.pbtxt to include typo fix.\nChange: 114377444'
b2757fb5797252bb1ef12bbf04be796cc83000cc,"'Switch label_image to use TopKV2 instead of TopK\n\nFixes #1040.  I need to file a further bug so that deprecated ops are removed\nfrom the C++ API entirely, similar to what we do in Python.\nChange: 114360963'"
18297126c0bc13c7045841f5a7a99f3da68176f4,'Fix tf.test for PEP-8 and document\n\ntf.test now has appropriate snake case function names (get_temp_dir and\nis_built_with_cuda) and has normal toplevel module documentation.\n\nAlso fix a bug in make_all.\nChange: 114351269'
d77ef35e133275c7d393d92e219276bb9eb47cad,'Fixed the forward redeclaration of Eigen::ThreadPoolDevice and Eigen::GpuDevice\nChange: 114341222'
2c13163b3fe88b1815f4010e261b542489487cf8,'Fix reduction op to honor host memory constraint.\nChange: 114337745'
e27aa15ed7fd4f3d735bf7a8a29b97fdede710bd,'Add usage of batch norm in conv test and fix usage of is_training collection'
211df3939c2e6216f2505ff6eb5e9423cc0cbb56,'Fixing a recently-submitted Python3-breaking line\n\niteritems() --> items() please'
d32b1095345cab195e6b64f01a132afa971b18f7,'fixed a typo'
7b6d2df2e0bdce552ebfdd2e88908e24de10db6d,'Merge pull request #1020 from panmari/fix_tensorboard_backend_pip.'
880011919c7b113802eb23c54ed5b8e2218e4416,'Fixed tensorboard installation for pip\n\nBroke when backend was moved to subfolder. See also #1000'
fabbce38898572439852285388bbca2e19d5f412,'Fix all but one Python 3 test'
05454c61ea2290b99bde119640dd91fa56bb57de,'Fix error in seq2seq ops after changing to enumerate'
1bcebcc665e7e9c280be65899002fd3d5a7456a5,'Fix a typo in tensor_shape.h\nChange: 114224625'
f4b0df86fc5120d260739f12af0b9723dfbbcf68,'Improve the support for device functions when using `tf.import_graph_def()`.\n\nPreviously the device function would run before the inputs to an op\nhad been added. This yielded incorrect results for some device\nfunctions that depend on the inputs to an op. The fix is to split the\ncreation of the op from applying its device functions (as we do for\nshape functions as well).\nChange: 114219160'
27c7a6bf7799a05c083700c7b7667542b3f1de5d,"'Fixing some test errors in Python3 PIP install\n\nThe following tests fail in PIP test-on-install on Python3 and are fixed by\nthis CL:\ntensor_array_ops_test.py\npy_func_test.py\nfreeze_graph_test.py\n\nAfter this CL, there will be only one remaining test that fails in the Python3\nPIP test-on-install, namely,\nsaver_test.py\nChange: 114212677'"
80cb6001ec9e217095846467d4855b370cf4db42,'Add Docs blurb to howtos.\n\nalso fixes redundant path elements in links.'
9bea801f178dc3a2fc47d796d27a746f0a6e1408,'fix linters'
2197c067c79d1464eb957764f8edd120693dcdf6,'Fix setup.py for Eigen headers\nChange: 114173506'
ff4e52b28dac0533d613973fe58a4b5b2888d349,'Fix exception re-raising code. Exception instance e cannot be called to construct a new exception.\nChange: 114131158'
7629ae60bf94fc0d39f40d0b7aeecff2f86a0ca0,'Fix for python3 syntax incompatibility.'
11c7506bbb351cac785e139a7982fad49f3f1022,'Fixed the fixed point code to make sure it compiles when AVX2\ninstructions are enabled'
bddea00b76f1101ea392bd0bfb5254d8c2779395,'Merge pull request #1010 from moutai/patch-1\n\nfix minor filename typo'
79f863dc3a132d84aec800755a823d78118d7af0,'Merge pull request #1014 from tensorflow/cleanup-merge\n\nFix merge gone wrong'
59f1eba5fb94506a205fa2e81145667754739da5,"'Merge changes from GitHub, clean up linter errors, fix dependencies test.\nChange: 114064632'"
d53f06b6a3c77160ad955b718a04260674752298,"""https://github.com/tensorflow/tensorflow/issues/999\nnn.moments()\n- fix to handle axes that can't be automatically broadcast.\n- add a keep_dims optional argument to returned means and variances with the same dimensionality as the inputs.\nChange: 114056974"""
dffd6457e49d2ee7e1074ffe227fa858c188ec74,'Fix OSS build reference\nChange: 114044938'
aa976ef6a20865b41ab2521756d2af4d8ebb6d5a,'Fix python3 issues\nChange: 114043720'
49fd28274b7a0c1e48bfb507cb73ead10d717e50,'Strip out external/XXXX/ prefix from GetPath in cc_op_gen\n\nGetPath was not stripping external/XXX/ which make C++ compilation\nof the generated header fail. All external repositories are added\nto the include path in C++ compilation by Bazel.'
7f80eb149b11ee343adb3f21f5c42f8ec131849e,'Merge pull request #1007 from vrv/fix_word2vec_timeout.'
5619a2ccc0fb517d9bbbcd16b7fba080efeb39dc,"'TensorFlow: fix word2vec timeouts on GPU by pinning model on\nCPU.  Right now word2vec is not well supported on GPU (missing\nscatter sub, etc).  We can remove this limitation later when\nScatterSub and other ops are all available on GPU.'"
e235074045ee1bb2babb490e7e61716a8528ab8f,'fix minor filename typo\n\nfix minor filename typo'
5ab0602a6fb003029d40dc6b03de9b660f73330a,'Merge pull request #1008 from eerwitt/minor-spelling-update\n\nMinor comment spelling fix.'
45b8212c666dcd0f08fde9d69dd60fb1255cdf20,'Minor comment spelling fix.'
3f06730be4c21d158b9714841098048bd48d89c6,"'Enables `tf.image.resize_images()` to accept tensors for height, width.\n\nFixes #1001.\nChange: 113956896'"
7d634fc35616e27a22fc3c985ea8f8dc56a8b196,'Merge pull request #1006 from caisq/fix-python3-2.'
bf935c19ffccb3b84d807bbda9c983c1c156af4a,"'Fixing more tests in Python3\n\nThis CL fixes a number of (but not all) remaining Python3 test errors,\nincluding:\n//tensorflow/python:cwise_ops_test\n//tensorflow/python:gradients_test\n//tensorflow/python:topk_op_test\n//tensorflow/python:parsing_ops_test\n//tensorflow/python:learn_test\n\nIt also fixes a subset of the failing tests in:\n//tensorflow/python:function_test'"
969b739def3b217d92c5ac9a84fc97f07d2d22b3,'* Fixed imports and pylint'
e56438b28fbc8b2328a2f386c49a7e88adb3e07b,'Merge pull request #997 from caisq/fix-python3-2.'
b064d6199d2553c9c6ac6013c9f62b9af47f4524,'Fixes ZerosLike on GPU\nChange: 113889504'
4c6cb2392e1b933f876979975a1274cdb9480e97,"""Make gpu_event_mgr_test less flakey.\n\nThe various subtests are supposed to ensure that tensors queued for\nunref after some GPU stream event completes actually do get deleted.\nHowever, the way in which this is normally accomplished is\nasynchronous in a couple of ways.  First, completed GPU stream events\nare ordinarily detected by an independent polling thread.  In many of\nthe tests, this is bypassed by synchronously calling into the polling\nfunction to harvest completed events.  However, event completion\nitself is asynchronous and dependent on the CUDA driver.  It is\nsuspected that the test failures have been due to delayed event\ncompletion, such that the test criterion is tested prematurely.\nUnfortunately simply synching on the CUDA device does not fix the\nproblem.  But in these tests there's never any actual GPU work queued\non the streams, they only contain events that are eligible for\nimmeidate completion.  So the fix applied here is to put a while loop\naround the synchronous poll call that clears the queue, achieving the\nexpected state.\nChange: 113877300"""
73327e4f07c0f57c8b4348795c7200a5eeef6ae8,'Fix a typo in the `Graph.name_scope()` docstring.\nChange: 113857852'
2327abc98900740fadcdf4c50d75e9585488043c,'Merge pull request #992 from dongjoon-hyun/fix_typos_in_kernel.'
32180c011ce7ab053010f868ac371a55d41bd98f,'Fix typos in strings and comments of core/kernels.'
e0810f48fdbcd9a2f18a42485383091dd0622a4e,'Fix assertions in `Graph.name_scope()` docs.\nChange: 113846943'
4a6d3bddbd3b5697374fe31574900c655de09904,"'Python PIP test-on-install\n\nAddressing jendap\'s comments\n\nAdding --upgrade option to pip install\n\ntest_on_install: files not installed by required by the unit tests\n\nRemoving --upgrade flag for ""pip install""\n\nRenaming test_on_install.sh to pip.sh\n\nGetting rid of absolute path /tensorflow\n\nand making sure that the whl file and testing working directory\nare in the workspace.\n\nPutting output of individual tests in log files\n\nCorrecting a blacklisted test\n\nAdding progress string\n\nEcho log directory\n\nImproving error message when container type is incorrect\n\nMac-friendly absolute path function\n\nVerbose pip install\n\nAdding pip upgrade option\n\nMore intelligent local python path finding\n\nUsing longer test log file path in case test file names have duplicates\n\nFixing bug of nonexistent directory for log files\n\nRemoving ci_test_on_install.sh and other changes\n\nMoving the whl and test folder under one common parent folder: pip_test\nAdding pip_test to .gitignore\nPrinting detailed folder if the .whl file can\'t be found in it\nChanging succeeded to PASSED and similar wording changes\n\nAdding new line at the end of .gitignore'"
0620d2ca5e9e19ae6171aadab1474705d4629eb4,'Merge pull request #981 from tensorflow/fix-952.'
ee649764d5635d1acfaa74a892542e03018e554f,'Register ZerosLikeOp for all number types and bool\n\nFixes #952'
f8741f131d30050205d84034fe13450ed9c36cf2,'TensorFlow: fix to directory_watcher_test on mac.  Fixes #964.\nChange: 113779032'
dd3e7502b08c6ad324a673337a0d3df5bc9cebac,'TensorFlow: fix framework_function_test to only depend on\nthe additional libraries it needs.\nChange: 113774883'
efed7fbafd8f76dea3f82742726e35b72dc1c931,'Temporary fix to tensor_array_ops_test failures with a TODO.\nChange: 113753319'
e1b77eb2931c60c71bc149bb1ec13394c508162b,'Fix typo (h/t Yao-Nan Chen)\nChange: 113748862'
3645876eead595b945a9cc7130954a72c5f3a545,'Fixed bad Python syntax in event_accumulator.py.\nChange: 113701311'
1be31a13f9007415f01d212879f29d9db1247139,'Merge pull request #978 from tensorflow/fix-952.'
c15732f9fc8e030872ea7234d300e76a9b5c9cd7,'Register ZerosLikeOp for all number types and bool\n\nFixes #952'
34afdbbcf35309416568dd96422c45aaefdf0f84,'Fix typo in code comments in cifar10.py\nChange: 113652958'
34e38936d627fae97ac53f09bb333cba8c334858,'Remove external/<repositoryName>/ prefix to includes\n\nThis prefix is invalid when using tensorflow from a remote repository.'
945e114994c09cd1116feb291cb9d0a2cf9954d3,'Fix build.\nChange: 113599077'
1c167b7debf3d51e3dfdd745e59e1267e03fd02c,'Fix print formatting.\nMore general exclusion of files (h/t @shreyasva)\nTypo (h/t @seanpavlov)\nChange: 113597422'
0ea345362f1b7ffa413427157a17f5d0f4da04f2,'TensorFlow: fix EXPECT_OK and ASSERT_OK macros.\nChange: 113592220'
a8d2f0983ecdea8ff2526c717d6a9b2f06f403d8,'Minor formatting fixes.\nChange: 113582098'
5ff6d34a05b2eb49f7a79a4d0b78ada9a6842b6c,'Fix a Python 3 incompatibility in the SWIG bindings.\nChange: 113579944'
ce24b95483cf28226b0e5e6e7244faa19d7192e3,'* Fixed typo'
bcd7679fe2c3d774819e48c369ee65d949618ff3,'fix gradient of tf.floor'
8525dbdc02b0c45c38ba16cfba26856eece2b851,"'Fix for MatMul statistics transpose error, fixes #899.\nChange: 113571550'"
b98a67d324476f25dd955cb951c1f3a76a5247b4,"""Change types of constant numeric literals.\n\nThis PR fixes mismatched types in numeric literals usages.\nFor examples, use 'size_t{0}' and '1u' instead of '0' and '1' respectively.\nThis removes 26 simple compiler warnings in 20 files\non 'signed' and 'unsigned' comparisons on CHECK_* and DCHECK_* macros."""
05cae1f96f7ac2dfb6368fd87e6254194a04281a,'Merge pull request #89 from lopuhin/fix-dropout\n\nFix dropout management in TensorFlowEstimator._predict'
0f516e3d86196ca2136f8e8b05bef6d93f2509c1,"'fix dropout management in TensorFlowEstimator._predict - get correct list of dropout variables, pass keep_prob = 1.0'"
8f5da79619fc356565c51518138d64c9a71e27a4,'TensorFlow: fix OSS cuda build by adding header for int64 definition.\nChange: 113453561'
5962171ce676533b69310c569354c7e3692d5df8,'Merge pull request #943 from cjauvin/fix/udacity-notebooks-py3.'
88507bc9c73eb38e5c52979d0bea18d8befd9dd7,"""Squashed commit of the following:\n\ncommit 4e7b6e2799d6a2bf52027dadffb4ce3f14ed3f66\nMerge: b0b231a 2b7d622\nAuthor: Christian Jauvin <cjauvin@gmail.com>\nDate:   Sat Jan 30 13:11:00 2016 -0500\n\n    Merge branch 'master' into fix/udacity-notebooks-py3\n\ncommit b0b231a7202db3d4b4e31fa361cd1078719b9ba9\nAuthor: Christian Jauvin <cjauvin@gmail.com>\nDate:   Sat Jan 30 12:57:32 2016 -0500\n\n    More explicit examples of batch generation algo"""
2cb25ab1a94f3fe32bc6e00144c278373e404eaa,'Upgraded to a newer version of Eigen that fixes a compilation error when\ncompiling with nvcc and clang'
5fb0a9f6f467b64b0acc97004f02643626817e5d,'Merge pull request #922 from cjauvin/fix/udacity-notebooks-py3.'
c509c78d0f28c90f45edd65f7c3bdf080d8e0283,'Fixed constant folding to handle nodes with multiple outputs.\nChange: 113220692'
19bcd451e6001958cb9660eda4c3831b3656b99c,'Fix broken build.\nChange: 113217181'
a5736ad6248cbb538984f2eee844b526a3534bd1,'Fix broken build.\nChange: 113216002'
bcd9722be4250b8584e4fe5bc4f60b8793cf87d0,'Fixed constant folding to handle nodes with multiple outputs.\nChange: 113215834'
33aa62872774539f2a8144db0c93a1b9ce3ed51f,'Fixed constant folding to handle nodes with multiple outputs.\nChange: 113212117'
fea55e1e05ffbdaa4ae4369d1c35e689a7dc48a2,"'Breaking change in TF RNN python api: Return the final state instead of the\nlist of states when calling tf.nn.rnn() and tf.nn.state_saving_rnn()\n\nThis is necessary for further cleanup of RNN state propagation code\n(currently dynamic RNN calculations when passing sequence_length do not return\nthe proper final state, this is a necessary fix to make that fix efficient).\nChange: 113203893'"
d6ede40403b6ec63972afd71b5c340f8625f5458,'Fix for broken OSS build\nChange: 113197985'
c3c27f275f94af6e32ecaff66a6bf439abdaff5b,"'TensorFlow: ASSERT_OK and EXPECT_OK are also defined in other projects\nthat are built with TensorFlow (protobuf), so prefix our macros with\nTF_ to make them project specific.\nChange: 113197186'"
697084c97b880f6845a9158a348f12f4e0ed8d35,"'Fix bugs in TensorArray gradients + unit tests.\n\nTwo major bugs:\n\n* Multiple calls to tf.gradients will create multiple TensorArrayWrites to the\n  same gradient slot from the exact same gradient source.  This gets treated as\n  a write + an add, and as a result gradients of TensorArrayRead can be\n  double-counted.  The solution is to create a separate TensorArray for each\n  call to tf.gradients.  This can be done by:\n  1. looking at the name of the input gradient to e.g. TensorArrayRead\n  2. slicing off the prefix (e.g. ""gradients"", ""gradients_1"", etc)\n  3. passing this to the tensor_array_grad op which\n  4. uses this as a suffix to the original name when creating or looking up a new\n     TensorArray object for storing the gradients.\n\n* The initial gradient TensorArrayWrite performed a shallow copy of the\n  write tensor.  Since we support aggregation to the same slot from different\n  sources, modifying the PersistentTensor in place can affect the original\n  tensor elsewhere.\n\n  Instead, we now specifically disallow multiple reads / packs from a TensorArray.\n  This simplifies the code immensely and removes the need to support gradient\n  aggregation.  It also makes the interface much more functional.  Once a\n  Tensor has been read out of the TensorArray, it can be used in several places.\n  However, gradient aggregation can be performed outside the TensorArray.\n\nAdditional improvements:\n\n* TensorArray constructor is now ""read_once"", which means after a Read or\n  Pack operation, the reference inside TensorArray to the Tensor is removed.  This\n  frees up memory early.\nChange: 113193579'"
eecbcb261ad2a5d220c705dba6ff1e760adb8b95,"'Changes Optimizer.compute_gradients to use var.ref() instead of var.value() as the tensor wrt which to compute the gradient. This enables things like this:\n\nwith tf.control_dependencies([barrier]):\n  # Fetch var just in time\n  v = tf.identity(var.ref())\n# Now do something with v\n\nBefore this CL, the gradient wrt var would be 0 since tf.identity(var.ref()) does not depend on var.value() (which is another tf.identity(var.ref()), but from which there is no path in the graph to the loss).\n\ngradient_descent_test.py tests the behavior fixed by this CL.\nChange: 113163441'"
99bdd1a4de33ef0614cadfd28b97fc4bd0869e5d,'Merge pull request #901 from SaganBolliger/791-fix-py3-build.'
deb4f6f596f20e958fa4c9c0a47b98e6e7097aa4,'Fixes #791 python 3 build issue'
42b1a67601f1a49a758536df4d1a7e3a8fdd27a7,'Fix TensorBoard imports (broke when py3 support was added)\nChange: 113114985'
4fb647cca9994ddc600943503f30e55a7fbdb14c,'Fix OSS builds.\nChange: 113114631'
d33346a801181cb601a4cfc95f1087e165b19703,"'TensorFlow: fix bug in TensorShapeDim -- size is the wrong type.\n\nAdds a test that failed before this change, but passes after.\nTensorShapeIter is only used by TensorShape::begin() and end(),\nwhich are only used by AppendShape, which is only used by queue_base.h\non shapes that are unlikely to be 64-bit large, which is why\nwe never triggered this.\n\nDiscovered by jeff\nChange: 113105906'"
cfb27ca4c2c4dbbf27726a3bc4d72bb6f8865319,"'BUGFIX:  Allow histogram_ops.histogram_fixed_width to work with N-D new_values, previously only 1-D new_values worked.   Add test for scalar input.  Add test for many random 3-D input that is in funny interval.\nChange: 113104458'"
46b108c8a606fde8654e4177d72001aa31138906,'Remove THIRD_PARTY_ prefix from #include guards.\nChange: 113094744'
632c90068a1ecae1a7ae808628922eeb2022d38c,'TensorFlow: fix more int -> size_t warnings\nChange: 113089380'
c5c5d61002b75aeda9a3970f73af9a0bbf9d7e41,'Fix bug with urlretrieve\nChange: 113087571'
1854a502c84b96200308f6dfcd4b341b799ae50b,"'Revert ""Ensure the code compiles when AVX2 instructions are enabled.""\n\nThis reverts commit 19b360611066711f8c4d55efae3259d8614b1e0a.\n\nFixes #883.'"
95e189dcc2cef86cecd2fc3f06458a7edc05dda6,'Allow to use a Tensor as initializer in get_variable. Fixes #589.\nChange: 112993949'
77c5cbb114956305625c5ac97b969a7637f55dd2,'Fix OSS Build (again) due to doc generation scripts.\nChange: 112993601'
eb8b6b0169086269033511c11b0f887299172741,'Fix OSS BUILD\nChange: 112984578'
46e5c79ed0f5c985266b865a40892d18a7ae859e,"""Fix building of user_ops on OSX\n- Select linkopts based on a config_setting so we don't pass\ninvalid options to the crosstool on Mac.\nChange: 112984497"""
8421f177ced940374e06a9daf9b4ee638e207f10,'Fix url in training.py\nChange: 112980390'
b168b1abafa1c80243b5b7bb02c83832a70f5a0c,"'Fix bug in fully_connected layer.\n\nPreviously, if activation_fn was set to its default (None) and create_summaries was false, fully_connected would incorrectly give an error.  I have fixed this as well as changing the default to tf.identity.\nChange: 112963042'"
62e7dec65a90d736d864f2a663f91bbd4a73b2d0,'Improve error message when asking to fetch the output of a node with\nno outputs. Fixes #856\nChange: 112903800'
2de89b6f54c0bde8d6134211d5fc84acce053a35,'Fix small missing [by]\n\nI think there is the word `by` missing:\r\n\r\n> Replace the strides [by] a max pooling operation [...]'
42154f858198fadb3d660e7d9f300b7eb665b583,'Fix Undefined Error on Exception'
ad1d4ea6bda354ff213954014d02e6c5c03a64e6,'fix typos in docstrings'
7a68818ff52a8c8331c57aefd16afe6c1c1ed936,'Fixes for OSS build.\nChange: 112830289'
ebe109b76d3a8fbdfadee8fa1e6e642563c88034,'Pin constant holding data to CPU. This makes GPU version 50-100x faster per step. Fixes #837\nChange: 112829709'
173760bbd884b8fc40dded9213fcd3e95f1b0cad,"'Fixes a bug in Queue cancellation.\n\nIf multiple steps are blocked on the same queue, there is a high\nchance that their cancellation tokens will collide, since these are\ndense and start at 0. This can lead to the wrong step being cancelled.\n\nThis change additionally uses the `CancellationManager*` to uniquely\nidentify an attempt for the purposes of cancellation.\nChange: 112801810'"
5a5c227aa387d54290620d14c6fcb8da3e3c4038,"'Rollback of ""Adding histogram_ops module containing one Op:  histogram_fixed_width, which updates a histogram Variable with new_values.""\nChange: 112800368'"
a6ea9833865b5b1e7fa547df16228bd579c76015,'Add TODO to fix the situation where core_cpu_internal includes\nall .h from common_runtime/gpu/.\nChange: 112732380'
6542307303f8b84b13fa20d49633330d22ae164f,"'Adding histogram_ops module containing one Op:  histogram_fixed_width, which updates a histogram Variable with new_values.\nChange: 112728652'"
990121cf1b727896e6d69e9fb15d980273284bf6,'Fix a test for Python 3\nChange: 112703190'
5a7e26dddf0d18dad9c391787f3a9332fabf6c68,'Fix and re-enable tests for matrix_triangular_solve op.\nChange: 112688071'
86505e92b641c87b2d15bcd28eacdba9430e7e10,'* Fixed failed test due to change of default for steps in linreg since it overfits'
e35b6a98d91a29e0b21dd077347d4ca22067833b,'* Fixed all lint/nosetests errors'
207578cd018e98d0e1cca0df9f146f4cec4b0631,'Fixes #84: Reshaping the labels for regression to compute correctly cost for batch_size>1. Also started working on class_weights.'
4ebc5401287ea1f31c4c31171c2eb6a3437a8442,'Add --spawn_strategy=standalone to os_setup.md\n\nIt seems to solve more problems than it causes. Also fixes some formatting/grammar nits.'
4c3b060b9b063a247172c939e0e1314577b581e3,'Merge pull request #825 from dongjoon-hyun/fix_typos. Closes #825'
cf171aa47573d3ac6298b59769d0e9c41d76fcc1,'Fix typos in comments.'
8dbf9b0923642e902450c47d1a970452380f07b4,"""fix docs of 'Saver.max_to_keep'"""
96289f712558a64a957a80b0465341fef10d90ab,'Merge pull request #738 from kentonl/birnn_fix. Closes #738'
a7b25ede1933c22d43057827eefafc0abb610fbb,"""Fix syntax error when executing setup.py using python 3.4\n\nThere are SyntaxError messages during processing reader.py and\ncwise_ops_test.py due to incompatible syntax of python 2 and 3.\n\nAccording to 'PEP 3113 -- Removal of Tuple Parameter Unpacking',\na tuple parameter is deprecated from 3.0 version of python, so we\nmodify method _build_vocab to make it compatible with python 2 and\npython 3."""
9d5d3d071bb50d09060d020cca633202333c2a58,'ci_build: fix bash array usage'
13958b24e3c982f826ad5e2e4d044c496f947d6b,'pylint check fixed.'
757eaa78fe3de8193f330829a6d0ec8f7220d5e0,'Fix comment typo.\nChange: 112490296'
fd7fe21131b2100eecb90eb3afa76c43720dae94,'Fixed the usage of metrics.accuracy_score().'
b63c57620d08385975a22f2784e1006af9e17d78,'Merge pull request #801 from dongjoon-hyun/fix_typos_in_framework. Closes #801'
d04e3b7fdf9e6bd7a6c0a7b20b69d52d890b7f51,'Fix typos in core/framework.'
04bad79a588a09f7642544c5e1cc168f7dfbcab4,'Fix examples/label_image/...\n- string -> tensorflow::string\n- Depend on core:test_main for the main function for test.\nChange: 112424835'
203723bb7d7718ba6cefdfbd044595ea9af95225,'+ Fixed inconsistent sized batch and added note'
f2bd0fc399606d14b55f3f7d732d013f32b33dd5,'Merge pull request #793 from dongjoon-hyun/fix_typos_in_python_training. Closes #793'
51cd15779c95c8acf31802599d498f1a598f0f53,'* Fixed lint'
b485dbd68b4a2870ff662d4993cb0f85759641c6,'+ Fixed repeated colnames when concat two dfs with default numeric colnames'
5ab60166d386246126fe7ea611ee4c24d7262c78,'* Fixed column name issue and sample_fraction'
16ae059c7680208ed96db3515f614d9b35a2b25a,'Fix typos in python/training module.'
a4f6b3d51617be69beef46523ffb3812239e2a91,'Update index.md\n\nfix missing comma'
ad0a2eda417bb667782d776328da22bd57589197,'* Fixed lint'
0cc8848a52ac4131db0b3884bc52c06f0039969c,'Upgrade to the latest version of eigen which improves the performance of\nmatrix-vector products and provides various fixes for CUDA.\nChange: 112298067'
2a128fcaa6eb2771428f300c728db4db647b5927,'Fix missing dependency declarations error #469 #772'
08dab0a13502db70a30ee4ba463107e2ea7ad4c4,'* Fixed DaskDataFeeder'
8cdbaccc15f723e2ccb02fc4ee51b57983503aad,"'Merge pull request #789 from fpmchu/docs\n\nAdd instructions for chmod for linux cuDNN installation, and documentation typo fixes.'"
adf57cf86b82cd0a1f0c9e9bef8fb9837c8f343b,'Fix broken exception message in the shape function for conv2d.\nChange: 112281623'
b92e154ff2921d7cb0222c36fad00f1ebdd21965,'Fix typos.'
d78f1dfcb5cb1cbd09eacc7257a41c43a27d124d,'Merge pull request #787 from dongjoon-hyun/fix_typos_in_common_runtime. Closes #787'
621820d41adedc6dc80f37b30c556a5cbe5c3601,'Fix typos in a testcase name and comments of core/common_runtime module.'
409c68eb2531f450680233c437b219237b0609e2,'Fix the split-on-underscore and show-data-download-links options.\nThe regressions were introduced in cl/110462065\nAlso fix the tf-tensorboard/demo/index.html file (minor)\nChange: 112265591'
7ddf1ebfdd120409c19bd6727c18a3f283ada42c,'Merge pull request #779 from dongjoon-hyun/use_augmented_assignment_and_fix_typos. Closes #779'
2aec209d1f79d571480401abe77e45742fdb7405,'Use augmented assignment statements and fix typos in mnist/word2vec python code.'
1397271823786b921b6b67b65fdf1936d90276b3,'Fixes for pylint.'
87380f76c5f85fa6f0353a27d4f1690b72a79e82,'Fixes.'
76ec94160b349b9b006b6fe3704d6be94b9a9efc,'Merge pull request #81 from tensorflow/dropout-fix\n\nFixes #79: Zeros dropouts on prediction'
3bb833bed156b7f293cea284ceb9a91cea85c7cb,'+ Minor fixes in dask_io'
b378657b8c50f49f9622281e698c62d5538b9397,"'Fixes #79: Added custom dropout op, that adds probability tensor to the collection DROPOUTS and zeros it on prediction'"
6f237554c7649ef90527713b66b1d40a7b2ae7c7,'fix linters'
401749c030fce6786f09824f9efd83df9da91607,'Merge pull request #77 from tensorflow/dask\n\nFix lint issues'
92ea3d1120cf58bac27eac3189b3c6ff0eba68e4,'Added generate_checkpoint_state() which returns a checkpoint proto\nwith model_checkpoint_path containing absolute path or path relative\nto save_dir.\n\nFixes #751.'
e35e96dcf7e948b08c5a9d358c99bf4e9b735d7d,'Merge pull request #607 from bcoppens/master\n\nFix TensorBoard not displaying any images'
32ed124dc90b909d07ef4105dd3a46883f29d289,'Fixed Numpy return value for Python 3\n\nUsing PY_MAJOR_VERSION instead of NUMPY_IMPORT_ARRAY_RETVAL\n\nFixed SWIG interface for Python 3 support\n\nMake SWIG forward preprocessor directives to generated code'
c94feeab3952bc90ebb9ff1cbd14082eb8182c4a,'Merge pull request #774 from dongjoon-hyun/fix_typos_in_models. Closes #774'
dc9616b8af01d5d352589cdca68bb7cb91ac2168,'Fix typos in string and comments of python and C++ code in `models`'
669790ac3a02c32076f02f43d49e47dd6be30a77,'Merge pull request #770 from cvondrick/patch-1\n\nfix error in coordinator documentation'
d45ed5c9387e64be8d35a41bcaa7f752f6f3eba5,'Add instructions to set up development without reinstallation (fixes #413)\nChange: 112120905'
f9f26e04929ab20653b2b6ce86fcad71f906b193,'Fix Scatter*.png figures\nChange: 112109184'
61bf812e041b3b6bc815c2d67ca51c5e888a3aff,'fix error in coordinator documentation'
be1d7243e5623d2c643b4ec34ffa472d8bdd9dbf,'* Fix lint issues'
5a5b785eea9041df1aa32cf9ecbdd42c4544623e,'Merge pull request #76 from terrytangyuan/dask\n\nFixed dask_io.py'
d1576117f8fda62ae9108fca7e363ee88ed3f667,'* Fixed dask data extractors'
cbdf278dbd998aab57898763605f6863e9b42b76,'Added roadmap.\n\nFixes #162.\nChange: 112102777'
27c7dd72bedee9e46de43c8a4d164513c4bf5924,'Merge pull request #765 from dongjoon-hyun/fix_typos_in_tutorials. Closes #765'
ec98c714350f5e7cd82177a79c19345ad14cfd81,'Fix typos in tutorials'
0c62942e2bda15fa815fff440c9f5e466bff59b5,"'Change visibility to public in bower.BUILD\n\nA remote repository cannot refer to the main repository that way and a fix in a future Bazel release will break TensorFlow with the current set-up.\n\nError: http://ci.bazel.io/job/TensorFlow/BAZEL_VERSION=HEAD,PLATFORM_NAME=linux-x86_64/74/console\nChange: 112056797'"
06feca0bf721245bd8d801b920393e4d3945aa2b,'Merge pull request #756 from panmari/saver_empty_list_fix. Closes #756'
5515148be85f369484d6179b7c1baab30995b068,"'Minor fixes (related) to gpu_event_mgr_test.cc\n\nThis test got out of sync after some recent changes.\nThis CL allows the test function to explicitly stop/start\nthe polling loop so we can test some invarients without\nnon-deterministic timing issues.  Also, the change\nto TensorReferenceVector is now handled correctly in ~EventMgr,\nand reliably tested.\nChange: 112016082'"
b14b86cef14e6205a7bd4c602834008e568ea31f,"'Fixes with datafeeder, issue #50 at github.'"
7a524d4de0a0da527f355adb7eccea7756c82dac,'Fix fill gradient test for legacy scalar strictness\nChange: 112005548'
b18bd346f523092af2beb5c1a10a8b35a9698188,'Provide a gradient for tf.fill\n\nfixes github issue #686\nChange: 112001823'
5b68a7e8703ea58c603a0be3b6aea4e097ffbc81,'Fixes 674 from github: Use of deprecated (Py2.6) / removed (Py3) BaseException.message\nChange: 111964187'
e9434718c2c4f7e1de5488a411a2ea89e2724724,'Fix overly pessimistic shape inference in tf.batch_matmul for matrices with partially specified shapes.\nChange: 111953111'
a7d30acd590d51f0099802835495208c5fe3f050,'Fix a minor documentation error.\nChange: 111949630'
3034eef57a9e6a080eae457a5ee8480fadd377ea,'Fix error in link to mnist_with_summaries.py\nChange: 111920304'
f2de334678c251aa767743d08e66345a45113cc4,"'Fix type handling logic in translation of TensorFlow functions.\n\nInputs and outputs with lists of fixed types (as opposed to polymorphic lists) caused incorrect translation of some nodes in a function graph - adding a spurious attribute with name == """" and no value.\n\ne.g. the \'indices\' argument of DynamicStitch has a fixed int32 type, but \'data\' is polymorphic.  Handling \'indices\' added a bogus attribute to the op in the function body.\n\nREGISTER_OP(""DynamicStitch"")\n    .Input(""indices: N * int32"")\n    .Input(""data: N * T"")\n    .Output(""merged: T"")\n    .Attr(""N : int >= 2"")\n    .Attr(""T : type"")\n\nNote that this is because the attr map in the ArgDef behaves like a C++ map in that an attempt to access a non-existent field creates key with a default value (i.e. does not fail like a Python dictionary would).\nChange: 111895250'"
5853ad99dd3f8b443fdb97d83de35fe057db9e7f,"'TensorFlow: fix importer to properly fill in default values.\n\nAccessing the attr of a node when not present creates a proto3 default\nwhich has an empty value structure.  So checking for None was not\nsufficient: we need to check whether it has a value defined in it,\nand if not, to copy the default value into it.\nChange: 111887578'"
9a27fb169c5b6eabc1c5ce490bef2fa1c7b608e3,'Merge pull request #748 from dongjoon-hyun/fix_typos_in_tensorboard_and_tools. Closes #748'
81991e26e1ad5a5eb8cec5d53d9490b25dc4079c,'Fix typos in tensorboard and tools'
38f54b55cdc66e12a2f6ce9d6724440e9738ac6f,"'Upgraded to the latest version of Eigen, which fixes a compilation error as\nwell the crash reported in https://github.com/tensorflow/tensorflow/issues/713.\nChange: 111874622'"
5f0db85b7d1f70eb4128fb7dbaa7eae2118d159b,'Fix TensorBoard not displaying any images'
b45df4534d9d6101a76775206798dd9c6e44dd8d,'Merge pull request #745 from Mistobaan:feature/fix-small-misspells. Closes #745'
1b94cb11a97186a27cf8be5085fa85d3f45ba355,'fix misspells.'
a6037e933fe8799c80f94decc9f5b178b833c1b8,"'Add better shape inference for `tf.zeros_like()` and `tf.ones_like()`.\n\nPreviously, partial shape information was discarded, because our\nconstant evaluation for (e.g.) `tf.shape(tf.placeholder([..., None,\n...]))` could not produce a Numpy array for the shape. Since the\n*_like wrappers have access to the input tensor, we can use\n`Tensor.set_shape()` to add back the partial information.\n\nFixes #744.\nChange: 111856452'"
e7f63369e74e6500e27cff451c84623386fd05a8,'Fix broken reference to TensorBase::Serialize'
cfc73af6e2ed4a5ccfd259aeb1781dab4fad7292,'Merge pull request #735 from dongjoon-hyun/fix_dtypos_in_tensorboard_components.  Closes #735.'
400ec92634415ab4e982c42ee183be9104e46d3d,'Fix typos in tensorboard/components'
b5e1874e7f3fc879772576fa64a4becf86baf53c,'Merge pull request #732 from dongjoon-hyun/fix_unmatched_html_tags.  Closes #732.'
6a0488f2c102c93a6487798dcf21be6c38916a27,'Fix unmatched html tags'
a666ccdd73e63369d90ba37073a9e05345ea42e8,'Fix for logic in re-creating summary writer on subsequent fit()'
67eb676b1044dd6fa883b45bc163366ecd3ce646,'Fixed doc string for switch()\nChange: 111724690'
771a92208fa2301ca1d54ec53b8bfc7d227e3d66,'Fix minor typos in example code and docs.\nChange: 111719502'
05e44812fc9aef96f35a2b297877da69b6e6260b,'Merge pull request #66 from google/neural-translation\n\nFixes #9: Neural translation'
eef2aaa3f7931cc3c0e7bbc6757386cfbcf5e3ef,"'Fixed saver relative paths for `latest_checkpoint`\n\nThis would be cleaner if we made all paths listed in the ""latest""\nfile relative to the its directory, allowing the removal of the\nadded `os.path.isabs` checks.\n\nThat would make the `os.join` in `saver.latest_checkpoint` much less\nsurprising.\n\nBut at least this way, there is no effect on currently working code.\n\nFixes #571\nChange-Id: I47d8536b9b2ed3dcc193d6e6b7f4573a4e22c9b3'"
be5bc79019ee8cf9f8a92f25d7fd71d6acce9aee,"""TensorFlow: Add more graphdef validation, this time against OpDefs.\n\nThe Graph construction code assumes that the GraphDef's NodeDefs match\nthe OpDef specifications.  When creating NodeDefs using NodeDef\nbuilder, we call ValidateNodeDef() function in node_def_util, but when\nloading an arbitrary protobuf, we do not.  This changes the code to do\nsome important sanity checking during Session::Create/Extend.\n\nBumps the version of graph_def to only do this for new graphs.\n\nAlso fixes placeholder's shape attr to really be optional, which\nit wasn't.\n\nFix one test that was using an invalid graph.\nChange: 111657920"""
f51dea43db9b8d4adaeeadc71eb2f2f48280bb52,'Fix bug in assertProtoEquals / ProtoEq:\n\nThe test code skipped testing of the values of key/value pairs in protos.\nChange: 111642612'
02dff6d0d838397860b6ff5256413b54da482996,'Fix bug where attrs with values that are the empty list\nwere not being properly set via the Python API.\nChange: 111635679'
3cdd5be40751ae04962e37bb581eb1f1ad9ceb4a,'Fix a typo\nChange: 111628808'
ca47376b3cf19ee395e0409061982266f60e0708,"'Make convolutional.py easier to run on GPUs with less RAM.\nA few cosmetic fixes. Test error was already 0.7%, not 0.8%.\nhttps://github.com/tensorflow/tensorflow/issues/609\nChange: 111624237'"
6cc392e3b0989744c7b16248b19b48bcbe54fa6a,'some linting fixes to changes brought in from the public.\nChange: 111621725'
0389bf87d657784716924964b7b936d170a27b38,'Fix the image dashboard\nChange: 111615936'
45199e25a96c28209767dcf5158a642f9073a855,'Merge pull request #710 from dongjoon-hyun/fix_typos_in_ops\n\nFix documentation typos in ops.'
0472586fa7d8ee6695765fe9a6b94fce5984fdfd,"""Fixed the adjust_contrast benchmarks: the op only supports floating point\nvalues as input, so feeding it 8bit integers wasn't correct.\nChange: 111548739"""
8f8530bf56e0abb6ce63e8c0fb99de76a0bc759b,"'Fix documentation typos in ops.\n\nSince this PR does not include the fixes on generated docs,\nthe corresponding md files need to be regenerated after merging this PR.'"
b09a56f462131f52bb49ca39b64334ed43051019,'Merge pull request #693 from frankyjuang/master\n\nFix file exists error'
fd26a93ee1799c78975a02c7bba58b3e52357fb3,"""Don't expose tf.ops in __all__.\n\nIt was already undocumented, and now it's invisible.  This required exposing\nreset_default_graph and register_tensor_conversion_function as public.\n\nFixes #266.\nChange: 111542779"""
5b2e90ae734c1c42c7b7c42db56df53b4c48c6a8,'TensorFlow: One more bug fix in example_trainer.cc for OSS build.\nChange: 111535648'
9edd13a9c96edd9b7fdca71f694bb045f265ad66,'Rename deconv2d to conv2d_transpose and expose publicly\n\ndeconv2d is a misleading name for an operation which is exactly the transpose\nof conv2d.  conv2d_transpose is much better.\n\nFixes #256.\nChange: 111529902'
953660c5630b5d3bdf4567b68ba6e51929395ee5,'Fix build breakage from a typo.\nChange: 111528530'
69e9ff4b8f97b870e613d97bffa117598007be1a,'Fix parse_single_sequence_example to not fail when debug_name is None\nChange: 111526769'
98b50f742d6e15dd93b12978eac199f3663e2c68,'TensorFlow: switch port_test.cc to include mem.h.  Fixes OSS build.\nChange: 111475504'
be39348393d977ff37d3eab2220253bc0b1d0c8d,"'Explicitly setting shape in grayscale_to_rgb and rgb_to_grayscale.\n\nFixes shape inference following a previous change that generalized these two members of image_ops. The more general implementation, however, does not allow shape inference. This change explicitly fixes the shape with set_shape, following array_grad._TileGrad.\n\nAdding tests for expected shape inference behavior.\nChange: 111459347'"
ef1d171e53a0da06ca04a680b2d1c80eff442669,'Fix a bug introduced in previous change which made colorByChanged be called only once instead of twice. It turns out calling it twice was correct in order to clear state. Otherwise switching between graphs that share the same node names causes an error.\nChange: 111448764'
3578e0ec8d70ad73112d8af7c38f7b65950d91aa,'Fix file exists error'
97522f0acd53652baa57e42d06557ebb94bf0c4d,'Merge pull request #689 from dongjoon-hyun/fix_typos_in_example_and_docs\n\nFix typos of sample python code and docs in howtos'
677e64084190d5dc4e20fce200686b9b33fae0e5,'Fix typos of sample python code and docs in howtos'
972d6e7fc2fea71339cfc1fe00555bb430ed1221,'Merge pull request #683 from fpmchu/master\n\nFixes two minor anchor link issues.'
ab6d3891111bd15a8c2b3db3f5e0273238937818,'Fixes two minor anchor link issues.'
55392a52d75b35661d436b92961c11381bfaa4ef,'Merge pull request #679 from NathanHowell/typo\n\nFix typo'
8033060b347d98a7ce72948fad8ed1f43e83c2ba,'Fix typo'
5841c93d752da8bfc924ec8b3674e5ef339d02c9,'fixed misspelling in [run] section'
27cfb16e122f6a528a74ff2e4410b36d1ebeb913,'Merge pull request #671 from ogrisel/ipython-casing\n\nFix IPython case in MNIST tutorial'
eb326627ff6f6025c9ad06a1b10a9158482328ef,'Fixin lint errors in estimators/trainer'
6b79f26f0bb6b0e3f11a3b2345741b0bfaf6000a,'Fixing not working test in python3 for preprocessing/text'
ccac7d50607b76b8977d707859f44ec46825badf,'Fix IPython case in MNIST tutorial'
9aebe6cd14dc503bf06e0e9a9a7a319cbf873287,'fixed pylint in py3'
ad4d283fea9e97fe05c86888469afe07a012a1ae,'should fix pylint errors due to memoryview/buffer'
d6cde414498ddf8d0fbb221aa0530d53ce51539b,'Merge pull request #669 from dongjoon-hyun/fix_typos_in_convolutional_py\n\nFix a few typos in convolutional.py and os_setup.md.'
6ba647c7f2d40131b8b47d6650aa0a6307474e7b,'This PR fixes a few typos in convolutional.py and os_setup.md.'
1d89c2079931f401f0831e3d27b66dd942ae3388,'Fixes typos and unnecessary import in example'
b3b7784f9ded032a1d5568d53e42819e4e02b8a6,'Minor logic fix in save_restore example'
eaa99cf5454bf31e71b0f71365403fcd1a5c80c0,'Merge pull request #59 from terrytangyuan/terry-dev\n\nDaskDataFeeder (fixes issue #53)'
c1bf65fc757e8d5e0e90af3b6547f62dc281c193,'Merge pull request #62 from terrytangyuan/early-stopping\n\nEarly stopping option (Fixed #61)'
919270045c3d42bc3f95a0d0b7ac70e470d0625f,'Merge pull request #659 from ppwwyyxx/patch-1\n\nFix typo'
5069e38de26f93b54dd92bf9de6661561dc4bea6,'Fix typo\n\nFix typo'
b30877a3253575e3876e5067c02a399074582d91,'Fixed nosetests and pylint (+1 squashed commit)\nSquashed commits:\n[83e24b9] Fix nosetests and pylint'
51df996a824ce9550e715955bbf974986a6840a1,'Fixes #60: Added example of text classification wih CNNs over words.'
ed99f7a4c3821250a9e1fffc76fc1521c81fd956,'Logic error and lint fixes'
11d7768bf2d247b9c374b62040ddd6994f857d46,'Fixed wrong logic for _setup_data_feeder'
1b6ac70db4252b73b97228ddaafcba7e65a7ec9b,"'Lint fixes, import, dependencies'"
2f20fe05bb096cf2c34549711e9105c4d2cea425,'Merge pull request #635 from samjabrahams/upstream\n\nFix small typo: python/training/moving_averages.py'
a1896cb23695058b647a21656e0dadfa1a317d03,'Fixing failed tests due to merge'
0c400ffb5c2a10c4983e5e8c5db23fc6829403d2,'Merge pull request #54 from google/python31\n\nFixes #46: Adding support for Python3.X'
a5abf7d71ef948048a0a32b87b1369b238346799,'Fix small typo: python/training/moving_averages.py\n\nQuick fix to typos in comments in\ntensorflow/python/training/moving_averages.py'
9a35f427d546ac5020ba9f2f377ee1ddb50d0af3,'Fixing issue with six.iterbytes with custom code for handling the iterator of bytes'
2e17400df02764f530186f143750a9343ab0ba78,"'slight change to fix adb install flags ( ""adb install -rg ..."" instead of ""adb install -r -g ..."" which caused an error: ""Error: Unknown option: -g"")'"
bc6c1c83ed73d2b23f0424f931d0649a9f290739,'Fixing typos and pylint errors'
e6d9aef7e327522e5c0d3ab3dfa45c635b4e34a2,'Downgraded python to 3.4 to see if it fixes error with wheel incomptatability'
2ca47cfd57a67508fd6d8d7464d4dfe6abdd3bb0,'Fix not converging multioutput in tests - reduced learning rate'
d5d139ce0607c53c3d70de8a830214bddd8ff84c,'Merge pull request #623 from zavidovych/patch-1\n\nFix apk path in the doc'
388b902775f87f541a43d738470a7c67419599b5,"""Fix apk path in the doc\n\nWhen following the instructions build rule doesn't produce that incremental APK"""
9b3678e297fc105aeb6dd9659cc3b25a8457dd0e,'Merge pull request #619 from rekhajoshm/fix/verbosemessage\n\nTENSOR-566: Fix for verbose messaging'
48603b7faed85753ab905f177cbf4e0c8d1dcb64,'TENSOR-566: Fix for verbose messaging'
fa57f646f41da98668a550c994cea962ed8b32d9,'Merge pull request #606 from tensorflow/vrv-patch-1\n\nFix syntax error in input.py'
8b428e55b4b35c7039263fc9e33db44e25b1d899,'Merge pull request #614 from Mistobaan/patch-1\n\nfix wrong variable reference error description'
23f4587d14d3b8e01ecaa612183f1ef75a1ed49a,'fix wrong variable reference error description'
6a7545aaf2f655af44d1dee798de89b6afc25252,'Merge pull request #613 from Mistobaan/master\n\nfix typo'
a3e690339ceedbfcbee514553fce22f49d238233,'fix typo'
6a596fafc82a2a089d7d108d0377e5b0227f3ad3,'Merge pull request #596 from akiomik/patch-1\n\nFixed typo in image.md'
50bb007c7e80dbcb64acb8b2b061bb68d3f37af1,'Fixed typo in image.md'
391a5a4adf439785979914e112021ea96f237da9,'Fix syntax error in input.py\n\nMentioned in #480'
e5c4b2a4c6650f61de96b4a85e20ca9a7a323655,'Merge pull request #604 from tensorflow/vrv-0.6.0-doc-fix\n\nUpdate os_setup.md to point to 0.6.0 release\r\n\r\nFixes #603'
1eb5f7b560b50de90c41dfa7a581b33072373472,'Merge pull request #337 from pirate/logfiles-dir\n\nFix for issue #117: allow relative paths for tensorboard logdir'
c90113175756e2505b6fdedd106fbe7b9670845d,'Update os_setup.md to point to 0.6.0 release\n\nFixes #603'
c3b755a726ac8cbfbe3e112c81d687d19c5d3c6b,'Fix linter errors of wrong import ordering'
2c98d6b7ac6774ef0ec372df9613b9f1fa1c2dcd,'fix typo in travis_install'
038ccd6ab030222d6041421d949b71891809de6c,'Merge pull request #48 from frol/master\n\nFixed travis scripts to be POSIX sh complaint and proof against whitespace issues'
36c19b074fffabc1c50081ee093477b38d9472f6,'Fix lint error in estimators/base'
30242df49b0d52c6acf7d4d4fa05a986781b6278,'Fixed travis scripts to be POSIX sh complaint and proof against whitespace issues'
208350a6092f9faa473daf8b6eb6a80e9f9518f1,"'TensorFlow: GraphDef::node_size() is an int, not a std::size_t,\nso fix types to prevent warnings.\nChange: 110810962'"
10f2363724554dac97430794ad16c6faeac81f1f,'Fix some lint errors in image_ops_test.py and word2vec_basic.py\nChange: 110727357'
35862b95ffeab2d0d741f0489ae5dcf51436c713,'Fixes #47: Changed import for NotFittedError to make sure it works with sklearn 0.18'
753f680cb10f4a3dcf71ea6de03752e09ebc2afa,"'Remove the explicit `g=<graph>` argument from `OpDefLibrary.apply_op()`.\n\nThis addresses a possible clash between op inputs or attrs named ""g"",\nwhich would result in the keyword argument for the op/attr being\ninterpreted as a graph override. Since use of the default graph is now\npervasive, there is no particular reason to keep this optional\nargument, since none of the generated op wrappers invoke it.\n\nFixes #553.\nChange: 110692645'"
1e416cd23464aa77d23a2d63a9f7df12325d6491,"'Add gradient for tf.reverse(), fixes #58.\nChange: 110608526'"
beea54f7801418d22e14af7a057525ee1fca410d,'Merge pull request #578 from bernardopires/master\n\nFixed random_contrast link in the Deep CNN tutorial'
acabd6b322c35934f143815e6179016c6507d9cf,'Fixed random_contrast link in the Deep CNN tutorial'
469b3ddb4bb914a02f496748dd4ee5dbcbd7fce0,'Merge pull request #544 from dennybritz/fix/word2vec-basic-cpu\n\nForce embedding_lookup onto CPU in basic word2vec example - Fixes #514'
863501dbd890213202e8655a548d8ca0c7e048cd,'Cleaning imports even more. Fix DNNRegressor to inheret from RegressorMixin'
881265ff80209710b2f064a98e2b7bc4608bbf64,'Fixes #42: Added a test for GridSearchCV to check that DNN works correctly with it'
af4b781f56fda0a9f8a3fc39f9ed5a28487478c4,'Fix linter errors'
8f4ef469af1850cd8d7cca824d94ec71d0510376,'Fixes #43 - Switched to use absoulte path when call Saver and get_latest_checkpoint.'
0631538acf44f19bbdf67223c300ef616a9f9bdb,'Fixing linter errors'
0647f0ef0b05bbafecc0a99fe19baefa1baea3ab,'Fix for shape inference when y is rank == 1'
7306490b87eef23ae7d393bbf9c2f6dc4cfdde7a,'Fixes #40 There was problem with saving function name - changed to saving params explicitly and removing all callable.'
afb324dfe8f4aa5e350de90116b6106242dc8164,'Fixes #23 and #37: Added save and restore methods to persist model to disk'
69b38d3672e7c3dac7173ad8e74ffd195263914c,'Prevent seq2seq.model_with_buckets from leaking variable scope reuse.\n\nFixes #537.\nChange: 110573596'
48cc3eae7e00867002c88cc73244560ba61be85e,"'Ensure shape function is registered for `tf.image.extract_glimpse()`.\n\nPreviously this was only being registered in ""attention_ops.py"", which\nwas not imported (directly or indirectly) by `tf.image`.\n\nFixes #540.\nChange: 110565458'"
c3fb6af96c9c406a4f23f0de53f8468766fd33e3,"""Fix comment regarding the type of 'attrs' in tensorflow Graph.create_op\nChange: 110551784"""
1b69b6873e0fa0e510797c7dca01563de2988838,'Fix error message in `set_shapes_for_outputs`.\n\nThe lengths were misleadingly swapped. Thanks to @wchan for\nreporting. Fixes #539.\nChange: 110550434'
39ad4a14d1fa2bdb975d1e4e3de470fd95f79419,'Fix typos in docstrings.\nChange: 110547805'
10961e7aed1b29468c660ab4e4a30712417cb73a,'Fixes #39: Added explicit import of ops inside the __init__ to make sure you can use skflow.ops'
fb5338acf292ebebde2a7790516581f117ede5a0,"'Add device colocation hints to GatherGrad.\n\nThe recent fix to GatherGrad (for supporting high-dimensional indices)\nintroduced a performance regression whereby the embedding matrix could\nbe copied across to a different device to compute its shape. To avoid\nthis, when the embedding matrix has a known device, pin the shape\ncomputation to the same device.\nChange: 110489175'"
be91852fbcb6c86afac465f41eee3bd0ba0c538c,"'fix typo in resources/index.md, fixes #529\nChange: 110422306'"
c29adbc5be6f28be31ae4ed70d95fa20f3ac3879,"""Fix typo in doc string ('contrase' -> 'contrast')\nChange: 110414708"""
bd927d594dc6ed0b65a49c3eb4ff22617f49ecb0,'Fix an use after free bug.\n- Calling REGISTER_OP after initialization (initialized_ == true) would\ncause OpDefBuilder to be deleted before fields can be added to it.\nChange: 110394914'
f2eae4b3d27a4dc6d1f591f55a50fb3e1984a287,"'Fix the gradient of `tf.gather()` when the indices are > 1-D.\n\nThe gradient function was previously generating an invalid\nIndexedSlices, whereby `IndexedSlices.indices` tensor was not a\nvector. This change reshapes the indices and gradient so that they can\ncorrectly be interpreted as an IndexedSlices and applied to the\nembedding variable.\n\nAdded a multi-dimensional gradient test in embedding_ops_test.py.\n\nFixes #505. Partially addresses #464.\nChange: 110364370'"
ee4f4409fe5d994a0d01a4c04441847218527ce0,"""A few small changes:\n  1. Fixed default tensor dtypes in the gradients of control flow ops.\n  2. Better colocation decisions for control flow ops.\n  3. Don't use ref for loop variables. This would give more flexibility to placement.\nChange: 110308978"""
b8a654f3ccf232375b8b27408d71c5ecfa70ebe8,"'Fixed a bug in cond when a branch passes a value through mulitple times, i.e., does something like ""lambda: [x, x]"".\nChange: 110306609'"
76165776217d65a7a344bc4d6b4f56a1bc665158,'Fix use-after-free in Queue cancellation.\nChange: 110287597'
21feee989ae36b079b5274071064f8af9d3018df,'Tiny documentation fix.\nChange: 110283867'
1b0b52430b4038a90c185bb02b687e76133d259c,"'Add a human-readable Tensor.__repr__(), and improve TensorShape.__str__().\n\nThe repr replaces the default Python representation for an object with\ninformation about the Tensor\'s name, shape and dtype. TensorShape\'s\nnew str() is a more compact representation that makes it easier to\ntell, at a glance, what the shape represents.\n\nFor example:\n\n    print repr(tf.placeholder(tf.qint32, shape=(32, None, 2), name=""c""))\n    # ==> <tf.Tensor \'c:0\' shape=(32, ?, 2) dtype=qint32>\n\nFixes #460.\nChange: 110268564'"
14c4883dc6a3612df74cc93a0ee180f55e9c4f31,'Optimize import and lint fix'
46693d6fc784cd58638fede2ba095e38e461a7fe,'ci_build: fix android build - add required 32bit libraries\nChange: 110191670'
def653e88d9f3c6dee1fe5a3d3dfc03b79d9b1c6,'Fix `gulp vulcanize`. To do this we remove bower_components folder and all components are now under `components` directory. This follows polymer conventions.\nChange: 110158503'
d3e23707f1f7e0f75dea7ede5417403617f084db,"'Fix docstring for pad, fixes #490\nChange: 110155285'"
c0dcab776d8137390f64e74adb2fcc25b3afbe8a,"'Fix type order in g3docs/resources/dims_types.md\n\nChanges the data types to be ordered in ascending bitwidth order,\nleaving DT_FLOAT as the first entry in the table.\n\nSee Change 1241\n\nChange-Id: I68d097c175dd32b97264b5b94482810a35de74e1'"
e944b0b23dd351a853d376b879c60834ebfe8e7c,"'Revert ""sign() operation now handles complex tensors. gradient for complex_abs given by sign(complex). fix+test for matmul gradients wrt complex64 matrices.""\n\nThis reverts commit 1a6b631a661f5fbe28d36105e272b6da3d90f467.\n\nChange-Id: I3fb36955e1e173a0e7613007fee0670d5f31a6a6'"
47453a24647a184e44a61f4e52acbdac95f6d1ab,"'Revert ""TensorFlow: fix incorrect indent in matmul_op_test.py, some more""\n\nThis reverts commit e3d36569a5157995589f0067bc6d1e63ef92169e.\n\nChange-Id: I9f2a603e1f92d4a8863e3d9df59204922d00d099'"
e3d36569a5157995589f0067bc6d1e63ef92169e,"'TensorFlow: fix incorrect indent in matmul_op_test.py, some more\nlinting errors.\n\nChange-Id: I6863c53cb263ff056d8a113bad3e0be19f7ec51e'"
1a6b631a661f5fbe28d36105e272b6da3d90f467,'sign() operation now handles complex tensors. gradient for complex_abs given by sign(complex). fix+test for matmul gradients wrt complex64 matrices.\n\nChange-Id: Ia975378d9b1392e018128b20b5755d6b04b43fb1'
ace8892f6ef4ea360fb4e79eeac7af52085ebcab,'Fixed lint issues'
ad81c47fa4f0af6e45f2276cac5acb30af6325df,'Fixed lint error + added up-convert to int64 in one_hot_matrix'
803822c065be2a56ae11febaab883de42b81fcd5,'Fixed import and passed tests'
32738da5b399bc9d14511a08640e83a36b745e94,'Fixed a broken test for v0.6 with importing linear function instead of module'
d4f99dac43a8ce2a125ba9fac9cc3866dd05dff1,'Fixing leftovers of pylint'
a4cefca9f40ae6cfe366b6187d07e5199aa74895,'TensorFlow: fix undeclared header inclusions in two BUILD files\nto fix build for bazel 0.1.2\n\nChange-Id: I09c89610ac8afb02834458c69d0a56d7cbaf43d1'
bc624aa8d9460dca794fde6d5534f1d3e8054016,"""TensorFlow: merge changes from internal\n\nChange 110004767\n\tAdd Cast to list of supported ConstantValue ops, mainly useful for shape inference\nChange 110002200\n\tBug fix for b/24814668. The fix uses mdevin's CL/109324239, which adds support to clear control dependency and control flow contexts.\n\n\tBug fix for b/25914830. We now clear the control related contexts for initial values of variables in adagrad.\nChange 110000213\n\tFurther (minor) improvements to print usage in docs and tutorials\nChange 109975099\n\tUpdate `tensor_util.ConstantValue()` to return scalars when appropriate.\n\n\tThe `ConstantValue()` implementations for `tf.size()` and `tf.rank()`\n\twere returning single-element numpy vectors, whereas the op\n\timplementations produce scalar outputs.\nChange 109950165\n\tTensorBoard tag to 5\n\nBase CL: 110006867"""
da88e3ff1c973f3aeb69c7632df7dc9c0e9d6f49,"""Fixes #27: Added alternative import for v0.6 TensorFlow (it's bug there though)"""
7c5c20b2b73c40bb4fd113f26bcda73a5e5bec6d,'fix for build failure (tools/python_bin_path.sh not found)\n\nChange-Id: Ic259ae0e7b4a20627824d302f8a4936368d561dd'
d9cfc64a2ddf05c0b093c8fb6704c67452ee3ea0,'TensorFlow: merge changes from internal\n\nChange 109945903\n\tMake unsorted_segment_sum detect negative indices\n\n\tPreviously it crashed.  This fixes #466.\n\n\tAlso improve the error message to say which index is problematic.\nChange 109942557\n\tFix the conv_grad_input with stride 2.\n\t+ We always call the Cudnn implementation even if we have an incompatible\n\tpadding.\n\nBase CL: 109948577'
475edf8e949e9913e74d2f4b183f271198ecda86,'TensorFlow: upstream changes to git.\n\nChanges:\n    Fix wrong path in build_pip_package.sh; fixes #471'
5abead8c434d5c99c0eb43385f833844eff55721,"""TensorFlow: upstream changes to git.\n\nChange 109922312\n\tUpdate dockerfiles and instructions.\n\n\tThis CL does two things:\n\t* updates dockerfiles to use 0.6.0\n\t* updates the instructions for the new tag format.\nChange 109920508\n\tFix broken cast_op_test\nChange 109919316\n\tEnforce converting to int64 for SparseTensor indices and shape\nChange 109916130\n\tFix imagenet for Python 3\n\n\tIt needed some binary file modes and an iteritems -> items.\nChange 109912827\n\tEnable fast c++ implementation in protobuf's python interface.\n\nBase CL: 109922840"""
eeb4a439e9b98c265203908ef0d8a813b8e9e70b,'TensorFlow: fix missing python3 print syntax in classify_image.py\n\nChange-Id: Ibd5c68048f172785cf68272367d0f06fd62bc7de'
27259353e50e6bcaeeedbc26dc3aaaa5695fe500,"""TensorFlow: Upstream changes from git.\n\nChange 109849574\n\tAvoid some missing return warnings\nChange 109837783\n\tAdd invalid aggregation to error message.\nChange 109835474\n\tImproves docstring of RegisterGradient decorator.\n\n\tFixes a typo (input -> output) and uses lowercase name for neg in the provided example.\nChange 109834486\n\tUpdate generated Op docs.\nChange 109830497\n\tFix per_image_whitening to handle edge case by preventing the sqrt() of a negative number which is possible due to numerical floating point issues. Unit test added.\n\tFixes #411\nChange 109824286\n\tChange TensorBoard/TAG to 4\nChange 109824197\n\tUpdate tutorials and documentation usage of print to use print as function not statement.\n\tThis way you can copy+paste code in a python3 context and it will still work.\nChange 109824020\n\tFix another case where TensorBoard discards values after a restart.\n\n\tWe also need to not discard on graph_def, since user code or SummaryWriter may add graph_defs at step 0 after every restart.\nChange 109821924\n\tDefines Templates for variable sharing.\n\n\tA Template is a function that generates a sub-graph with the same variables each time it is called.\n\n\tTwo different templates defined with the same underlying function also return different variables.\nChange 109815801\n\tDon't instatiate the eigen expressions for additions and subtractions of\n\tboolean since they won't be called. This reduces the size of the binary a bit.\nChange 109795730\n\tAllow casts to and from int8\nChange 109791914\n\tPython 3 fix: filter has no len\n\n\tgradients.py calls len on the output of filter.  A call to tuple is needed in\n\tbetween.\n\n\tNot sure why this wasn't caught when we ran the Python 3 tests.  If I break it\n\tfor Python 2 several tests break.\nChange 109757009\n\tFix minor grammatical errors in about.html\n\n\tThe missing article needs no justification, I think.\n\thas -> have, because subjects are 'usability and functionality', not 'TensorFlow'.\n\tand also -> and, because 'also' is superfluous in this use.\nChange 109756627\n\tTensorFlow: some doc updates to models/ files\nChange 109743899\n\tTensorFlow: remove one more clang warning (class / struct inconsistency).\nChange 109741933\n\tDocument default for max_images in tf.image_summary\n\n\tIt used to say max_images=None which hid the C++ defalut of 3.\n\tNow it says max_images=3.\n\n\tFixes https://github.com/tensorflow/tensorflow/issues/441.\n\n\tIt's unfortunate that an edit-distance-5 change produces such a large CL.\nChange 109741569\n\tUpdate generated Op docs.\nChange 109739599\n\tRenaming the Python variables in the layer weights of the fully connected\n\tMNIST model so that the variable and the TensorFlow names are different. This\n\tallows the documentation to be more explicit about the distinction between the\n\tweights and biases of different layers. Also, the documentation gets to\n\tdescribe the whether the TF name or the Python name is being used.\n\nBase CL: 109851372"""
8242b4dd1b36440e191fef8a07b6f37d8bcee60d,'TensorFlow: some more python3 compatibility test fixes\n\nChange-Id: I5678cbdfb45757e2218494f542c9b0a0d5cc16a4'
014ff10c4f8c372bbeadab74252565f2d2de38b2,'TensorFlow: fix some last python3 compatibility issues for 0.6.0.\n\nChange-Id: I3cd6c6e3f3c7755343213e4697c97a09f79fb947'
3951b248d2b63052b6ca24f8e0fdeb0330d28ccf,'Fixed PY2AND3 label on op_def_registry.py\n\nChange-Id: I68d35edbe3608b08f06476fdf5d5641c97e9f706'
5de908567355337fdebd997fb5c60993cbe9ba2e,"""TensorFlow: Upstream changes to git.\n\nChange 109738410\n\tDon't crash if an attribute contains an invalid shape\n\n\tUsing GetAttr to retrieve a TensorShape caused a process crash if the shape\n\tcontained negative entries or was too large.  Instead, produce useful error\n\tmessages (and Python exceptions).\n\n\tFixes https://github.com/tensorflow/tensorflow/issues/449.\nChange 109737915\n\tTensorFlow: fix build failures and some warnings when built with clang\n\ton OS X.\nChange 109737559\n\tFix bad paragraphing\nChange 109735757\n\tFix OSX installation instructions.\nChange 109733797\n\tAdds buttons to toggle the display of all runs.\n\nBase CL: 109739474"""
ddd4aaf5286de24ba70402ee0ec8b836d3aed8c7,"""TensorFlow: upstream changes to git.\n\nChange 109695551\n\tUpdate FAQ\nChange 109694725\n\tAdd a gradient for resize_bilinear op.\nChange 109694505\n\tDon't mention variables module in docs\n\n\tvariables.Variable should be tf.Variable.\nChange 109658848\n\tAdding an option to create a new thread-pool for each session.\nChange 109640570\n\n\tTake the snapshot of stream-executor.\n\t+ Expose an interface for scratch space allocation in the interface.\n\nChange 109638559\n\tLet image_summary accept uint8 input\n\n\tThis allows users to do their own normalization / scaling if the default\n\t(very weird) behavior of image_summary is undesired.\n\n\tThis required a slight tweak to fake_input.cc to make polymorphically typed\n\tfake inputs infer if their type attr is not set but has a default.\n\n\tUnfortunately, adding a second valid type to image_summary *disables* automatic\n\timplicit conversion from np.float64 to tf.float32, so this change is slightly\n\tbackwards incompatible.\nChange 109636969\n\tAdd serialization operations for SparseTensor.\nChange 109636644\n\tUpdate generated Op docs.\nChange 109634899\n\tTensorFlow: add a markdown file for producing release notes for our\n\treleases.  Seed with 0.5.0 with a boring but accurate description.\nChange 109634502\n\tLet histogram_summary take any realnumbertype\n\n\tIt used to take only floats, not it understands ints.\nChange 109634434\n\tTensorFlow: update locations where we mention python 3 support, update\n\tthem to current truth.\nChange 109632108\n\tMove HSV <> RGB conversions, grayscale conversions, and adjust_* ops back to tensorflow\n\t- make GPU-capable version of RGBToHSV and HSVToRGB, allows only float input/output\n\t- change docs to reflect new size constraints\n\t- change HSV format to be [0,1] for all components\n\t- add automatic dtype conversion for all adjust_* and grayscale conversion ops\n\t- fix up docs\nChange 109631077\n\tImprove optimizer exceptions\n\n\t1. grads_and_vars is now a tuple, so must be wrapped when passed to format.\n\t2. Use '%r' instead of '%s' for dtype formatting\n\nBase CL: 109697989"""
fb8f783c60cb5cb869f790bc7ea624d85d0a1170,'Fixed split_squeeze and expand_concat'
43cd5c01318e4c51d65eb53f77a2b27ef72c557d,'Fixes #22: Added cross_validation to iris.py and iris_custom_model.py'
cd53f3c3302c9312c1840389a9988a879b8b9dd5,"'TensorFlow: upstrea changes from git.\n\nChange 109628097\n\tFix gcc 4.8.1 compile\n\n\tModified from patch by @assolini here:\n\n\thttps://github.com/tensorflow/tensorflow/issues/405\nChange 109624275\n\tMake preview frame ImageReader global so that it does not get GC\'d.\n\n\tThis may fix an issue with connecting to the camera on some devices where the underlying Surface is prematurely cleaned up (http://stackoverflow.com/questions/33437961/android-camera-2-api-bufferqueue-has-been-abandoned).\nChange 109620599\n\t- improved test a little to make it easier to understand as it serves as an\n\texample for users\nChange 109614953\n\tTensorFlow: update tutorials/howtos to point to correct\n\tlocation of files, show python example in addition to bazel.\nChange 109612732\n\tTensorFlow: move reading_data into examples, change data dir\n\tto /tmp/data.  Validated that they all run, but these\n\tprobably need a selftest at some point.\nChange 109608695\n\tApply \'gate_gradients\' only when there is more than one real gradients.\nChange 109605014\n\tThere are 3 obvious places to start using TensorFlow. 2/3 of the starting points do not have a link to the installation instructions.\nChange 109604287\n\tMake the `tf.reshape` shape function more restrictive.\n\n\tPreviously, it did not raise a construction-time error if the input\n\tshape and the new shape were incompatible; now it detects this and\n\traises a `ValueError`.\nChange 109603375\n\tTensorFlow: Move word2vec_basic.py from g3doc/ to examples/\n\n\tThere are no additional libraries this uses, so nothing else\n\tneeds to be done\nChange 109601289\n\tTensorBoard tag 3\nChange 109600908\n\tDecrease number of scalar values stored by TensorBoard.\n\t10k is more than displays nicely.\nChange 109599464\n\tFix ""smart restart"" functionality in TensorBoard (it throws away dead data)\n\tAfter restarts, a file_version event is created that always has step 0.\n\tWe need to ignore this.\nChange 109597667\n\tSwitch to using /dev/urandom for TensorFlow randomness.\n\n\tUsing /dev/random leads to slowdown when running in an environment\n\twith poor access to an entropy source (such as some VMs). /dev/urandom\n\thas more predictable performance, and we don\'t require\n\tcryptographically secure random number generation, so a PRNG is good\n\tenough.\n\n\tAlso removes the use of the RNG in DirectSession construction. This\n\twas being used to generate a session handle, which is not necessary\n\t(since a DirectSession owns its devices, we don\'t need a unique handle\n\tto key the OpSegment objects registered with the various devices).\n\n\tThis addresses bugs that have been reported on the mailing list and\n\tStack Overflow.\nChange 109596906\n\tAdd an is_unsigned property to dtype\nChange 109596830\n\tRemove unnecessary fill in clip_by_value\nChange 109591880\n\tRemove Android demo\'s libpthread.so dummy file (required by protobuf) from repo and generate it at compile-time.\n\n\tThis makes the Android demo more portable, as the generated file will now always be the correct archictecture for linking.\nChange 109589028\n\tIsolating out the RTTI part of TensorFlow and add non-RTTI backups for Android.\n\tThis saves about 400KB of the compiled library, when compiling the Android\n\ttensorflow target with -fno-rtti.\nChange 109589018\n\tInternal reworking of LSTMCell.\nChange 109588229\n\tAllow bool-valued tensors to be persisted.\nChange 109577175\n\tTensorBoard host defaults to 0.0.0.0\nChange 109551438\n\tTensorFlow: move mnist g3doc tutorials into tensorflow/examples.\n\n\tUpdate examples to point to the correct location.\n\n\tAdds tests to make sure they don\'t regress, do some lint cleanup.\n\nBase CL: 109630240'"
961fd75d9243092d8279db0c48107e5c94b633cc,"""Resolve Merge Conflict\n\n\tVery minor fix to clean up comment, erased blank line (line 209 basic_usage.md)\n\tAdded a session close the Interactive Session in the 'Getting Started' tutorial\n\t\t-so that no exceptions are thrown when a user tests later examples in the same python kernel.\n\tHighlighted 't[i,j,k]' for read consistency in tutorial (line 21, resources/dim_types.md)\n\nChange-Id: I9c0d8a6f6651bbb6a00bddecc0977b512e394669"""
f9d3e9d03c69bfac77a2fe1ad80f7c5aa517e0f0,"'TensorFlow: upstream latest changes to git.\n\nChange 109537918\n\tTensorFlow pip setup: wheel >= 0.26 for python3 pip install\nChange 109505848\n\tFix distortion default value to 1.0 in fixed_unigram_candidate_sampler. This means we default to the actual provided unigram distribution, instead of to the uniform (as it is currently).\nChange 109470494\n\tBugfix in gradients calculation when the ys rely on each other.\nChange 109467619\n\tFix CIFAR-10 model to train on all the training data instead of just 80% of it. Fixes #396.\nChange 109467557\n\tReplaced checkpoint file with binary GraphDef.\nChange 109467433\n\tUpdates to C++ tutorial section.\nChange 109465269\n\tTensorFlow: update documentation for tutorials to not assume use of bazel\n\t(when possible).\nChange 109462916\n\tA tutorial for image recognition to coincide with the release of the latest Inception image classification model.\nChange 109462342\n\tClear control dependencies in variable_scope.get_variable() when creating\n\tops for the initializer.\n\n\tAdd tests of various error conditions.\nChange 109461981\n\tVarious performance improvements in low-level node execution code paths.\n\n\tSpeeds up ptb_word_lm on my desktop with a Titan X from\n\t3638 words per second to 3751 words per second (3.1% speedup).\n\n\tChanges include:\n\n\to Avoided many strcmp operations per node execution and extra touches\n\tof cache lines in executor.cc, by making all the various IsMerge,\n\tIsSwitch, IsSend, etc. operations instead be based on an internal enum\n\tvalue that is pre-computed at Node construction time, rather than doing\n\tstring comparisons against node->type_string().  We were doing about\n\t6 such comparisons per executed node.\n\n\to Removed mutex_lock in executor.cc in ExecutorState::Process.  The\n\tlock was not needed and the comment about the iterations array being\n\tpotentially resized is not true (the iterations arrays are created\n\twith a fixed size).  Checked with yuanbyu to confirm this.\n\n\to Added new two-argument port::Tracing::ScopedAnnotation constructor\n\tthat takes two StringPiece arguments, and only concatenates them\n\tlazily if tracing is enabled.  Also changed the code in\n\tplatform/tracing.{h,cc} so that the ScopedAnnotation constructor and\n\tthe TraceMe constructor can be inlined.\n\n\to In BaseGPUDevice::Compute, used the two-argument ScopedAnnotation\n\tconstructor to avoid doing StrCat(opkernel->name(), "":"",\n\top_kernel->type_string()) on every node execution on a GPU.\n\n\to Introduced a new TensorReference class that just holds a reference to an\n\tunderlying TensorBuffer, and requires an explicit Unref().\n\n\to Changed the EventMgr interface to take a vector of TensorReference objects\n\tfor EventMgr::ThenDeleteTensors, rather than a vector of Tensor objects.\n\n\to Used TensorReference in a few places in gpu_util.cc\n\n\to Minor: switched to using InlinedVectors in a few places to get better\n\tcache locality.\nChange 109456692\n\tUpdated the label_image example to use the latest Inception model\nChange 109456545\n\tProvides classify_image which performs image recognition on a 1000 object label set.\n\n\t  $ ./classify_image\n\t  giant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca (score = 0.88493)\n\t  indri, indris, Indri indri, Indri brevicaudatus (score = 0.00878)\n\t  lesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens (score = 0.00317)\n\t  custard apple (score = 0.00149)\n\t  earthstar (score = 0.00127)\n\nChange 109455002\n\tTensorFlow: make the helper libraries for various models available\n\tin the pip package so that when users type:\n\n\tpython translate.py ...\n\n\tthe absolute import works.\n\n\tThis change is supposed to help make our tutorials run without the\n\t*need* to use bazel.\nChange 109450041\n\tTensorFlow: remove cifar and convolutional binary copies from pip install.\n\tAdds embedding and some other models to the list.\nChange 109448520\n\tMove the description of a failing invariant from a comment into the dcheck-fail message text.\nChange 109447577\n\tTensorBoard has release tagging (tensorboard/TAG)\n\tAlso track TensorBoard changes (tensorboard/CHANGES)\nChange 109444161\n\tAdded ParseSingleSequenceExample + python wrappers + unit tests.\nChange 109440864\n\tUpdate all the TensorFlow Dockerfiles, and simplify GPU containers.\n\n\tThis change updates all four of our Dockerfiles to match the targets discussed\n\tin https://github.com/tensorflow/tensorflow/issues/149. The most notable\n\tchange here is moving the GPU images to use the NVidia containers which\n\tinclude cudnn and other build-time dependencies, dramatically simplifying both\n\tthe build and run steps.\n\n\tA description of which tags exist and get pushed where will be in a follow-up.\nChange 109432591\n\tSome pylint and pydoc changes in saver.\nChange 109430127\n\tRemove unused hydrogen components\nChange 109419354\n\tThe RNN api, although moved into python/ops/, remains undocumented.\n\n\tIt may still change at any time.\n\nBase CL: 109538006'"
0fa02404917e0bef256d79cc0234e718f09591bd,'Fix pylint install on Travis'
91a336c0f82c69bdd2c4546b39d58f2a00530ca9,'Fixed wrong path for install script'
bb04e131f657ba5c3750153616e39d15d0d63481,'Fix link on badge'
d04d51d02f8cfa9044f403e1cf1ca43cbc63c284,'Fix broken test due to summary writer'
23788319a1097b4d59747e28703018c02697de36,"'Merge pull request #17 from wdbm/master\n\ntidy documentation, fix typographical errors'"
04c2e1915b7c4a585e0002a95025da3096e4587d,"'change obsolete string modulo to string formatting, change print statement to print function, fix typographical error'"
3dfd14421d71c1d6a79f72217cd7b6510cbcb38f,"""TensorFlow: upstream changes to git.\n\nChange 109418220\n\tUpdate WORKSPACE to use gmock.BUILD from google/protobuf instead of a duplicate.\n\tUpdate google/protobuf's commit hash to include damieng@'s commit.\nChange 109417314\n\tTensorFlow: add .gitignore to ignore some in-tree modified files.\nChange 109400051\n\tOptionally build full TensorFlow for Android.\n\t1. --define ANDROID_TYPES=__ANDROID_TYPES_FULL__ to register ops\n\t   for all types, not just float. Today this increases codesize\n\t   by ~700K when compiled for ARM, though only for clients who\n\t   request full type support.\n\t2. Add more ops to android_extended_ops, sufficient to train on\n\t   the linear regression baseball codelab.\nChange 109388118\n\tFix the option changed in templatize. Oops.\nChange 109382553\n\tAllows setting a function name in an op's attr in the py frontend.\nChange 109380896\n\tRemove assert_same_graph in favor of op_scope. Change the latter to handle tensor-like objects such as SparseTensor, IndexedSlices, and Variable.\n\nBase CL: 109418322"""
875a126b33d6895df03d69dc911d9dab978d10fa,"'tidy documentation, fix typographical errors'"
54a644f33f34a32fa2cb5e7a489c64540b16e166,"'TensorFlow: upstream changes to git\n\nChange 109366961\n\tTensorFlow BUILD: now that we have an ops library,\n\tset linkstatic to 1. This fixes a breakage in the would-be\n\topensource build, and it *might* mean we can get rid of\n\tall of the RequireDefaultOps() calls in our code.\n\n\tThe ops library is much smaller than the kernels library that was\n\tpreviously linked together.  We set linkstatic=0 presumably since we\n\tdidn\'t want to package a static copy of the kernels (very large)\n\teverywhere.  But the op definitions are small, so this seems like a\n\tsafe change to make.  Time to build the various tests was not\n\tany longer after this change, and inspecting the example_trainer\n\tbinary showed no large increase.\nChange 109363613\n\tTensorFlow: new graph_def_builder_test needs to RequireDefaultOps.\nChange 109362569\n\tSplit "":ops"" out of "":kernels"" target in tensorflow/core.\nChange 109360666\n\tCatch dtype and some shape errors sooner in `QueueBase`.\n\n\tSome avoidable errors were not being caught (e.g. the dtypes of the\n\tenqueue components were not checked against the queue\'s dtypes in\n\tPython), leading to cryptic messages at runtime. After this CL, they\n\twill be caught earlier.\nChange 109359569\n\tTensorFlow: Expect g_ != nullptr in test\nChange 109350735\n\tAdd a version number to GraphDef\n\n\tWe would like to be able to deprecate behavior in newly generated graphs\n\twithout invalidating tensorflow\'s ability to read and evaluate old graphs.\n\tFor this purpose, GraphDef now has a version field which can be checked inside\n\top kernels to determine how backwards compatible to be.  version.h defines\n\tTF_GRAPHDEF_VERSION_MIN and TF_GRAPHDEF_VERSION_MAX specifying the range of\n\tsupported GraphDef versions in the current version of tensorflow.\n\n\tAlso expose tf.__version__ and tf.__graph_def_version{,_min,_max}__ for Python\n\tinterrogation purposes.\n\n\tWhenever we want to deprecate or change some GraphDef semantics, we will\n\tproceed as follows:\n\n\t1. Bump TF_GRAPHDEF_VERSION_MAX, leaving TF_GRAPHDEF_VERSION_MIN unchanged.\n\t   Describe the change in graph.proto, include the date introduced.\n\n\t2. In each relevant kernel, implement the new behavior if the GraphDef version\n\t   is new, but preserve the old behavior for previous GraphDef versions.\n\n\t3. Wait six months or so (we need to formalize this somewhere).\n\n\t4. Bump TF_GRAPHDEF_VERSION_MIN and remove the backwards compatibility.\n\n\tThe GraphDef version is distinct from the open source version, but at least\n\t(4) and possibly (1) correspond to major version number bumps.\n\n\tThe first GraphDef version bump is the upcoming scalar strictness change,\n\twhich affects Google users only since open source is already scalar strict.\n\n\tThis commit does not yet plumb the version number into OpKernelConstruction\n\tso that ops can access it.  That will follow.\nChange 109350260\n\tMade TensorShapeProto implicitly convertible to TensorShape.\n\nBase CL: 109366982'"
eb5e56e479a41ad3696ea351e5804d17464d521a,"""TensorFlow: Upstream changes to git.\n\nChange 109344341\n\tTeach ./configure about Python 3 (and other minor Python 3 issues)\n\n\t./configure now writes bazel.rc based on a bazel.rc.template, which gives us a\n\tplace to tell bazel which version of Python we were using.\n\n\tAlso fix a few tests whose Python 3 support had degraded.\n\n\tThe only thing left before we have Python 3 support is\n\n\t  https://github.com/google/protobuf/pull/1023\nChange 109343002\n\tUpdate ops.pbtxt to reflect 109321497.\nChange 109342838\n\tDo memory deallocation outside the critical section in gpu_event_mgr.cc.\nChange 109334210\n\tPTB LSTM example: use slicing instead of splitting the inputs.\nChange 109332238\n\tCleanup TensorBoard local development environment\nChange 109331051\n\tUse __all__ in __init__.py to restrict exported modules\n\n\tSpecifically, __all__ is now anything that (1) doesn't begin with an underscore\n\tand (2) isn't a non-whitelisted module.\n\n\tThis fixes one tiny piece of b/25561952.  Specifically, the following no longer\n\texist: tf.np, tf.math_ops, and tf.variables.  tf.ops and tf.tensor_util still\n\texist but shouldn't; that will have to wait for a later CL.\nChange 109327154\n\ttf.tuple allow Tensors to be passed in as control_inputs like tf.control_dependencies.\nChange 109324239\n\tMake tf.control_dependencies(None) clear the control dependencies.\n\tUse that to prevent ops created for Variables to inherit the current\n\tcontrol dependencies.\n\n\tThis fixes issues when using ExponentialMovingAverages with control\n\tdependencies.\nChange 109323719\n\tAdded support for boolean tf.scatter_update.\n\nBase CL: 109348398"""
a4806a3fba7c00bea3e7022477339b2d09539751,"'TensorFlow: upstream changes to git.\n\nChange 109321497\n\tMove all images to images directory to make docs versioning easier\n\t- adjust all paths in the docs to point to the new locations\n\t- remove some now redundant section-order tags added for the old website\nChange 109317807\n\tAdded a kernel op to compute the eigendecomposition of a self-adjoint matrix.\n\n\tAdded a new kernel op called self_adjoint_eig (and a batch_self_adjoint_eig) that\n\tcomputes the eigendecomposition of a self-adjoint matrix. The return value is\n\tthe concatenation of the eigenvalues as a row vector, and the eigenvectors.\nChange 109310773\n\tChange `_read32()` in the MNIST input example to return an int.\n\n\tCurrently we return a 1-D numpy array with 1 element. Numpy has\n\trecently deprecated the ability to treat this as a scalar, and as a\n\tresult this tutorial fails. The fix returns the 0th element of the\n\tarray instead.\nChange 109301269\n\tRe-arrange TensorBoard demo files.\nChange 109273589\n\tadd ci_build for ci.tensorflow.org\nChange 109260293\n\tSpeed up NodeDef -> OpKernel process by not spending time generating\n\tan error message for missing ""_kernel"" attr that will be thrown away.\nChange 109257179\n\tTensorFlow:make event_file_loader_test hermetic by using tempfile\n\tinstead of fixed filenames.  Without this change, running\n\tevent_file_loader_test twice in the same client (locally)\n\tcauses it to fail, because it writes into the same file and appends\n\tanother event, instead of starting from scratch.\nChange 109256464\n\tMinor cleanup in TensorBoard server code\nChange 109255382\n\tChange to reduce critical section times in gpu_event_mgr.h:\n\t(1) Call stream->ThenRecordEvent outside the EventMgr critical section\n\t(2) Do memory deallocation outside the critical section\n\n\tSpeeds up one configuration of ptb_word_lm from 2924 words per\n\tsecond (wps) to 3278 wps on my desktop machine with a Titan X.\nChange 109254843\n\tFix use of uninitialized memory in test.\nChange 109250995\n\tpython_config.sh needs a license header\n\n\tOtherwise the license test fails.\nChange 109249914\n\tadd ci_build for ci.tensorflow.org\nChange 109249397\n\tFixes reduce_sum (complex) on GPU segfaults.\n\n\tFixes #357\n\nChange 109245652\n\tadd ci_build for ci.tensorflow.org\n\nBase CL: 109321563'"
bb7a7a8858dc18ba733ed64e0733e27a4224ece8,'TensorFlow: upstream changes from eigen to fix build from\nchanges in last commit.'
bf6b536bde7d8060c489b51fedb58968b8cbfd7c,"""TensorFlow: Upstream changes to git.\n\nChange 109240606\n\tFix typo\nChange 109240358\n\tFix bug in Concat's shape inference due to legacy scalar handling.\n\n\tThe shape function was inadvertently converting outputs of unknown\n\tshape (rank=None) to vectors of unknown length (rank=1), due to\n\tinability to distinguish between legacy scalars and vectors, because\n\t`max(1, None)` is 1.\nChange 109237152\n\tRemove numarray requirement in python_config.\nChange 109234003\n\tFix typo in elu documentation.\nChange 109232946\n\tPython must now be configured via ./configure script\nChange 109232134\n\tBackported fixes to the tensor comparison operators from the public Eigen repository\nChange 109231761\n\tTest invalid inputs to softmax_cross_entropy_with_logits.\nChange 109230218\n\tBackported fixes to the tensor comparison operators from the public Eigen repository\nChange 109229915\n\tCorrect comments in seq2seq to show the right input types for embedding models.\n\t(Thanks to hugman@github for bringing this up.)\nChange 109229118\n\tFix resize_images example in documentation and allow resize_images to run on a single image with partially-known shape.\nChange 109228940\n\tFix demo and node add/remove button spacing\nChange 109227909\n\tInclude Elu in the NN docs.\nChange 109227059\n\tAdds variable_op_scope and makes variable_scope always add a name_scope.\n\n\tThis creates an op scope for variables that makes it easy to create independent\n\toperations with a default name by making that name unique for the current scope\n\tand it allows explicit names that are not made unique.\n\nChange 109224492\n\tStreamline yuv -> rgb conversion to be done in one pass in native code.\n\n\tThe entire process now takes ~2ms (including the ByteBuffer.get() calls), down from 10+ ms when the arrays were being interleaved in Java prior to conversion.\n\n\tAlso abstracting common yuv->rgb color conversion into helper method.\nChange 109224389\n\tAdd ability to move nodes in and out of auxiliary nodes in graph.\nChange 109217177\n\tUpdate generated Op docs.\nChange 109215030\n\tImplementation of the ELU activation function: http://arxiv.org/abs/1511.07289\nChange 109209848\n\tWhen GPUBFCAllocator runs out of memory, also log a summary\n\tof chunks in use by size.\nChange 109206569\n\tSwitched to the public version of the Eigen::sign method since it supports complex numbers.\nChange 109199813\n\tModify tensorflow.SequenceExample to support multiple-length sequences.\n\nBase CL: 109241553"""
fa095c5db0ac9cfe2328a19b32ae208e58e3746a,"'TensorFlow: upstream changes to git\n\nChange 109195845\n\tFix TensorFlow for build against Bazel 0.1.2rc2\n\n\tTwo things are currently broken with TensorFlow and Bazel 0.1.2:\n\t  - Bazel now use sandboxing by default on Linux and have fixed it for cc_* rules.\n\t    Undeclared headers are not mounted in the sandbox which make several cc_* rules\n\t    fails.\n\t  - Bazel now enforce strict header checking and some target were missing\n\t    headers even though the headers were mounted in the sandbox. This change\n\t    adds a ""strict_headers"" target that globs every headers of the core\n\t    library and add it to the `tf_cc_tests` targets.\nChange 109162708\n\tFix various website issues\n\t- Fix headline in os_setup.md\n\t- Fix #anchor links\nChange 109162129\n\tFix numbers in mnist tutorial, fixes #362\nChange 109158967\n\tFix typo in word2vec tutorial, fixes #347\nChange 109151855\n\tFix tile and its gradient for scalars on GPUs\n\n\tEigen doesn\'t handle scalars on GPUs in all cases.  Fortunately, both\n\ttile and its gradient are the identity for scalars, so we can just copy\n\tthe input to the output.\n\n\tFixes https://github.com/tensorflow/tensorflow/issues/391.\nChange 109140763\n\tSupport int32 and int64 in tf.random_uniform\n\n\tThis requires a new RandomUniformInt op on the C++ side since the op needs\n\tto know minval and maxval.\n\n\tFixes https://github.com/tensorflow/tensorflow/issues/364.\nChange 109140738\n\tFix spacing in docs.\nChange 109140030\n\tFix content nav to not hide the bottom 100 or so px.\nChange 109139967\n\tAdd license files to TensorBoard files, fix mnist_with_summaries test\nChange 109138333\n\tFix typos in docstring\nChange 109138098\n\tFix some missing resources in the website.\n\n\tFixes #366.\nChange 109123771\n\tMake sparse_to_dense\'s default_value default to 0\n\n\tNearly all uses of sparse_to_dense use 0 as the default.  The\n\tsame goes for sparse_tensor_to_dense.\n\nBase CL: 109198336'"
795f35da2d458cbae477ac2fe2bff80c1427a771,"'TensorFlow: upstream changes to git\n\nChange:\n\tClean up documentation for ReverseSequence\nChange:\n\tUpdated several tensorflow operations to use 32bit indices on GPU.\nChange:\n\tAdd attribute batch_dim to ReverseSequenceOp.\nChange:\n\tFix error in convert_to_records.py.  As reported in\n\thttps://github.com/tensorflow/tensorflow/issues/370\n\tby AlexUnderMicrocontRoll.\nChange:\n\tUpdate TensorBoard README.\nChange:\n\tFixes to boolean flags reported in\n\thttps://github.com/tensorflow/tensorflow/issues/379.  Supports:\n\n\t--bool_flag=True  --> True\n\t--bool_flag=False  --> False\n\t--bool_flag=gibberish  --> False\n\t--bool_flag --> True\n\t--nobool_flag --> False\n\n\tFixes #379\nChange:\n\tUpdate generated Op docs.\nChange:\n\tEnable local development of TensorBoard using gulp\n\tAlso make tf-tensorboard a regular component rather than special case\n\n\tThis is mostly effected by creating tfserve.js, which is a small server\n\twith clever routing to load from bower_components/ and components/ using\n\tthe paths that work within google3.\n\n\tWorkflow: `gulp serve`\nChange:\n\tAdd a full working code example to the tensorboard and summaries tutorial\nChange:\n\tFix seq2seq_test when running on GPU.\n\n\tThe ""proj_w"" and ""proj_b"" variables were being created before the\n\t`test_session()`\'s device function took effect, which pushed the\n\tplacement algorithm into making an incorrect decision.\nChange:\n\tAdd a sentence in TensorBoard README on how to serialize summary data to logs and provide link to the how-to tutorial on the TensorFlow website.\nChange:\n\tAdd error-catching code if string_input_producer is supplied a null input.\n\tBefore this change, it would die with an opaque shape error from inside\n\tthe queue.  This change catches (most) python null lists being\n\tpassed directly in, and at runtime detects null tensors.\n\n\tAdds two tests for this to input_test.py\nChange:\n\tSpeed up for models that use the same variable multiple times in the case\n\twhere variables must be copied across devices:\n\t- Have Variables wrap the Variable op in an Identity op when converted to Tensor.\n\t  This avoids multiple copies across devices if a variable is used multiple time\n\t  in a computation.\n\t- Add Variable.mutable() to return the non-wrapped Variable op for used when\n\t  assigning new values.\n\t- Add an as_ref parameter to convert_to_tensor() to allow code to specify\n\t  if they plan to assign a new value to the result of the conversion.  Make Variable\n\t  return the result of Variable.mutable() when as_ref is True.\n\t- Make all ops that assign values to variables pass as_ref=True when converting\n\t  their arguments.\nChange:\n\tChange to reduce critical section times in gpu_event_mgr.h:\n\t(1) Call stream->ThenRecordEvent outside the EventMgr critical section\n\t(2) Do memory deallocation outside the critical section\n\n\tSpeeds up one configuration of ptb_word_lm from 2924 words per\n\tsecond (wps) to 3278 wps on my desktop machine with a Titan X.\nChange:\n\tRemove some colons that break the open source build\n\n\t::tensorflow::StringPiece breaks for @raingo, see\n\thttps://github.com/tensorflow/tensorflow/issues/358.\n\ttensorflow::StringPiece (without the leading colons)\n\tseems to fix the problem.\nChange:\n\tAdded check that inputs to Operation is a list and make a defensive copy of the input. This is for cases where the input list is changed such as in _add_input.\nChange:\n\tUse standard names for TensorFlow dtypes in the tutorial.\nChange:\n\tAdd tests for tensor inputs.\nChange:\n\tFix build after declaring more types for ops\nChange:\n\tSwitch to 32 bit indexing to speedup convolutions and concatenations.\nChange:\n\tAdd convert_image op to convert between types for images (similar to OpenCV\'s cvtScale).\nChange:\n\tMake cast work between numeric types (bool, uint8, int16, int32, int64, float, double).\nChange:\n\n\tPadding input data for odd number of paddings, so we can use cudnn anyway.\n\t+ Fix total padding computation when padding==VALID.\n\t+ This CL makes the Googlenet benchmark run 5x faster.\n\nChange:\n\tSupport IndexedSlices in ConcatGrad\nChange:\n\t* sampled softmax op uses one embedding lookup for positive and negative samples\n\t* float64 support for sampled softmax\nChange:\n\tMove RNN code out of models.rnn (without breaking existing code).  The API may still undergo minor changes, until full documentation as added.\nChange:\n\tChanged to use per-step stacks for the accumulators used in while-loop gradient computation. This addresses the problem caused by using concat without sufficient static shape information. It should also improve performance as we avoided those expensive concats.\nChange:\n\tUpdate generated Op docs.\nChange:\n\tImprove error messages when the optimizer finds no variables to minimize or\n\twhen none of the variables has gradients.\nChange:\n\tSay that -1 isn\'t just for flattening in reshape docs\n\n\tAlso add scalar reshape (reshape(t, [])) as an example.\n\n\tThis fixes https://github.com/tensorflow/tensorflow/issues/281.\nChange:\n\tThis is a test.\n\nBase CL: 109118714'"
0cbe932bbc99984b52b18d56fb87a2c6aa2a12ad,'Merge pull request #14 from dfd/fixreadme\n\nFixed Linear Regression example in README.md.'
b056d78354c0ff069b8f11fc111356d57e2df65f,'Fixed Linear Regression example in README.md.  Changed StandardScale().fit_tranform to StandardScaler().fit_transform'
371863aabe84e4d059bb7f28367fa71cc9a7f23f,'Fixes #13: Fixed readme to use skflow.models.logistic_regerssion and also created example in examples/ folder with this code to make sure it runs.'
bdb44703e9bd7f60798f0f812bd1705dba4a9532,"'Fixes #11: Due to sklearn 0.16 validation.check_array not taking list of dtypes, addressed it by making a choice prior the call.'"
fcfc2a91f399eafd7cfd5e79cdddb15df4df96a7,'fix typo in travis install script'
3972c791b9f4d9a61b9ad6399b481df396f359ff,'TensorFlow: Upstream changes to git.\n\nChanges:\n- Fix README example to not include implicit print\n\nBase CL: 108729071'
7a8c372a537eabd57c3b6e9274aaa3dc92d52825,'Added continue_learning flag to TensorFlowEstimator to allow continues learning when called fit multiple times. Small fixes in data feeder to match expected dtypes'
7d10aafdd85d5430046153a5646fe02695d2ce5b,'Merge pull request #3 from suryabhupa/master\n\nMinor fixes to README.md'
660039d1332ba128030af25f97d656d89ac2ad9e,'Minor fixes to README.md'
20bd82d76886120876099270834ddeefd217ad65,'Fix typo in readme. Thanks to +ybot1122'
93beb28ac82322e6e52c0c646e2a652efdd54662,'fixed readme examples link'
f7918e1dcd5b0c1f8114f488fc35a63a81e94535,"""TensorFlow: Removal of large assets and small other fixes.\n\nChanges:\n\n- Remove all large assets from the repoistory, incuding the other 50MiB\n  model protobuf and a lot of images in our g3doc directory. We will\n  maintain these assets externally for now.  g3doc images may be\n  broken for a little bit, but the website will be fine, which\n  is the important resource. By @vrv and @petewarden.  Updates\n  READMES to reflect the external model resources.\n\n- Fix to saver's latest_checkpoint function by Zhifeng\n\n- Made protos visibility public by @vrv\n\n- Updates to docs by @mrry, Andy\n\n- Embed tensorboard resource for summary icon by Daniel\n\n- More updates to backwars compat by @josh11b\n\nBase CL: 108194981"""
ab34d55ce7618e52069a2e1c9e51aac5a1ea81c3,"'TensorFlow: more features, performance improvements, and doc fixes.\n\nChanges:\n- Add Split/Concat() methods to TensorUtil (meant for convenience, not\n  speed) by Chris.\n\n- Changes to linear algebra ops interface by Rasmus\n\n- Tests for tensorboard by Daniel\n\n- Fix bug in histogram calculation by Cassandra\n\n- Added tool for backwards compatibility of OpDefs.  Tool\n  Checks in history of opdefs and their changes, checks for\n  backwards-incompatible changes.  All done by @josh11b\n\n- Fix some protobuf example proto docs by Oliver\n\n- Add derivative of MatrixDeterminant by @yaroslavvb\n\n- Add a priority queue queue by @ebrevdo\n\n- Doc and typo fixes by Aurelien and @dave-andersen\n\n- Speed improvements to ConvBackwardFilter by @andydavis\n\n- Improve speed of Alexnet on TitanX by @zheng-xq\n\n- Add some host memory annotations to some GPU kernels by Yuan.\n\n- Add support for doubles in histogram summary by @jmchen-g\n\nBase CL: 108158338'"
4213ac97be449d0e40631a314d2b7bd3901d4967,"'TensorFlow: conv improvements, label_image example, and\na few other changes.\n\nChanges:\n- Some improvements to convolution by using 32-bit indices by\n  @benoitsteiner. Not all calls converted yet.  Also some\n  improvements to pooling as well by @benoitsteiner.\n\n- Improvements to sparse matmul CPU implementation by Ashish\n\n- Some fixes to warnings by @vrv\n\n- Doc fixes to padding by @Yangqing\n\n- Some improvements to Tensor wrappers by Eider\n\n- Speed up of matrix inverse on CPU by Rasmus\n\n- Add an example of doing image inference from a pre-trained model\n  by @petewarden.\n\n- fixed formula in mnist example by nodir\n\n- Updates to event accumulator by Cassandra\n\n- Slight changes to tensor c api by @mrry\n\n- Handling of strings in listdiff by Phil\n\n- Fix negative fraction-of-queue-full stats by Frank\n\n- Type-checking improvement to importer by Yaroslav\n\n- logdir recursive search for Tensorboard by @danmane\n\n- Session.run() checks for empty graph by Manoj\n\nBase CL: 108013706'"
56313def004795f75ef8281a0294c958d28f1e06,"'TensorFlow: Doc and linter fixes, some additional tests and\nerror handling, updates to website.\n\nChanges:\n- Removes redundant reshape from image models by @mrry\n- Default TensorBoard to localhost by @danmane\n- Reformatting of tensorflow/core by @josh11b\n- Make tutorials backwards compatible to 0.5.0 by @girving\n- Improve print documentation (md files not updated).\n- Add proper scrolling to sitemap by @martinwicke\n\nBase CL: 107956254'"
cb9fa5fc9de9f3fc97c15bbcce252d7d7fdcb73b,"'TensorFlow: Upstream changes from since last Thursday.\n\nChanges:\n- Bug fix to input.py by @dave-andersen with tests.\n\n- Some fixes to names in the whitepaper\n\n- Include cfloat for FLT_MAX by @benoitsteiner\n\n- Fix broken link in mnist tutorials by @mrry\n\n- Typos and fixes to documentation by @Sohl-Dickstein, @ebrevdo, @vrv,\n  Yaroslav, @martinwicke\n\n- Fixed unnecessary check around a delete by @girving\n\n- More compatibility tests by @josh11b\n\n- Misc other typos and fixes by Googlers.\n\nBase CL: 107944070'"
011e9baccd343eb943d25014c4e8aec53eac396b,'TensorFlow: a few small updates.\n\nChanges:\n- Fix softmax formula in word2vec to remove an extra exp()\n  by @gouwsmeister\n\n- Python3 fixes to remove basestring / support for unicode by @mrry\n\n- Remove some comments by Josh\n\n- Specify exact versions of bower dependencies for TensorBoard by\n  @danmane.\n\nBase CL: 107742361'
d50565b35e886e7c3a201ea2f088790ed4b28de4,"""TensorFlow: Upstream changes from afternoon.\n\nChanges:\n- Ptrdiff -> DenseIndex change by @jiayq\n\n- Fix to scoping the logging in logging.py by @dga\n\n- Improvement to Conv2DBackpropFilter on CPU by Andy\n\n- Remove lookup table wrappers for the time being (wasn't in our\n  public API yet) by Yukata\n\n- Add a check similar to numpy to make sure the user isn't in the\n  tensorflow src directory by @vrv\n\n- More changes for  python 3 compat by @girving\n\n- Make dropout preserve shape info from input (@mrry)\n\n- Significant speed improvements by @zheng-xq to BFC allocator to bring\n  on par (CPU overhead-wise) to the region allocator.  Make BFC\n  allocator the default now that it's working well for a variety\n  of models.\n\n- Fix a bunch of typos reported by users (@vrv)\n\n- Enable concat for bfloat16 on GPU by Ashish.\n\nBase CL: 107733123"""
4dffee7f62d81ec9173aba1b0ef6b96e47f8037c,"'TensorFlow: Minor updates to docs, BUILD, GPU config / perf, etc.\n\nChanges:\n- Updates to op documentation and index by Josh\n\n- More changes to BUILD files for python 3 support by @girving\n\n- Fix to Eigen to use DenseIndex everywhere by @jiayq\n\n- Enable configuration for cuda compute capability by @zheng-xq,\n  including updates to docs.\n\n- Route aggregation method through optimizer by schuster\n\n- Updates to install instructions for bazel 0.1.1.\n\nBase CL: 107702099'"
9a00a61aa4ae59339b14d29650a591732901c264,"""Add colah@'s fixed version of scalar equation to docs.\n\nBase CL: 107547091"""
c61c39614a4780464037226d9d3c28101f7e8e46,"'TensorFlow: upstream changes to git (doc fixes).\n\nChanges:\n\n- Fix typos across several files contributed by Erik Erwitt,\n  and Michael R. Berstein\n\n- Fix bug in translate example (fr->en typo) by schuster\n\n- Updates to some documentation (mcoram,shlens,vrv,joshl)\n\n- Fix to Android camera demo app window size detection (andrewharp)\n\n- Fix to support lookup table of high rank tensors (yleon)\n\n- Fix invalid op names for parse_example (dga)\n\nBase CL: 107531031'"
9274f5aa478879386870bb0cb889e432d4aee330,"'TensorFlow: Upstream a batch of changes to git.\n\nChanges:\n\n- Some changes to make our ability to handle external contributions\n  simpler (e.g., adding some markers, adding empty __init__.py files).\n\n- Fixing documentation of SummaryWriter.add_summary().\n\n- Some input validation changes for queues/barriers.\n\n- Fixing the ptb tutorial (thanks to @kentonl for reporting),\n  fixes, github issue 52.\n\n- Some documentation suggestions for dealing with a few install\n  problems.\n\n- Speed improvements to conv2d gradient kernels on CPU.\n\n- More documentation fixes for the website.  Thanks to @makky3939 and\n  @keonkim for reports.\n\n- Changes / fixes to the Docker files.\n\n- Changes build_pip_package to not create an sdist.\n\n- Adds tensorboard example script.\n\nBase CL: 107445267'"
61d3a958d6d83cb6037490d933b47621cc4009cc,"'TensorFlow: Initial steps towards python3 support, some documentation\nbug fixes -- reindents to 2 for some of the files to match our internal\nrequirements.\n\nThanks to Martin Andrews for the basic_usage.md suggested fix via\nGerrit.\n\nBase CL: 107394029'"
3b8b69f71a77d22cbfa0f94be5d4d0fd40ef596a,'TensorFlow: Upstream changes to git.\n\nChanges:\n- Doc type fixes.\n\nBase CL: 107356208'
a2257d08a9b6cb9807644e19589bdd802a0856e8,'TensorFlow: Upstreaming changes to git.\n\nChanges:\nFix anchor for github.\n\nBase CL: 107352236'
e28c1dbab3506d536ded7f1b1f0a527d4cad1b14,"'TensorFlow: Upstream latest changes to git.\n\nChanges:\n- Documentation changes: adding some examples\n  for adding_an_op, fixes to some of the markdown,\n  updates to docstrings, etc.\n\n- Remove Dockerfile for now -- still undergoing\n  changes.\n\nBase CL: 107341050'"
ec490db88a1b624157f24a61dee0bd7d3c2630de,'TensorFlow: Upstream changes to git.\n\nChanges:\n- Update whitepaper\n- Fix some names in docs.\n\nBase CL: 107313143'
fddaed524622417900d745fe8f115562c55ac49a,"'TensorFlow: Upstream commits to git.\n\nChanges:\n- More documentation edits, fixes to anchors,\n  fixes to mathjax, new images, etc.\n- Add rnn models to pip install package.\n\nBase CL: 107312343'"
